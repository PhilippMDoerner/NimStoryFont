{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/schematics/src/action/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAoBA,4BA4BC;AAhDD,yDAWoC;AAEpC,yDAK+B;AAE/B,mBAAyB,OAAsB;IAC7C,OAAO,UAAC,IAAU,EAAE,OAAyB;QAC3C,OAAO,CAAC,IAAI,GAAG,IAAA,gCAAc,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7C,OAAO,CAAC,MAAM,GAAG,IAAA,2BAAS,EAAC,OAAO,CAAC,CAAC;QAEpC,IAAM,UAAU,GAAG,IAAA,2BAAS,EAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAE/B,IAAM,cAAc,GAAG,IAAA,kBAAK,EAAC,IAAA,gBAAG,EAAC,SAAS,CAAC,EAAE;YAC3C,IAAA,2BAAc,iCACT,6BAAW,KACd,SAAS,EAAE,UAAC,CAAS;oBACnB,OAAA,6BAAW,CAAC,KAAK,CACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACrB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAC/B;gBAHD,CAGC,KACA,OAAO,EACV;YACF,IAAA,iBAAI,EAAC,UAAU,CAAC,IAAI,CAAC;SACtB,CAAC,CAAC;QAEH,OAAO,IAAA,kBAAK,EAAC,CAAC,IAAA,2BAAc,EAAC,IAAA,kBAAK,EAAC,CAAC,IAAA,sBAAS,EAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAChE,IAAI,EACJ,OAAO,CACR,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import {\n  Rule,\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  mergeWith,\n  move,\n  url,\n  Tree,\n  SchematicContext,\n} from '@angular-devkit/schematics';\nimport { Schema as ActionOptions } from './schema';\nimport {\n  getProjectPath,\n  stringUtils,\n  parseName,\n  getPrefix,\n} from '../../schematics-core';\n\nexport default function (options: ActionOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    options.path = getProjectPath(host, options);\n\n    options.prefix = getPrefix(options);\n\n    const parsedPath = parseName(options.path, options.name);\n    options.name = parsedPath.name;\n    options.path = parsedPath.path;\n\n    const templateSource = apply(url('./files'), [\n      applyTemplates({\n        ...stringUtils,\n        'if-flat': (s: string) =>\n          stringUtils.group(\n            options.flat ? '' : s,\n            options.group ? 'actions' : ''\n          ),\n        ...options,\n      }),\n      move(parsedPath.path),\n    ]);\n\n    return chain([branchAndMerge(chain([mergeWith(templateSource)]))])(\n      host,\n      context\n    );\n  };\n}\n"]}