{"version":3,"file":"ng-bootstrap.mjs","sources":["../../../src/environment.ts","../../../src/ngb-config.ts","../../../src/accordion/accordion-config.ts","../../../src/util/transition/util.ts","../../../src/util/util.ts","../../../src/util/transition/ngbTransition.ts","../../../src/util/transition/ngbCollapseTransition.ts","../../../src/collapse/collapse-config.ts","../../../src/collapse/collapse.ts","../../../src/accordion/accordion.directive.ts","../../../src/accordion/accordion.module.ts","../../../src/alert/alert-config.ts","../../../src/alert/alert-transition.ts","../../../src/alert/alert.ts","../../../src/alert/alert.module.ts","../../../src/carousel/carousel-config.ts","../../../src/carousel/carousel-transition.ts","../../../src/carousel/carousel.ts","../../../src/carousel/carousel.module.ts","../../../src/collapse/collapse.module.ts","../../../src/datepicker/ngb-date.ts","../../../src/datepicker/ngb-calendar.ts","../../../src/datepicker/datepicker-tools.ts","../../../src/datepicker/datepicker-i18n.ts","../../../src/datepicker/datepicker-service.ts","../../../src/datepicker/datepicker-view-model.ts","../../../src/datepicker/datepicker-config.ts","../../../src/datepicker/adapters/ngb-date-adapter.ts","../../../src/datepicker/datepicker-keyboard-service.ts","../../../src/datepicker/datepicker-day-view.ts","../../../src/datepicker/datepicker-navigation-select.ts","../../../src/datepicker/datepicker-navigation.ts","../../../src/datepicker/datepicker.ts","../../../src/util/autoclose.ts","../../../src/util/focus-trap.ts","../../../src/util/rtl.ts","../../../src/util/positioning.ts","../../../src/datepicker/ngb-date-parser-formatter.ts","../../../src/datepicker/datepicker-input-config.ts","../../../src/util/positioning-util.ts","../../../src/datepicker/datepicker-input.ts","../../../src/datepicker/hijri/ngb-calendar-hijri.ts","../../../src/datepicker/hijri/ngb-calendar-islamic-civil.ts","../../../src/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","../../../src/datepicker/jalali/jalali.ts","../../../src/datepicker/jalali/ngb-calendar-persian.ts","../../../src/datepicker/hebrew/hebrew.ts","../../../src/datepicker/hebrew/ngb-calendar-hebrew.ts","../../../src/datepicker/hebrew/datepicker-i18n-hebrew.ts","../../../src/datepicker/buddhist/buddhist.ts","../../../src/datepicker/buddhist/ngb-calendar-buddhist.ts","../../../src/datepicker/ethiopian/ethiopian.ts","../../../src/datepicker/ethiopian/ngb-calendar-ethiopian.ts","../../../src/datepicker/ethiopian/datepicker-i18n-amharic.ts","../../../src/datepicker/adapters/ngb-date-native-adapter.ts","../../../src/datepicker/adapters/ngb-date-native-utc-adapter.ts","../../../src/datepicker/datepicker.module.ts","../../../src/dropdown/dropdown-config.ts","../../../src/dropdown/dropdown.ts","../../../src/dropdown/dropdown.module.ts","../../../src/modal/modal-config.ts","../../../src/util/popup.ts","../../../src/util/scrollbar.ts","../../../src/modal/modal-backdrop.ts","../../../src/modal/modal-ref.ts","../../../src/modal/modal-dismiss-reasons.ts","../../../src/modal/modal-window.ts","../../../src/modal/modal-stack.ts","../../../src/modal/modal.ts","../../../src/modal/modal.module.ts","../../../src/nav/nav-config.ts","../../../src/nav/nav.ts","../../../src/nav/nav-transition.ts","../../../src/nav/nav-outlet.ts","../../../src/nav/nav.module.ts","../../../src/pagination/pagination-config.ts","../../../src/pagination/pagination.ts","../../../src/pagination/pagination.module.ts","../../../src/util/triggers.ts","../../../src/popover/popover-config.ts","../../../src/popover/popover.ts","../../../src/popover/popover.module.ts","../../../src/progressbar/progressbar-config.ts","../../../src/progressbar/progressbar.ts","../../../src/progressbar/progressbar.module.ts","../../../src/rating/rating-config.ts","../../../src/rating/rating.ts","../../../src/rating/rating.module.ts","../../../src/scrollspy/scrollspy.utils.ts","../../../src/scrollspy/scrollspy-config.ts","../../../src/scrollspy/scrollspy.service.ts","../../../src/scrollspy/scrollspy.ts","../../../src/scrollspy/scrollspy.module.ts","../../../src/timepicker/ngb-time.ts","../../../src/timepicker/timepicker-config.ts","../../../src/timepicker/ngb-time-adapter.ts","../../../src/timepicker/timepicker-i18n.ts","../../../src/timepicker/timepicker.ts","../../../src/timepicker/timepicker.module.ts","../../../src/toast/toast-config.ts","../../../src/toast/toast-transition.ts","../../../src/toast/toast.ts","../../../src/toast/toast.module.ts","../../../src/tooltip/tooltip-config.ts","../../../src/tooltip/tooltip.ts","../../../src/tooltip/tooltip.module.ts","../../../src/typeahead/highlight.ts","../../../src/util/accessibility/live.ts","../../../src/typeahead/typeahead-config.ts","../../../src/typeahead/typeahead-window.ts","../../../src/typeahead/typeahead.ts","../../../src/typeahead/typeahead.module.ts","../../../src/offcanvas/offcanvas-config.ts","../../../src/offcanvas/offcanvas-ref.ts","../../../src/offcanvas/offcanvas-dismiss-reasons.ts","../../../src/offcanvas/offcanvas-backdrop.ts","../../../src/offcanvas/offcanvas-panel.ts","../../../src/offcanvas/offcanvas-stack.ts","../../../src/offcanvas/offcanvas.ts","../../../src/offcanvas/offcanvas.module.ts","../../../src/index.ts","../../../src/ng-bootstrap.ts"],"sourcesContent":["export const environment = {\n\tanimation: true,\n\ttransitionTimerDelayMs: 5,\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from './environment';\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbConfig {\n\tanimation = environment.animation;\n}\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbAccordionConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tcloseOthers = false;\n\tdestroyOnHide = true;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","export function getTransitionDurationMs(element: HTMLElement) {\n\tconst { transitionDelay, transitionDuration } = window.getComputedStyle(element);\n\tconst transitionDelaySec = parseFloat(transitionDelay);\n\tconst transitionDurationSec = parseFloat(transitionDuration);\n\n\treturn (transitionDelaySec + transitionDurationSec) * 1000;\n}\n","import { NgZone } from '@angular/core';\nimport { Observable, OperatorFunction } from 'rxjs';\n\nexport function toInteger(value: any): number {\n\treturn parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n\treturn value !== undefined && value !== null ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n\treturn Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n\treturn typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n\treturn !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n\treturn value !== undefined && value !== null;\n}\n\nexport function isPromise<T>(v: any): v is Promise<T> {\n\treturn v && v.then;\n}\n\nexport function padNumber(value: number) {\n\tif (isNumber(value)) {\n\t\treturn `0${value}`.slice(-2);\n\t} else {\n\t\treturn '';\n\t}\n}\n\nexport function regExpEscape(text) {\n\treturn text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function closest(element: HTMLElement, selector?: string): HTMLElement | null {\n\tif (!selector) {\n\t\treturn null;\n\t}\n\n\t/*\n\t * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n\t * not support `Element.prototype.closest`. To emulate the correct behaviour\n\t * we return null when the method is missing.\n\t *\n\t * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n\t * will return the document element whilst in Edge null will be returned. This\n\t * compromise was deemed good enough.\n\t */\n\tif (typeof element.closest === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn element.closest(selector);\n}\n\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nexport function reflow(element: HTMLElement) {\n\treturn (element || document.body).getBoundingClientRect();\n}\n\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nexport function runInZone<T>(zone: NgZone): OperatorFunction<T, T> {\n\treturn (source) => {\n\t\treturn new Observable((observer) => {\n\t\t\tconst next = (value: T) => zone.run(() => observer.next(value));\n\t\t\tconst error = (e: any) => zone.run(() => observer.error(e));\n\t\t\tconst complete = () => zone.run(() => observer.complete());\n\t\t\treturn source.subscribe({ next, error, complete });\n\t\t});\n\t};\n}\n\nexport function removeAccents(str: string): string {\n\treturn str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\nexport function getActiveElement(root: Document | ShadowRoot = document): Element | null {\n\tconst activeEl = root?.activeElement;\n\n\tif (!activeEl) {\n\t\treturn null;\n\t}\n\n\treturn activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\n","import { NgZone } from '@angular/core';\nimport { EMPTY, fromEvent, Observable, of, race, Subject, timer } from 'rxjs';\nimport { endWith, filter, takeUntil } from 'rxjs/operators';\nimport { getTransitionDurationMs } from './util';\nimport { environment } from '../../environment';\nimport { runInZone } from '../util';\n\nexport type NgbTransitionStartFn<T = any> = (\n\telement: HTMLElement,\n\tanimation: boolean,\n\tcontext: T,\n) => NgbTransitionEndFn | void;\nexport type NgbTransitionEndFn = () => void;\n\nexport interface NgbTransitionOptions<T> {\n\tanimation: boolean;\n\trunningTransition: 'continue' | 'stop';\n\tcontext?: T;\n}\n\nexport interface NgbTransitionCtx<T> {\n\ttransition$: Subject<any>;\n\tcomplete: () => void;\n\tcontext: T;\n}\n\nconst noopFn: NgbTransitionEndFn = () => {};\n\nconst { transitionTimerDelayMs } = environment;\nconst runningTransitions = new Map<HTMLElement, NgbTransitionCtx<any>>();\n\nexport const ngbRunTransition = <T>(\n\tzone: NgZone,\n\telement: HTMLElement,\n\tstartFn: NgbTransitionStartFn<T>,\n\toptions: NgbTransitionOptions<T>,\n): Observable<void> => {\n\t// Getting initial context from options\n\tlet context = options.context || <T>{};\n\n\t// Checking if there are already running transitions on the given element.\n\tconst running = runningTransitions.get(element);\n\tif (running) {\n\t\tswitch (options.runningTransition) {\n\t\t\t// If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n\t\t\t// We're not emitting any values, but simply completing the observable (EMPTY).\n\t\t\tcase 'continue':\n\t\t\t\treturn EMPTY;\n\t\t\t// If there is one running and we want for it to 'stop', we have to complete the running one.\n\t\t\t// We're simply completing the running one and not emitting any values and merging newly provided context\n\t\t\t// with the one coming from currently running transition.\n\t\t\tcase 'stop':\n\t\t\t\tzone.run(() => running.transition$.complete());\n\t\t\t\tcontext = Object.assign(running.context, context);\n\t\t\t\trunningTransitions.delete(element);\n\t\t}\n\t}\n\n\t// Running the start function\n\tconst endFn = startFn(element, options.animation, context) || noopFn;\n\n\t// If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n\t// If animations are disabled, we have to emit a value and complete the observable\n\t// In this case we have to call the end function, but can finish immediately by emitting a value,\n\t// completing the observable and executing end functions synchronously.\n\tif (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n\t\tzone.run(() => endFn());\n\t\treturn of(undefined).pipe(runInZone(zone));\n\t}\n\n\t// Starting a new transition\n\tconst transition$ = new Subject<void>();\n\tconst finishTransition$ = new Subject<void>();\n\tconst stop$ = transition$.pipe(endWith(true));\n\trunningTransitions.set(element, {\n\t\ttransition$,\n\t\tcomplete: () => {\n\t\t\tfinishTransition$.next();\n\t\t\tfinishTransition$.complete();\n\t\t},\n\t\tcontext,\n\t});\n\n\tconst transitionDurationMs = getTransitionDurationMs(element);\n\n\t// 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n\t// because 'transitionend' event might not be fired in some browsers, if the transitioning\n\t// element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n\t// guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n\t// 2. We need to filter transition end events, because they might bubble from shorter transitions\n\t// on inner DOM elements. We're only interested in the transition on the 'element' itself.\n\tzone.runOutsideAngular(() => {\n\t\tconst transitionEnd$ = fromEvent(element, 'transitionend').pipe(\n\t\t\ttakeUntil(stop$),\n\t\t\tfilter(({ target }) => target === element),\n\t\t);\n\t\tconst timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n\n\t\trace(timer$, transitionEnd$, finishTransition$)\n\t\t\t.pipe(takeUntil(stop$))\n\t\t\t.subscribe(() => {\n\t\t\t\trunningTransitions.delete(element);\n\t\t\t\tzone.run(() => {\n\t\t\t\t\tendFn();\n\t\t\t\t\ttransition$.next();\n\t\t\t\t\ttransition$.complete();\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\treturn transition$.asObservable();\n};\n\nexport const ngbCompleteTransition = (element: HTMLElement) => {\n\trunningTransitions.get(element)?.complete();\n};\n","import { NgbTransitionStartFn } from './ngbTransition';\nimport { reflow } from '../util';\n\nexport interface NgbCollapseCtx {\n\tdirection: 'show' | 'hide';\n\tdimension: 'width' | 'height';\n\tmaxSize?: string;\n}\n\nfunction measureCollapsingElementDimensionPx(element: HTMLElement, dimension: 'width' | 'height'): string {\n\t// SSR fix for without injecting the PlatformId\n\tif (typeof navigator === 'undefined') {\n\t\treturn '0px';\n\t}\n\n\tconst { classList } = element;\n\tconst hasShownClass = classList.contains('show');\n\tif (!hasShownClass) {\n\t\tclassList.add('show');\n\t}\n\n\telement.style[dimension] = '';\n\tconst dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n\n\tif (!hasShownClass) {\n\t\tclassList.remove('show');\n\t}\n\n\treturn dimensionSize;\n}\n\nexport const ngbCollapsingTransition: NgbTransitionStartFn<NgbCollapseCtx> = (\n\telement: HTMLElement,\n\tanimation: boolean,\n\tcontext: NgbCollapseCtx,\n) => {\n\tlet { direction, maxSize, dimension } = context;\n\tconst { classList } = element;\n\n\tfunction setInitialClasses() {\n\t\tclassList.add('collapse');\n\t\tif (direction === 'show') {\n\t\t\tclassList.add('show');\n\t\t} else {\n\t\t\tclassList.remove('show');\n\t\t}\n\t}\n\n\t// without animations we just need to set initial classes\n\tif (!animation) {\n\t\tsetInitialClasses();\n\t\treturn;\n\t}\n\n\t// No maxHeight -> running the transition for the first time\n\tif (!maxSize) {\n\t\tmaxSize = measureCollapsingElementDimensionPx(element, dimension);\n\t\tcontext.maxSize = maxSize;\n\n\t\t// Fix the height before starting the animation\n\t\telement.style[dimension] = direction !== 'show' ? maxSize : '0px';\n\n\t\tclassList.remove('collapse', 'collapsing', 'show');\n\n\t\treflow(element);\n\n\t\t// Start the animation\n\t\tclassList.add('collapsing');\n\t}\n\n\t// Start or revert the animation\n\telement.style[dimension] = direction === 'show' ? maxSize : '0px';\n\n\treturn () => {\n\t\tsetInitialClasses();\n\t\tclassList.remove('collapsing');\n\t\telement.style[dimension] = '';\n\t};\n};\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbCollapseConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\thorizontal = false;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import { Directive, ElementRef, EventEmitter, inject, Input, NgZone, OnInit, Output } from '@angular/core';\nimport { ngbRunTransition } from '../util/transition/ngbTransition';\nimport { ngbCollapsingTransition } from '../util/transition/ngbCollapseTransition';\nimport { NgbCollapseConfig } from './collapse-config';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\n@Directive({\n\tselector: '[ngbCollapse]',\n\texportAs: 'ngbCollapse',\n\tstandalone: true,\n\thost: {\n\t\t'[class.collapse-horizontal]': 'horizontal',\n\t},\n})\nexport class NgbCollapse implements OnInit {\n\tprivate _config = inject(NgbCollapseConfig);\n\tprivate _element = inject(ElementRef);\n\tprivate _zone = inject(NgZone);\n\n\t/**\n\t * If `true`, collapse will be animated.\n\t *\n\t * Animation is triggered only when clicked on triggering element\n\t * or via the `.toggle()` function\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * Flag used to track if the collapse setter is invoked during initialization\n\t * or not. This distinction is made in order to avoid running the transition during initialization.\n\t */\n\tprivate _afterInit = false;\n\n\tprivate _isCollapsed = false;\n\n\t/**\n\t * If `true`, will collapse the element or show it otherwise.\n\t */\n\t@Input('ngbCollapse')\n\tset collapsed(isCollapsed: boolean) {\n\t\tif (this._isCollapsed !== isCollapsed) {\n\t\t\tthis._isCollapsed = isCollapsed;\n\t\t\tif (this._afterInit) {\n\t\t\t\tthis._runTransitionWithEvents(isCollapsed, this.animation);\n\t\t\t}\n\t\t}\n\t}\n\n\t@Output() ngbCollapseChange = new EventEmitter<boolean>();\n\n\t/**\n\t * If `true`, will collapse horizontally.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() horizontal = this._config.horizontal;\n\n\t/**\n\t * An event emitted when the collapse element is shown, after the transition.\n\t * It has no payload.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() shown = new EventEmitter<void>();\n\n\t/**\n\t * An event emitted when the collapse element is hidden, after the transition.\n\t * It has no payload.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() hidden = new EventEmitter<void>();\n\n\tngOnInit() {\n\t\tthis._runTransition(this._isCollapsed, false);\n\t\tthis._afterInit = true;\n\t}\n\n\t/**\n\t * Triggers collapsing programmatically.\n\t *\n\t * If there is a collapsing transition running already, it will be reversed.\n\t * If the animations are turned off this happens synchronously.\n\t *\n\t * @since 8.0.0\n\t */\n\ttoggle(open: boolean = this._isCollapsed) {\n\t\tthis.collapsed = !open;\n\t\tthis.ngbCollapseChange.next(this._isCollapsed);\n\t}\n\n\tprivate _runTransition(collapsed: boolean, animation: boolean) {\n\t\treturn ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n\t\t\tanimation,\n\t\t\trunningTransition: 'stop',\n\t\t\tcontext: { direction: collapsed ? 'hide' : 'show', dimension: this.horizontal ? 'width' : 'height' },\n\t\t});\n\t}\n\n\tprivate _runTransitionWithEvents(collapsed: boolean, animation: boolean) {\n\t\tthis._runTransition(collapsed, animation).subscribe(() => {\n\t\t\tif (collapsed) {\n\t\t\t\tthis.hidden.emit();\n\t\t\t} else {\n\t\t\t\tthis.shown.emit();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {\n\tAfterContentChecked,\n\tAfterContentInit,\n\tChangeDetectorRef,\n\tComponent,\n\tContentChild,\n\tContentChildren,\n\tDestroyRef,\n\tDirective,\n\tElementRef,\n\tEmbeddedViewRef,\n\tEventEmitter,\n\tinject,\n\tInput,\n\tOnDestroy,\n\tOutput,\n\tQueryList,\n\tTemplateRef,\n\tViewChild,\n\tViewContainerRef,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { NgbAccordionConfig } from './accordion-config';\nimport { NgbCollapse } from '../collapse/collapse';\nimport { isString } from '../util/util';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\n@Component({\n\tselector: '[ngbAccordionBody]',\n\tstandalone: true,\n\ttemplate: `\n\t\t<ng-container #container />\n\t\t<ng-content />\n\t`,\n\thost: {\n\t\tclass: 'accordion-body',\n\t},\n})\nexport class NgbAccordionBody implements AfterContentChecked, OnDestroy {\n\tprivate _item = inject(NgbAccordionItem);\n\tprivate _viewRef: EmbeddedViewRef<any> | null = null;\n\n\t/**\n\t * the `ElementRef` of the component\n\t *\n\t * @since 18.0.0\n\t */\n\tpublic readonly elementRef = inject(ElementRef);\n\n\t@ViewChild('container', { read: ViewContainerRef, static: true }) private _vcr: ViewContainerRef;\n\t@ContentChild(TemplateRef, { static: true }) private _bodyTpl: TemplateRef<any>;\n\n\tngAfterContentChecked(): void {\n\t\tif (this._bodyTpl) {\n\t\t\tif (this._item._shouldBeInDOM) {\n\t\t\t\tthis._createViewIfNotExists();\n\t\t\t} else {\n\t\t\t\tthis._destroyViewIfExists();\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis._destroyViewIfExists();\n\t}\n\n\tprivate _destroyViewIfExists(): void {\n\t\tthis._viewRef?.destroy();\n\t\tthis._viewRef = null;\n\t}\n\n\tprivate _createViewIfNotExists(): void {\n\t\tif (!this._viewRef) {\n\t\t\tthis._viewRef = this._vcr.createEmbeddedView(this._bodyTpl);\n\t\t\tthis._viewRef.detectChanges();\n\t\t}\n\t}\n}\n\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\n@Directive({\n\texportAs: 'ngbAccordionCollapse',\n\tstandalone: true,\n\tselector: '[ngbAccordionCollapse]',\n\thost: {\n\t\trole: 'region',\n\t\tclass: 'accordion-collapse',\n\t\t'[id]': 'item.collapseId',\n\t\t'[attr.aria-labelledby]': 'item.toggleId',\n\t},\n\thostDirectives: [NgbCollapse],\n})\nexport class NgbAccordionCollapse {\n\titem = inject(NgbAccordionItem);\n\tngbCollapse = inject(NgbCollapse);\n}\n\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: '[ngbAccordionToggle]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'item.toggleId',\n\t\t'[class.collapsed]': 'item.collapsed',\n\t\t'[attr.aria-controls]': 'item.collapseId',\n\t\t'[attr.aria-expanded]': '!item.collapsed',\n\t\t'(click)': '!item.disabled && accordion.toggle(item.id)',\n\t},\n})\nexport class NgbAccordionToggle {\n\titem = inject(NgbAccordionItem);\n\taccordion = inject(NgbAccordionDirective);\n}\n\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: 'button[ngbAccordionButton]',\n\tstandalone: true,\n\thost: {\n\t\t'[disabled]': 'item.disabled',\n\t\tclass: 'accordion-button',\n\t\ttype: 'button',\n\t},\n\thostDirectives: [NgbAccordionToggle],\n})\nexport class NgbAccordionButton {\n\titem = inject(NgbAccordionItem);\n}\n\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: '[ngbAccordionHeader]',\n\tstandalone: true,\n\thost: {\n\t\trole: 'heading',\n\t\tclass: 'accordion-header',\n\t\t'[class.collapsed]': 'item.collapsed',\n\t},\n})\nexport class NgbAccordionHeader {\n\titem = inject(NgbAccordionItem);\n}\n\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: '[ngbAccordionItem]',\n\texportAs: 'ngbAccordionItem',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'id',\n\t\tclass: 'accordion-item',\n\t},\n})\nexport class NgbAccordionItem implements AfterContentInit {\n\tprivate _accordion = inject(NgbAccordionDirective);\n\tprivate _cd = inject(ChangeDetectorRef);\n\tprivate _destroyRef = inject(DestroyRef);\n\n\tprivate _collapsed = true;\n\tprivate _id = `ngb-accordion-item-${nextId++}`;\n\tprivate _destroyOnHide: boolean | undefined;\n\n\tprivate _collapseAnimationRunning = false;\n\n\t@ContentChild(NgbAccordionCollapse, { static: true }) private _collapse: NgbAccordionCollapse;\n\n\t/**\n\t * Sets the custom ID of the accordion item. It must be unique for the document.\n\t *\n\t * @param id The ID of the accordion item, must be a non-empty string\n\t */\n\t@Input('ngbAccordionItem') set id(id: string) {\n\t\tif (isString(id) && id !== '') {\n\t\t\tthis._id = id;\n\t\t}\n\t}\n\n\t/**\n\t * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n\t *\n\t * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n\t */\n\t@Input() set destroyOnHide(destroyOnHide: boolean) {\n\t\tthis._destroyOnHide = destroyOnHide;\n\t}\n\n\tget destroyOnHide(): boolean {\n\t\treturn this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide!;\n\t}\n\n\t/**\n\t * If `true`, the accordion item will be disabled.\n\t * It won't react to user's clicks, but still will be toggelable programmatically.\n\t */\n\t@Input() disabled = false;\n\n\t/**\n\t *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n\t *\n\t * @param collapsed New state of the accordion item.\n\t */\n\t@Input() set collapsed(collapsed: boolean) {\n\t\tif (collapsed) {\n\t\t\tthis.collapse();\n\t\t} else {\n\t\t\tthis.expand();\n\t\t}\n\t}\n\n\t/**\n\t * Event emitted before the expanding animation starts. It has no payload.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Output() show = new EventEmitter<void>();\n\n\t/**\n\t * Event emitted when the expanding animation is finished. It has no payload.\n\t */\n\t@Output() shown = new EventEmitter<void>();\n\n\t/**\n\t * Event emitted before the collapsing animation starts. It has no payload.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Output() hide = new EventEmitter<void>();\n\n\t/**\n\t * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n\t * It has no payload.\n\t */\n\t@Output() hidden = new EventEmitter<void>();\n\n\tget collapsed() {\n\t\treturn this._collapsed;\n\t}\n\n\tget id() {\n\t\treturn `${this._id}`;\n\t}\n\n\tget toggleId() {\n\t\treturn `${this.id}-toggle`;\n\t}\n\n\tget collapseId() {\n\t\treturn `${this.id}-collapse`;\n\t}\n\n\tget _shouldBeInDOM() {\n\t\treturn !this.collapsed || this._collapseAnimationRunning || !this.destroyOnHide;\n\t}\n\n\tngAfterContentInit() {\n\t\tconst { ngbCollapse } = this._collapse;\n\t\t// we need to disable the animation for the first init\n\t\tngbCollapse.animation = false;\n\t\tngbCollapse.collapsed = this.collapsed;\n\t\t// we set the animation to the default of the accordion\n\t\tngbCollapse.animation = this._accordion.animation;\n\t\t// event forwarding from 'ngbCollapse' to 'ngbAccordion'\n\t\tngbCollapse.hidden.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n\t\t\t// when the animation finishes we can remove the template from DOM\n\t\t\tthis._collapseAnimationRunning = false;\n\t\t\tthis.hidden.emit();\n\t\t\tthis._accordion.hidden.emit(this.id);\n\t\t\t// need if the accordion is used inside a component having OnPush change detection strategy\n\t\t\tthis._cd.markForCheck();\n\t\t});\n\t\tngbCollapse.shown.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n\t\t\tthis.shown.emit();\n\t\t\tthis._accordion.shown.emit(this.id);\n\t\t\t// need if the accordion is used inside a component having OnPush change detection strategy\n\t\t\tthis._cd.markForCheck();\n\t\t});\n\t}\n\n\t/**\n\t * Toggles an accordion item.\n\t */\n\ttoggle() {\n\t\tthis.collapsed = !this.collapsed;\n\t}\n\n\t/**\n\t * Expands an accordion item.\n\t */\n\texpand() {\n\t\tif (this.collapsed) {\n\t\t\t// checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n\t\t\tif (!this._accordion._ensureCanExpand(this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._collapsed = false;\n\n\t\t\t// need if the accordion is used inside a component having OnPush change detection strategy\n\t\t\tthis._cd.markForCheck();\n\n\t\t\t// we need force CD to get template into DOM before starting animation to calculate its height correctly\n\t\t\t// this will synchronously put the item body into DOM, because `this._collapsed` was flipped to `false`\n\t\t\tthis._cd.detectChanges();\n\n\t\t\t// firing events before starting animations\n\t\t\tthis.show.emit();\n\t\t\tthis._accordion.show.emit(this.id);\n\n\t\t\t// we also need to make sure 'animation' flag is up-to- date\n\t\t\tthis._collapse.ngbCollapse.animation = this._accordion.animation;\n\t\t\tthis._collapse.ngbCollapse.collapsed = false;\n\t\t}\n\t}\n\n\t/**\n\t * Collapses an accordion item.\n\t */\n\tcollapse() {\n\t\tif (!this.collapsed) {\n\t\t\tthis._collapsed = true;\n\t\t\tthis._collapseAnimationRunning = true;\n\n\t\t\t// need if the accordion is used inside a component having OnPush change detection strategy\n\t\t\tthis._cd.markForCheck();\n\n\t\t\t// firing events before starting animations\n\t\t\tthis.hide.emit();\n\t\t\tthis._accordion.hide.emit(this.id);\n\n\t\t\t// we also need to make sure 'animation' flag is up-to- date\n\t\t\tthis._collapse.ngbCollapse.animation = this._accordion.animation;\n\t\t\tthis._collapse.ngbCollapse.collapsed = true;\n\t\t}\n\t}\n}\n\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: '[ngbAccordion]',\n\tstandalone: true,\n\texportAs: 'ngbAccordion',\n\thost: {\n\t\tclass: 'accordion',\n\t},\n})\nexport class NgbAccordionDirective {\n\tprivate _config = inject(NgbAccordionConfig);\n\tprivate _anItemWasAlreadyExpandedDuringInitialisation = false;\n\n\t@ContentChildren(NgbAccordionItem, { descendants: false }) private _items?: QueryList<NgbAccordionItem>;\n\t/**\n\t * If `true`, accordion will be animated.\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * If `true`, only one item at the time can stay open.\n\t */\n\t@Input() closeOthers = this._config.closeOthers;\n\t/**\n\t * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n\t *\n\t * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n\t */\n\t@Input() destroyOnHide = this._config.destroyOnHide;\n\n\t/**\n\t * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Output() show = new EventEmitter<string>();\n\n\t/**\n\t * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n\t */\n\t@Output() shown = new EventEmitter<string>();\n\n\t/**\n\t * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Output() hide = new EventEmitter<string>();\n\n\t/**\n\t * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n\t * The payload is the id of hidden accordion item.\n\t */\n\t@Output() hidden = new EventEmitter<string>();\n\n\t/**\n\t * Toggles an item with the given id.\n\t *\n\t * It will toggle an item, even if it is disabled.\n\t *\n\t * @param itemId The id of the item to toggle.\n\t */\n\ttoggle(itemId: string) {\n\t\tthis._getItem(itemId)?.toggle();\n\t}\n\n\t/**\n\t * Expands an item with the given id.\n\t *\n\t * If `closeOthers` is `true`, it will collapse other panels.\n\t *\n\t * @param itemId The id of the item to expand.\n\t */\n\texpand(itemId: string) {\n\t\tthis._getItem(itemId)?.expand();\n\t}\n\n\t/**\n\t * Expands all items.\n\t *\n\t * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n\t */\n\texpandAll() {\n\t\tif (this._items) {\n\t\t\tif (this.closeOthers) {\n\t\t\t\t// we check if there is an item open and if it is not we can expand the first item\n\t\t\t\t// (otherwise we toggle nothing)\n\t\t\t\tif (!this._items.find((item) => !item.collapsed)) {\n\t\t\t\t\tthis._items.first.expand();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._items.forEach((item) => item.expand());\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Collapses an item with the given id.\n\t *\n\t * Has no effect if the `itemId` does not correspond to any item.\n\t *\n\t * @param itemId The id of the item to collapse.\n\t */\n\tcollapse(itemId: string) {\n\t\tthis._getItem(itemId)?.collapse();\n\t}\n\n\t/**\n\t * Collapses all items.\n\t */\n\tcollapseAll() {\n\t\tthis._items?.forEach((item) => item.collapse());\n\t}\n\n\t/**\n\t * Checks if an item with the given id is expanded.\n\t *\n\t * If the `itemId` does not correspond to any item, it returns `false`.\n\t *\n\t * @param itemId The id of the item to check.\n\t */\n\tisExpanded(itemId: string) {\n\t\tconst item = this._getItem(itemId);\n\t\treturn item ? !item.collapsed : false;\n\t}\n\n\t/**\n\t * It checks, if the item can be expanded in the current state of the accordion.\n\t * With `closeOthers` there can be only one expanded item at a time.\n\t *\n\t * @internal\n\t */\n\t_ensureCanExpand(toExpand: NgbAccordionItem) {\n\t\tif (!this.closeOthers) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// special case during the initialization of the [collapse]=\"false\" inputs\n\t\t// `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n\t\tif (!this._items) {\n\t\t\tif (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n\t\t\t\tthis._anItemWasAlreadyExpandedDuringInitialisation = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// if there is an expanded item, we need to collapse it first\n\t\tthis._items.find((item) => !item.collapsed && toExpand !== item)?.collapse();\n\n\t\treturn true;\n\t}\n\n\tprivate _getItem(itemId: string): NgbAccordionItem | undefined {\n\t\treturn this._items?.find((item) => item.id === itemId);\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n\tNgbAccordionDirective,\n\tNgbAccordionItem,\n\tNgbAccordionHeader,\n\tNgbAccordionToggle,\n\tNgbAccordionBody,\n\tNgbAccordionCollapse,\n\tNgbAccordionButton,\n} from './accordion.directive';\n\nexport {\n\tNgbAccordionButton,\n\tNgbAccordionDirective,\n\tNgbAccordionItem,\n\tNgbAccordionHeader,\n\tNgbAccordionToggle,\n\tNgbAccordionBody,\n\tNgbAccordionCollapse,\n} from './accordion.directive';\nexport { NgbAccordionConfig } from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [\n\tNgbAccordionButton,\n\tNgbAccordionDirective,\n\tNgbAccordionItem,\n\tNgbAccordionHeader,\n\tNgbAccordionToggle,\n\tNgbAccordionBody,\n\tNgbAccordionCollapse,\n];\n\n@NgModule({\n\timports: NGB_ACCORDION_DIRECTIVES,\n\texports: NGB_ACCORDION_DIRECTIVES,\n})\nexport class NgbAccordionModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbAlertConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tdismissible = true;\n\ttype = 'warning';\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import { NgbTransitionStartFn } from '../util/transition/ngbTransition';\n\nexport const ngbAlertFadingTransition: NgbTransitionStartFn = ({ classList }: HTMLElement) => {\n\tclassList.remove('show');\n};\n","import {\n\tChangeDetectionStrategy,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInput,\n\tNgZone,\n\tOutput,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { NgbAlertConfig } from './alert-config';\nimport { ngbRunTransition } from '../util/transition/ngbTransition';\nimport { ngbAlertFadingTransition } from './alert-transition';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n\tselector: 'ngb-alert',\n\texportAs: 'ngbAlert',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\trole: 'alert',\n\t\t'[class]': '\"alert show\" + (type ? \" alert-\" + type : \"\")',\n\t\t'[class.fade]': 'animation',\n\t\t'[class.alert-dismissible]': 'dismissible',\n\t},\n\ttemplate: `\n\t\t<ng-content />\n\t\t@if (dismissible) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t\t(click)=\"close()\"\n\t\t\t></button>\n\t\t}\n\t`,\n\tstyleUrl: './alert.scss',\n})\nexport class NgbAlert {\n\tprivate _config = inject(NgbAlertConfig);\n\tprivate _elementRef = inject(ElementRef<HTMLElement>);\n\tprivate _zone = inject(NgZone);\n\n\t/**\n\t * If `true`, alert closing will be animated.\n\t *\n\t * Animation is triggered only when clicked on the close button (×)\n\t * or via the `.close()` function\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * If `true`, alert can be dismissed by the user.\n\t *\n\t * The close button (×) will be displayed and you can be notified\n\t * of the event with the `(closed)` output.\n\t */\n\t@Input() dismissible = this._config.dismissible;\n\n\t/**\n\t * Type of the alert.\n\t *\n\t * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n\t * `'secondary'`, `'light'` and `'dark'`.\n\t */\n\t@Input() type = this._config.type;\n\n\t/**\n\t * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() closed = new EventEmitter<void>();\n\n\t/**\n\t * Triggers alert closing programmatically (same as clicking on the close button (×)).\n\t *\n\t * The returned observable will emit and be completed once the closing transition has finished.\n\t * If the animations are turned off this happens synchronously.\n\t *\n\t * Alternatively you could listen or subscribe to the `(closed)` output\n\t *\n\t * @since 8.0.0\n\t */\n\tclose(): Observable<void> {\n\t\tconst transition = ngbRunTransition(this._zone, this._elementRef.nativeElement, ngbAlertFadingTransition, {\n\t\t\tanimation: this.animation,\n\t\t\trunningTransition: 'continue',\n\t\t});\n\t\ttransition.subscribe(() => this.closed.emit());\n\t\treturn transition;\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbAlert } from './alert';\n\nexport { NgbAlert } from './alert';\nexport { NgbAlertConfig } from './alert-config';\n\n@NgModule({\n\timports: [NgbAlert],\n\texports: [NgbAlert],\n})\nexport class NgbAlertModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbCarouselConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tinterval = 5000;\n\twrap = true;\n\tkeyboard = true;\n\tpauseOnHover = true;\n\tpauseOnFocus = true;\n\tshowNavigationArrows = true;\n\tshowNavigationIndicators = true;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import { NgbTransitionStartFn } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n\tSTART = 'start',\n\tEND = 'end',\n}\n\nexport interface NgbCarouselCtx {\n\t/**\n\t * <span class=\"badge bg-info text-dark\">since 12.0.0</span> Possible values are `'start' | 'end'`.\n\t *\n\t * <span class=\"badge bg-secondary\">before 12.0.0</span> Possible values were `'left' | 'right'`.\n\t */\n\tdirection: 'start' | 'end';\n}\n\nconst isBeingAnimated = ({ classList }: HTMLElement) => {\n\treturn classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\n\nconst removeDirectionClasses = (classList: DOMTokenList) => {\n\tclassList.remove('carousel-item-start', 'carousel-item-end');\n};\n\nconst removeClasses = (classList: DOMTokenList) => {\n\tremoveDirectionClasses(classList);\n\tclassList.remove('carousel-item-prev', 'carousel-item-next');\n};\n\nexport const ngbCarouselTransitionIn: NgbTransitionStartFn<NgbCarouselCtx> = (\n\telement: HTMLElement,\n\tanimation: boolean,\n\t{ direction }: NgbCarouselCtx,\n) => {\n\tconst { classList } = element;\n\n\tif (!animation) {\n\t\tremoveClasses(classList);\n\t\tclassList.add('active');\n\t\treturn;\n\t}\n\n\tif (isBeingAnimated(element)) {\n\t\t// Revert the transition\n\t\tremoveDirectionClasses(classList);\n\t} else {\n\t\t// For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n\t\tclassList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n\t\treflow(element);\n\t\tclassList.add('carousel-item-' + direction);\n\t}\n\n\treturn () => {\n\t\tremoveClasses(classList);\n\t\tclassList.add('active');\n\t};\n};\n\nexport const ngbCarouselTransitionOut: NgbTransitionStartFn<NgbCarouselCtx> = (\n\telement: HTMLElement,\n\tanimation: boolean,\n\t{ direction }: NgbCarouselCtx,\n) => {\n\tconst { classList } = element;\n\n\tif (!animation) {\n\t\tremoveClasses(classList);\n\t\tclassList.remove('active');\n\t\treturn;\n\t}\n\n\t//  direction is left or right, depending on the way the slide goes out.\n\tif (isBeingAnimated(element)) {\n\t\t// Revert the transition\n\t\tremoveDirectionClasses(classList);\n\t} else {\n\t\tclassList.add('carousel-item-' + direction);\n\t}\n\n\treturn () => {\n\t\tremoveClasses(classList);\n\t\tclassList.remove('active');\n\t};\n};\n","import {\n\tAfterContentChecked,\n\tAfterContentInit,\n\tafterNextRender,\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tContentChildren,\n\tDestroyRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOutput,\n\tPLATFORM_ID,\n\tQueryList,\n\tTemplateRef,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { isPlatformBrowser, NgTemplateOutlet } from '@angular/common';\n\nimport { NgbCarouselConfig } from './carousel-config';\n\nimport { BehaviorSubject, combineLatest, NEVER, Observable, timer, zip } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\nimport { ngbCompleteTransition, ngbRunTransition, NgbTransitionOptions } from '../util/transition/ngbTransition';\nimport {\n\tNgbCarouselCtx,\n\tngbCarouselTransitionIn,\n\tngbCarouselTransitionOut,\n\tNgbSlideEventDirection,\n} from './carousel-transition';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextId = 0;\nlet carouselId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({ selector: 'ng-template[ngbSlide]', standalone: true })\nexport class NgbSlide {\n\ttemplateRef = inject(TemplateRef);\n\n\t/**\n\t * Slide id that must be unique for the entire document.\n\t *\n\t * If not provided, will be generated in the `ngb-slide-xx` format.\n\t */\n\t@Input() id = `ngb-slide-${nextId++}`;\n\n\t/**\n\t * An event emitted when the slide transition is finished\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() slid = new EventEmitter<NgbSingleSlideEvent>();\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n\tselector: 'ngb-carousel',\n\texportAs: 'ngbCarousel',\n\timports: [NgTemplateOutlet],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\tclass: 'carousel slide',\n\t\t'[style.display]': '\"block\"',\n\t\ttabIndex: '0',\n\t\t'(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n\t\t'(keydown.arrowRight)': 'keyboard && arrowRight()',\n\t\t'(mouseenter)': 'mouseHover = true',\n\t\t'(mouseleave)': 'mouseHover = false',\n\t\t'(focusin)': 'focused = true',\n\t\t'(focusout)': 'focused = false',\n\t\t'[attr.aria-activedescendant]': `'slide-' + activeId`,\n\t},\n\ttemplate: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t@for (slide of slides; track slide) {\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-bs-target\n\t\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t\t></button>\n\t\t\t}\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t@for (slide of slides; track slide; let i = $index; let c = $count) {\n\t\t\t\t<div class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.templateRef\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t@if (showNavigationArrows) {\n\t\t\t<button\n\t\t\t\tclass=\"carousel-control-prev\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"arrowLeft()\"\n\t\t\t\t[attr.aria-labelledby]=\"id + '-previous'\"\n\t\t\t>\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\" [id]=\"id + '-previous'\">Previous</span>\n\t\t\t</button>\n\t\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" [attr.aria-labelledby]=\"id + '-next'\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\" [id]=\"id + '-next'\">Next</span>\n\t\t\t</button>\n\t\t}\n\t`,\n})\nexport class NgbCarousel implements AfterContentChecked, AfterContentInit, AfterViewInit {\n\t@ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n\tpublic NgbSlideEventSource = NgbSlideEventSource;\n\n\tprivate _config = inject(NgbCarouselConfig);\n\tprivate _platformId = inject(PLATFORM_ID);\n\tprivate _ngZone = inject(NgZone);\n\tprivate _cd = inject(ChangeDetectorRef);\n\tprivate _container = inject(ElementRef);\n\tprivate _destroyRef = inject(DestroyRef);\n\tprivate _injector = inject(Injector);\n\n\tprivate _interval$ = new BehaviorSubject(this._config.interval);\n\tprivate _mouseHover$ = new BehaviorSubject(false);\n\tprivate _focused$ = new BehaviorSubject(false);\n\tprivate _pauseOnHover$ = new BehaviorSubject(this._config.pauseOnHover);\n\tprivate _pauseOnFocus$ = new BehaviorSubject(this._config.pauseOnFocus);\n\tprivate _pause$ = new BehaviorSubject(false);\n\tprivate _wrap$ = new BehaviorSubject(this._config.wrap);\n\n\tid = `ngb-carousel-${carouselId++}`;\n\n\t/**\n\t * A flag to enable/disable the animations.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * The slide id that should be displayed **initially**.\n\t *\n\t * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n\t */\n\t@Input() activeId: string;\n\n\t/**\n\t * Time in milliseconds before the next slide is shown.\n\t */\n\t@Input()\n\tset interval(value: number) {\n\t\tthis._interval$.next(value);\n\t}\n\n\tget interval() {\n\t\treturn this._interval$.value;\n\t}\n\n\t/**\n\t * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n\t */\n\t@Input()\n\tset wrap(value: boolean) {\n\t\tthis._wrap$.next(value);\n\t}\n\n\tget wrap() {\n\t\treturn this._wrap$.value;\n\t}\n\n\t/**\n\t * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n\t */\n\t@Input() keyboard = this._config.keyboard;\n\n\t/**\n\t * If `true`, will pause slide switching when mouse cursor hovers the slide.\n\t *\n\t * @since 2.2.0\n\t */\n\t@Input()\n\tset pauseOnHover(value: boolean) {\n\t\tthis._pauseOnHover$.next(value);\n\t}\n\n\tget pauseOnHover() {\n\t\treturn this._pauseOnHover$.value;\n\t}\n\n\t/**\n\t * If `true`, will pause slide switching when the focus is inside the carousel.\n\t */\n\t@Input()\n\tset pauseOnFocus(value: boolean) {\n\t\tthis._pauseOnFocus$.next(value);\n\t}\n\n\tget pauseOnFocus() {\n\t\treturn this._pauseOnFocus$.value;\n\t}\n\n\t/**\n\t * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n\t *\n\t * @since 2.2.0\n\t */\n\t@Input() showNavigationArrows = this._config.showNavigationArrows;\n\n\t/**\n\t * If `true`, navigation indicators at the bottom of the slide will be visible.\n\t *\n\t * @since 2.2.0\n\t */\n\t@Input() showNavigationIndicators = this._config.showNavigationIndicators;\n\n\t/**\n\t * An event emitted just before the slide transition starts.\n\t *\n\t * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n\t */\n\t@Output() slide = new EventEmitter<NgbSlideEvent>();\n\n\t/**\n\t * An event emitted right after the slide transition is completed.\n\t *\n\t * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() slid = new EventEmitter<NgbSlideEvent>();\n\n\t/*\n\t * Keep the ids of the panels currently transitionning\n\t * in order to allow only the transition revertion\n\t */\n\tprivate _transitionIds: [string, string] | null = null;\n\n\tset mouseHover(value: boolean) {\n\t\tthis._mouseHover$.next(value);\n\t}\n\n\tget mouseHover() {\n\t\treturn this._mouseHover$.value;\n\t}\n\n\tset focused(value: boolean) {\n\t\tthis._focused$.next(value);\n\t}\n\n\tget focused() {\n\t\treturn this._focused$.value;\n\t}\n\n\tarrowLeft() {\n\t\tthis.focus();\n\t\tthis.prev(NgbSlideEventSource.ARROW_LEFT);\n\t}\n\n\tarrowRight() {\n\t\tthis.focus();\n\t\tthis.next(NgbSlideEventSource.ARROW_RIGHT);\n\t}\n\n\tngAfterContentInit() {\n\t\t// setInterval() doesn't play well with SSR and protractor,\n\t\t// so we should run it in the browser and outside Angular\n\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\tconst hasNextSlide$ = combineLatest([\n\t\t\t\t\tthis.slide.pipe(\n\t\t\t\t\t\tmap((slideEvent) => slideEvent.current),\n\t\t\t\t\t\tstartWith(this.activeId),\n\t\t\t\t\t),\n\t\t\t\t\tthis._wrap$,\n\t\t\t\t\tthis.slides.changes.pipe(startWith(null)),\n\t\t\t\t]).pipe(\n\t\t\t\t\tmap(([currentSlideId, wrap]) => {\n\t\t\t\t\t\tconst slideArr = this.slides.toArray();\n\t\t\t\t\t\tconst currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\t\t\t\t\t\treturn wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n\t\t\t\t\t}),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t);\n\t\t\t\tcombineLatest([\n\t\t\t\t\tthis._pause$,\n\t\t\t\t\tthis._pauseOnHover$,\n\t\t\t\t\tthis._mouseHover$,\n\t\t\t\t\tthis._pauseOnFocus$,\n\t\t\t\t\tthis._focused$,\n\t\t\t\t\tthis._interval$,\n\t\t\t\t\thasNextSlide$,\n\t\t\t\t])\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]: [\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\t\tboolean,\n\t\t\t\t\t\t\t]) =>\n\t\t\t\t\t\t\t\tpause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide ? 0 : interval,\n\t\t\t\t\t\t),\n\n\t\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\t\tswitchMap((interval) => (interval > 0 ? timer(interval, interval) : NEVER)),\n\t\t\t\t\t\ttakeUntilDestroyed(this._destroyRef),\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n\t\t\t});\n\t\t}\n\n\t\tthis.slides.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n\t\t\tthis._transitionIds?.forEach((id) => ngbCompleteTransition(this._getSlideElement(id)));\n\t\t\tthis._transitionIds = null;\n\n\t\t\tthis._cd.markForCheck();\n\n\t\t\t// The following code need to be done asynchronously, after the dom becomes stable,\n\t\t\t// otherwise all changes will be undone.\n\t\t\tafterNextRender(\n\t\t\t\t{\n\t\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\t\tfor (const { id } of this.slides) {\n\t\t\t\t\t\t\tconst element = this._getSlideElement(id);\n\t\t\t\t\t\t\tif (id === this.activeId) {\n\t\t\t\t\t\t\t\telement.classList.add('active');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telement.classList.remove('active');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ injector: this._injector },\n\t\t\t);\n\t\t});\n\t}\n\n\tngAfterContentChecked() {\n\t\tlet activeSlide = this._getSlideById(this.activeId);\n\t\tthis.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n\t}\n\n\tngAfterViewInit() {\n\t\t// Initialize the 'active' class (not managed by the template)\n\t\tif (this.activeId) {\n\t\t\tconst element = this._getSlideElement(this.activeId);\n\t\t\tif (element) {\n\t\t\t\telement.classList.add('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to a slide with the specified identifier.\n\t */\n\tselect(slideId: string, source?: NgbSlideEventSource) {\n\t\tthis._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n\t}\n\n\t/**\n\t * Navigates to the previous slide.\n\t */\n\tprev(source?: NgbSlideEventSource) {\n\t\tthis._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n\t}\n\n\t/**\n\t * Navigates to the next slide.\n\t */\n\tnext(source?: NgbSlideEventSource) {\n\t\tthis._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n\t}\n\n\t/**\n\t * Pauses cycling through the slides.\n\t */\n\tpause() {\n\t\tthis._pause$.next(true);\n\t}\n\n\t/**\n\t * Restarts cycling through the slides from start to end.\n\t */\n\tcycle() {\n\t\tthis._pause$.next(false);\n\t}\n\n\t/**\n\t * Set the focus on the carousel.\n\t */\n\tfocus() {\n\t\tthis._container.nativeElement.focus();\n\t}\n\n\tprivate _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n\t\tconst transitionIds = this._transitionIds;\n\t\tif (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n\t\t\t// Revert prevented\n\t\t\treturn;\n\t\t}\n\n\t\tlet selectedSlide = this._getSlideById(slideIdx);\n\t\tif (selectedSlide && selectedSlide.id !== this.activeId) {\n\t\t\tthis._transitionIds = [this.activeId, slideIdx];\n\t\t\tthis.slide.emit({\n\t\t\t\tprev: this.activeId,\n\t\t\t\tcurrent: selectedSlide.id,\n\t\t\t\tdirection: direction,\n\t\t\t\tpaused: this._pause$.value,\n\t\t\t\tsource,\n\t\t\t});\n\n\t\t\tconst options: NgbTransitionOptions<NgbCarouselCtx> = {\n\t\t\t\tanimation: this.animation,\n\t\t\t\trunningTransition: 'stop',\n\t\t\t\tcontext: { direction },\n\t\t\t};\n\n\t\t\tconst transitions: Array<Observable<any>> = [];\n\t\t\tconst activeSlide = this._getSlideById(this.activeId);\n\t\t\tif (activeSlide) {\n\t\t\t\tconst activeSlideTransition = ngbRunTransition(\n\t\t\t\t\tthis._ngZone,\n\t\t\t\t\tthis._getSlideElement(activeSlide.id),\n\t\t\t\t\tngbCarouselTransitionOut,\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\t\tactiveSlideTransition.subscribe(() => {\n\t\t\t\t\tactiveSlide.slid.emit({ isShown: false, direction, source });\n\t\t\t\t});\n\t\t\t\ttransitions.push(activeSlideTransition);\n\t\t\t}\n\n\t\t\tconst previousId = this.activeId;\n\t\t\tthis.activeId = selectedSlide.id;\n\t\t\tconst nextSlide = this._getSlideById(this.activeId);\n\t\t\tconst transition = ngbRunTransition(\n\t\t\t\tthis._ngZone,\n\t\t\t\tthis._getSlideElement(selectedSlide.id),\n\t\t\t\tngbCarouselTransitionIn,\n\t\t\t\toptions,\n\t\t\t);\n\t\t\ttransition.subscribe(() => {\n\t\t\t\tnextSlide?.slid.emit({ isShown: true, direction, source });\n\t\t\t});\n\t\t\ttransitions.push(transition);\n\n\t\t\tzip(...transitions)\n\t\t\t\t.pipe(take(1))\n\t\t\t\t.subscribe(() => {\n\t\t\t\t\tthis._transitionIds = null;\n\t\t\t\t\tthis.slid.emit({\n\t\t\t\t\t\tprev: previousId,\n\t\t\t\t\t\tcurrent: selectedSlide!.id,\n\t\t\t\t\t\tdirection: direction,\n\t\t\t\t\t\tpaused: this._pause$.value,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\t// we get here after the interval fires or any external API call like next(), prev() or select()\n\t\tthis._cd.markForCheck();\n\t}\n\n\tprivate _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n\t\tconst currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\t\tconst nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n\t\treturn currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n\t}\n\n\tprivate _getSlideById(slideId: string): NgbSlide | null {\n\t\treturn this.slides.find((slide) => slide.id === slideId) || null;\n\t}\n\n\tprivate _getSlideIdxById(slideId: string): number {\n\t\tconst slide = this._getSlideById(slideId);\n\t\treturn slide != null ? this.slides.toArray().indexOf(slide) : -1;\n\t}\n\n\tprivate _getNextSlide(currentSlideId: string): string {\n\t\tconst slideArr = this.slides.toArray();\n\t\tconst currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\t\tconst isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n\t\treturn isLastSlide\n\t\t\t? this.wrap\n\t\t\t\t? slideArr[0].id\n\t\t\t\t: slideArr[slideArr.length - 1].id\n\t\t\t: slideArr[currentSlideIdx + 1].id;\n\t}\n\n\tprivate _getPrevSlide(currentSlideId: string): string {\n\t\tconst slideArr = this.slides.toArray();\n\t\tconst currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\t\tconst isFirstSlide = currentSlideIdx === 0;\n\n\t\treturn isFirstSlide\n\t\t\t? this.wrap\n\t\t\t\t? slideArr[slideArr.length - 1].id\n\t\t\t\t: slideArr[0].id\n\t\t\t: slideArr[currentSlideIdx - 1].id;\n\t}\n\n\tprivate _getSlideElement(slideId: string): HTMLElement {\n\t\treturn this._container.nativeElement.querySelector(`#slide-${slideId}`);\n\t}\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n\t/**\n\t * The previous slide id.\n\t */\n\tprev: string;\n\n\t/**\n\t * The current slide id.\n\t */\n\tcurrent: string;\n\n\t/**\n\t * The slide event direction.\n\t *\n\t * <span class=\"badge bg-info text-dark\">since 12.0.0</span> Possible values are `'start' | 'end'`.\n\t *\n\t * <span class=\"badge bg-secondary\">before 12.0.0</span> Possible values were `'left' | 'right'`.\n\t */\n\tdirection: NgbSlideEventDirection;\n\n\t/**\n\t * Whether the pause() method was called (and no cycle() call was done afterwards).\n\t *\n\t * @since 5.1.0\n\t */\n\tpaused: boolean;\n\n\t/**\n\t * Source triggering the slide change event.\n\t *\n\t * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n\t *\n\t * @since 5.1.0\n\t */\n\tsource?: NgbSlideEventSource;\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n *\n * @since 8.0.0\n */\nexport interface NgbSingleSlideEvent {\n\t/**\n\t * true if the slide is shown, false otherwise\n\t */\n\tisShown: boolean;\n\n\t/**\n\t * The slide event direction.\n\t *\n\t * <span class=\"badge bg-info text-dark\">since 12.0.0</span> Possible values are `'start' | 'end'`.\n\t *\n\t * <span class=\"badge bg-secondary\">before 12.0.0</span> Possible values were `'left' | 'right'`.\n\t */\n\tdirection: NgbSlideEventDirection;\n\n\t/**\n\t * Source triggering the slide change event.\n\t *\n\t * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n\t *\n\t */\n\tsource?: NgbSlideEventSource;\n}\n\nexport enum NgbSlideEventSource {\n\tTIMER = 'timer',\n\tARROW_LEFT = 'arrowLeft',\n\tARROW_RIGHT = 'arrowRight',\n\tINDICATOR = 'indicator',\n}\n","import { NgModule } from '@angular/core';\nimport { NgbCarousel, NgbSlide } from './carousel';\n\nexport { NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventSource } from './carousel';\nexport { NgbSlideEventDirection } from './carousel-transition';\nexport { NgbCarouselConfig } from './carousel-config';\n\n@NgModule({\n\timports: [NgbCarousel, NgbSlide],\n\texports: [NgbCarousel, NgbSlide],\n})\nexport class NgbCarouselModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbCollapse } from './collapse';\n\nexport { NgbCollapse } from './collapse';\nexport { NgbCollapseConfig } from './collapse-config';\n\n@NgModule({\n\timports: [NgbCollapse],\n\texports: [NgbCollapse],\n})\nexport class NgbCollapseModule {}\n","import { NgbDateStruct } from './ngb-date-struct';\nimport { isInteger } from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n\t/**\n\t * The year, for example 2016\n\t */\n\tyear: number;\n\n\t/**\n\t * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n\t */\n\tmonth: number;\n\n\t/**\n\t * The day of month, starting with 1\n\t */\n\tday: number;\n\n\t/**\n\t * A **static method** that creates a new date object from the `NgbDateStruct`,\n\t *\n\t * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n\t *\n\t * If the `date` is already of `NgbDate` type, the method will return the same object.\n\t */\n\tstatic from(date?: NgbDateStruct | null): NgbDate | null {\n\t\tif (date instanceof NgbDate) {\n\t\t\treturn date;\n\t\t}\n\t\treturn date ? new NgbDate(date.year, date.month, date.day) : null;\n\t}\n\n\tconstructor(year: number, month: number, day: number) {\n\t\tthis.year = isInteger(year) ? year : <any>null;\n\t\tthis.month = isInteger(month) ? month : <any>null;\n\t\tthis.day = isInteger(day) ? day : <any>null;\n\t}\n\n\t/**\n\t * Checks if the current date is equal to another date.\n\t */\n\tequals(other?: NgbDateStruct | null): boolean {\n\t\treturn other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n\t}\n\n\t/**\n\t * Checks if the current date is before another date.\n\t */\n\tbefore(other?: NgbDateStruct | null): boolean {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.year === other.year) {\n\t\t\tif (this.month === other.month) {\n\t\t\t\treturn this.day === other.day ? false : this.day < other.day;\n\t\t\t} else {\n\t\t\t\treturn this.month < other.month;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.year < other.year;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the current date is after another date.\n\t */\n\tafter(other?: NgbDateStruct | null): boolean {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.year === other.year) {\n\t\t\tif (this.month === other.month) {\n\t\t\t\treturn this.day === other.day ? false : this.day > other.day;\n\t\t\t} else {\n\t\t\t\treturn this.month > other.month;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.year > other.year;\n\t\t}\n\t}\n}\n","import { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger } from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n\treturn new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n\tconst jsDate = new Date(date.year, date.month - 1, date.day, 12);\n\t// this is done avoid 30 -> 1930 conversion\n\tif (!isNaN(jsDate.getTime())) {\n\t\tjsDate.setFullYear(date.year);\n\t}\n\treturn jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n\treturn new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY })\nexport abstract class NgbCalendar {\n\t/**\n\t * Returns the number of days per week.\n\t */\n\tabstract getDaysPerWeek(): number;\n\n\t/**\n\t * Returns an array of months per year.\n\t *\n\t * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n\t */\n\tabstract getMonths(year?: number): number[];\n\n\t/**\n\t * Returns the number of weeks per month.\n\t */\n\tabstract getWeeksPerMonth(): number;\n\n\t/**\n\t * Returns the weekday number for a given day.\n\t *\n\t * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n\t */\n\tabstract getWeekday(date: NgbDate): number;\n\n\t/**\n\t * Adds a number of years, months or days to a given date.\n\t *\n\t * * `period` can be `y`, `m` or `d` and defaults to day.\n\t * * `number` defaults to 1.\n\t *\n\t * Always returns a new date.\n\t */\n\tabstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n\t/**\n\t * Subtracts a number of years, months or days from a given date.\n\t *\n\t * * `period` can be `y`, `m` or `d` and defaults to day.\n\t * * `number` defaults to 1.\n\t *\n\t * Always returns a new date.\n\t */\n\tabstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n\t/**\n\t * Returns the week number for a given week.\n\t */\n\tabstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n\t/**\n\t * Returns the today's date.\n\t */\n\tabstract getToday(): NgbDate;\n\n\t/**\n\t * Checks if a date is valid in the current calendar.\n\t */\n\tabstract isValid(date?: NgbDate | null): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n\tgetDaysPerWeek() {\n\t\treturn 7;\n\t}\n\n\tgetMonths() {\n\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\t}\n\n\tgetWeeksPerMonth() {\n\t\treturn 6;\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\tlet jsDate = toJSDate(date);\n\t\tlet checkMonth = true;\n\t\tlet expectedMonth = jsDate.getMonth();\n\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tjsDate.setFullYear(jsDate.getFullYear() + number);\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\texpectedMonth += number;\n\t\t\t\tjsDate.setMonth(expectedMonth);\n\t\t\t\texpectedMonth = expectedMonth % 12;\n\t\t\t\tif (expectedMonth < 0) {\n\t\t\t\t\texpectedMonth = expectedMonth + 12;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tjsDate.setDate(jsDate.getDate() + number);\n\t\t\t\tcheckMonth = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\n\t\tif (checkMonth && jsDate.getMonth() !== expectedMonth) {\n\t\t\t// this means the destination month has less days than the initial month\n\t\t\t// let's go back to the end of the previous month:\n\t\t\tjsDate.setDate(0);\n\t\t}\n\n\t\treturn fromJSDate(jsDate);\n\t}\n\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate) {\n\t\tlet jsDate = toJSDate(date);\n\t\tlet day = jsDate.getDay();\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\treturn day === 0 ? 7 : day;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\tif (firstDayOfWeek === 7) {\n\t\t\tfirstDayOfWeek = 0;\n\t\t}\n\n\t\tconst thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n\t\tlet date = week[thursdayIndex];\n\n\t\tconst jsDate = toJSDate(date);\n\t\tjsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\t\tconst time = jsDate.getTime();\n\t\tjsDate.setMonth(0); // Compare with Jan 1\n\t\tjsDate.setDate(1);\n\t\treturn Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n\t}\n\n\tgetToday(): NgbDate {\n\t\treturn fromJSDate(new Date());\n\t}\n\n\tisValid(date?: NgbDate | null): boolean {\n\t\tif (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// year 0 doesn't exist in Gregorian calendar\n\t\tif (date.year === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst jsDate = toJSDate(date);\n\n\t\treturn (\n\t\t\t!isNaN(jsDate.getTime()) &&\n\t\t\tjsDate.getFullYear() === date.year &&\n\t\t\tjsDate.getMonth() + 1 === date.month &&\n\t\t\tjsDate.getDate() === date.day\n\t\t);\n\t}\n}\n","import { NgbDate } from './ngb-date';\nimport { DatepickerViewModel, DayViewModel, MonthViewModel } from './datepicker-view-model';\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n\nexport function isChangedDate(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n\treturn !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n\treturn !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n\treturn (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate?: NgbDate | null, maxDate?: NgbDate | null): void {\n\tif (maxDate && minDate && maxDate.before(minDate)) {\n\t\tthrow new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n\t}\n}\n\nexport function checkDateInRange(\n\tdate?: NgbDate | null,\n\tminDate?: NgbDate | null,\n\tmaxDate?: NgbDate | null,\n): NgbDate | null {\n\tif (date && minDate && date.before(minDate)) {\n\t\treturn minDate;\n\t}\n\tif (date && maxDate && date.after(maxDate)) {\n\t\treturn maxDate;\n\t}\n\n\treturn date || null;\n}\n\nexport function isDateSelectable(date: NgbDate | null | undefined, state: DatepickerViewModel) {\n\tconst { minDate, maxDate, disabled, markDisabled } = state;\n\treturn !(\n\t\tdate === null ||\n\t\tdate === undefined ||\n\t\tdisabled ||\n\t\t(markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n\t\t(minDate && date.before(minDate)) ||\n\t\t(maxDate && date.after(maxDate))\n\t);\n}\n\nexport function generateSelectBoxMonths(\n\tcalendar: NgbCalendar,\n\tdate: NgbDate,\n\tminDate: NgbDate | null,\n\tmaxDate: NgbDate | null,\n) {\n\tif (!date) {\n\t\treturn [];\n\t}\n\n\tlet months = calendar.getMonths(date.year);\n\n\tif (minDate && date.year === minDate.year) {\n\t\tconst index = months.findIndex((month) => month === minDate.month);\n\t\tmonths = months.slice(index);\n\t}\n\n\tif (maxDate && date.year === maxDate.year) {\n\t\tconst index = months.findIndex((month) => month === maxDate.month);\n\t\tmonths = months.slice(0, index + 1);\n\t}\n\n\treturn months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate | null, maxDate: NgbDate | null) {\n\tif (!date) {\n\t\treturn [];\n\t}\n\n\tconst start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n\tconst end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n\tconst length = end - start + 1;\n\tconst numbers = Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tnumbers[i] = start + i;\n\t}\n\n\treturn numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate | null) {\n\tconst nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n\treturn maxDate != null && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate | null) {\n\tconst prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n\treturn (\n\t\tminDate != null &&\n\t\t((prevDate.year === minDate.year && prevDate.month < minDate.month) ||\n\t\t\t(prevDate.year < minDate.year && minDate.month === 1))\n\t);\n}\n\nexport function buildMonths(\n\tcalendar: NgbCalendar,\n\tdate: NgbDate,\n\tstate: DatepickerViewModel,\n\ti18n: NgbDatepickerI18n,\n\tforce: boolean,\n): MonthViewModel[] {\n\tconst { displayMonths, months } = state;\n\t// move old months to a temporary array\n\tconst monthsToReuse = months.splice(0, months.length);\n\n\t// generate new first dates, nullify or reuse months\n\tconst firstDates = Array.from({ length: displayMonths }, (_, i) => {\n\t\tconst firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n\t\tmonths[i] = <any>null;\n\n\t\tif (!force) {\n\t\t\tconst reusedIndex = monthsToReuse.findIndex((month) => month.firstDate.equals(firstDate));\n\t\t\t// move reused month back to months\n\t\t\tif (reusedIndex !== -1) {\n\t\t\t\tmonths[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n\t\t\t}\n\t\t}\n\n\t\treturn firstDate;\n\t});\n\n\t// rebuild nullified months\n\tfirstDates.forEach((firstDate, i) => {\n\t\tif (months[i] === null) {\n\t\t\tmonths[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || ({} as MonthViewModel));\n\t\t}\n\t});\n\n\treturn months;\n}\n\nexport function buildMonth(\n\tcalendar: NgbCalendar,\n\tdate: NgbDate,\n\tstate: DatepickerViewModel,\n\ti18n: NgbDatepickerI18n,\n\tmonth: MonthViewModel = {} as MonthViewModel,\n): MonthViewModel {\n\tconst {\n\t\tdayTemplateData,\n\t\tminDate,\n\t\tmaxDate,\n\t\tfirstDayOfWeek,\n\t\tmarkDisabled,\n\t\toutsideDays,\n\t\tweekdayWidth,\n\t\tweekdaysVisible,\n\t} = state;\n\tconst calendarToday = calendar.getToday();\n\n\tmonth.firstDate = <any>null;\n\tmonth.lastDate = <any>null;\n\tmonth.number = date.month;\n\tmonth.year = date.year;\n\tmonth.weeks = month.weeks || [];\n\tmonth.weekdays = month.weekdays || [];\n\n\tdate = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n\t// clearing weekdays, if not visible\n\tif (!weekdaysVisible) {\n\t\tmonth.weekdays.length = 0;\n\t}\n\n\t// month has weeks\n\tfor (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n\t\tlet weekObject = month.weeks[week];\n\t\tif (!weekObject) {\n\t\t\tweekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n\t\t}\n\t\tconst days = weekObject.days;\n\n\t\t// week has days\n\t\tfor (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n\t\t\tif (week === 0 && weekdaysVisible) {\n\t\t\t\tmonth.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n\t\t\t}\n\n\t\t\tconst newDate = new NgbDate(date.year, date.month, date.day);\n\t\t\tconst nextDate = calendar.getNext(newDate);\n\n\t\t\tconst ariaLabel = i18n.getDayAriaLabel(newDate);\n\n\t\t\t// marking date as disabled\n\t\t\tlet disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n\t\t\tif (!disabled && markDisabled) {\n\t\t\t\tdisabled = markDisabled(newDate, { month: month.number, year: month.year });\n\t\t\t}\n\n\t\t\t// today\n\t\t\tlet today = newDate.equals(calendarToday);\n\n\t\t\t// adding user-provided data to the context\n\t\t\tlet contextUserData = dayTemplateData\n\t\t\t\t? dayTemplateData(newDate, { month: month.number, year: month.year })\n\t\t\t\t: undefined;\n\n\t\t\t// saving first date of the month\n\t\t\tif (month.firstDate === null && newDate.month === month.number) {\n\t\t\t\tmonth.firstDate = newDate;\n\t\t\t}\n\n\t\t\t// saving last date of the month\n\t\t\tif (newDate.month === month.number && nextDate.month !== month.number) {\n\t\t\t\tmonth.lastDate = newDate;\n\t\t\t}\n\n\t\t\tlet dayObject = days[day];\n\t\t\tif (!dayObject) {\n\t\t\t\tdayObject = days[day] = {} as DayViewModel;\n\t\t\t}\n\t\t\tdayObject.date = newDate;\n\t\t\tdayObject.context = Object.assign(dayObject.context || {}, {\n\t\t\t\t$implicit: newDate,\n\t\t\t\tdate: newDate,\n\t\t\t\tdata: contextUserData,\n\t\t\t\tcurrentMonth: month.number,\n\t\t\t\tcurrentYear: month.year,\n\t\t\t\tdisabled,\n\t\t\t\tfocused: false,\n\t\t\t\tselected: false,\n\t\t\t\ttoday,\n\t\t\t});\n\t\t\tdayObject.tabindex = -1;\n\t\t\tdayObject.ariaLabel = ariaLabel;\n\t\t\tdayObject.hidden = false;\n\n\t\t\tdate = nextDate;\n\t\t}\n\n\t\tweekObject.number = calendar.getWeekNumber(\n\t\t\tdays.map((day) => day.date),\n\t\t\tfirstDayOfWeek,\n\t\t);\n\n\t\t// marking week as collapsed\n\t\tweekObject.collapsed =\n\t\t\toutsideDays === 'collapsed' &&\n\t\t\tdays[0].date.month !== month.number &&\n\t\t\tdays[days.length - 1].date.month !== month.number;\n\t}\n\n\treturn month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n\tconst daysPerWeek = calendar.getDaysPerWeek();\n\tconst firstMonthDate = new NgbDate(date.year, date.month, 1);\n\tconst dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n\treturn calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import { inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { NgbDateStruct } from './ngb-date-struct';\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({\n\tprovidedIn: 'root',\n\tuseFactory: () => new NgbDatepickerI18nDefault(),\n})\nexport abstract class NgbDatepickerI18n {\n\t/**\n\t * Returns the weekday label using specified width\n\t *\n\t * @since 9.1.0\n\t */\n\tabstract getWeekdayLabel(weekday: number, width?: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined>): string;\n\n\t/**\n\t * Returns the short month name to display in the date picker navigation.\n\t *\n\t * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t */\n\tabstract getMonthShortName(month: number, year?: number): string;\n\n\t/**\n\t * Returns the full month name to display in the date picker navigation.\n\t *\n\t * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t */\n\tabstract getMonthFullName(month: number, year?: number): string;\n\n\t/**\n\t * Returns the text label to display above the day view.\n\t *\n\t * @since 9.1.0\n\t */\n\tgetMonthLabel(date: NgbDateStruct): string {\n\t\treturn `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n\t}\n\n\t/**\n\t * Returns the value of the `aria-label` attribute for a specific date.\n\t *\n\t * @since 2.0.0\n\t */\n\tabstract getDayAriaLabel(date: NgbDateStruct): string;\n\n\t/**\n\t * Returns the textual representation of a day that is rendered in a day cell.\n\t *\n\t * @since 3.0.0\n\t */\n\tgetDayNumerals(date: NgbDateStruct): string {\n\t\treturn `${date.day}`;\n\t}\n\n\t/**\n\t * Returns the textual representation of a week number rendered by datepicker.\n\t *\n\t * @since 3.0.0\n\t */\n\tgetWeekNumerals(weekNumber: number): string {\n\t\treturn `${weekNumber}`;\n\t}\n\n\t/**\n\t * Returns the textual representation of a year that is rendered in the datepicker year select box.\n\t *\n\t * @since 3.0.0\n\t */\n\tgetYearNumerals(year: number): string {\n\t\treturn `${year}`;\n\t}\n\n\t/**\n\t * Returns the week label to display in the heading of the month view.\n\t *\n\t * @since 9.1.0\n\t */\n\tgetWeekLabel(): string {\n\t\treturn '';\n\t}\n}\n\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n\tprivate _locale = inject(LOCALE_ID);\n\n\tprivate _monthsShort = [...Array(12).keys()].map((month) =>\n\t\tIntl.DateTimeFormat(this._locale, { month: 'short', timeZone: 'UTC' }).format(Date.UTC(2000, month)),\n\t);\n\tprivate _monthsFull = [...Array(12).keys()].map((month) =>\n\t\tIntl.DateTimeFormat(this._locale, { month: 'long', timeZone: 'UTC' }).format(Date.UTC(2000, month)),\n\t);\n\n\tgetWeekdayLabel(\n\t\tweekday: number,\n\t\twidth: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined> = 'narrow',\n\t): string {\n\t\t// 1 MAY 2000 is a Monday\n\t\tconst weekdays = [1, 2, 3, 4, 5, 6, 7].map((day) =>\n\t\t\tIntl.DateTimeFormat(this._locale, { weekday: width, timeZone: 'UTC' }).format(Date.UTC(2000, 4, day)),\n\t\t);\n\n\t\t// `weekday` is 1 (Mon) to 7 (Sun)\n\t\treturn weekdays[weekday - 1] || '';\n\t}\n\n\tgetMonthShortName(month: number): string {\n\t\treturn this._monthsShort[month - 1] || '';\n\t}\n\n\tgetMonthFullName(month: number): string {\n\t\treturn this._monthsFull[month - 1] || '';\n\t}\n\n\tgetDayAriaLabel(date: NgbDateStruct): string {\n\t\tconst jsDate = new Date(date.year, date.month - 1, date.day);\n\t\treturn formatDate(jsDate, 'fullDate', this._locale);\n\t}\n}\n","import { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled } from './datepicker-view-model';\nimport { inject, Injectable } from '@angular/core';\nimport { isInteger, toInteger } from '../util/util';\nimport { Observable, Subject } from 'rxjs';\nimport {\n\tbuildMonths,\n\tcheckDateInRange,\n\tcheckMinBeforeMax,\n\tgenerateSelectBoxMonths,\n\tgenerateSelectBoxYears,\n\tisChangedDate,\n\tisChangedMonth,\n\tisDateSelectable,\n\tnextMonthDisabled,\n\tprevMonthDisabled,\n} from './datepicker-tools';\n\nimport { filter } from 'rxjs/operators';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n\nexport type DatepickerServiceInputs = Partial<{\n\tdayTemplateData: NgbDayTemplateData;\n\tdisplayMonths: number;\n\tdisabled: boolean;\n\tfirstDayOfWeek: number;\n\tfocusVisible: boolean;\n\tmarkDisabled: NgbMarkDisabled;\n\tmaxDate: NgbDate | null;\n\tminDate: NgbDate | null;\n\tnavigation: 'select' | 'arrows' | 'none';\n\toutsideDays: 'visible' | 'collapsed' | 'hidden';\n\tweekdays: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined> | boolean;\n}>;\n\n@Injectable()\nexport class NgbDatepickerService {\n\tprivate _VALIDATORS: {\n\t\t[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel> | void;\n\t} = {\n\t\tdayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n\t\t\tif (this._state.dayTemplateData !== dayTemplateData) {\n\t\t\t\treturn { dayTemplateData };\n\t\t\t}\n\t\t},\n\t\tdisplayMonths: (displayMonths: number) => {\n\t\t\tdisplayMonths = toInteger(displayMonths);\n\t\t\tif (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n\t\t\t\treturn { displayMonths };\n\t\t\t}\n\t\t},\n\t\tdisabled: (disabled: boolean) => {\n\t\t\tif (this._state.disabled !== disabled) {\n\t\t\t\treturn { disabled };\n\t\t\t}\n\t\t},\n\t\tfirstDayOfWeek: (firstDayOfWeek: number) => {\n\t\t\tfirstDayOfWeek = toInteger(firstDayOfWeek);\n\t\t\tif (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n\t\t\t\treturn { firstDayOfWeek };\n\t\t\t}\n\t\t},\n\t\tfocusVisible: (focusVisible: boolean) => {\n\t\t\tif (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n\t\t\t\treturn { focusVisible };\n\t\t\t}\n\t\t},\n\t\tmarkDisabled: (markDisabled: NgbMarkDisabled) => {\n\t\t\tif (this._state.markDisabled !== markDisabled) {\n\t\t\t\treturn { markDisabled };\n\t\t\t}\n\t\t},\n\t\tmaxDate: (date: NgbDate | null) => {\n\t\t\tconst maxDate = this.toValidDate(date, null);\n\t\t\tif (isChangedDate(this._state.maxDate, maxDate)) {\n\t\t\t\treturn { maxDate };\n\t\t\t}\n\t\t},\n\t\tminDate: (date: NgbDate | null) => {\n\t\t\tconst minDate = this.toValidDate(date, null);\n\t\t\tif (isChangedDate(this._state.minDate, minDate)) {\n\t\t\t\treturn { minDate };\n\t\t\t}\n\t\t},\n\t\tnavigation: (navigation: 'select' | 'arrows' | 'none') => {\n\t\t\tif (this._state.navigation !== navigation) {\n\t\t\t\treturn { navigation };\n\t\t\t}\n\t\t},\n\t\toutsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n\t\t\tif (this._state.outsideDays !== outsideDays) {\n\t\t\t\treturn { outsideDays };\n\t\t\t}\n\t\t},\n\t\tweekdays: (weekdays: boolean | Exclude<Intl.DateTimeFormatOptions['weekday'], undefined>) => {\n\t\t\tconst weekdayWidth = weekdays === true || weekdays === false ? 'narrow' : weekdays;\n\t\t\tconst weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n\t\t\tif (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n\t\t\t\treturn { weekdayWidth, weekdaysVisible };\n\t\t\t}\n\t\t},\n\t};\n\n\tprivate _calendar = inject(NgbCalendar);\n\tprivate _i18n = inject(NgbDatepickerI18n);\n\n\tprivate _model$ = new Subject<DatepickerViewModel>();\n\n\tprivate _dateSelect$ = new Subject<NgbDate>();\n\n\tprivate _state: DatepickerViewModel = {\n\t\tdayTemplateData: null,\n\t\tmarkDisabled: null,\n\t\tmaxDate: null,\n\t\tminDate: null,\n\t\tdisabled: false,\n\t\tdisplayMonths: 1,\n\t\tfirstDate: null,\n\t\tfirstDayOfWeek: 1,\n\t\tlastDate: null,\n\t\tfocusDate: null,\n\t\tfocusVisible: false,\n\t\tmonths: [],\n\t\tnavigation: 'select',\n\t\toutsideDays: 'visible',\n\t\tprevDisabled: false,\n\t\tnextDisabled: false,\n\t\tselectedDate: null,\n\t\tselectBoxes: { years: [], months: [] },\n\t\tweekdayWidth: 'narrow',\n\t\tweekdaysVisible: true,\n\t};\n\n\tget model$(): Observable<DatepickerViewModel> {\n\t\treturn this._model$.pipe(filter((model) => model.months.length > 0));\n\t}\n\n\tget dateSelect$(): Observable<NgbDate> {\n\t\treturn this._dateSelect$.pipe(filter((date) => date !== null));\n\t}\n\n\tset(options: DatepickerServiceInputs) {\n\t\tlet patch = Object.keys(options)\n\t\t\t.map((key) => this._VALIDATORS[key](options[key]))\n\t\t\t.reduce((obj, part) => ({ ...obj, ...part }), {});\n\n\t\tif (Object.keys(patch).length > 0) {\n\t\t\tthis._nextState(patch);\n\t\t}\n\t}\n\n\tfocus(date?: NgbDate | null) {\n\t\tconst focusedDate = this.toValidDate(date, null);\n\t\tif (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n\t\t\tthis._nextState({ focusDate: date });\n\t\t}\n\t}\n\n\tfocusSelect() {\n\t\tif (isDateSelectable(this._state.focusDate, this._state)) {\n\t\t\tthis.select(this._state.focusDate, { emitEvent: true });\n\t\t}\n\t}\n\n\topen(date?: NgbDate | null) {\n\t\tconst firstDate = this.toValidDate(date, this._calendar.getToday());\n\t\tif (\n\t\t\tfirstDate != null &&\n\t\t\t!this._state.disabled &&\n\t\t\t(!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))\n\t\t) {\n\t\t\tthis._nextState({ firstDate });\n\t\t}\n\t}\n\n\tselect(date?: NgbDate | null, options: { emitEvent?: boolean } = {}) {\n\t\tconst selectedDate = this.toValidDate(date, null);\n\t\tif (selectedDate != null && !this._state.disabled) {\n\t\t\tif (isChangedDate(this._state.selectedDate, selectedDate)) {\n\t\t\t\tthis._nextState({ selectedDate });\n\t\t\t}\n\n\t\t\tif (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n\t\t\t\tthis._dateSelect$.next(selectedDate);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoValidDate(date?: NgbDateStruct | null, defaultValue?: NgbDate | null): NgbDate | null {\n\t\tconst ngbDate = NgbDate.from(date);\n\t\tif (defaultValue === undefined) {\n\t\t\tdefaultValue = this._calendar.getToday();\n\t\t}\n\t\treturn this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n\t}\n\n\tgetMonth(struct: NgbDateStruct) {\n\t\tfor (let month of this._state.months) {\n\t\t\tif (struct.month === month.number && struct.year === month.year) {\n\t\t\t\treturn month;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(`month ${struct.month} of year ${struct.year} not found`);\n\t}\n\n\tprivate _nextState(patch: Partial<DatepickerViewModel>) {\n\t\tconst newState = this._updateState(patch);\n\t\tthis._patchContexts(newState);\n\t\tthis._state = newState;\n\t\tthis._model$.next(this._state);\n\t}\n\n\tprivate _patchContexts(state: DatepickerViewModel) {\n\t\tconst { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n\t\tstate.months.forEach((month) => {\n\t\t\tmonth.weeks.forEach((week) => {\n\t\t\t\tweek.days.forEach((day) => {\n\t\t\t\t\t// patch focus flag\n\t\t\t\t\tif (focusDate) {\n\t\t\t\t\t\tday.context.focused = focusDate.equals(day.date) && focusVisible;\n\t\t\t\t\t}\n\n\t\t\t\t\t// calculating tabindex\n\t\t\t\t\tday.tabindex =\n\t\t\t\t\t\t!disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n\t\t\t\t\t// override context disabled\n\t\t\t\t\tif (disabled === true) {\n\t\t\t\t\t\tday.context.disabled = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// patch selection flag\n\t\t\t\t\tif (selectedDate !== undefined) {\n\t\t\t\t\t\tday.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n\t\t\t\t\t}\n\n\t\t\t\t\t// visibility\n\t\t\t\t\tif (month.number !== day.date.month) {\n\t\t\t\t\t\tday.hidden =\n\t\t\t\t\t\t\toutsideDays === 'hidden' ||\n\t\t\t\t\t\t\toutsideDays === 'collapsed' ||\n\t\t\t\t\t\t\t(displayMonths > 1 &&\n\t\t\t\t\t\t\t\tday.date.after(months[0].firstDate) &&\n\t\t\t\t\t\t\t\tday.date.before(months[displayMonths - 1].lastDate));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n\t\t// patching fields\n\t\tconst state = Object.assign({}, this._state, patch);\n\n\t\tlet startDate = state.firstDate;\n\n\t\t// min/max dates changed\n\t\tif ('minDate' in patch || 'maxDate' in patch) {\n\t\t\tcheckMinBeforeMax(state.minDate, state.maxDate);\n\t\t\tstate.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n\t\t\tstate.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n\t\t\tstartDate = state.focusDate;\n\t\t}\n\n\t\t// disabled\n\t\tif ('disabled' in patch) {\n\t\t\tstate.focusVisible = false;\n\t\t}\n\n\t\t// initial rebuild via 'select()'\n\t\tif ('selectedDate' in patch && this._state.months.length === 0) {\n\t\t\tstartDate = state.selectedDate;\n\t\t}\n\n\t\t// terminate early if only focus visibility was changed\n\t\tif ('focusVisible' in patch) {\n\t\t\treturn state;\n\t\t}\n\n\t\t// focus date changed\n\t\tif ('focusDate' in patch) {\n\t\t\tstate.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n\t\t\tstartDate = state.focusDate;\n\n\t\t\t// nothing to rebuild if only focus changed and it is still visible\n\t\t\tif (\n\t\t\t\tstate.months.length !== 0 &&\n\t\t\t\tstate.focusDate &&\n\t\t\t\t!state.focusDate.before(state.firstDate) &&\n\t\t\t\t!state.focusDate.after(state.lastDate)\n\t\t\t) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// first date changed\n\t\tif ('firstDate' in patch) {\n\t\t\tstate.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n\t\t\tstartDate = state.firstDate;\n\t\t}\n\n\t\t// rebuilding months\n\t\tif (startDate) {\n\t\t\tconst forceRebuild =\n\t\t\t\t'dayTemplateData' in patch ||\n\t\t\t\t'firstDayOfWeek' in patch ||\n\t\t\t\t'markDisabled' in patch ||\n\t\t\t\t'minDate' in patch ||\n\t\t\t\t'maxDate' in patch ||\n\t\t\t\t'disabled' in patch ||\n\t\t\t\t'outsideDays' in patch ||\n\t\t\t\t'weekdaysVisible' in patch;\n\n\t\t\tconst months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n\t\t\t// updating months and boundary dates\n\t\t\tstate.months = months;\n\t\t\tstate.firstDate = months[0].firstDate;\n\t\t\tstate.lastDate = months[months.length - 1].lastDate;\n\n\t\t\t// reset selected date if 'markDisabled' returns true\n\t\t\tif ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n\t\t\t\tstate.selectedDate = null;\n\t\t\t}\n\n\t\t\t// adjusting focus after months were built\n\t\t\tif ('firstDate' in patch) {\n\t\t\t\tif (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n\t\t\t\t\tstate.focusDate = startDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// adjusting months/years for the select box navigation\n\t\t\tconst yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n\t\t\tconst monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\t\t\tif (state.navigation === 'select') {\n\t\t\t\t// years ->  boundaries (min/max were changed)\n\t\t\t\tif ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n\t\t\t\t\tstate.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n\t\t\t\t}\n\n\t\t\t\t// months -> when current year or boundaries change\n\t\t\t\tif ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n\t\t\t\t\tstate.selectBoxes.months = generateSelectBoxMonths(\n\t\t\t\t\t\tthis._calendar,\n\t\t\t\t\t\tstate.firstDate,\n\t\t\t\t\t\tstate.minDate,\n\t\t\t\t\t\tstate.maxDate,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate.selectBoxes = { years: [], months: [] };\n\t\t\t}\n\n\t\t\t// updating navigation arrows -> boundaries change (min/max) or month/year changes\n\t\t\tif (\n\t\t\t\t(state.navigation === 'arrows' || state.navigation === 'select') &&\n\t\t\t\t(monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)\n\t\t\t) {\n\t\t\t\tstate.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n\t\t\t\tstate.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n}\n","import { NgbDate } from './ngb-date';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { DayTemplateContext } from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current?: { year: number; month: number }) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current?: { year: number; month: number }) => any;\n\nexport type DayViewModel = {\n\tdate: NgbDate;\n\tcontext: DayTemplateContext;\n\ttabindex: number;\n\tariaLabel: string;\n\thidden: boolean;\n};\n\nexport type WeekViewModel = {\n\tnumber: number;\n\tdays: DayViewModel[];\n\tcollapsed: boolean;\n};\n\nexport type MonthViewModel = {\n\tfirstDate: NgbDate;\n\tlastDate: NgbDate;\n\tnumber: number;\n\tyear: number;\n\tweeks: WeekViewModel[];\n\tweekdays: string[];\n};\n\nexport type DatepickerViewModel = {\n\tdayTemplateData: NgbDayTemplateData | null;\n\tdisabled: boolean;\n\tdisplayMonths: number;\n\tfirstDate: NgbDate | null;\n\tfirstDayOfWeek: number;\n\tfocusDate: NgbDate | null;\n\tfocusVisible: boolean;\n\tlastDate: NgbDate | null;\n\tmarkDisabled: NgbMarkDisabled | null;\n\tmaxDate: NgbDate | null;\n\tminDate: NgbDate | null;\n\tmonths: MonthViewModel[];\n\tnavigation: 'select' | 'arrows' | 'none';\n\toutsideDays: 'visible' | 'collapsed' | 'hidden';\n\tprevDisabled: boolean;\n\tnextDisabled: boolean;\n\tselectBoxes: {\n\t\tyears: number[];\n\t\tmonths: number[];\n\t};\n\tselectedDate: NgbDate | null;\n\tweekdayWidth: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined>;\n\tweekdaysVisible: boolean;\n};\n\nexport enum NavigationEvent {\n\tPREV,\n\tNEXT,\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { DayTemplateContext } from './datepicker-day-template-context';\nimport { NgbDateStruct } from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbDatepickerConfig {\n\tdayTemplate: TemplateRef<DayTemplateContext>;\n\tdayTemplateData: (date: NgbDateStruct, current?: { year: number; month: number }) => any;\n\tfooterTemplate: TemplateRef<any>;\n\tdisplayMonths = 1;\n\tfirstDayOfWeek = 1;\n\tmarkDisabled: (date: NgbDateStruct, current?: { year: number; month: number }) => boolean;\n\tminDate: NgbDateStruct;\n\tmaxDate: NgbDateStruct;\n\tnavigation: 'select' | 'arrows' | 'none' = 'select';\n\toutsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n\tshowWeekNumbers = false;\n\tstartDate: { year: number; month: number; day?: number };\n\tweekdays: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined> | boolean = 'narrow';\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateStruct } from '../ngb-date-struct';\nimport { isInteger } from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n\treturn new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY })\nexport abstract class NgbDateAdapter<D> {\n\t/**\n\t * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n\t */\n\tabstract fromModel(value: D | null): NgbDateStruct | null;\n\n\t/**\n\t * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n\t */\n\tabstract toModel(date: NgbDateStruct | null): D | null;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n\t/**\n\t * Converts a NgbDateStruct value into NgbDateStruct value\n\t */\n\tfromModel(date: NgbDateStruct | null): NgbDateStruct | null {\n\t\treturn date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n\t\t\t? { year: date.year, month: date.month, day: date.day }\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Converts a NgbDateStruct value into NgbDateStruct value\n\t */\n\ttoModel(date: NgbDateStruct | null): NgbDateStruct | null {\n\t\treturn date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n\t\t\t? { year: date.year, month: date.month, day: date.day }\n\t\t\t: null;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDatepicker } from './datepicker';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbDatepickerKeyboardService {\n\t/**\n\t * Processes a keyboard event.\n\t */\n\tprocessKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n\t\tconst { state, calendar } = datepicker;\n\t\tswitch (event.key) {\n\t\t\tcase 'PageUp':\n\t\t\t\tdatepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n\t\t\t\tbreak;\n\t\t\tcase 'PageDown':\n\t\t\t\tdatepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n\t\t\t\tbreak;\n\t\t\tcase 'End':\n\t\t\t\tdatepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n\t\t\t\tbreak;\n\t\t\tcase 'Home':\n\t\t\t\tdatepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowLeft':\n\t\t\t\tdatepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowUp':\n\t\t\t\tdatepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowRight':\n\t\t\t\tdatepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown':\n\t\t\t\tdatepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n\t\t\t\tbreak;\n\t\t\tcase 'Enter':\n\t\t\tcase ' ':\n\t\t\t\tdatepicker.focusSelect();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n}\n","import { ChangeDetectionStrategy, Component, inject, Input, ViewEncapsulation } from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n\n@Component({\n\tselector: '[ngbDatepickerDayView]',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './datepicker-day-view.scss',\n\thost: {\n\t\tclass: 'btn-light',\n\t\t'[class.bg-primary]': 'selected',\n\t\t'[class.text-white]': 'selected',\n\t\t'[class.text-muted]': 'isMuted()',\n\t\t'[class.outside]': 'isMuted()',\n\t\t'[class.active]': 'focused',\n\t},\n\ttemplate: `{{ i18n.getDayNumerals(date) }}`,\n})\nexport class NgbDatepickerDayView {\n\ti18n = inject(NgbDatepickerI18n);\n\n\t@Input() currentMonth: number;\n\t@Input() date: NgbDate;\n\t@Input() disabled: boolean;\n\t@Input() focused: boolean;\n\t@Input() selected: boolean;\n\n\tisMuted() {\n\t\treturn !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n\t}\n}\n","import {\n\tAfterViewChecked,\n\tChangeDetectionStrategy,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInput,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { toInteger } from '../util/util';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n\n@Component({\n\tselector: 'ngb-datepicker-navigation-select',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './datepicker-navigation-select.scss',\n\ttemplate: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t@for (m of months; track m) {\n\t\t\t\t<option [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t\t}}</option>\n\t\t\t}</select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t@for (y of years; track y) {\n\t\t\t\t<option [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t\t}\n\t\t</select>\n\t`,\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n\tprivate _month = -1;\n\tprivate _year = -1;\n\n\ti18n = inject(NgbDatepickerI18n);\n\n\t@Input() date: NgbDate;\n\t@Input() disabled: boolean;\n\t@Input() months: number[];\n\t@Input() years: number[];\n\n\t@Output() select = new EventEmitter<NgbDate>();\n\n\t@ViewChild('month', { static: true, read: ElementRef }) monthSelect: ElementRef<HTMLSelectElement>;\n\t@ViewChild('year', { static: true, read: ElementRef }) yearSelect: ElementRef<HTMLSelectElement>;\n\n\tchangeMonth(month: string) {\n\t\tthis.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n\t}\n\n\tchangeYear(year: string) {\n\t\tthis.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n\t}\n\n\tngAfterViewChecked() {\n\t\tif (this.date) {\n\t\t\tif (this.date.month !== this._month) {\n\t\t\t\tthis._month = this.date.month;\n\t\t\t\tthis.monthSelect.nativeElement.value = `${this._month}`;\n\t\t\t}\n\t\t\tif (this.date.year !== this._year) {\n\t\t\t\tthis._year = this.date.year;\n\t\t\t\tthis.yearSelect.nativeElement.value = `${this._year}`;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tChangeDetectionStrategy,\n\tComponent,\n\tEventEmitter,\n\tinject,\n\tInput,\n\tOutput,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { MonthViewModel, NavigationEvent } from './datepicker-view-model';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nimport { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';\n\n@Component({\n\tselector: 'ngb-datepicker-navigation',\n\timports: [NgbDatepickerNavigationSelect],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './datepicker-navigation.scss',\n\ttemplate: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t@if (showSelect) {\n\t\t\t<ngb-datepicker-navigation-select\n\t\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t\t(select)=\"select.emit($event)\"\n\t\t\t/>\n\t\t}\n\n\t\t@if (!showSelect) {\n\t\t\t@for (month of months; track month; let i = $index) {\n\t\t\t\t@if (i > 0) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t@if (i !== months.length - 1) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`,\n})\nexport class NgbDatepickerNavigation {\n\tnavigation = NavigationEvent;\n\n\ti18n = inject(NgbDatepickerI18n);\n\n\t@Input() date: NgbDate;\n\t@Input() disabled: boolean;\n\t@Input() months: MonthViewModel[] = [];\n\t@Input() showSelect: boolean;\n\t@Input() prevDisabled: boolean;\n\t@Input() nextDisabled: boolean;\n\t@Input() selectBoxes: { years: number[]; months: number[] };\n\n\t@Output() navigate = new EventEmitter<NavigationEvent>();\n\t@Output() select = new EventEmitter<NgbDate>();\n\n\tonClickPrev(event: MouseEvent) {\n\t\t(event.currentTarget as HTMLElement).focus();\n\t\tthis.navigate.emit(this.navigation.PREV);\n\t}\n\n\tonClickNext(event: MouseEvent) {\n\t\t(event.currentTarget as HTMLElement).focus();\n\t\tthis.navigate.emit(this.navigation.NEXT);\n\t}\n}\n","import { fromEvent, merge } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport {\n\tafterNextRender,\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tContentChild,\n\tDestroyRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewChild,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { DatepickerServiceInputs, NgbDatepickerService } from './datepicker-service';\nimport { DatepickerViewModel, DayViewModel, MonthViewModel, NavigationEvent } from './datepicker-view-model';\nimport { DayTemplateContext } from './datepicker-day-template-context';\nimport { NgbDatepickerConfig } from './datepicker-config';\nimport { NgbDateAdapter } from './adapters/ngb-date-adapter';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nimport { NgbDatepickerKeyboardService } from './datepicker-keyboard-service';\nimport { isChangedDate, isChangedMonth } from './datepicker-tools';\nimport { NgbDatepickerDayView } from './datepicker-day-view';\nimport { NgbDatepickerNavigation } from './datepicker-navigation';\nimport { ContentTemplateContext } from './datepicker-content-template-context';\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n\t/**\n\t * The currently displayed month.\n\t */\n\tcurrent: { year: number; month: number } | null;\n\n\t/**\n\t * The month we're navigating to.\n\t */\n\tnext: { year: number; month: number };\n\n\t/**\n\t * Calling this function will prevent navigation from happening.\n\t *\n\t * @since 4.1.0\n\t */\n\tpreventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n\t/**\n\t * The earliest date that can be displayed or selected\n\t */\n\treadonly minDate: NgbDate | null;\n\n\t/**\n\t * The latest date that can be displayed or selected\n\t */\n\treadonly maxDate: NgbDate | null;\n\n\t/**\n\t * The first visible date of currently displayed months\n\t */\n\treadonly firstDate: NgbDate;\n\n\t/**\n\t * The last visible date of currently displayed months\n\t */\n\treadonly lastDate: NgbDate;\n\n\t/**\n\t * The date currently focused by the datepicker\n\t */\n\treadonly focusedDate: NgbDate;\n\n\t/**\n\t * First dates of months currently displayed by the datepicker\n\t *\n\t * @since 5.3.0\n\t */\n\treadonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({ selector: 'ng-template[ngbDatepickerContent]', standalone: true })\nexport class NgbDatepickerContent {\n\ttemplateRef = inject(TemplateRef);\n}\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n\tselector: 'ngb-datepicker-month',\n\timports: [NgTemplateOutlet],\n\thost: {\n\t\trole: 'grid',\n\t\t'(keydown)': 'onKeyDown($event)',\n\t},\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './datepicker-month.scss',\n\ttemplate: `\n\t\t@if (viewModel.weekdays.length > 0) {\n\t\t\t<div class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n\t\t\t\t}\n\t\t\t\t@for (weekday of viewModel.weekdays; track $index) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t}\n\t\t@for (week of viewModel.weeks; track week) {\n\t\t\t@if (!week.collapsed) {\n\t\t\t\t<div class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t\t<div class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n\t\t\t\t\t}\n\t\t\t\t\t@for (day of week.days; track day) {\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (!day.hidden) {\n\t\t\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`,\n})\nexport class NgbDatepickerMonth {\n\tprivate _keyboardService = inject(NgbDatepickerKeyboardService);\n\tprivate _service = inject(NgbDatepickerService);\n\n\ti18n = inject(NgbDatepickerI18n);\n\tdatepicker = inject(NgbDatepicker);\n\n\tviewModel: MonthViewModel;\n\n\t/**\n\t * The first date of month to be rendered.\n\t *\n\t * This month must one of the months present in the\n\t * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n\t */\n\t@Input()\n\tset month(month: NgbDateStruct) {\n\t\tthis.viewModel = this._service.getMonth(month);\n\t}\n\n\tonKeyDown(event: KeyboardEvent) {\n\t\tthis._keyboardService.processKey(event, this.datepicker);\n\t}\n\n\tdoSelect(day: DayViewModel) {\n\t\tif (!day.context.disabled && !day.hidden) {\n\t\t\tthis.datepicker.onDateSelect(day.date);\n\t\t}\n\t}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n\texportAs: 'ngbDatepicker',\n\tselector: 'ngb-datepicker',\n\timports: [NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './datepicker.scss',\n\thost: {\n\t\t'[class.disabled]': 'model.disabled',\n\t},\n\ttemplate: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t@for (month of model.months; track month) {\n\t\t\t\t<div class=\"ngb-dp-month\">\n\t\t\t\t\t@if (navigation === 'none' || (displayMonths > 1 && navigation === 'select')) {\n\t\t\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t@if (navigation !== 'none') {\n\t\t\t\t<ngb-datepicker-navigation\n\t\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t\t[months]=\"model.months\"\n\t\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\" />\n\t`,\n\tproviders: [\n\t\t{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n\t\tNgbDatepickerService,\n\t],\n})\nexport class NgbDatepicker implements AfterViewInit, OnChanges, OnInit, ControlValueAccessor {\n\tstatic ngAcceptInputType_autoClose: boolean | string;\n\tstatic ngAcceptInputType_navigation: string;\n\tstatic ngAcceptInputType_outsideDays: string;\n\tstatic ngAcceptInputType_weekdays: boolean | string;\n\n\tmodel: DatepickerViewModel;\n\n\t@ViewChild('defaultDayTemplate', { static: true }) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n\t@ViewChild('content', { static: true }) private _contentEl: ElementRef<HTMLElement>;\n\n\tprotected injector = inject(Injector);\n\n\tprivate _service = inject(NgbDatepickerService);\n\tprivate _calendar = inject(NgbCalendar);\n\tprivate _i18n = inject(NgbDatepickerI18n);\n\tprivate _config = inject(NgbDatepickerConfig);\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\tprivate _ngbDateAdapter = inject(NgbDateAdapter<any>);\n\tprivate _ngZone = inject(NgZone);\n\tprivate _destroyRef = inject(DestroyRef);\n\tprivate _injector = inject(Injector);\n\n\tprivate _controlValue: NgbDate | null = null;\n\tprivate _publicState: NgbDatepickerState = <any>{};\n\tprivate _initialized = false;\n\n\t/**\n\t * The reference to a custom content template.\n\t *\n\t * Allows to completely override the way datepicker displays months.\n\t *\n\t * See [`NgbDatepickerContent`](#/components/datepicker/api#NgbDatepickerContent) and\n\t * [`ContentTemplateContext`](#/components/datepicker/api#ContentTemplateContext) for more details.\n\t *\n\t * @since 14.2.0\n\t */\n\t@Input() contentTemplate: TemplateRef<ContentTemplateContext>;\n\t@ContentChild(NgbDatepickerContent, { static: true }) contentTemplateFromContent?: NgbDatepickerContent;\n\n\t/**\n\t * The reference to a custom template for the day.\n\t *\n\t * Allows to completely override the way a day 'cell' in the calendar is displayed.\n\t *\n\t * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n\t */\n\t@Input() dayTemplate = this._config.dayTemplate;\n\n\t/**\n\t * The callback to pass any arbitrary data to the template cell via the\n\t * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n\t *\n\t * `current` is the month that is currently displayed by the datepicker.\n\t *\n\t * @since 3.3.0\n\t */\n\t@Input() dayTemplateData = this._config.dayTemplateData;\n\n\t/**\n\t * The number of months to display.\n\t */\n\t@Input() displayMonths = this._config.displayMonths;\n\n\t/**\n\t * The first day of the week.\n\t *\n\t * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n\t */\n\t@Input() firstDayOfWeek = this._config.firstDayOfWeek;\n\n\t/**\n\t * The reference to the custom template for the datepicker footer.\n\t *\n\t * @since 3.3.0\n\t */\n\t@Input() footerTemplate = this._config.footerTemplate;\n\n\t/**\n\t * The callback to mark some dates as disabled.\n\t *\n\t * It is called for each new date when navigating to a different month.\n\t *\n\t * `current` is the month that is currently displayed by the datepicker.\n\t */\n\t@Input() markDisabled = this._config.markDisabled;\n\n\t/**\n\t * The latest date that can be displayed or selected.\n\t *\n\t * If not provided, 'year' select box will display 10 years after the current month.\n\t */\n\t@Input() maxDate = this._config.maxDate;\n\n\t/**\n\t * The earliest date that can be displayed or selected.\n\t *\n\t * If not provided, 'year' select box will display 10 years before the current month.\n\t */\n\t@Input() minDate = this._config.minDate;\n\n\t/**\n\t * Navigation type.\n\t *\n\t * * `\"select\"` - select boxes for month and navigation arrows\n\t * * `\"arrows\"` - only navigation arrows\n\t * * `\"none\"` - no navigation visible at all\n\t */\n\t@Input() navigation = this._config.navigation;\n\n\t/**\n\t * The way of displaying days that don't belong to the current month.\n\t *\n\t * * `\"visible\"` - days are visible\n\t * * `\"hidden\"` - days are hidden, white space preserved\n\t * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n\t *\n\t * For the 2+ months view, days in between months are never shown.\n\t */\n\t@Input() outsideDays = this._config.outsideDays;\n\n\t/**\n\t * If `true`, week numbers will be displayed.\n\t */\n\t@Input() showWeekNumbers = this._config.showWeekNumbers;\n\n\t/**\n\t * The date to open calendar with.\n\t *\n\t * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t * If nothing or invalid date is provided, calendar will open with current month.\n\t *\n\t * You could use `navigateTo(date)` method as an alternative.\n\t */\n\t@Input() startDate = this._config.startDate;\n\n\t/**\n\t * The way weekdays should be displayed.\n\t *\n\t * * `true` - weekdays are displayed using default width\n\t * * `false` - weekdays are not displayed\n\t * * `\"short\" | \"long\" | \"narrow\"` - weekdays are displayed using specified width\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() weekdays = this._config.weekdays;\n\n\t/**\n\t * An event emitted right before the navigation happens and displayed month changes.\n\t *\n\t * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n\t */\n\t@Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n\t/**\n\t * An event emitted when user selects a date using keyboard or mouse.\n\t *\n\t * The payload of the event is currently selected `NgbDate`.\n\t *\n\t * @since 5.2.0\n\t */\n\t@Output() dateSelect = new EventEmitter<NgbDate>();\n\n\tonChange = (_: any) => {};\n\tonTouched = () => {};\n\n\tconstructor() {\n\t\tconst cd = inject(ChangeDetectorRef);\n\n\t\tthis._service.dateSelect$.pipe(takeUntilDestroyed()).subscribe((date) => {\n\t\t\tthis.dateSelect.emit(date);\n\t\t});\n\n\t\tthis._service.model$.pipe(takeUntilDestroyed()).subscribe((model) => {\n\t\t\tconst newDate = model.firstDate!;\n\t\t\tconst oldDate = this.model ? this.model.firstDate : null;\n\n\t\t\t// update public state\n\t\t\tthis._publicState = {\n\t\t\t\tmaxDate: model.maxDate,\n\t\t\t\tminDate: model.minDate,\n\t\t\t\tfirstDate: model.firstDate!,\n\t\t\t\tlastDate: model.lastDate!,\n\t\t\t\tfocusedDate: model.focusDate!,\n\t\t\t\tmonths: model.months.map((viewModel) => viewModel.firstDate),\n\t\t\t};\n\n\t\t\tlet navigationPrevented = false;\n\t\t\t// emitting navigation event if the first month changes\n\t\t\tif (!newDate.equals(oldDate)) {\n\t\t\t\tthis.navigate.emit({\n\t\t\t\t\tcurrent: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n\t\t\t\t\tnext: { year: newDate.year, month: newDate.month },\n\t\t\t\t\tpreventDefault: () => (navigationPrevented = true),\n\t\t\t\t});\n\n\t\t\t\t// can't prevent the very first navigation\n\t\t\t\tif (navigationPrevented && oldDate !== null) {\n\t\t\t\t\tthis._service.open(oldDate);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst newSelectedDate = model.selectedDate;\n\t\t\tconst newFocusedDate = model.focusDate;\n\t\t\tconst oldFocusedDate = this.model ? this.model.focusDate : null;\n\n\t\t\tthis.model = model;\n\n\t\t\t// handling selection change\n\t\t\tif (isChangedDate(newSelectedDate, this._controlValue)) {\n\t\t\t\tthis._controlValue = newSelectedDate;\n\t\t\t\tthis.onTouched();\n\t\t\t\tthis.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n\t\t\t}\n\n\t\t\t// handling focus change\n\t\t\tif (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\tcd.markForCheck();\n\t\t});\n\t}\n\n\t/**\n\t *  Returns the readonly public state of the datepicker\n\t *\n\t * @since 5.2.0\n\t */\n\tget state(): NgbDatepickerState {\n\t\treturn this._publicState;\n\t}\n\n\t/**\n\t *  Returns the calendar service used in the specific datepicker instance.\n\t *\n\t *  @since 5.3.0\n\t */\n\tget calendar(): NgbCalendar {\n\t\treturn this._calendar;\n\t}\n\n\t/**\n\t * Returns the i18n service used in the specific datepicker instance.\n\t *\n\t * @since 14.2.0\n\t */\n\tget i18n(): NgbDatepickerI18n {\n\t\treturn this._i18n;\n\t}\n\n\t/**\n\t *  Focuses on given date.\n\t */\n\tfocusDate(date?: NgbDateStruct | null): void {\n\t\tthis._service.focus(NgbDate.from(date));\n\t}\n\n\t/**\n\t *  Selects focused date.\n\t */\n\tfocusSelect(): void {\n\t\tthis._service.focusSelect();\n\t}\n\n\tfocus() {\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\tread: () => {\n\t\t\t\t\tthis._nativeElement.querySelector<HTMLElement>('div.ngb-dp-day[tabindex=\"0\"]')?.focus();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ injector: this._injector },\n\t\t);\n\t}\n\n\t/**\n\t * Navigates to the provided date.\n\t *\n\t * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t * If nothing or invalid date provided calendar will open current month.\n\t *\n\t * Use the `[startDate]` input as an alternative.\n\t */\n\tnavigateTo(date?: { year: number; month: number; day?: number }) {\n\t\tthis._service.open(NgbDate.from(date ? (date.day ? (date as NgbDateStruct) : { ...date, day: 1 }) : null));\n\t}\n\n\tngAfterViewInit() {\n\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\tconst focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n\t\t\tconst focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n\n\t\t\t// we're changing 'focusVisible' only when entering or leaving months view\n\t\t\t// and ignoring all focus events where both 'target' and 'related' target are day cells\n\t\t\tmerge(focusIns$, focusOuts$)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter((focusEvent) => {\n\t\t\t\t\t\tconst target = focusEvent.target as HTMLElement | null;\n\t\t\t\t\t\tconst relatedTarget = focusEvent.relatedTarget as HTMLElement | null;\n\n\t\t\t\t\t\treturn !(\n\t\t\t\t\t\t\ttarget?.classList.contains('ngb-dp-day') &&\n\t\t\t\t\t\t\trelatedTarget?.classList.contains('ngb-dp-day') &&\n\t\t\t\t\t\t\tthis._nativeElement.contains(target) &&\n\t\t\t\t\t\t\tthis._nativeElement.contains(relatedTarget)\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t\ttakeUntilDestroyed(this._destroyRef),\n\t\t\t\t)\n\t\t\t\t.subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tif (this.model === undefined) {\n\t\t\tconst inputs: DatepickerServiceInputs = {};\n\t\t\t[\n\t\t\t\t'dayTemplateData',\n\t\t\t\t'displayMonths',\n\t\t\t\t'markDisabled',\n\t\t\t\t'firstDayOfWeek',\n\t\t\t\t'navigation',\n\t\t\t\t'minDate',\n\t\t\t\t'maxDate',\n\t\t\t\t'outsideDays',\n\t\t\t\t'weekdays',\n\t\t\t].forEach((name) => (inputs[name] = this[name]));\n\t\t\tthis._service.set(inputs);\n\n\t\t\tthis.navigateTo(this.startDate);\n\t\t}\n\t\tif (!this.dayTemplate) {\n\t\t\tthis.dayTemplate = this._defaultDayTemplate;\n\t\t}\n\t\tthis._initialized = true;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst inputs: DatepickerServiceInputs = {};\n\t\t[\n\t\t\t'dayTemplateData',\n\t\t\t'displayMonths',\n\t\t\t'markDisabled',\n\t\t\t'firstDayOfWeek',\n\t\t\t'navigation',\n\t\t\t'minDate',\n\t\t\t'maxDate',\n\t\t\t'outsideDays',\n\t\t\t'weekdays',\n\t\t]\n\t\t\t.filter((name) => name in changes)\n\t\t\t.forEach((name) => (inputs[name] = this[name]));\n\t\tthis._service.set(inputs);\n\n\t\tif ('startDate' in changes && this._initialized) {\n\t\t\tconst { currentValue, previousValue } = changes.startDate;\n\t\t\tif (isChangedMonth(previousValue, currentValue)) {\n\t\t\t\tthis.navigateTo(this.startDate);\n\t\t\t}\n\t\t}\n\t}\n\n\tonDateSelect(date: NgbDate) {\n\t\tthis._service.focus(date);\n\t\tthis._service.select(date, { emitEvent: true });\n\t}\n\n\tonNavigateDateSelect(date: NgbDate) {\n\t\tthis._service.open(date);\n\t}\n\n\tonNavigateEvent(event: NavigationEvent) {\n\t\tswitch (event) {\n\t\t\tcase NavigationEvent.PREV:\n\t\t\t\tthis._service.open(this._calendar.getPrev(this.model.firstDate!, 'm', 1));\n\t\t\t\tbreak;\n\t\t\tcase NavigationEvent.NEXT:\n\t\t\t\tthis._service.open(this._calendar.getNext(this.model.firstDate!, 'm', 1));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tregisterOnChange(fn: (value: any) => any): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => any): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(disabled: boolean) {\n\t\tthis._service.set({ disabled });\n\t}\n\n\twriteValue(value) {\n\t\tthis._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\t\tthis._service.select(this._controlValue);\n\t}\n}\n","import { NgZone } from '@angular/core';\nimport { fromEvent, Observable, race } from 'rxjs';\nimport { delay, filter, map, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\nimport { closest } from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n\tarray ? array.some((item) => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n\t!selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n\tconst isIOS = () =>\n\t\t/iPad|iPhone|iPod/.test(navigator.userAgent) ||\n\t\t(/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n\tconst isAndroid = () => /Android/.test(navigator.userAgent);\n\n\treturn typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = (fn) => (isMobile ? () => setTimeout(() => fn(), 100) : fn);\n\nexport const enum SOURCE {\n\tESCAPE,\n\tCLICK,\n}\n\nexport function ngbAutoClose(\n\tzone: NgZone,\n\tdocument: any,\n\ttype: boolean | 'inside' | 'outside',\n\tclose: (source: SOURCE) => void,\n\tclosed$: Observable<any>,\n\tinsideElements: HTMLElement[],\n\tignoreElements?: HTMLElement[],\n\tinsideSelector?: string,\n) {\n\t// closing on ESC and outside clicks\n\tif (type) {\n\t\tzone.runOutsideAngular(\n\t\t\twrapAsyncForMobile(() => {\n\t\t\t\tconst shouldCloseOnClick = (event: MouseEvent) => {\n\t\t\t\t\tconst element = event.target as HTMLElement;\n\t\t\t\t\tif (event.button === 2 || isContainedIn(element, ignoreElements)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 'inside') {\n\t\t\t\t\t\treturn isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n\t\t\t\t\t} else if (type === 'outside') {\n\t\t\t\t\t\treturn !isContainedIn(element, insideElements);\n\t\t\t\t\t} /* if (type === true) */ else {\n\t\t\t\t\t\treturn matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst escapes$ = fromEvent<KeyboardEvent>(document, 'keydown').pipe(\n\t\t\t\t\ttakeUntil(closed$),\n\t\t\t\t\tfilter((e) => e.key === 'Escape'),\n\t\t\t\t\ttap((e) => e.preventDefault()),\n\t\t\t\t);\n\n\t\t\t\t// we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n\t\t\t\t// because on 'mouseup' DOM nodes might be detached\n\t\t\t\tconst mouseDowns$ = fromEvent<MouseEvent>(document, 'mousedown').pipe(\n\t\t\t\t\tmap(shouldCloseOnClick),\n\t\t\t\t\ttakeUntil(closed$),\n\t\t\t\t);\n\n\t\t\t\tconst closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup').pipe(\n\t\t\t\t\twithLatestFrom(mouseDowns$),\n\t\t\t\t\tfilter(([_, shouldClose]) => shouldClose),\n\t\t\t\t\tdelay(0),\n\t\t\t\t\ttakeUntil(closed$),\n\t\t\t\t) as Observable<MouseEvent>;\n\n\t\t\t\trace([escapes$.pipe(map((_) => SOURCE.ESCAPE)), closeableClicks$.pipe(map((_) => SOURCE.CLICK))]).subscribe(\n\t\t\t\t\t(source: SOURCE) => zone.run(() => close(source)),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n}\n","import { NgZone } from '@angular/core';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { filter, map, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nexport const FOCUSABLE_ELEMENTS_SELECTOR = [\n\t'a[href]',\n\t'button:not([disabled])',\n\t'input:not([disabled]):not([type=\"hidden\"])',\n\t'select:not([disabled])',\n\t'textarea:not([disabled])',\n\t'[contenteditable]',\n\t'[tabindex]:not([tabindex=\"-1\"])',\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n\tconst list: HTMLElement[] = Array.from(\n\t\telement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>,\n\t).filter((el) => el.tabIndex !== -1);\n\treturn [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap = (\n\tzone: NgZone,\n\telement: HTMLElement,\n\tstopFocusTrap$: Observable<any>,\n\trefocusOnClick = false,\n) => {\n\tzone.runOutsideAngular(() => {\n\t\t// last focused element\n\t\tconst lastFocusedElement$ = fromEvent<FocusEvent>(element, 'focusin').pipe(\n\t\t\ttakeUntil(stopFocusTrap$),\n\t\t\tmap((e) => e.target),\n\t\t);\n\n\t\t// 'tab' / 'shift+tab' stream\n\t\tfromEvent<KeyboardEvent>(element, 'keydown')\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(stopFocusTrap$),\n\t\t\t\tfilter((e) => e.key === 'Tab'),\n\t\t\t\twithLatestFrom(lastFocusedElement$),\n\t\t\t)\n\t\t\t.subscribe(([tabEvent, focusedElement]) => {\n\t\t\t\tconst [first, last] = getFocusableBoundaryElements(element);\n\n\t\t\t\tif ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n\t\t\t\t\tlast.focus();\n\t\t\t\t\ttabEvent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tif (focusedElement === last && !tabEvent.shiftKey) {\n\t\t\t\t\tfirst.focus();\n\t\t\t\t\ttabEvent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\n\t\t// inside click\n\t\tif (refocusOnClick) {\n\t\t\tfromEvent(element, 'click')\n\t\t\t\t.pipe(\n\t\t\t\t\ttakeUntil(stopFocusTrap$),\n\t\t\t\t\twithLatestFrom(lastFocusedElement$),\n\t\t\t\t\tmap((arr) => arr[1] as HTMLElement),\n\t\t\t\t)\n\t\t\t\t.subscribe((lastFocusedElement) => lastFocusedElement.focus());\n\t\t}\n\t});\n};\n","import { inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({ providedIn: 'root' })\nexport class NgbRTL {\n\tprivate _element = inject(DOCUMENT).documentElement;\n\n\tisRTL() {\n\t\treturn (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n\t}\n}\n","import {\n\tarrow,\n\tcreatePopperLite,\n\tflip,\n\tInstance,\n\tModifier,\n\tPlacement as PopperPlacement,\n\tpreventOverflow,\n\tOptions,\n} from '@popperjs/core';\nimport { NgbRTL } from './rtl';\nimport { inject } from '@angular/core';\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\nconst bootstrapPopperMatches = {\n\ttop: ['top'],\n\tbottom: ['bottom'],\n\tstart: ['left', 'right'],\n\tleft: ['left'],\n\tend: ['right', 'left'],\n\tright: ['right'],\n\t'top-start': ['top-start', 'top-end'],\n\t'top-left': ['top-start'],\n\t'top-end': ['top-end', 'top-start'],\n\t'top-right': ['top-end'],\n\t'bottom-start': ['bottom-start', 'bottom-end'],\n\t'bottom-left': ['bottom-start'],\n\t'bottom-end': ['bottom-end', 'bottom-start'],\n\t'bottom-right': ['bottom-end'],\n\t'start-top': ['left-start', 'right-start'],\n\t'left-top': ['left-start'],\n\t'start-bottom': ['left-end', 'right-end'],\n\t'left-bottom': ['left-end'],\n\t'end-top': ['right-start', 'left-start'],\n\t'right-top': ['right-start'],\n\t'end-bottom': ['right-end', 'left-end'],\n\t'right-bottom': ['right-end'],\n};\n\nexport function getPopperClassPlacement(placement: Placement, isRTL: boolean): PopperPlacement {\n\tconst [leftClass, rightClass] = bootstrapPopperMatches[placement];\n\treturn isRTL ? rightClass || leftClass : leftClass;\n}\n\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nexport function getBootstrapBaseClassPlacement(baseClass: string, placement: PopperPlacement): string {\n\tlet [primary, secondary] = placement.split('-');\n\tconst newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n\tlet classnames = [newPrimary];\n\tif (secondary) {\n\t\tlet newSecondary = secondary;\n\t\tif (primary === 'left' || primary === 'right') {\n\t\t\tnewSecondary = newSecondary\n\t\t\t\t.replace(popperStartSecondaryPlacement, 'top')\n\t\t\t\t.replace(popperEndSecondaryPlacement, 'bottom');\n\t\t}\n\t\tclassnames.push(`${newPrimary}-${newSecondary}` as Placement);\n\t}\n\tif (baseClass) {\n\t\tclassnames = classnames.map((classname) => `${baseClass}-${classname}`);\n\t}\n\treturn classnames.join(' ');\n}\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nexport function getPopperOptions({ placement, baseClass }: PositioningOptions, rtl: NgbRTL): Partial<Options> {\n\tlet placementVals: Array<Placement> = Array.isArray(placement)\n\t\t? placement\n\t\t: (placement.split(placementSeparator) as Array<Placement>);\n\n\t// No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n\tconst allowedPlacements = [\n\t\t'top',\n\t\t'bottom',\n\t\t'start',\n\t\t'end',\n\t\t'top-start',\n\t\t'top-end',\n\t\t'bottom-start',\n\t\t'bottom-end',\n\t\t'start-top',\n\t\t'start-bottom',\n\t\t'end-top',\n\t\t'end-bottom',\n\t];\n\n\t// replace auto placement with other placements\n\tlet hasAuto = placementVals.findIndex((val) => val === 'auto');\n\tif (hasAuto >= 0) {\n\t\tallowedPlacements.forEach(function (obj) {\n\t\t\tif (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n\t\t\t\tplacementVals.splice(hasAuto++, 1, obj as Placement);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst popperPlacements = placementVals.map((_placement) => {\n\t\treturn getPopperClassPlacement(_placement, rtl.isRTL());\n\t});\n\n\tlet mainPlacement = popperPlacements.shift();\n\n\tconst bsModifier: Partial<Modifier<any, any>> = {\n\t\tname: 'bootstrapClasses',\n\t\tenabled: !!baseClass,\n\t\tphase: 'write',\n\t\tfn({ state }) {\n\t\t\tconst bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n\n\t\t\tconst popperElement: HTMLElement = state.elements.popper as HTMLElement;\n\t\t\tconst popperPlacement = state.placement;\n\n\t\t\tlet className = popperElement.className;\n\n\t\t\t// Remove old bootstrap classes\n\t\t\tclassName = className.replace(bsClassRegExp, '');\n\n\t\t\t// Add current placements\n\t\t\tclassName += ` ${getBootstrapBaseClassPlacement(baseClass!, popperPlacement)}`;\n\n\t\t\t// Remove multiple spaces\n\t\t\tclassName = className.trim().replace(spacesRegExp, ' ');\n\n\t\t\t// Reassign\n\t\t\tpopperElement.className = className;\n\t\t},\n\t};\n\n\treturn {\n\t\tplacement: mainPlacement,\n\t\tmodifiers: [\n\t\t\tbsModifier,\n\t\t\tflip,\n\t\t\tpreventOverflow,\n\t\t\tarrow,\n\t\t\t{\n\t\t\t\tenabled: true,\n\t\t\t\tname: 'flip',\n\t\t\t\toptions: {\n\t\t\t\t\tfallbackPlacements: popperPlacements,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n}\n\nexport type Placement =\n\t| 'auto'\n\t| 'top'\n\t| 'bottom'\n\t| 'start'\n\t| 'left'\n\t| 'end'\n\t| 'right'\n\t| 'top-start'\n\t| 'top-left'\n\t| 'top-end'\n\t| 'top-right'\n\t| 'bottom-start'\n\t| 'bottom-left'\n\t| 'bottom-end'\n\t| 'bottom-right'\n\t| 'start-top'\n\t| 'left-top'\n\t| 'start-bottom'\n\t| 'left-bottom'\n\t| 'end-top'\n\t| 'right-top'\n\t| 'end-bottom'\n\t| 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement> | string;\n\ninterface PositioningOptions {\n\thostElement: HTMLElement;\n\ttargetElement: HTMLElement;\n\tplacement: string | Placement | PlacementArray;\n\tbaseClass?: string;\n\tupdatePopperOptions?: (options: Partial<Options>) => Partial<Options>;\n}\n\nfunction noop(arg) {\n\treturn arg;\n}\n\nexport function ngbPositioning() {\n\tconst rtl = inject(NgbRTL);\n\tlet popperInstance: Instance | null = null;\n\n\treturn {\n\t\tcreatePopper(positioningOption: PositioningOptions) {\n\t\t\tif (!popperInstance) {\n\t\t\t\tconst updatePopperOptions = positioningOption.updatePopperOptions || noop;\n\t\t\t\tlet popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n\t\t\t\tpopperInstance = createPopperLite(\n\t\t\t\t\tpositioningOption.hostElement,\n\t\t\t\t\tpositioningOption.targetElement,\n\t\t\t\t\tpopperOptions,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (popperInstance) {\n\t\t\t\tpopperInstance.update();\n\t\t\t}\n\t\t},\n\t\tsetOptions(positioningOption: PositioningOptions) {\n\t\t\tif (popperInstance) {\n\t\t\t\tconst updatePopperOptions = positioningOption.updatePopperOptions || noop;\n\t\t\t\tlet popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n\t\t\t\tpopperInstance.setOptions(popperOptions);\n\t\t\t}\n\t\t},\n\t\tdestroy() {\n\t\t\tif (popperInstance) {\n\t\t\t\tpopperInstance.destroy();\n\t\t\t\tpopperInstance = null;\n\t\t\t}\n\t\t},\n\t};\n}\n","import { padNumber, toInteger, isNumber } from '../util/util';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { Injectable } from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n\treturn new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY })\nexport abstract class NgbDateParserFormatter {\n\t/**\n\t * Parses the given `string` to an `NgbDateStruct`.\n\t *\n\t * Implementations should try their best to provide a result, even\n\t * partial. They must return `null` if the value can't be parsed.\n\t */\n\tabstract parse(value: string): NgbDateStruct | null;\n\n\t/**\n\t * Formats the given `NgbDateStruct` to a `string`.\n\t *\n\t * Implementations should return an empty string if the given date is `null`,\n\t * and try their best to provide a partial result if the given date is incomplete or invalid.\n\t */\n\tabstract format(date: NgbDateStruct | null): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n\tparse(value: string): NgbDateStruct | null {\n\t\tif (value != null) {\n\t\t\tconst dateParts = value.trim().split('-');\n\t\t\tif (dateParts.length === 1 && isNumber(dateParts[0])) {\n\t\t\t\treturn { year: toInteger(dateParts[0]), month: <any>null, day: <any>null };\n\t\t\t} else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n\t\t\t\treturn { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: <any>null };\n\t\t\t} else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n\t\t\t\treturn { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tformat(date: NgbDateStruct | null): string {\n\t\treturn date\n\t\t\t? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${\n\t\t\t\t\tisNumber(date.day) ? padNumber(date.day) : ''\n\t\t\t  }`\n\t\t\t: '';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgbDatepickerConfig } from './datepicker-config';\nimport { PlacementArray } from '../util/positioning';\nimport { Options } from '@popperjs/core';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n\tautoClose: boolean | 'inside' | 'outside' = true;\n\tcontainer: null | 'body';\n\tpositionTarget: string | HTMLElement;\n\tplacement: PlacementArray = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\tpopperOptions = (options: Partial<Options>) => options;\n\trestoreFocus: true | HTMLElement | string = true;\n}\n","import { offset as offsetModifier, Options } from '@popperjs/core';\n\nexport function addPopperOffset(offset: number[]) {\n\treturn (options: Partial<Options>) => {\n\t\toptions.modifiers!.push(offsetModifier, {\n\t\t\tname: 'offset',\n\t\t\toptions: {\n\t\t\t\toffset: () => offset,\n\t\t\t},\n\t\t});\n\n\t\treturn options;\n\t};\n}\n","import {\n\tafterRender,\n\tAfterRenderRef,\n\tChangeDetectorRef,\n\tComponentRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewContainerRef,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport {\n\tAbstractControl,\n\tControlValueAccessor,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidationErrors,\n\tValidator,\n} from '@angular/forms';\n\nimport { ngbAutoClose } from '../util/autoclose';\nimport { ngbFocusTrap } from '../util/focus-trap';\nimport { ngbPositioning } from '../util/positioning';\n\nimport { NgbDateAdapter } from './adapters/ngb-date-adapter';\nimport { NgbDatepicker, NgbDatepickerNavigateEvent } from './datepicker';\nimport { DayTemplateContext } from './datepicker-day-template-context';\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { NgbDateParserFormatter } from './ngb-date-parser-formatter';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { NgbInputDatepickerConfig } from './datepicker-input-config';\nimport { NgbDatepickerConfig } from './datepicker-config';\nimport { isString } from '../util/util';\nimport { Subject } from 'rxjs';\nimport { addPopperOffset } from '../util/positioning-util';\nimport { ContentTemplateContext } from './datepicker-content-template-context';\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n\tselector: 'input[ngbDatepicker]',\n\texportAs: 'ngbDatepicker',\n\tstandalone: true,\n\thost: {\n\t\t'(input)': 'manualDateChange($event.target.value)',\n\t\t'(change)': 'manualDateChange($event.target.value, true)',\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()',\n\t\t'[disabled]': 'disabled',\n\t},\n\tproviders: [\n\t\t{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n\t\t{ provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n\t],\n})\nexport class NgbInputDatepicker implements OnChanges, OnDestroy, ControlValueAccessor, Validator {\n\tstatic ngAcceptInputType_autoClose: boolean | string;\n\tstatic ngAcceptInputType_disabled: boolean | '';\n\tstatic ngAcceptInputType_navigation: string;\n\tstatic ngAcceptInputType_outsideDays: string;\n\tstatic ngAcceptInputType_weekdays: boolean | string;\n\n\tprivate _parserFormatter = inject(NgbDateParserFormatter);\n\tprivate _elRef = inject(ElementRef<HTMLInputElement>);\n\tprivate _vcRef = inject(ViewContainerRef);\n\tprivate _ngZone = inject(NgZone);\n\tprivate _calendar = inject(NgbCalendar);\n\tprivate _dateAdapter = inject(NgbDateAdapter<any>);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _injector = inject(Injector);\n\tprivate _config = inject(NgbInputDatepickerConfig);\n\n\tprivate _cRef: ComponentRef<NgbDatepicker> | null = null;\n\tprivate _disabled = false;\n\tprivate _elWithFocus: HTMLElement | null = null;\n\tprivate _model: NgbDate | null = null;\n\tprivate _inputValue: string;\n\tprivate _afterRenderRef: AfterRenderRef | undefined;\n\tprivate _positioning = ngbPositioning();\n\tprivate _destroyCloseHandlers$ = new Subject<void>();\n\n\t/**\n\t * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n\t *\n\t * * `true` - the popup will close on both date selection and outside click.\n\t * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n\t * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n\t * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n\t *\n\t * @since 3.0.0\n\t */\n\t@Input() autoClose = this._config.autoClose;\n\n\t/**\n\t * The reference to a custom content template.\n\t *\n\t * Allows to completely override the way datepicker.\n\t *\n\t * See [`NgbDatepickerContent`](#/components/datepicker/api#NgbDatepickerContent) for more details.\n\t *\n\t * @since 14.2.0\n\t */\n\t@Input() contentTemplate: TemplateRef<ContentTemplateContext>;\n\n\t/**\n\t * An optional class applied to the datepicker popup element.\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() datepickerClass: string;\n\n\t/**\n\t * The reference to a custom template for the day.\n\t *\n\t * Allows to completely override the way a day 'cell' in the calendar is displayed.\n\t *\n\t * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n\t */\n\t@Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n\t/**\n\t * The callback to pass any arbitrary data to the template cell via the\n\t * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n\t *\n\t * `current` is the month that is currently displayed by the datepicker.\n\t *\n\t * @since 3.3.0\n\t */\n\t@Input() dayTemplateData: (date: NgbDate, current?: { year: number; month: number }) => any;\n\n\t/**\n\t * The number of months to display.\n\t */\n\t@Input() displayMonths: number;\n\n\t/**\n\t * The first day of the week.\n\t *\n\t * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n\t */\n\t@Input() firstDayOfWeek: number;\n\n\t/**\n\t * The reference to the custom template for the datepicker footer.\n\t *\n\t * @since 3.3.0\n\t */\n\t@Input() footerTemplate: TemplateRef<any>;\n\n\t/**\n\t * The callback to mark some dates as disabled.\n\t *\n\t * It is called for each new date when navigating to a different month.\n\t *\n\t * `current` is the month that is currently displayed by the datepicker.\n\t */\n\t@Input() markDisabled: (date: NgbDate, current?: { year: number; month: number }) => boolean;\n\n\t/**\n\t * The earliest date that can be displayed or selected. Also used for form validation.\n\t *\n\t * If not provided, 'year' select box will display 10 years before the current month.\n\t */\n\t@Input() minDate: NgbDateStruct;\n\n\t/**\n\t * The latest date that can be displayed or selected. Also used for form validation.\n\t *\n\t * If not provided, 'year' select box will display 10 years after the current month.\n\t */\n\t@Input() maxDate: NgbDateStruct;\n\n\t/**\n\t * Navigation type.\n\t *\n\t * * `\"select\"` - select boxes for month and navigation arrows\n\t * * `\"arrows\"` - only navigation arrows\n\t * * `\"none\"` - no navigation visible at all\n\t */\n\t@Input() navigation: 'select' | 'arrows' | 'none';\n\n\t/**\n\t * The way of displaying days that don't belong to the current month.\n\t *\n\t * * `\"visible\"` - days are visible\n\t * * `\"hidden\"` - days are hidden, white space preserved\n\t * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n\t *\n\t * For the 2+ months view, days in between months are never shown.\n\t */\n\t@Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n\t/**\n\t * The preferred placement of the datepicker popup, among the [possible values](#/guides/positioning#api).\n\t *\n\t * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n\t *\n\t * Please see the [positioning overview](#/positioning) for more details.\n\t */\n\t@Input() placement = this._config.placement;\n\n\t/**\n\t * Allows to change default Popper options when positioning the popup.\n\t * Receives current popper options and returns modified ones.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() popperOptions = this._config.popperOptions;\n\n\t/**\n\t * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n\t *\n\t * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n\t * we'll fallback to focus document body.\n\t *\n\t * @since 5.2.0\n\t */\n\t@Input() restoreFocus: true | string | HTMLElement;\n\n\t/**\n\t * If `true`, week numbers will be displayed.\n\t */\n\t@Input() showWeekNumbers: boolean;\n\n\t/**\n\t * The date to open calendar with.\n\t *\n\t * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t * If nothing or invalid date is provided, calendar will open with current month.\n\t *\n\t * You could use `navigateTo(date)` method as an alternative.\n\t */\n\t@Input() startDate: { year: number; month: number; day?: number };\n\n\t/**\n\t * A selector specifying the element the datepicker popup should be appended to.\n\t *\n\t * Currently only supports `\"body\"`.\n\t */\n\t@Input() container = this._config.container;\n\n\t/**\n\t * A css selector or html element specifying the element the datepicker popup should be positioned against.\n\t *\n\t * By default the input is used as a target.\n\t *\n\t * @since 4.2.0\n\t */\n\t@Input() positionTarget = this._config.positionTarget;\n\n\t/**\n\t * The way weekdays should be displayed.\n\t *\n\t * * `true` - weekdays are displayed using default width\n\t * * `false` - weekdays are not displayed\n\t * * `\"short\" | \"long\" | \"narrow\"` - weekdays are displayed using specified width\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() weekdays: Exclude<Intl.DateTimeFormatOptions['weekday'], undefined> | boolean;\n\n\t/**\n\t * An event emitted when user selects a date using keyboard or mouse.\n\t *\n\t * The payload of the event is currently selected `NgbDate`.\n\t *\n\t * @since 1.1.1\n\t */\n\t@Output() dateSelect = new EventEmitter<NgbDate>();\n\n\t/**\n\t * Event emitted right after the navigation happens and displayed month changes.\n\t *\n\t * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n\t */\n\t@Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n\t/**\n\t * An event fired after closing datepicker window.\n\t *\n\t * @since 4.2.0\n\t */\n\t@Output() closed = new EventEmitter<void>();\n\n\t@Input()\n\tget disabled() {\n\t\treturn this._disabled;\n\t}\n\tset disabled(value: any) {\n\t\tthis._disabled = value === '' || (value && value !== 'false');\n\n\t\tif (this.isOpen()) {\n\t\t\tthis._cRef!.instance.setDisabledState(this._disabled);\n\t\t}\n\t}\n\n\tprivate _onChange = (_: any) => {};\n\tprivate _onTouched = () => {};\n\tprivate _validatorChange = () => {};\n\n\tregisterOnChange(fn: (value: any) => any): void {\n\t\tthis._onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => any): void {\n\t\tthis._onTouched = fn;\n\t}\n\n\tregisterOnValidatorChange(fn: () => void): void {\n\t\tthis._validatorChange = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\tvalidate(c: AbstractControl): ValidationErrors | null {\n\t\tconst { value } = c;\n\n\t\tif (value != null) {\n\t\t\tconst ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n\t\t\tif (!ngbDate) {\n\t\t\t\treturn { ngbDate: { invalid: value } };\n\t\t\t}\n\n\t\t\tif (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n\t\t\t\treturn { ngbDate: { minDate: { minDate: this.minDate, actual: value } } };\n\t\t\t}\n\n\t\t\tif (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n\t\t\t\treturn { ngbDate: { maxDate: { maxDate: this.maxDate, actual: value } } };\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\twriteValue(value) {\n\t\tthis._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\t\tthis._writeModelValue(this._model);\n\t}\n\n\tmanualDateChange(value: string, updateView = false) {\n\t\tconst inputValueChanged = value !== this._inputValue;\n\t\tif (inputValueChanged) {\n\t\t\tthis._inputValue = value;\n\t\t\tthis._model = this._fromDateStruct(this._parserFormatter.parse(value));\n\t\t}\n\t\tif (inputValueChanged || !updateView) {\n\t\t\tthis._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n\t\t}\n\t\tif (updateView && this._model) {\n\t\t\tthis._writeModelValue(this._model);\n\t\t}\n\t}\n\n\tisOpen() {\n\t\treturn !!this._cRef;\n\t}\n\n\t/**\n\t * Opens the datepicker popup.\n\t *\n\t * If the related form control contains a valid date, the corresponding month will be opened.\n\t */\n\topen() {\n\t\tif (!this.isOpen()) {\n\t\t\tthis._cRef = this._vcRef.createComponent(NgbDatepicker, { injector: this._injector });\n\n\t\t\tthis._applyPopupStyling(this._cRef.location.nativeElement);\n\t\t\tthis._applyDatepickerInputs(this._cRef);\n\t\t\tthis._subscribeForDatepickerOutputs(this._cRef.instance);\n\t\t\tthis._cRef.instance.ngOnInit();\n\t\t\tthis._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n\t\t\t// date selection event handling\n\t\t\tthis._cRef.instance.registerOnChange((selectedDate) => {\n\t\t\t\tthis.writeValue(selectedDate);\n\t\t\t\tthis._onChange(selectedDate);\n\t\t\t\tthis._onTouched();\n\t\t\t});\n\n\t\t\tthis._cRef.changeDetectorRef.detectChanges();\n\n\t\t\tthis._cRef.instance.setDisabledState(this.disabled);\n\n\t\t\tif (this.container === 'body') {\n\t\t\t\tthis._document.querySelector(this.container)?.appendChild(this._cRef.location.nativeElement);\n\t\t\t}\n\n\t\t\t// focus handling\n\t\t\tthis._elWithFocus = this._document.activeElement as HTMLElement | null;\n\t\t\tngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n\t\t\tsetTimeout(() => this._cRef?.instance.focus());\n\n\t\t\tlet hostElement: HTMLElement | null;\n\t\t\tif (isString(this.positionTarget)) {\n\t\t\t\thostElement = this._document.querySelector(this.positionTarget);\n\t\t\t} else if (this.positionTarget instanceof HTMLElement) {\n\t\t\t\thostElement = this.positionTarget;\n\t\t\t} else {\n\t\t\t\thostElement = this._elRef.nativeElement;\n\t\t\t}\n\n\t\t\tif (this.positionTarget && !hostElement) {\n\t\t\t\tthrow new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n\t\t\t}\n\n\t\t\t// Setting up popper and scheduling updates when zone is stable\n\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\tif (this._cRef && hostElement) {\n\t\t\t\t\tthis._positioning.createPopper({\n\t\t\t\t\t\thostElement,\n\t\t\t\t\t\ttargetElement: this._cRef.location.nativeElement,\n\t\t\t\t\t\tplacement: this.placement,\n\t\t\t\t\t\tupdatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._afterRenderRef = afterRender(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\t\t\t\tthis._positioning.update();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ injector: this._injector },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._setCloseHandlers();\n\t\t}\n\t}\n\n\t/**\n\t * Closes the datepicker popup.\n\t */\n\tclose() {\n\t\tif (this.isOpen()) {\n\t\t\tthis._cRef?.destroy();\n\t\t\tthis._cRef = null;\n\t\t\tthis._positioning.destroy();\n\t\t\tthis._afterRenderRef?.destroy();\n\t\t\tthis._destroyCloseHandlers$.next();\n\t\t\tthis.closed.emit();\n\t\t\tthis._changeDetector.markForCheck();\n\n\t\t\t// restore focus\n\t\t\tlet elementToFocus: HTMLElement | null = this._elWithFocus;\n\t\t\tif (isString(this.restoreFocus)) {\n\t\t\t\telementToFocus = this._document.querySelector(this.restoreFocus);\n\t\t\t} else if (this.restoreFocus !== undefined) {\n\t\t\t\telementToFocus = this.restoreFocus as HTMLElement;\n\t\t\t}\n\n\t\t\t// in IE document.activeElement can contain an object without 'focus()' sometimes\n\t\t\tif (elementToFocus && elementToFocus['focus']) {\n\t\t\t\telementToFocus.focus();\n\t\t\t} else {\n\t\t\t\tthis._document.body.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the datepicker popup.\n\t */\n\ttoggle() {\n\t\tif (this.isOpen()) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the provided date.\n\t *\n\t * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n\t * If nothing or invalid date provided calendar will open current month.\n\t *\n\t * Use the `[startDate]` input as an alternative.\n\t */\n\tnavigateTo(date?: { year: number; month: number; day?: number }) {\n\t\tif (this.isOpen()) {\n\t\t\tthis._cRef!.instance.navigateTo(date);\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tthis._onTouched();\n\t}\n\n\tonFocus() {\n\t\tthis._elWithFocus = this._elRef.nativeElement;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['minDate'] || changes['maxDate']) {\n\t\t\tthis._validatorChange();\n\n\t\t\tif (this.isOpen()) {\n\t\t\t\tif (changes['minDate']) {\n\t\t\t\t\tthis._cRef!.setInput('minDate', this.minDate);\n\t\t\t\t}\n\t\t\t\tif (changes['maxDate']) {\n\t\t\t\t\tthis._cRef!.setInput('maxDate', this.maxDate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changes['datepickerClass']) {\n\t\t\tconst { currentValue, previousValue } = changes['datepickerClass'];\n\t\t\tthis._applyPopupClass(currentValue, previousValue);\n\t\t}\n\n\t\tif (changes['autoClose'] && this.isOpen()) {\n\t\t\tthis._setCloseHandlers();\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.close();\n\t}\n\n\tprivate _applyDatepickerInputs(datepickerComponentRef: ComponentRef<NgbDatepicker>): void {\n\t\t[\n\t\t\t'contentTemplate',\n\t\t\t'dayTemplate',\n\t\t\t'dayTemplateData',\n\t\t\t'displayMonths',\n\t\t\t'firstDayOfWeek',\n\t\t\t'footerTemplate',\n\t\t\t'markDisabled',\n\t\t\t'minDate',\n\t\t\t'maxDate',\n\t\t\t'navigation',\n\t\t\t'outsideDays',\n\t\t\t'showNavigation',\n\t\t\t'showWeekNumbers',\n\t\t\t'weekdays',\n\t\t].forEach((inputName: string) => {\n\t\t\tif (this[inputName] !== undefined) {\n\t\t\t\tdatepickerComponentRef.setInput(inputName, this[inputName]);\n\t\t\t}\n\t\t});\n\t\tdatepickerComponentRef.setInput('startDate', this.startDate || this._model);\n\t}\n\n\tprivate _applyPopupClass(newClass: string, oldClass?: string) {\n\t\tconst popupEl = this._cRef?.location.nativeElement as HTMLElement;\n\t\tif (popupEl) {\n\t\t\tif (newClass) {\n\t\t\t\tpopupEl.classList.add(newClass);\n\t\t\t}\n\t\t\tif (oldClass) {\n\t\t\t\tpopupEl.classList.remove(oldClass);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _applyPopupStyling(nativeElement: HTMLElement) {\n\t\tnativeElement.classList.add('dropdown-menu', 'show');\n\n\t\tif (this.container === 'body') {\n\t\t\tnativeElement.classList.add('ngb-dp-body');\n\t\t}\n\n\t\tthis._applyPopupClass(this.datepickerClass);\n\t}\n\n\tprivate _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n\t\tdatepickerInstance.navigate.subscribe((navigateEvent) => this.navigate.emit(navigateEvent));\n\t\tdatepickerInstance.dateSelect.subscribe((date) => {\n\t\t\tthis.dateSelect.emit(date);\n\t\t\tif (this.autoClose === true || this.autoClose === 'inside') {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _writeModelValue(model: NgbDate | null) {\n\t\tconst value = this._parserFormatter.format(model);\n\t\tthis._inputValue = value;\n\t\tthis._elRef.nativeElement.value = value;\n\t\tif (this.isOpen()) {\n\t\t\tthis._cRef!.instance.writeValue(this._dateAdapter.toModel(model));\n\t\t\tthis._onTouched();\n\t\t}\n\t}\n\n\tprivate _fromDateStruct(date: NgbDateStruct | null): NgbDate | null {\n\t\tconst ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n\t\treturn this._calendar.isValid(ngbDate) ? ngbDate : null;\n\t}\n\n\tprivate _setCloseHandlers() {\n\t\tthis._destroyCloseHandlers$.next();\n\t\tngbAutoClose(\n\t\t\tthis._ngZone,\n\t\t\tthis._document,\n\t\t\tthis.autoClose,\n\t\t\t() => this.close(),\n\t\t\tthis._destroyCloseHandlers$,\n\t\t\t[],\n\t\t\t[this._elRef.nativeElement, this._cRef!.location.nativeElement],\n\t\t);\n\t}\n}\n","import { NgbDate } from '../ngb-date';\nimport { NgbPeriod, NgbCalendar } from '../ngb-calendar';\nimport { Injectable } from '@angular/core';\nimport { isNumber } from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n\t/**\n\t * Returns the number of days in a specific Hijri month.\n\t * `month` is 1 for Muharram, 2 for Safar, etc.\n\t * `year` is any Hijri year.\n\t */\n\tabstract getDaysPerMonth(month: number, year: number): number;\n\n\t/**\n\t * Returns the equivalent Hijri date value for a give input Gregorian date.\n\t * `gDate` is s JS Date to be converted to Hijri.\n\t */\n\tabstract fromGregorian(gDate: Date): NgbDate;\n\n\t/**\n\t * Converts the current Hijri date to Gregorian.\n\t */\n\tabstract toGregorian(hDate: NgbDate): Date;\n\n\tgetDaysPerWeek() {\n\t\treturn 7;\n\t}\n\n\tgetMonths() {\n\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\t}\n\n\tgetWeeksPerMonth() {\n\t\treturn 6;\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\tdate = new NgbDate(date.year, date.month, date.day);\n\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tdate = this._setYear(date, date.year + number);\n\t\t\t\tdate.month = 1;\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'm':\n\t\t\t\tdate = this._setMonth(date, date.month + number);\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'd':\n\t\t\t\treturn this._setDay(date, date.day + number);\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\t}\n\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate) {\n\t\tconst day = this.toGregorian(date).getDay();\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\treturn day === 0 ? 7 : day;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\tif (firstDayOfWeek === 7) {\n\t\t\tfirstDayOfWeek = 0;\n\t\t}\n\n\t\tconst thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n\t\tconst date = week[thursdayIndex];\n\n\t\tconst jsDate = this.toGregorian(date);\n\t\tjsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\t\tconst time = jsDate.getTime();\n\t\tconst MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\t\treturn Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n\t}\n\n\tgetToday(): NgbDate {\n\t\treturn this.fromGregorian(new Date());\n\t}\n\n\tisValid(date?: NgbDate | null): boolean {\n\t\treturn (\n\t\t\tdate != null &&\n\t\t\tisNumber(date.year) &&\n\t\t\tisNumber(date.month) &&\n\t\t\tisNumber(date.day) &&\n\t\t\t!isNaN(this.toGregorian(date).getTime())\n\t\t);\n\t}\n\n\tprivate _setDay(date: NgbDate, day: number): NgbDate {\n\t\tday = +day;\n\t\tlet mDays = this.getDaysPerMonth(date.month, date.year);\n\t\tif (day <= 0) {\n\t\t\twhile (day <= 0) {\n\t\t\t\tdate = this._setMonth(date, date.month - 1);\n\t\t\t\tmDays = this.getDaysPerMonth(date.month, date.year);\n\t\t\t\tday += mDays;\n\t\t\t}\n\t\t} else if (day > mDays) {\n\t\t\twhile (day > mDays) {\n\t\t\t\tday -= mDays;\n\t\t\t\tdate = this._setMonth(date, date.month + 1);\n\t\t\t\tmDays = this.getDaysPerMonth(date.month, date.year);\n\t\t\t}\n\t\t}\n\t\tdate.day = day;\n\t\treturn date;\n\t}\n\n\tprivate _setMonth(date: NgbDate, month: number): NgbDate {\n\t\tmonth = +month;\n\t\tdate.year = date.year + Math.floor((month - 1) / 12);\n\t\tdate.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n\t\treturn date;\n\t}\n\n\tprivate _setYear(date: NgbDate, year: number): NgbDate {\n\t\tdate.year = +year;\n\t\treturn date;\n\t}\n}\n","import { NgbCalendarHijri } from './ngb-calendar-hijri';\nimport { NgbDate } from '../ngb-date';\nimport { Injectable } from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n\treturn (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n\tconst year = gDate.getFullYear();\n\treturn (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n\treturn Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n\treturn (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n\treturn a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n\t/**\n\t * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n\t * `gDate` is a JS Date to be converted to Hijri.\n\t */\n\tfromGregorian(gDate: Date): NgbDate {\n\t\tconst gYear = gDate.getFullYear(),\n\t\t\tgMonth = gDate.getMonth(),\n\t\t\tgDay = gDate.getDate();\n\n\t\tlet julianDay =\n\t\t\tGREGORIAN_EPOCH -\n\t\t\t1 +\n\t\t\t365 * (gYear - 1) +\n\t\t\tMath.floor((gYear - 1) / 4) +\n\t\t\t-Math.floor((gYear - 1) / 100) +\n\t\t\tMath.floor((gYear - 1) / 400) +\n\t\t\tMath.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n\t\tjulianDay = Math.floor(julianDay) + 0.5;\n\n\t\tconst days = julianDay - ISLAMIC_EPOCH;\n\t\tconst hYear = Math.floor((30 * days + 10646) / 10631.0);\n\t\tlet hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n\t\thMonth = Math.min(hMonth, 11);\n\t\tconst hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n\t\treturn new NgbDate(hYear, hMonth + 1, hDay);\n\t}\n\n\t/**\n\t * Returns the equivalent JS date value for a give input islamic(civil) date.\n\t * `hDate` is an islamic(civil) date to be converted to Gregorian.\n\t */\n\ttoGregorian(hDate: NgbDate): Date {\n\t\tconst hYear = hDate.year;\n\t\tconst hMonth = hDate.month - 1;\n\t\tconst hDay = hDate.day;\n\t\tconst julianDay =\n\t\t\thDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n\t\tconst wjd = Math.floor(julianDay - 0.5) + 0.5,\n\t\t\tdepoch = wjd - GREGORIAN_EPOCH,\n\t\t\tquadricent = Math.floor(depoch / 146097),\n\t\t\tdqc = mod(depoch, 146097),\n\t\t\tcent = Math.floor(dqc / 36524),\n\t\t\tdcent = mod(dqc, 36524),\n\t\t\tquad = Math.floor(dcent / 1461),\n\t\t\tdquad = mod(dcent, 1461),\n\t\t\tyindex = Math.floor(dquad / 365);\n\t\tlet year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\t\tif (!(cent === 4 || yindex === 4)) {\n\t\t\tyear++;\n\t\t}\n\n\t\tconst gYearStart =\n\t\t\tGREGORIAN_EPOCH +\n\t\t\t365 * (year - 1) +\n\t\t\tMath.floor((year - 1) / 4) -\n\t\t\tMath.floor((year - 1) / 100) +\n\t\t\tMath.floor((year - 1) / 400);\n\n\t\tconst yearday = wjd - gYearStart;\n\n\t\tconst tjd =\n\t\t\tGREGORIAN_EPOCH -\n\t\t\t1 +\n\t\t\t365 * (year - 1) +\n\t\t\tMath.floor((year - 1) / 4) -\n\t\t\tMath.floor((year - 1) / 100) +\n\t\t\tMath.floor((year - 1) / 400) +\n\t\t\tMath.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n\t\tconst leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n\t\tconst month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n\t\tconst tjd2 =\n\t\t\tGREGORIAN_EPOCH -\n\t\t\t1 +\n\t\t\t365 * (year - 1) +\n\t\t\tMath.floor((year - 1) / 4) -\n\t\t\tMath.floor((year - 1) / 100) +\n\t\t\tMath.floor((year - 1) / 400) +\n\t\t\tMath.floor(\n\t\t\t\t(367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1,\n\t\t\t);\n\n\t\tconst day = wjd - tjd2 + 1;\n\n\t\treturn new Date(year, month - 1, day);\n\t}\n\n\t/**\n\t * Returns the number of days in a specific Hijri month.\n\t * `month` is 1 for Muharram, 2 for Safar, etc.\n\t * `year` is any Hijri year.\n\t */\n\tgetDaysPerMonth(month: number, year: number): number {\n\t\tyear = year + Math.floor(month / 13);\n\t\tmonth = ((month - 1) % 12) + 1;\n\t\tlet length = 29 + (month % 2);\n\t\tif (month === 12 && isIslamicLeapYear(year)) {\n\t\t\tlength++;\n\t\t}\n\t\treturn length;\n\t}\n}\n","import { NgbCalendarIslamicCivil } from './ngb-calendar-islamic-civil';\nimport { NgbDate } from '../ngb-date';\nimport { Injectable } from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n\t// 1300-1304\n\t'101010101010',\n\t'110101010100',\n\t'111011001001',\n\t'011011010100',\n\t'011011101010',\n\t// 1305-1309\n\t'001101101100',\n\t'101010101101',\n\t'010101010101',\n\t'011010101001',\n\t'011110010010',\n\t// 1310-1314\n\t'101110101001',\n\t'010111010100',\n\t'101011011010',\n\t'010101011100',\n\t'110100101101',\n\t// 1315-1319\n\t'011010010101',\n\t'011101001010',\n\t'101101010100',\n\t'101101101010',\n\t'010110101101',\n\t// 1320-1324\n\t'010010101110',\n\t'101001001111',\n\t'010100010111',\n\t'011010001011',\n\t'011010100101',\n\t// 1325-1329\n\t'101011010101',\n\t'001011010110',\n\t'100101011011',\n\t'010010011101',\n\t'101001001101',\n\t// 1330-1334\n\t'110100100110',\n\t'110110010101',\n\t'010110101100',\n\t'100110110110',\n\t'001010111010',\n\t// 1335-1339\n\t'101001011011',\n\t'010100101011',\n\t'101010010101',\n\t'011011001010',\n\t'101011101001',\n\t// 1340-1344\n\t'001011110100',\n\t'100101110110',\n\t'001010110110',\n\t'100101010110',\n\t'101011001010',\n\t// 1345-1349\n\t'101110100100',\n\t'101111010010',\n\t'010111011001',\n\t'001011011100',\n\t'100101101101',\n\t// 1350-1354\n\t'010101001101',\n\t'101010100101',\n\t'101101010010',\n\t'101110100101',\n\t'010110110100',\n\t// 1355-1359\n\t'100110110110',\n\t'010101010111',\n\t'001010010111',\n\t'010101001011',\n\t'011010100011',\n\t// 1360-1364\n\t'011101010010',\n\t'101101100101',\n\t'010101101010',\n\t'101010101011',\n\t'010100101011',\n\t// 1365-1369\n\t'110010010101',\n\t'110101001010',\n\t'110110100101',\n\t'010111001010',\n\t'101011010110',\n\t// 1370-1374\n\t'100101010111',\n\t'010010101011',\n\t'100101001011',\n\t'101010100101',\n\t'101101010010',\n\t// 1375-1379\n\t'101101101010',\n\t'010101110101',\n\t'001001110110',\n\t'100010110111',\n\t'010001011011',\n\t// 1380-1384\n\t'010101010101',\n\t'010110101001',\n\t'010110110100',\n\t'100111011010',\n\t'010011011101',\n\t// 1385-1389\n\t'001001101110',\n\t'100100110110',\n\t'101010101010',\n\t'110101010100',\n\t'110110110010',\n\t// 1390-1394\n\t'010111010101',\n\t'001011011010',\n\t'100101011011',\n\t'010010101011',\n\t'101001010101',\n\t// 1395-1399\n\t'101101001001',\n\t'101101100100',\n\t'101101110001',\n\t'010110110100',\n\t'101010110101',\n\t// 1400-1404\n\t'101001010101',\n\t'110100100101',\n\t'111010010010',\n\t'111011001001',\n\t'011011010100',\n\t// 1405-1409\n\t'101011101001',\n\t'100101101011',\n\t'010010101011',\n\t'101010010011',\n\t'110101001001',\n\t// 1410-1414\n\t'110110100100',\n\t'110110110010',\n\t'101010111001',\n\t'010010111010',\n\t'101001011011',\n\t// 1415-1419\n\t'010100101011',\n\t'101010010101',\n\t'101100101010',\n\t'101101010101',\n\t'010101011100',\n\t// 1420-1424\n\t'010010111101',\n\t'001000111101',\n\t'100100011101',\n\t'101010010101',\n\t'101101001010',\n\t// 1425-1429\n\t'101101011010',\n\t'010101101101',\n\t'001010110110',\n\t'100100111011',\n\t'010010011011',\n\t// 1430-1434\n\t'011001010101',\n\t'011010101001',\n\t'011101010100',\n\t'101101101010',\n\t'010101101100',\n\t// 1435-1439\n\t'101010101101',\n\t'010101010101',\n\t'101100101001',\n\t'101110010010',\n\t'101110101001',\n\t// 1440-1444\n\t'010111010100',\n\t'101011011010',\n\t'010101011010',\n\t'101010101011',\n\t'010110010101',\n\t// 1445-1449\n\t'011101001001',\n\t'011101100100',\n\t'101110101010',\n\t'010110110101',\n\t'001010110110',\n\t// 1450-1454\n\t'101001010110',\n\t'111001001101',\n\t'101100100101',\n\t'101101010010',\n\t'101101101010',\n\t// 1455-1459\n\t'010110101101',\n\t'001010101110',\n\t'100100101111',\n\t'010010010111',\n\t'011001001011',\n\t// 1460-1464\n\t'011010100101',\n\t'011010101100',\n\t'101011010110',\n\t'010101011101',\n\t'010010011101',\n\t// 1465-1469\n\t'101001001101',\n\t'110100010110',\n\t'110110010101',\n\t'010110101010',\n\t'010110110101',\n\t// 1470-1474\n\t'001011011010',\n\t'100101011011',\n\t'010010101101',\n\t'010110010101',\n\t'011011001010',\n\t// 1475-1479\n\t'011011100100',\n\t'101011101010',\n\t'010011110101',\n\t'001010110110',\n\t'100101010110',\n\t// 1480-1484\n\t'101010101010',\n\t'101101010100',\n\t'101111010010',\n\t'010111011001',\n\t'001011101010',\n\t// 1485-1489\n\t'100101101101',\n\t'010010101101',\n\t'101010010101',\n\t'101101001010',\n\t'101110100101',\n\t// 1490-1494\n\t'010110110010',\n\t'100110110101',\n\t'010011010110',\n\t'101010010111',\n\t'010101000111',\n\t// 1495-1499\n\t'011010010011',\n\t'011101001001',\n\t'101101010101',\n\t'010101101010',\n\t'101001101011',\n\t// 1500-1504\n\t'010100101011',\n\t'101010001011',\n\t'110101000110',\n\t'110110100011',\n\t'010111001010',\n\t// 1505-1509\n\t'101011010110',\n\t'010011011011',\n\t'001001101011',\n\t'100101001011',\n\t'101010100101',\n\t// 1510-1514\n\t'101101010010',\n\t'101101101001',\n\t'010101110101',\n\t'000101110110',\n\t'100010110111',\n\t// 1515-1519\n\t'001001011011',\n\t'010100101011',\n\t'010101100101',\n\t'010110110100',\n\t'100111011010',\n\t// 1520-1524\n\t'010011101101',\n\t'000101101101',\n\t'100010110110',\n\t'101010100110',\n\t'110101010010',\n\t// 1525-1529\n\t'110110101001',\n\t'010111010100',\n\t'101011011010',\n\t'100101011011',\n\t'010010101011',\n\t// 1530-1534\n\t'011001010011',\n\t'011100101001',\n\t'011101100010',\n\t'101110101001',\n\t'010110110010',\n\t// 1535-1539\n\t'101010110101',\n\t'010101010101',\n\t'101100100101',\n\t'110110010010',\n\t'111011001001',\n\t// 1540-1544\n\t'011011010010',\n\t'101011101001',\n\t'010101101011',\n\t'010010101011',\n\t'101001010101',\n\t// 1545-1549\n\t'110100101001',\n\t'110101010100',\n\t'110110101010',\n\t'100110110101',\n\t'010010111010',\n\t// 1550-1554\n\t'101000111011',\n\t'010010011011',\n\t'101001001101',\n\t'101010101010',\n\t'101011010101',\n\t// 1555-1559\n\t'001011011010',\n\t'100101011101',\n\t'010001011110',\n\t'101000101110',\n\t'110010011010',\n\t// 1560-1564\n\t'110101010101',\n\t'011010110010',\n\t'011010111001',\n\t'010010111010',\n\t'101001011101',\n\t// 1565-1569\n\t'010100101101',\n\t'101010010101',\n\t'101101010010',\n\t'101110101000',\n\t'101110110100',\n\t// 1570-1574\n\t'010110111001',\n\t'001011011010',\n\t'100101011010',\n\t'101101001010',\n\t'110110100100',\n\t// 1575-1579\n\t'111011010001',\n\t'011011101000',\n\t'101101101010',\n\t'010101101101',\n\t'010100110101',\n\t// 1580-1584\n\t'011010010101',\n\t'110101001010',\n\t'110110101000',\n\t'110111010100',\n\t'011011011010',\n\t// 1585-1589\n\t'010101011011',\n\t'001010011101',\n\t'011000101011',\n\t'101100010101',\n\t'101101001010',\n\t// 1590-1594\n\t'101110010101',\n\t'010110101010',\n\t'101010101110',\n\t'100100101110',\n\t'110010001111',\n\t// 1595-1599\n\t'010100100111',\n\t'011010010101',\n\t'011010101010',\n\t'101011010110',\n\t'010101011101',\n\t// 1600\n\t'001010011101',\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n\t// Ignores the time part in date1 and date2:\n\tconst time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n\tconst time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\tconst diff = Math.abs(time1 - time2);\n\treturn Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n\t/**\n\t * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n\t * `gdate` is s JS Date to be converted to Hijri.\n\t */\n\tfromGregorian(gDate: Date): NgbDate {\n\t\tlet hDay = 1,\n\t\t\thMonth = 0,\n\t\t\thYear = 1300;\n\t\tlet daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\t\tif (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n\t\t\tlet year = 1300;\n\t\t\tfor (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n\t\t\t\tfor (let j = 0; j < 12; j++) {\n\t\t\t\t\tlet numOfDays = +MONTH_LENGTH[i][j] + 29;\n\t\t\t\t\tif (daysDiff <= numOfDays) {\n\t\t\t\t\t\thDay = daysDiff + 1;\n\t\t\t\t\t\tif (hDay > numOfDays) {\n\t\t\t\t\t\t\thDay = 1;\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j > 11) {\n\t\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t\tyear++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thMonth = j;\n\t\t\t\t\t\thYear = year;\n\t\t\t\t\t\treturn new NgbDate(hYear, hMonth + 1, hDay);\n\t\t\t\t\t}\n\t\t\t\t\tdaysDiff = daysDiff - numOfDays;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null as any;\n\t\t} else {\n\t\t\treturn super.fromGregorian(gDate);\n\t\t}\n\t}\n\t/**\n\t * Converts the current Hijri date to Gregorian.\n\t */\n\ttoGregorian(hDate: NgbDate): Date {\n\t\tconst hYear = hDate.year;\n\t\tconst hMonth = hDate.month - 1;\n\t\tconst hDay = hDate.day;\n\t\tlet gDate = new Date(GREGORIAN_FIRST_DATE);\n\t\tlet dayDiff = hDay - 1;\n\t\tif (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n\t\t\tfor (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n\t\t\t\tfor (let m = 0; m < 12; m++) {\n\t\t\t\t\tdayDiff += +MONTH_LENGTH[y][m] + 29;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let m = 0; m < hMonth; m++) {\n\t\t\t\tdayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n\t\t\t}\n\t\t\tgDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n\t\t} else {\n\t\t\tgDate = super.toGregorian(hDate);\n\t\t}\n\t\treturn gDate;\n\t}\n\t/**\n\t * Returns the number of days in a specific Hijri hMonth.\n\t * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n\t * `hYear` is any Hijri hYear.\n\t */\n\tgetDaysPerMonth(hMonth: number, hYear: number): number {\n\t\tif (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n\t\t\tconst pos = hYear - HIJRI_BEGIN;\n\t\t\treturn +MONTH_LENGTH[pos][hMonth - 1] + 29;\n\t\t}\n\t\treturn super.getDaysPerMonth(hMonth, hYear);\n\t}\n}\n","import { NgbDate } from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n\tlet jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n\tlet date = julianToGregorian(jdn);\n\tdate.setHours(6, 30, 3, 200);\n\treturn date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n\tlet g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n\treturn julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n\tdate.year = +yearValue;\n\treturn date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n\tmonth = +month;\n\tdate.year = date.year + Math.floor((month - 1) / 12);\n\tdate.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n\treturn date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n\tlet mDays = getDaysPerMonth(date.month, date.year);\n\tif (day <= 0) {\n\t\twhile (day <= 0) {\n\t\t\tdate = setJalaliMonth(date, date.month - 1);\n\t\t\tmDays = getDaysPerMonth(date.month, date.year);\n\t\t\tday += mDays;\n\t\t}\n\t} else if (day > mDays) {\n\t\twhile (day > mDays) {\n\t\t\tday -= mDays;\n\t\t\tdate = setJalaliMonth(date, date.month + 1);\n\t\t\tmDays = getDaysPerMonth(date.month, date.year);\n\t\t}\n\t}\n\tdate.day = day;\n\treturn date;\n}\n\nfunction mod(a: number, b: number): number {\n\treturn a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n\treturn Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n\t// Jalali years starting the 33-year rule.\n\tlet breaks = [\n\t\t-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178,\n\t];\n\tconst breaksLength = breaks.length;\n\tconst gYear = jalaliYear + 621;\n\tlet leapJ = -14;\n\tlet jp = breaks[0];\n\n\tif (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n\t\tthrow new Error('Invalid Jalali year ' + jalaliYear);\n\t}\n\n\t// Find the limiting years for the Jalali year jalaliYear.\n\tlet jump;\n\tfor (let i = 1; i < breaksLength; i += 1) {\n\t\tconst jm = breaks[i];\n\t\tjump = jm - jp;\n\t\tif (jalaliYear < jm) {\n\t\t\tbreak;\n\t\t}\n\t\tleapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n\t\tjp = jm;\n\t}\n\tlet n = jalaliYear - jp;\n\n\t// Find the number of leap years from AD 621 to the beginning\n\t// of the current Jalali year in the Persian calendar.\n\tleapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n\tif (mod(jump, 33) === 4 && jump - n === 4) {\n\t\tleapJ += 1;\n\t}\n\n\t// And the same in the Gregorian calendar (until the year gYear).\n\tconst leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n\t// Determine the Gregorian date of Farvardin the 1st.\n\tconst march = 20 + leapJ - leapG;\n\n\t// Find how many years have passed since the last leap year.\n\tif (jump - n < 6) {\n\t\tn = n - jump + div(jump + 4, 33) * 33;\n\t}\n\tlet leap = mod(mod(n + 1, 33) - 1, 4);\n\tif (leap === -1) {\n\t\tleap = 4;\n\t}\n\n\treturn { leap: leap, gy: gYear, march: march };\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n\tlet j = 4 * julianDayNumber + 139361631;\n\tj = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n\tconst i = div(mod(j, 1461), 4) * 5 + 308;\n\tconst gDay = div(mod(i, 153), 5) + 1;\n\tconst gMonth = mod(div(i, 153), 12) + 1;\n\tconst gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n\treturn new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n\tlet d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n\td = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n\treturn d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n\tlet gy = julianToGregorian(julianDayNumber).getFullYear(), // Calculate Gregorian year (gy).\n\t\tjalaliYear = gy - 621,\n\t\tr = jalCal(jalaliYear),\n\t\tgregorianDay = gregorianToJulian(gy, 3, r.march),\n\t\tjalaliDay,\n\t\tjalaliMonth,\n\t\tnumberOfDays;\n\n\t// Find number of days that passed since 1 Farvardin.\n\tnumberOfDays = julianDayNumber - gregorianDay;\n\tif (numberOfDays >= 0) {\n\t\tif (numberOfDays <= 185) {\n\t\t\t// The first 6 months.\n\t\t\tjalaliMonth = 1 + div(numberOfDays, 31);\n\t\t\tjalaliDay = mod(numberOfDays, 31) + 1;\n\t\t\treturn new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n\t\t} else {\n\t\t\t// The remaining months.\n\t\t\tnumberOfDays -= 186;\n\t\t}\n\t} else {\n\t\t// Previous Jalali year.\n\t\tjalaliYear -= 1;\n\t\tnumberOfDays += 179;\n\t\tif (r.leap === 1) {\n\t\t\tnumberOfDays += 1;\n\t\t}\n\t}\n\tjalaliMonth = 7 + div(numberOfDays, 30);\n\tjalaliDay = mod(numberOfDays, 30) + 1;\n\n\treturn new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n\tlet r = jalCal(jYear);\n\treturn gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n\tif (month <= 6) {\n\t\treturn 31;\n\t}\n\tif (month <= 11) {\n\t\treturn 30;\n\t}\n\tif (jalCal(year).leap === 0) {\n\t\treturn 30;\n\t}\n\treturn 29;\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDate } from '../ngb-date';\nimport { NgbCalendar, NgbPeriod } from '../ngb-calendar';\nimport { isInteger } from '../../util/util';\n\nimport { fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian } from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n\tgetDaysPerWeek() {\n\t\treturn 7;\n\t}\n\n\tgetMonths() {\n\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\t}\n\n\tgetWeeksPerMonth() {\n\t\treturn 6;\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\tdate = new NgbDate(date.year, date.month, date.day);\n\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tdate = setJalaliYear(date, date.year + number);\n\t\t\t\tdate.month = 1;\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'm':\n\t\t\t\tdate = setJalaliMonth(date, date.month + number);\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'd':\n\t\t\t\treturn setJalaliDay(date, date.day + number);\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\t}\n\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate) {\n\t\tconst day = toGregorian(date).getDay();\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\treturn day === 0 ? 7 : day;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\tif (firstDayOfWeek === 7) {\n\t\t\tfirstDayOfWeek = 0;\n\t\t}\n\n\t\tconst thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n\t\tconst date = week[thursdayIndex];\n\n\t\tconst jsDate = toGregorian(date);\n\t\tjsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\t\tconst time = jsDate.getTime();\n\t\tconst startDate = toGregorian(new NgbDate(date.year, 1, 1));\n\t\treturn Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n\t}\n\n\tgetToday(): NgbDate {\n\t\treturn fromGregorian(new Date());\n\t}\n\n\tisValid(date?: NgbDate | null): boolean {\n\t\treturn (\n\t\t\tdate != null &&\n\t\t\tisInteger(date.year) &&\n\t\t\tisInteger(date.month) &&\n\t\t\tisInteger(date.day) &&\n\t\t\t!isNaN(toGregorian(date).getTime())\n\t\t);\n\t}\n}\n","import { NgbDate } from '../ngb-date';\nimport { NgbDateStruct } from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n\treturn (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n\tlet monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n\tlet fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n\tlet dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n\tlet timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n\tlet dayOfWeek = dayNumber % 7; // 0 == Monday\n\n\tif (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n\t\tdayNumber++;\n\t\tdayOfWeek = dayNumber % 7;\n\t}\n\tif (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n\t\tdayNumber += 2;\n\t} else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n\t\tdayNumber++;\n\t}\n\treturn dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n\tlet days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\tif (isGregorianLeapYear(year)) {\n\t\tdays[1]++;\n\t}\n\treturn days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n\treturn isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n\treturn numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year?: number): boolean {\n\tif (year != null) {\n\t\tlet b = (year * 12 + 17) % 19;\n\t\treturn b >= (b < 0 ? -7 : 12);\n\t}\n\treturn false;\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n\tlet yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n\tlet yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n\tlet leapYear = isHebrewLeapYear(year);\n\tlet daysInMonth = leapYear\n\t\t? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29]\n\t\t: [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\tif (yearType > 0) {\n\t\tdaysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n\t}\n\tif (yearType > 1) {\n\t\tdaysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n\t}\n\treturn daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n\tlet numberOfDay = 0;\n\tfor (let i = 1; i < date.month; i++) {\n\t\tnumberOfDay += getDaysInHebrewMonth(i, date.year);\n\t}\n\treturn numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n\tlet after = val >= 0;\n\tif (!after) {\n\t\tval = -val;\n\t}\n\twhile (val > 0) {\n\t\tif (after) {\n\t\t\tif (val > getHebrewMonths(date.year) - date.month) {\n\t\t\t\tval -= getHebrewMonths(date.year) - date.month + 1;\n\t\t\t\tdate.year++;\n\t\t\t\tdate.month = 1;\n\t\t\t} else {\n\t\t\t\tdate.month += val;\n\t\t\t\tval = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (val >= date.month) {\n\t\t\t\tdate.year--;\n\t\t\t\tval -= date.month;\n\t\t\t\tdate.month = getHebrewMonths(date.year);\n\t\t\t} else {\n\t\t\t\tdate.month -= val;\n\t\t\t\tval = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n\tlet after = val >= 0;\n\tif (!after) {\n\t\tval = -val;\n\t}\n\twhile (val > 0) {\n\t\tif (after) {\n\t\t\tif (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n\t\t\t\tval -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n\t\t\t\tdate.year++;\n\t\t\t\tdate.month = 1;\n\t\t\t\tdate.day = 1;\n\t\t\t} else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n\t\t\t\tval -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n\t\t\t\tdate.month++;\n\t\t\t\tdate.day = 1;\n\t\t\t} else {\n\t\t\t\tdate.day += val;\n\t\t\t\tval = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (val >= date.day) {\n\t\t\t\tval -= date.day;\n\t\t\t\tdate.month--;\n\t\t\t\tif (date.month === 0) {\n\t\t\t\t\tdate.year--;\n\t\t\t\t\tdate.month = getHebrewMonths(date.year);\n\t\t\t\t}\n\t\t\t\tdate.day = getDaysInHebrewMonth(date.month, date.year);\n\t\t\t} else {\n\t\t\t\tdate.day -= val;\n\t\t\t\tval = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n\tconst date = new Date(gdate);\n\tconst gYear = date.getFullYear(),\n\t\tgMonth = date.getMonth(),\n\t\tgDay = date.getDate();\n\tlet julianDay =\n\t\tGREGORIAN_EPOCH -\n\t\t1 +\n\t\t365 * (gYear - 1) +\n\t\tMath.floor((gYear - 1) / 4) -\n\t\tMath.floor((gYear - 1) / 100) +\n\t\tMath.floor((gYear - 1) / 400) +\n\t\tMath.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n\tjulianDay = Math.floor(julianDay + 0.5);\n\tlet daysSinceHebEpoch = julianDay - 347997;\n\tlet monthsSinceHebEpoch = Math.floor((daysSinceHebEpoch * PARTS_PER_DAY) / PARTS_PER_MONTH);\n\tlet hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n\tlet firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n\tlet dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\twhile (dayOfYear < 1) {\n\t\thYear--;\n\t\tfirstDayOfThisYear = numberOfFirstDayInYear(hYear);\n\t\tdayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\t}\n\tlet hMonth = 1;\n\tlet hDay = dayOfYear;\n\twhile (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n\t\thDay -= getDaysInHebrewMonth(hMonth, hYear);\n\t\thMonth++;\n\t}\n\treturn new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n\tconst hYear = hebrewDate.year;\n\tconst hMonth = hebrewDate.month;\n\tconst hDay = hebrewDate.day;\n\tlet days = numberOfFirstDayInYear(hYear);\n\tfor (let i = 1; i < hMonth; i++) {\n\t\tdays += getDaysInHebrewMonth(i, hYear);\n\t}\n\tdays += hDay;\n\tlet diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n\tlet after = diffDays >= 0;\n\tif (!after) {\n\t\tdiffDays = -diffDays;\n\t}\n\tlet gYear = 1970;\n\tlet gMonth = 1;\n\tlet gDay = 1;\n\twhile (diffDays > 0) {\n\t\tif (after) {\n\t\t\tif (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n\t\t\t\tdiffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n\t\t\t\tgYear++;\n\t\t\t} else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n\t\t\t\tdiffDays -= getDaysInGregorianMonth(gMonth, gYear);\n\t\t\t\tgMonth++;\n\t\t\t} else {\n\t\t\t\tgDay += diffDays;\n\t\t\t\tdiffDays = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n\t\t\t\tdiffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n\t\t\t\tgYear--;\n\t\t\t} else {\n\t\t\t\tif (gMonth > 1) {\n\t\t\t\t\tgMonth--;\n\t\t\t\t} else {\n\t\t\t\t\tgMonth = 12;\n\t\t\t\t\tgYear--;\n\t\t\t\t}\n\t\t\t\tif (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n\t\t\t\t\tdiffDays -= getDaysInGregorianMonth(gMonth, gYear);\n\t\t\t\t} else {\n\t\t\t\t\tgDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n\t\t\t\t\tdiffDays = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n\tif (!numerals) {\n\t\treturn '';\n\t}\n\tconst hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n\tconst hArray10_19 = [\n\t\t'\\u05d9',\n\t\t'\\u05d9\\u05d0',\n\t\t'\\u05d9\\u05d1',\n\t\t'\\u05d9\\u05d2',\n\t\t'\\u05d9\\u05d3',\n\t\t'\\u05d8\\u05d5',\n\t\t'\\u05d8\\u05d6',\n\t\t'\\u05d9\\u05d6',\n\t\t'\\u05d9\\u05d7',\n\t\t'\\u05d9\\u05d8',\n\t];\n\tconst hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n\tconst hArray100_900 = [\n\t\t'',\n\t\t'\\u05e7',\n\t\t'\\u05e8',\n\t\t'\\u05e9',\n\t\t'\\u05ea',\n\t\t'\\u05ea\\u05e7',\n\t\t'\\u05ea\\u05e8',\n\t\t'\\u05ea\\u05e9',\n\t\t'\\u05ea\\u05ea',\n\t\t'\\u05ea\\u05ea\\u05e7',\n\t];\n\tconst hArray1000_9000 = [\n\t\t'',\n\t\t'\\u05d0',\n\t\t'\\u05d1',\n\t\t'\\u05d1\\u05d0',\n\t\t'\\u05d1\\u05d1',\n\t\t'\\u05d4',\n\t\t'\\u05d4\\u05d0',\n\t\t'\\u05d4\\u05d1',\n\t\t'\\u05d4\\u05d1\\u05d0',\n\t\t'\\u05d4\\u05d1\\u05d1',\n\t];\n\tconst geresh = '\\u05f3',\n\t\tgershaim = '\\u05f4';\n\tlet mem = 0;\n\tlet result: string[] = [];\n\tlet step = 0;\n\twhile (numerals > 0) {\n\t\tlet m = numerals % 10;\n\t\tif (step === 0) {\n\t\t\tmem = m;\n\t\t} else if (step === 1) {\n\t\t\tif (m !== 1) {\n\t\t\t\tresult.unshift(hArray20_90[m], hArray0_9[mem]);\n\t\t\t} else {\n\t\t\t\tresult.unshift(hArray10_19[mem]);\n\t\t\t}\n\t\t} else if (step === 2) {\n\t\t\tresult.unshift(hArray100_900[m]);\n\t\t} else {\n\t\t\tif (m !== 5) {\n\t\t\t\tresult.unshift(hArray1000_9000[m], geresh, ' ');\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tnumerals = Math.floor(numerals / 10);\n\t\tif (step === 0 && numerals === 0) {\n\t\t\tresult.unshift(hArray0_9[m]);\n\t\t}\n\t\tstep++;\n\t}\n\tresult = result.join('').split('');\n\tif (result.length === 1) {\n\t\tresult.push(geresh);\n\t} else if (result.length > 1) {\n\t\tresult.splice(result.length - 1, 0, gershaim);\n\t}\n\treturn result.join('');\n}\n","import { NgbDate } from '../ngb-date';\nimport { fromJSDate, NgbCalendar, NgbPeriod, toJSDate } from '../ngb-calendar';\nimport { Injectable } from '@angular/core';\nimport { isNumber } from '../../util/util';\nimport {\n\tfromGregorian,\n\tgetDayNumberInHebrewYear,\n\tgetDaysInHebrewMonth,\n\tisHebrewLeapYear,\n\ttoGregorian,\n\tsetHebrewDay,\n\tsetHebrewMonth,\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n\tgetDaysPerWeek() {\n\t\treturn 7;\n\t}\n\n\tgetMonths(year?: number) {\n\t\tif (year && isHebrewLeapYear(year)) {\n\t\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\t\t} else {\n\t\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\t\t}\n\t}\n\n\tgetWeeksPerMonth() {\n\t\treturn 6;\n\t}\n\n\tisValid(date?: NgbDate | null): boolean {\n\t\tif (date != null) {\n\t\t\tlet b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n\t\t\tb = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n\t\t\tb = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n\t\t\treturn b && !isNaN(toGregorian(date).getTime());\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\tdate = new NgbDate(date.year, date.month, date.day);\n\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tdate.year += number;\n\t\t\t\tdate.month = 1;\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'm':\n\t\t\t\tdate = setHebrewMonth(date, number);\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'd':\n\t\t\t\treturn setHebrewDay(date, number);\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\t}\n\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate) {\n\t\tconst day = toGregorian(date).getDay();\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\treturn day === 0 ? 7 : day;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n\t\tconst date = week[week.length - 1];\n\t\treturn Math.ceil(getDayNumberInHebrewYear(date) / 7);\n\t}\n\n\tgetToday(): NgbDate {\n\t\treturn fromGregorian(new Date());\n\t}\n\n\t/**\n\t * @since 3.4.0\n\t */\n\ttoGregorian(date: NgbDate): NgbDate {\n\t\treturn fromJSDate(toGregorian(date));\n\t}\n\n\t/**\n\t * @since 3.4.0\n\t */\n\tfromGregorian(date: NgbDate): NgbDate {\n\t\treturn fromGregorian(toJSDate(date));\n\t}\n}\n","import { NgbDatepickerI18n } from '../datepicker-i18n';\nimport { NgbDateStruct } from '../../index';\nimport { hebrewNumerals, isHebrewLeapYear } from './hebrew';\nimport { Injectable } from '@angular/core';\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = [\n\t'תשרי',\n\t'חשון',\n\t'כסלו',\n\t'טבת',\n\t'שבט',\n\t'אדר א׳',\n\t'אדר ב׳',\n\t'ניסן',\n\t'אייר',\n\t'סיון',\n\t'תמוז',\n\t'אב',\n\t'אלול',\n];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n\tgetMonthShortName(month: number, year?: number): string {\n\t\treturn this.getMonthFullName(month, year);\n\t}\n\n\tgetMonthFullName(month: number, year?: number): string {\n\t\treturn isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n\t}\n\n\tgetWeekdayLabel(weekday: number, width?: Intl.DateTimeFormatOptions['weekday']) {\n\t\treturn WEEKDAYS[weekday - 1] || '';\n\t}\n\n\tgetDayAriaLabel(date: NgbDateStruct): string {\n\t\treturn `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n\t}\n\n\tgetDayNumerals(date: NgbDateStruct): string {\n\t\treturn hebrewNumerals(date.day);\n\t}\n\n\tgetWeekNumerals(weekNumber: number): string {\n\t\treturn hebrewNumerals(weekNumber);\n\t}\n\n\tgetYearNumerals(year: number): string {\n\t\treturn hebrewNumerals(year);\n\t}\n}\n","import { NgbDate } from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nexport function toGregorian(date: NgbDate): Date {\n\treturn new Date(date.year - 543, date.month - 1, date.day);\n}\n\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n\treturn new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n","import { Injectable } from '@angular/core';\nimport { isInteger } from '../../util/util';\nimport { NgbCalendarGregorian, NgbPeriod } from '../ngb-calendar';\nimport { NgbDate } from '../ngb-date';\nimport { fromGregorian, toGregorian } from './buddhist';\n\n/**\n * @since 9.1.0\n */\n@Injectable()\nexport class NgbCalendarBuddhist extends NgbCalendarGregorian {\n\tgetToday(): NgbDate {\n\t\treturn fromGregorian(new Date());\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\tlet jsDate = toGregorian(date);\n\t\tlet checkMonth = true;\n\t\tlet expectedMonth = jsDate.getMonth();\n\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tjsDate.setFullYear(jsDate.getFullYear() + number);\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\texpectedMonth += number;\n\t\t\t\tjsDate.setMonth(expectedMonth);\n\t\t\t\texpectedMonth = expectedMonth % 12;\n\t\t\t\tif (expectedMonth < 0) {\n\t\t\t\t\texpectedMonth = expectedMonth + 12;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tjsDate.setDate(jsDate.getDate() + number);\n\t\t\t\tcheckMonth = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\n\t\tif (checkMonth && jsDate.getMonth() !== expectedMonth) {\n\t\t\t// this means the destination month has less days than the initial month\n\t\t\t// let's go back to the end of the previous month:\n\t\t\tjsDate.setDate(0);\n\t\t}\n\n\t\treturn fromGregorian(jsDate);\n\t}\n\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate) {\n\t\tlet jsDate = toGregorian(date);\n\t\tlet day = jsDate.getDay();\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\treturn day === 0 ? 7 : day;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n\t\t// in JS Date Sun=0, in ISO 8601 Sun=7\n\t\tif (firstDayOfWeek === 7) {\n\t\t\tfirstDayOfWeek = 0;\n\t\t}\n\n\t\tconst thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n\t\tlet date = week[thursdayIndex];\n\n\t\tconst jsDate = toGregorian(date);\n\t\tjsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\t\tconst time = jsDate.getTime();\n\t\tjsDate.setMonth(0); // Compare with Jan 1\n\t\tjsDate.setDate(1);\n\t\treturn Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n\t}\n\n\tisValid(date?: NgbDate | null): boolean {\n\t\tif (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// year 0 doesn't exist in Gregorian calendar\n\t\tif (date.year === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst jsDate = toGregorian(date);\n\n\t\treturn (\n\t\t\t!isNaN(jsDate.getTime()) &&\n\t\t\tjsDate.getFullYear() === date.year - 543 &&\n\t\t\tjsDate.getMonth() + 1 === date.month &&\n\t\t\tjsDate.getDate() === date.day\n\t\t);\n\t}\n}\n","import { NgbDate } from '../ngb-date';\n\nconst JD_EPOCH = 1724220.5;\nconst DAYSPERMONTH = [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 5];\n\n/**\n * Determine whether this date is in a leap year.\n * * `year` is the year to examine\n * returns boolean - true if this is a leap year, false if not\n * */\n\nexport function isEthiopianLeapYear(year: number): boolean {\n\tif (year != null) {\n\t\treturn year % 4 == 3 || year % 4 == -1;\n\t}\n\treturn false;\n}\n\n/**\n * Sets the Ethiopian year.\n * * `date` is Ethiopian date\n * * `yearValue` incremented year\n * returns NgbDate - ethiopian date\n * */\n\nexport function setEthiopianYear(date: NgbDate, yearValue: number): NgbDate {\n\tdate.year = +yearValue;\n\treturn date;\n}\n\n/**\n * Sets the Ethiopian month.\n * * `date` is Ethiopian date\n * * `val` incremented month\n * returns NgbDate - Ethiopian date\n * */\nexport function setEthiopianMonth(date: NgbDate, val: number): NgbDate {\n\tval = +val;\n\tdate.year = date.year + Math.floor((val - 1) / 13);\n\tdate.month = Math.floor((((val - 1) % 13) + 13) % 13) + 1;\n\treturn date;\n}\n\n/**\n * Sets the Ethiopian day.\n * * `date` is Ethiopian date\n * * `day` incremented day\n * returns NgbDate - Ethiopian date\n * */\nexport function setEthiopianDay(date: NgbDate, day: number): NgbDate {\n\tlet mDays = getDaysPerMonth(date.month, date.year);\n\tif (day <= 0) {\n\t\twhile (day <= 0) {\n\t\t\tdate = setEthiopianMonth(date, date.month - 1);\n\t\t\tmDays = getDaysPerMonth(date.month, date.year);\n\t\t\tday += mDays;\n\t\t}\n\t} else if (day > mDays) {\n\t\twhile (day > mDays) {\n\t\t\tday -= mDays;\n\t\t\tdate = setEthiopianMonth(date, date.month + 1);\n\t\t\tmDays = getDaysPerMonth(date.month, date.year);\n\t\t}\n\t}\n\tdate.day = day;\n\treturn date;\n}\n\nfunction getDaysPerMonth(month: number, year: number): number {\n\tlet leapYear = isEthiopianLeapYear(year);\n\treturn DAYSPERMONTH[month - 1] + (month === 13 && leapYear ? 1 : 0);\n}\n\nexport function toGregorian(ethiopianDate: NgbDate): Date {\n\tlet jdn = ethiopianToJulian(ethiopianDate.year, ethiopianDate.month, ethiopianDate.day);\n\tlet date = julianToGregorian(jdn);\n\tdate.setHours(6, 30, 3, 200);\n\treturn date;\n}\n\nexport function fromGregorian(gdate: Date): NgbDate {\n\tlet g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n\treturn juilianToEthiopia(g2d);\n}\n\nexport function ethiopianToJulian(year: number, month: number, day: number) {\n\tif (year < 0) {\n\t\tyear++;\n\t} // No year zero\n\treturn day + (month - 1) * 30 + (year - 1) * 365 + Math.floor(year / 4) + JD_EPOCH - 1;\n}\n\nfunction juilianToEthiopia(jd: number) {\n\tlet c = Math.floor(jd) + 0.5 - JD_EPOCH;\n\tlet year = Math.floor((c - Math.floor((c + 366) / 1461)) / 365) + 1;\n\tif (year <= 0) {\n\t\tyear--;\n\t} // No year zero\n\tc = Math.floor(jd) + 0.5 - ethiopianToJulian(year, 1, 1);\n\tlet month = Math.floor(c / 30) + 1;\n\tlet day = c - (month - 1) * 30 + 1;\n\treturn new NgbDate(year, month, day);\n}\n\nfunction julianToGregorian(jd: number) {\n\tlet z = Math.floor(jd + 0.5);\n\tlet a = Math.floor((z - 1867216.25) / 36524.25);\n\ta = z + 1 + a - Math.floor(a / 4);\n\tlet b = a + 1524;\n\tlet c = Math.floor((b - 122.1) / 365.25);\n\tlet d = Math.floor(365.25 * c);\n\tlet e = Math.floor((b - d) / 30.6001);\n\tlet day = b - d - Math.floor(e * 30.6001);\n\tlet month = e - (e > 13.5 ? 13 : 1);\n\tlet year = c - (month > 2.5 ? 4716 : 4715);\n\tif (year <= 0) {\n\t\tyear--;\n\t} // No year zero\n\treturn new Date(year, month, day);\n}\n\nexport function gregorianToJulian(year: number, month: number, day: number) {\n\tif (year < 0) {\n\t\tyear++;\n\t} // No year zero\n\t// Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\n\tif (month < 3) {\n\t\tmonth += 12;\n\t\tyear--;\n\t}\n\tlet a = Math.floor(year / 100);\n\tlet b = 2 - a + Math.floor(a / 4);\n\treturn Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5;\n}\n","import { Injectable } from '@angular/core';\nimport { isInteger } from '../../util/util';\nimport { NgbCalendar, NgbPeriod } from '../ngb-calendar';\nimport { NgbDate } from '../ngb-date';\nimport {\n\tethiopianToJulian,\n\tfromGregorian,\n\tsetEthiopianDay,\n\tsetEthiopianMonth,\n\tsetEthiopianYear,\n\ttoGregorian,\n} from './ethiopian';\n\n/**\n * @since 16.0.0\n */\n@Injectable()\nexport class NgbCalendarEthiopian extends NgbCalendar {\n\tgetDaysPerWeek(): number {\n\t\treturn 7;\n\t}\n\n\tgetMonths(year?: number | undefined): number[] {\n\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\t}\n\n\tgetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1): NgbDate {\n\t\tdate = new NgbDate(date.year, date.month, date.day);\n\t\tswitch (period) {\n\t\t\tcase 'y':\n\t\t\t\tdate = setEthiopianYear(date, date.year + number);\n\t\t\t\tdate.month = 1;\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'm':\n\t\t\t\tdate = setEthiopianMonth(date, date.month + number);\n\t\t\t\tdate.day = 1;\n\t\t\t\treturn date;\n\t\t\tcase 'd':\n\t\t\t\treturn setEthiopianDay(date, date.day + number);\n\t\t\tdefault:\n\t\t\t\treturn date;\n\t\t}\n\t}\n\tgetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n\t\treturn this.getNext(date, period, -number);\n\t}\n\n\tgetWeekday(date: NgbDate): number {\n\t\tconst dt = Math.floor(ethiopianToJulian(date.year, date.month, date.day) + 3) % 7;\n\t\treturn dt === 0 ? 7 : dt;\n\t}\n\n\tgetWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number {\n\t\tif (firstDayOfWeek === 7) {\n\t\t\tfirstDayOfWeek = 0;\n\t\t}\n\n\t\tconst thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n\t\tconst date = week[thursdayIndex];\n\t\tconst jsDate = toGregorian(date);\n\t\tjsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\t\tconst time = jsDate.getTime();\n\t\tconst startDate = toGregorian(new NgbDate(date.year, 1, 1));\n\t\treturn Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n\t}\n\n\tgetWeeksPerMonth() {\n\t\treturn 6;\n\t}\n\n\tgetToday(): NgbDate {\n\t\treturn fromGregorian(new Date());\n\t}\n\n\tisValid(date: NgbDate): boolean {\n\t\treturn (\n\t\t\tdate &&\n\t\t\tisInteger(date.year) &&\n\t\t\tisInteger(date.month) &&\n\t\t\tisInteger(date.day) &&\n\t\t\t!isNaN(toGregorian(date).getTime())\n\t\t);\n\t}\n}\n","import { NgbDatepickerI18n } from '../datepicker-i18n';\nimport { Injectable } from '@angular/core';\nimport { NgbDateStruct } from '../../index';\n\nconst WEEKDAYS = ['እሑድ', 'ሰኞ', 'ማክሰኞ', 'ረቡዕ', 'ሓሙስ', 'ዓርብ', 'ቅዳሜ'];\nconst MONTHS = ['መስከረም', 'ጥቅምት', 'ኅዳር', 'ታህሣሥ', 'ጥር', 'የካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰኔ', 'ሐምሌ', 'ነሐሴ', 'ጳጉሜ'];\n\n/**\n * @since 16.0.0\n */\n@Injectable()\nexport class NgbDatepickerI18nAmharic extends NgbDatepickerI18n {\n\tgetMonthShortName(month: number, year?: number | undefined): string {\n\t\treturn this.getMonthFullName(month, year);\n\t}\n\n\tgetMonthFullName(month: number, year?: number | undefined): string {\n\t\treturn MONTHS[month - 1];\n\t}\n\n\tgetWeekdayLabel(weekday: number, width?: Intl.DateTimeFormatOptions['weekday']): string {\n\t\treturn WEEKDAYS[weekday - 1];\n\t}\n\n\tgetDayAriaLabel(date: NgbDateStruct): string {\n\t\treturn `${date.day} ${this.getMonthFullName(date.month, date.year)} ${date.year}`;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateAdapter } from './ngb-date-adapter';\nimport { NgbDateStruct } from '../ngb-date-struct';\nimport { isInteger } from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n\t/**\n\t * Converts a native `Date` to a `NgbDateStruct`.\n\t */\n\tfromModel(date: Date | null): NgbDateStruct | null {\n\t\treturn date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n\t}\n\n\t/**\n\t * Converts a `NgbDateStruct` to a native `Date`.\n\t */\n\ttoModel(date: NgbDateStruct | null): Date | null {\n\t\treturn date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n\t\t\t? this._toNativeDate(date)\n\t\t\t: null;\n\t}\n\n\tprotected _fromNativeDate(date: Date): NgbDateStruct {\n\t\treturn { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n\t}\n\n\tprotected _toNativeDate(date: NgbDateStruct): Date {\n\t\tconst jsDate = new Date(date.year, date.month - 1, date.day, 12);\n\t\t// avoid 30 -> 1930 conversion\n\t\tjsDate.setFullYear(date.year);\n\t\treturn jsDate;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateStruct } from '../ngb-date-struct';\nimport { NgbDateNativeAdapter } from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n\tprotected _fromNativeDate(date: Date): NgbDateStruct {\n\t\treturn { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n\t}\n\n\tprotected _toNativeDate(date: NgbDateStruct): Date {\n\t\tconst jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n\t\t// avoid 30 -> 1930 conversion\n\t\tjsDate.setUTCFullYear(date.year);\n\t\treturn jsDate;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { NgbDatepicker, NgbDatepickerContent } from './datepicker';\nimport { NgbDatepickerMonth } from './datepicker';\nimport { NgbInputDatepicker } from './datepicker-input';\n\nexport { NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState } from './datepicker';\nexport { NgbInputDatepicker } from './datepicker-input';\nexport { NgbCalendar, NgbPeriod, NgbCalendarGregorian } from './ngb-calendar';\nexport { NgbCalendarIslamicCivil } from './hijri/ngb-calendar-islamic-civil';\nexport { NgbCalendarIslamicUmalqura } from './hijri/ngb-calendar-islamic-umalqura';\nexport { NgbCalendarPersian } from './jalali/ngb-calendar-persian';\nexport { NgbCalendarHebrew } from './hebrew/ngb-calendar-hebrew';\nexport { NgbDatepickerI18nHebrew } from './hebrew/datepicker-i18n-hebrew';\nexport { NgbCalendarBuddhist } from './buddhist/ngb-calendar-buddhist';\nexport { NgbCalendarEthiopian } from './ethiopian/ngb-calendar-ethiopian';\nexport { NgbDatepickerI18nAmharic } from './ethiopian/datepicker-i18n-amharic';\nexport { NgbDatepickerMonth } from './datepicker';\nexport { NgbDatepickerDayView } from './datepicker-day-view';\nexport { NgbDatepickerNavigation } from './datepicker-navigation';\nexport { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';\nexport { NgbDatepickerConfig } from './datepicker-config';\nexport { NgbInputDatepickerConfig } from './datepicker-input-config';\nexport { NgbDatepickerI18n, NgbDatepickerI18nDefault } from './datepicker-i18n';\nexport { NgbDateStruct } from './ngb-date-struct';\nexport { NgbDate } from './ngb-date';\nexport { NgbDateAdapter, NgbDateStructAdapter } from './adapters/ngb-date-adapter';\nexport { NgbDateNativeAdapter } from './adapters/ngb-date-native-adapter';\nexport { NgbDateNativeUTCAdapter } from './adapters/ngb-date-native-utc-adapter';\nexport { NgbDateParserFormatter } from './ngb-date-parser-formatter';\nexport { NgbDatepickerKeyboardService } from './datepicker-keyboard-service';\n\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n\n@NgModule({\n\texports: NGB_DATEPICKER_DIRECTIVES,\n\timports: NGB_DATEPICKER_DIRECTIVES,\n})\nexport class NgbDatepickerModule {}\n","import { Injectable } from '@angular/core';\nimport { Options } from '@popperjs/core';\nimport { PlacementArray } from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbDropdownConfig {\n\tautoClose: boolean | 'outside' | 'inside' = true;\n\tplacement: PlacementArray = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\tpopperOptions = (options: Partial<Options>) => options;\n\tcontainer: null | 'body' = null;\n}\n","import {\n\tAfterContentInit,\n\tafterNextRender,\n\tafterRender,\n\tAfterRenderRef,\n\tChangeDetectorRef,\n\tContentChild,\n\tContentChildren,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tQueryList,\n\tSimpleChanges,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { ngbPositioning, Placement, PlacementArray } from '../util/positioning';\nimport { addPopperOffset } from '../util/positioning-util';\nimport { ngbAutoClose, SOURCE } from '../util/autoclose';\n\nimport { NgbDropdownConfig } from './dropdown-config';\nimport { FOCUSABLE_ELEMENTS_SELECTOR } from '../util/focus-trap';\nimport { getActiveElement } from '../util/util';\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({\n\tselector: '[ngbDropdownItem]',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'dropdown-item',\n\t\t'[class.disabled]': 'disabled',\n\t\t'[tabIndex]': 'disabled ? -1 : tabindex',\n\t},\n})\nexport class NgbDropdownItem {\n\tstatic ngAcceptInputType_disabled: boolean | '';\n\n\tprivate _disabled = false;\n\n\tnativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\t@Input() tabindex: string | number = 0;\n\n\t@Input()\n\tset disabled(value: boolean) {\n\t\tthis._disabled = <any>value === '' || value === true; // accept an empty attribute as true\n\t}\n\n\tget disabled(): boolean {\n\t\treturn this._disabled;\n\t}\n}\n\n/**\n * A directive that will be applied if dropdown item is a button.\n * It will only set the disabled property.\n */\n@Directive({\n\tselector: 'button[ngbDropdownItem]',\n\tstandalone: true,\n\thost: { '[disabled]': 'item.disabled' },\n})\nexport class NgbDropdownButtonItem {\n\titem = inject(NgbDropdownItem);\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n\tselector: '[ngbDropdownMenu]',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'dropdown-menu',\n\t\t'[class.show]': 'dropdown.isOpen()',\n\t\t'(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Home)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.End)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Enter)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Space)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Tab)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n\t},\n})\nexport class NgbDropdownMenu {\n\tdropdown = inject(NgbDropdown);\n\tnativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\t@ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n\tselector: '[ngbDropdownAnchor]',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'dropdown-toggle',\n\t\t'[class.show]': 'dropdown.isOpen()',\n\t\t'[attr.aria-expanded]': 'dropdown.isOpen()',\n\t},\n})\nexport class NgbDropdownAnchor {\n\tdropdown = inject(NgbDropdown);\n\tnativeElement = inject(ElementRef).nativeElement as HTMLElement;\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n\tselector: '[ngbDropdownToggle]',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'dropdown-toggle',\n\t\t'[class.show]': 'dropdown.isOpen()',\n\t\t'[attr.aria-expanded]': 'dropdown.isOpen()',\n\t\t'(click)': 'dropdown.toggle()',\n\t\t'(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Home)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.End)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Tab)': 'dropdown.onKeyDown($event)',\n\t\t'(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n\t},\n\tproviders: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }],\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({\n\tselector: '[ngbDropdown]',\n\texportAs: 'ngbDropdown',\n\tstandalone: true,\n\thost: { '[class.show]': 'isOpen()' },\n})\nexport class NgbDropdown implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\tstatic ngAcceptInputType_autoClose: boolean | string;\n\tstatic ngAcceptInputType_display: string;\n\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _config = inject(NgbDropdownConfig);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _injector = inject(Injector);\n\tprivate _ngZone = inject(NgZone);\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\tprivate _destroyCloseHandlers$ = new Subject<void>();\n\tprivate _afterRenderRef: AfterRenderRef | undefined;\n\tprivate _bodyContainer: HTMLElement | null = null;\n\n\tprivate _positioning = ngbPositioning();\n\n\t@ContentChild(NgbDropdownMenu, { static: false }) private _menu: NgbDropdownMenu;\n\t@ContentChild(NgbDropdownAnchor, { static: false }) private _anchor: NgbDropdownAnchor;\n\n\t/**\n\t * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n\t *\n\t * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n\t * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n\t * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n\t * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n\t */\n\t@Input() autoClose = this._config.autoClose;\n\n\t/**\n\t * A custom class that is applied only to the `ngbDropdownMenu` parent element.\n\t * * In case of the inline dropdown it will be the `<div ngbDropdown>`\n\t * * In case of the dropdown with  `container=\"body\"` it will be the `<div class=\"dropdown\">` attached to the `<body>`\n\t *\n\t * Useful mainly when dropdown is attached to the body.\n\t * If the dropdown is inline just use `<div ngbDropdown class=\"custom-class\">` instead.\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() dropdownClass: string;\n\n\t/**\n\t * Defines whether or not the dropdown menu is opened initially.\n\t */\n\t@Input('open') _open = false;\n\n\t/**\n\t * The preferred placement of the dropdown, among the [possible values](#/guides/positioning#api).\n\t *\n\t * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n\t *\n\t * Please see the [positioning overview](#/positioning) for more details.\n\t */\n\t@Input() placement = this._config.placement;\n\n\t/**\n\t * Allows to change default Popper options when positioning the dropdown.\n\t * Receives current popper options and returns modified ones.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() popperOptions = this._config.popperOptions;\n\n\t/**\n\t * A selector specifying the element the dropdown should be appended to.\n\t * Currently only supports \"body\".\n\t *\n\t * @since 4.1.0\n\t */\n\t@Input() container: null | 'body' = this._config.container;\n\n\t/**\n\t * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n\t * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n\t * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n\t * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n\t *\n\t * @since 4.2.0\n\t */\n\t@Input() display: 'dynamic' | 'static';\n\n\t/**\n\t * An event fired when the dropdown is opened or closed.\n\t *\n\t * The event payload is a `boolean`:\n\t * * `true` - the dropdown was opened\n\t * * `false` - the dropdown was closed\n\t */\n\t@Output() openChange = new EventEmitter<boolean>();\n\n\tngOnInit(): void {\n\t\tif (!this.display) {\n\t\t\tthis.display = this._nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n\t\t}\n\t}\n\n\tngAfterContentInit() {\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\twrite: () => {\n\t\t\t\t\tthis._applyPlacementClasses();\n\t\t\t\t\tif (this._open) {\n\t\t\t\t\t\tthis._setCloseHandlers();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ injector: this._injector },\n\t\t);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.container && this._open) {\n\t\t\tthis._applyContainer(this.container);\n\t\t}\n\n\t\tif (changes.placement && !changes.placement.firstChange) {\n\t\t\tthis._positioning.setOptions({\n\t\t\t\thostElement: this._anchor.nativeElement,\n\t\t\t\ttargetElement: this._bodyContainer || this._menu.nativeElement,\n\t\t\t\tplacement: this.placement,\n\t\t\t});\n\t\t\tthis._applyPlacementClasses();\n\t\t}\n\n\t\tif (changes.dropdownClass) {\n\t\t\tconst { currentValue, previousValue } = changes.dropdownClass;\n\t\t\tthis._applyCustomDropdownClass(currentValue, previousValue);\n\t\t}\n\n\t\tif (changes.autoClose && this._open) {\n\t\t\tthis.autoClose = changes.autoClose.currentValue;\n\t\t\tthis._setCloseHandlers();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the dropdown menu is open.\n\t */\n\tisOpen(): boolean {\n\t\treturn this._open;\n\t}\n\n\t/**\n\t * Opens the dropdown menu.\n\t */\n\topen(): void {\n\t\tif (!this._open) {\n\t\t\tthis._open = true;\n\t\t\tthis._applyContainer(this.container);\n\t\t\tthis.openChange.emit(true);\n\t\t\tthis._setCloseHandlers();\n\t\t\tif (this._anchor) {\n\t\t\t\tthis._anchor.nativeElement.focus();\n\t\t\t\tif (this.display === 'dynamic') {\n\t\t\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\t\t\tthis._positioning.createPopper({\n\t\t\t\t\t\t\thostElement: this._anchor.nativeElement,\n\t\t\t\t\t\t\ttargetElement: this._bodyContainer || this._menu.nativeElement,\n\t\t\t\t\t\t\tplacement: this.placement,\n\t\t\t\t\t\t\tupdatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._applyPlacementClasses();\n\t\t\t\t\t\tthis._afterRenderRef = afterRender(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twrite: () => {\n\t\t\t\t\t\t\t\t\tthis._positionMenu();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ injector: this._injector },\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _setCloseHandlers() {\n\t\tthis._destroyCloseHandlers$.next(); // destroy any existing close handlers\n\n\t\tngbAutoClose(\n\t\t\tthis._ngZone,\n\t\t\tthis._document,\n\t\t\tthis.autoClose,\n\t\t\t(source: SOURCE) => {\n\t\t\t\tthis.close();\n\t\t\t\tif (source === SOURCE.ESCAPE) {\n\t\t\t\t\tthis._anchor.nativeElement.focus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis._destroyCloseHandlers$,\n\t\t\tthis._menu ? [this._menu.nativeElement] : [],\n\t\t\tthis._anchor ? [this._anchor.nativeElement] : [],\n\t\t\t'.dropdown-item,.dropdown-divider',\n\t\t);\n\t}\n\n\t/**\n\t * Closes the dropdown menu.\n\t */\n\tclose(): void {\n\t\tif (this._open) {\n\t\t\tthis._open = false;\n\t\t\tthis._resetContainer();\n\t\t\tthis._positioning.destroy();\n\t\t\tthis._afterRenderRef?.destroy();\n\t\t\tthis._destroyCloseHandlers$.next();\n\t\t\tthis.openChange.emit(false);\n\t\t\tthis._changeDetector.markForCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the dropdown menu.\n\t */\n\ttoggle(): void {\n\t\tif (this.isOpen()) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.close();\n\t}\n\n\tonKeyDown(event: KeyboardEvent) {\n\t\tconst { key } = event;\n\t\tconst itemElements = this._getMenuElements();\n\n\t\tlet position = -1;\n\t\tlet itemElement: HTMLElement | null = null;\n\t\tconst isEventFromToggle = this._isEventFromToggle(event);\n\n\t\tif (!isEventFromToggle && itemElements.length) {\n\t\t\titemElements.forEach((item, index) => {\n\t\t\t\tif (item.contains(event.target as HTMLElement)) {\n\t\t\t\t\titemElement = item;\n\t\t\t\t}\n\t\t\t\tif (item === getActiveElement(this._document)) {\n\t\t\t\t\tposition = index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// closing on Enter / Space\n\t\tif (key === ' ' || key === 'Enter') {\n\t\t\tif (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n\t\t\t\t// Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n\t\t\t\t// So we have to register a one-time click handler that will fire after any user defined click handlers\n\t\t\t\t// to close the dropdown\n\t\t\t\tfromEvent(itemElement, 'click')\n\t\t\t\t\t.pipe(take(1))\n\t\t\t\t\t.subscribe(() => this.close());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (key === 'Tab') {\n\t\t\tif (event.target && this.isOpen() && this.autoClose) {\n\t\t\t\tif (this._anchor.nativeElement === event.target) {\n\t\t\t\t\tif (this.container === 'body' && !event.shiftKey) {\n\t\t\t\t\t\t/* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n\t\t\t\t\t\tthis._menu.nativeElement.setAttribute('tabindex', '0');\n\t\t\t\t\t\tthis._menu.nativeElement.focus();\n\t\t\t\t\t\tthis._menu.nativeElement.removeAttribute('tabindex');\n\t\t\t\t\t} else if (event.shiftKey) {\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this.container === 'body') {\n\t\t\t\t\tconst focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n\t\t\t\t\tif (event.shiftKey && event.target === focusableElements[0]) {\n\t\t\t\t\t\tthis._anchor.nativeElement.focus();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t} else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n\t\t\t\t\t\tthis._anchor.nativeElement.focus();\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfromEvent<FocusEvent>(event.target as HTMLElement, 'focusout')\n\t\t\t\t\t\t.pipe(take(1))\n\t\t\t\t\t\t.subscribe(({ relatedTarget }) => {\n\t\t\t\t\t\t\tif (!this._nativeElement.contains(relatedTarget as HTMLElement)) {\n\t\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// opening / navigating\n\t\tif (isEventFromToggle || itemElement) {\n\t\t\tthis.open();\n\n\t\t\tif (itemElements.length) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\t\tposition = Math.min(position + 1, itemElements.length - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\t\tif (this._isDropup() && position === -1) {\n\t\t\t\t\t\t\tposition = itemElements.length - 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tposition = Math.max(position - 1, 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Home':\n\t\t\t\t\t\tposition = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'End':\n\t\t\t\t\t\tposition = itemElements.length - 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\titemElements[position].focus();\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tprivate _isDropup(): boolean {\n\t\treturn this._nativeElement.classList.contains('dropup');\n\t}\n\n\tprivate _isEventFromToggle(event: KeyboardEvent) {\n\t\treturn this._anchor.nativeElement.contains(event.target as HTMLElement);\n\t}\n\n\tprivate _getMenuElements(): HTMLElement[] {\n\t\treturn this._menu\n\t\t\t? this._menu.menuItems.filter(({ disabled }) => !disabled).map(({ nativeElement }) => nativeElement)\n\t\t\t: [];\n\t}\n\n\tprivate _positionMenu() {\n\t\tconst menu = this._menu;\n\t\tif (this.isOpen() && menu) {\n\t\t\tif (this.display === 'dynamic') {\n\t\t\t\tthis._positioning.update();\n\t\t\t\tthis._applyPlacementClasses();\n\t\t\t} else {\n\t\t\t\tthis._applyPlacementClasses(this._getFirstPlacement(this.placement));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _getFirstPlacement(placement: PlacementArray): Placement {\n\t\treturn Array.isArray(placement) ? placement[0] : (placement.split(' ')[0] as Placement);\n\t}\n\n\tprivate _resetContainer() {\n\t\tif (this._menu) {\n\t\t\tthis._nativeElement.appendChild(this._menu.nativeElement);\n\t\t}\n\t\tif (this._bodyContainer) {\n\t\t\tthis._document.body.removeChild(this._bodyContainer);\n\t\t\tthis._bodyContainer = null;\n\t\t}\n\t}\n\n\tprivate _applyContainer(container: null | 'body' = null) {\n\t\tthis._resetContainer();\n\t\tif (container === 'body') {\n\t\t\tconst dropdownMenuElement = this._menu.nativeElement;\n\t\t\tconst bodyContainer = (this._bodyContainer = this._bodyContainer || this._document.createElement('div'));\n\n\t\t\t// Override some styles to have the positioning working\n\t\t\tbodyContainer.style.position = 'absolute';\n\t\t\tdropdownMenuElement.style.position = 'static';\n\t\t\tbodyContainer.style.zIndex = '1055';\n\n\t\t\tbodyContainer.appendChild(dropdownMenuElement);\n\t\t\tthis._document.body.appendChild(bodyContainer);\n\t\t}\n\n\t\tthis._applyCustomDropdownClass(this.dropdownClass);\n\t}\n\n\tprivate _applyCustomDropdownClass(newClass: string, oldClass?: string) {\n\t\tconst targetElement = this.container === 'body' ? this._bodyContainer : this._nativeElement;\n\t\tif (targetElement) {\n\t\t\tif (oldClass) {\n\t\t\t\ttargetElement.classList.remove(oldClass);\n\t\t\t}\n\t\t\tif (newClass) {\n\t\t\t\ttargetElement.classList.add(newClass);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _applyPlacementClasses(placement?: Placement | null) {\n\t\tif (this._menu) {\n\t\t\tif (!placement) {\n\t\t\t\tplacement = this._getFirstPlacement(this.placement);\n\t\t\t}\n\n\t\t\t// remove the current placement classes\n\t\t\tthis._nativeElement.classList.remove('dropup', 'dropdown');\n\t\t\tif (this.display === 'static') {\n\t\t\t\tthis._menu.nativeElement.setAttribute('data-bs-popper', 'static');\n\t\t\t} else {\n\t\t\t\tthis._menu.nativeElement.removeAttribute('data-bs-popper');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * apply the new placement\n\t\t\t * in case of top use up-arrow or down-arrow otherwise\n\t\t\t */\n\t\t\tconst dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n\t\t\tthis._nativeElement.classList.add(dropdownClass);\n\n\t\t\tif (this._bodyContainer) {\n\t\t\t\tthis._bodyContainer.classList.remove('dropup', 'dropdown');\n\t\t\t\tthis._bodyContainer.classList.add(dropdownClass);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport {\n\tNgbDropdown,\n\tNgbDropdownAnchor,\n\tNgbDropdownToggle,\n\tNgbDropdownMenu,\n\tNgbDropdownItem,\n\tNgbDropdownButtonItem,\n} from './dropdown';\n\nexport {\n\tNgbDropdown,\n\tNgbDropdownAnchor,\n\tNgbDropdownToggle,\n\tNgbDropdownMenu,\n\tNgbDropdownItem,\n\tNgbDropdownButtonItem,\n} from './dropdown';\nexport { NgbDropdownConfig } from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [\n\tNgbDropdown,\n\tNgbDropdownAnchor,\n\tNgbDropdownToggle,\n\tNgbDropdownMenu,\n\tNgbDropdownItem,\n\tNgbDropdownButtonItem,\n];\n\n@NgModule({\n\timports: NGB_DROPDOWN_DIRECTIVES,\n\texports: NGB_DROPDOWN_DIRECTIVES,\n})\nexport class NgbDropdownModule {}\n","import { inject, Injectable, Injector } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n\t/**\n\t * If `true`, modal opening and closing will be animated.\n\t *\n\t * @since 8.0.0\n\t */\n\tanimation?: boolean;\n\n\t/**\n\t * `aria-labelledby` attribute value to set on the modal window.\n\t *\n\t * @since 2.2.0\n\t */\n\tariaLabelledBy?: string;\n\n\t/**\n\t * `aria-describedby` attribute value to set on the modal window.\n\t *\n\t * @since 6.1.0\n\t */\n\tariaDescribedBy?: string;\n\n\t/**\n\t * If `true`, the backdrop element will be created for a given modal.\n\t *\n\t * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n\t *\n\t * Default value is `true`.\n\t */\n\tbackdrop?: boolean | 'static';\n\n\t/**\n\t * Callback right before the modal will be dismissed.\n\t *\n\t * If this function returns:\n\t * * `false`\n\t * * a promise resolved with `false`\n\t * * a promise that is rejected\n\t *\n\t * then the modal won't be dismissed.\n\t */\n\tbeforeDismiss?: () => boolean | Promise<boolean>;\n\n\t/**\n\t * If `true`, the modal will be centered vertically.\n\t *\n\t * Default value is `false`.\n\t *\n\t * @since 1.1.0\n\t */\n\tcentered?: boolean;\n\n\t/**\n\t * A selector specifying the element all new modal windows should be appended to.\n\t * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n\t *\n\t * If not specified, will be `body`.\n\t */\n\tcontainer?: string | HTMLElement;\n\n\t/**\n\t * If `true` modal will always be displayed in fullscreen mode.\n\t *\n\t * For values like `'md'` it means that modal will be displayed in fullscreen mode\n\t * only if the viewport width is below `'md'`. For custom strings (ex. when passing `'mysize'`)\n\t * it will add a `'modal-fullscreen-mysize-down'` class.\n\t *\n\t * If not specified will be `false`.\n\t *\n\t * @since 12.1.0\n\t */\n\tfullscreen?: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | boolean | string;\n\n\t/**\n\t * The `Injector` to use for modal content.\n\t */\n\tinjector?: Injector;\n\n\t/**\n\t * If `true`, the modal will be closed when `Escape` key is pressed\n\t *\n\t * Default value is `true`.\n\t */\n\tkeyboard?: boolean;\n\n\t/**\n\t * `role` attribute value to set on the modal window.\n\t *\n\t * Default value is `dialog`.\n\t *\n\t * @since 18.0.0\n\t */\n\trole?: 'alertdialog' | 'dialog';\n\n\t/**\n\t * Scrollable modal content (false by default).\n\t *\n\t * @since 5.0.0\n\t */\n\tscrollable?: boolean;\n\n\t/**\n\t * Size of a new modal window.\n\t */\n\tsize?: 'sm' | 'lg' | 'xl' | string;\n\n\t/**\n\t * A custom class to append to the modal window.\n\t */\n\twindowClass?: string;\n\n\t/**\n\t * A custom class to append to the modal dialog.\n\t *\n\t * @since 9.1.0\n\t */\n\tmodalDialogClass?: string;\n\n\t/**\n\t * A custom class to append to the modal backdrop.\n\t *\n\t * @since 1.1.0\n\t */\n\tbackdropClass?: string;\n}\n\n/**\n * Options that can be changed on an opened modal with `NgbModalRef.update()` and `NgbActiveModal.update()` methods.\n *\n * @since 14.2.0\n */\nexport type NgbModalUpdatableOptions = Pick<\n\tNgbModalOptions,\n\t| 'ariaLabelledBy'\n\t| 'ariaDescribedBy'\n\t| 'centered'\n\t| 'fullscreen'\n\t| 'backdropClass'\n\t| 'size'\n\t| 'windowClass'\n\t| 'modalDialogClass'\n>;\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tariaLabelledBy: string;\n\tariaDescribedBy: string;\n\tbackdrop: boolean | 'static' = true;\n\tbeforeDismiss: () => boolean | Promise<boolean>;\n\tcentered: boolean;\n\tcontainer: string | HTMLElement;\n\tfullscreen: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | boolean | string = false;\n\tinjector: Injector;\n\tkeyboard = true;\n\trole: 'alertdialog' | 'dialog' = 'dialog';\n\tscrollable: boolean;\n\tsize: 'sm' | 'lg' | 'xl' | string;\n\twindowClass: string;\n\tmodalDialogClass: string;\n\tbackdropClass: string;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import {\n\tafterNextRender,\n\tApplicationRef,\n\tComponentRef,\n\tinject,\n\tInjector,\n\tNgZone,\n\tTemplateRef,\n\tType,\n\tViewContainerRef,\n\tViewRef,\n} from '@angular/core';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\nimport { ngbRunTransition } from './transition/ngbTransition';\nimport { DOCUMENT } from '@angular/common';\n\nexport class ContentRef {\n\tconstructor(\n\t\tpublic nodes: Node[][],\n\t\tpublic viewRef?: ViewRef,\n\t\tpublic componentRef?: ComponentRef<any>,\n\t) {}\n}\n\nexport class PopupService<T> {\n\tprivate _windowRef: ComponentRef<T> | null = null;\n\tprivate _contentRef: ContentRef | null = null;\n\n\tprivate _document = inject(DOCUMENT);\n\tprivate _applicationRef = inject(ApplicationRef);\n\tprivate _injector = inject(Injector);\n\tprivate _viewContainerRef = inject(ViewContainerRef);\n\tprivate _ngZone = inject(NgZone);\n\n\tconstructor(private _componentType: Type<T>) {}\n\n\topen(\n\t\tcontent?: string | TemplateRef<any>,\n\t\ttemplateContext?: any,\n\t\tanimation = false,\n\t): { windowRef: ComponentRef<T>; transition$: Observable<void> } {\n\t\tif (!this._windowRef) {\n\t\t\tthis._contentRef = this._getContentRef(content, templateContext);\n\t\t\tthis._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n\t\t\t\tinjector: this._injector,\n\t\t\t\tprojectableNodes: this._contentRef.nodes,\n\t\t\t});\n\t\t}\n\n\t\tconst { nativeElement } = this._windowRef.location;\n\n\t\tconst nextRenderSubject = new Subject<void>();\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\tnextRenderSubject.next();\n\t\t\t\t\tnextRenderSubject.complete();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tinjector: this._injector,\n\t\t\t},\n\t\t);\n\t\tconst transition$ = nextRenderSubject.pipe(\n\t\t\tmergeMap(() =>\n\t\t\t\tngbRunTransition(this._ngZone, nativeElement, ({ classList }) => classList.add('show'), {\n\t\t\t\t\tanimation,\n\t\t\t\t\trunningTransition: 'continue',\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\treturn { windowRef: this._windowRef, transition$ };\n\t}\n\n\tclose(animation = false): Observable<void> {\n\t\tif (!this._windowRef) {\n\t\t\treturn of(undefined);\n\t\t}\n\n\t\treturn ngbRunTransition(\n\t\t\tthis._ngZone,\n\t\t\tthis._windowRef.location.nativeElement,\n\t\t\t({ classList }) => classList.remove('show'),\n\t\t\t{ animation, runningTransition: 'stop' },\n\t\t).pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis._windowRef?.destroy();\n\t\t\t\tthis._contentRef?.viewRef?.destroy();\n\t\t\t\tthis._windowRef = null;\n\t\t\t\tthis._contentRef = null;\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _getContentRef(content?: string | TemplateRef<any>, templateContext?: any): ContentRef {\n\t\tif (!content) {\n\t\t\treturn new ContentRef([]);\n\t\t} else if (content instanceof TemplateRef) {\n\t\t\tconst viewRef = content.createEmbeddedView(templateContext);\n\t\t\tthis._applicationRef.attachView(viewRef);\n\t\t\treturn new ContentRef([viewRef.rootNodes], viewRef);\n\t\t} else {\n\t\t\treturn new ContentRef([[this._document.createTextNode(`${content}`)]]);\n\t\t}\n\t}\n}\n","import { inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/** Type for the callback used to revert the scrollbar. */\nexport type ScrollbarReverter = () => void;\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\n@Injectable({ providedIn: 'root' })\nexport class ScrollBar {\n\tprivate _document = inject(DOCUMENT);\n\n\t/**\n\t * To be called to hide a potential vertical scrollbar:\n\t * - if a scrollbar is there and has a width greater than 0, adds some compensation\n\t * padding to the body to keep the same layout as when the scrollbar is there\n\t * - adds overflow: hidden\n\t *\n\t * @return a callback used to revert the change\n\t */\n\thide(): ScrollbarReverter {\n\t\tconst scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n\t\tconst body = this._document.body;\n\t\tconst bodyStyle = body.style;\n\t\tconst { overflow, paddingRight } = bodyStyle;\n\t\tif (scrollbarWidth > 0) {\n\t\t\tconst actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n\t\t\tbodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n\t\t}\n\t\tbodyStyle.overflow = 'hidden';\n\t\treturn () => {\n\t\t\tif (scrollbarWidth > 0) {\n\t\t\t\tbodyStyle.paddingRight = paddingRight;\n\t\t\t}\n\t\t\tbodyStyle.overflow = overflow;\n\t\t};\n\t}\n}\n","import {\n\tafterNextRender,\n\tComponent,\n\tElementRef,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnInit,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { ngbRunTransition } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\n\n@Component({\n\tselector: 'ngb-modal-backdrop',\n\tstandalone: true,\n\tencapsulation: ViewEncapsulation.None,\n\ttemplate: '',\n\thost: {\n\t\t'[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n\t\t'[class.show]': '!animation',\n\t\t'[class.fade]': 'animation',\n\t\tstyle: 'z-index: 1055',\n\t},\n})\nexport class NgbModalBackdrop implements OnInit {\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\tprivate _zone = inject(NgZone);\n\tprivate _injector = inject(Injector);\n\n\t@Input() animation: boolean;\n\t@Input() backdropClass: string;\n\n\tngOnInit() {\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\tmixedReadWrite: () =>\n\t\t\t\t\tngbRunTransition(\n\t\t\t\t\t\tthis._zone,\n\t\t\t\t\t\tthis._nativeElement,\n\t\t\t\t\t\t(element: HTMLElement, animation: boolean) => {\n\t\t\t\t\t\t\tif (animation) {\n\t\t\t\t\t\t\t\treflow(element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telement.classList.add('show');\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ animation: this.animation, runningTransition: 'continue' },\n\t\t\t\t\t),\n\t\t\t},\n\t\t\t{ injector: this._injector },\n\t\t);\n\t}\n\n\thide(): Observable<void> {\n\t\treturn ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n\t\t\tanimation: this.animation,\n\t\t\trunningTransition: 'stop',\n\t\t});\n\t}\n}\n","import { ComponentRef } from '@angular/core';\n\nimport { Observable, of, Subject, zip } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NgbModalBackdrop } from './modal-backdrop';\nimport { NgbModalWindow } from './modal-window';\nimport { NgbModalOptions, NgbModalUpdatableOptions } from './modal-config';\nimport { isDefined } from '../util/util';\n\nimport { ContentRef } from '../util/popup';\nimport { isPromise } from '../util/util';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n\t/**\n\t * Updates options of an opened modal.\n\t *\n\t * @since 14.2.0\n\t */\n\tupdate(options: NgbModalUpdatableOptions): void {}\n\t/**\n\t * Closes the modal with an optional `result` value.\n\t *\n\t * The `NgbModalRef.result` promise will be resolved with the provided value.\n\t */\n\tclose(result?: any): void {}\n\n\t/**\n\t * Dismisses the modal with an optional `reason` value.\n\t *\n\t * The `NgbModalRef.result` promise will be rejected with the provided value.\n\t */\n\tdismiss(reason?: any): void {}\n}\n\nconst WINDOW_ATTRIBUTES: string[] = [\n\t'animation',\n\t'ariaLabelledBy',\n\t'ariaDescribedBy',\n\t'backdrop',\n\t'centered',\n\t'fullscreen',\n\t'keyboard',\n\t'role',\n\t'scrollable',\n\t'size',\n\t'windowClass',\n\t'modalDialogClass',\n];\nconst BACKDROP_ATTRIBUTES: string[] = ['animation', 'backdropClass'];\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n\tprivate _closed = new Subject<any>();\n\tprivate _dismissed = new Subject<any>();\n\tprivate _hidden = new Subject<void>();\n\tprivate _resolve: (result?: any) => void;\n\tprivate _reject: (reason?: any) => void;\n\n\tprivate _applyWindowOptions(windowInstance: NgbModalWindow, options: NgbModalOptions): void {\n\t\tWINDOW_ATTRIBUTES.forEach((optionName: string) => {\n\t\t\tif (isDefined(options[optionName])) {\n\t\t\t\twindowInstance[optionName] = options[optionName];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: NgbModalOptions): void {\n\t\tBACKDROP_ATTRIBUTES.forEach((optionName: string) => {\n\t\t\tif (isDefined(options[optionName])) {\n\t\t\t\tbackdropInstance[optionName] = options[optionName];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Updates options of an opened modal.\n\t *\n\t * @since 14.2.0\n\t */\n\tupdate(options: NgbModalUpdatableOptions): void {\n\t\tthis._applyWindowOptions(this._windowCmptRef.instance, options);\n\t\tif (this._backdropCmptRef && this._backdropCmptRef.instance) {\n\t\t\tthis._applyBackdropOptions(this._backdropCmptRef.instance, options);\n\t\t}\n\t}\n\n\t/**\n\t * The instance of a component used for the modal content.\n\t *\n\t * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n\t */\n\tget componentInstance(): any {\n\t\tif (this._contentRef && this._contentRef.componentRef) {\n\t\t\treturn this._contentRef.componentRef.instance;\n\t\t}\n\t}\n\n\t/**\n\t * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n\t */\n\tresult: Promise<any>;\n\n\t/**\n\t * The observable that emits when the modal is closed via the `.close()` method.\n\t *\n\t * It will emit the result passed to the `.close()` method.\n\t *\n\t * @since 8.0.0\n\t */\n\tget closed(): Observable<any> {\n\t\treturn this._closed.asObservable().pipe(takeUntil(this._hidden));\n\t}\n\n\t/**\n\t * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n\t *\n\t * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n\t * reasons like backdrop click or ESC key press.\n\t *\n\t * @since 8.0.0\n\t */\n\tget dismissed(): Observable<any> {\n\t\treturn this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n\t}\n\n\t/**\n\t * The observable that emits when both modal window and backdrop are closed and animations were finished.\n\t * At this point modal and backdrop elements will be removed from the DOM tree.\n\t *\n\t * This observable will be completed after emitting.\n\t *\n\t * @since 8.0.0\n\t */\n\tget hidden(): Observable<void> {\n\t\treturn this._hidden.asObservable();\n\t}\n\n\t/**\n\t * The observable that emits when modal is fully visible and animation was finished.\n\t * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n\t *\n\t * This observable will be completed after emitting.\n\t * It will not emit, if modal is closed before open animation is finished.\n\t *\n\t * @since 8.0.0\n\t */\n\tget shown(): Observable<void> {\n\t\treturn this._windowCmptRef.instance.shown.asObservable();\n\t}\n\n\tconstructor(\n\t\tprivate _windowCmptRef: ComponentRef<NgbModalWindow>,\n\t\tprivate _contentRef: ContentRef,\n\t\tprivate _backdropCmptRef?: ComponentRef<NgbModalBackdrop>,\n\t\tprivate _beforeDismiss?: () => boolean | Promise<boolean>,\n\t) {\n\t\t_windowCmptRef.instance.dismissEvent.subscribe((reason: any) => {\n\t\t\tthis.dismiss(reason);\n\t\t});\n\n\t\tthis.result = new Promise((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\t\t});\n\t\tthis.result.then(null, () => {});\n\t}\n\n\t/**\n\t * Closes the modal with an optional `result` value.\n\t *\n\t * The `NgbMobalRef.result` promise will be resolved with the provided value.\n\t */\n\tclose(result?: any): void {\n\t\tif (this._windowCmptRef) {\n\t\t\tthis._closed.next(result);\n\t\t\tthis._resolve(result);\n\t\t\tthis._removeModalElements();\n\t\t}\n\t}\n\n\tprivate _dismiss(reason?: any) {\n\t\tthis._dismissed.next(reason);\n\t\tthis._reject(reason);\n\t\tthis._removeModalElements();\n\t}\n\n\t/**\n\t * Dismisses the modal with an optional `reason` value.\n\t *\n\t * The `NgbModalRef.result` promise will be rejected with the provided value.\n\t */\n\tdismiss(reason?: any): void {\n\t\tif (this._windowCmptRef) {\n\t\t\tif (!this._beforeDismiss) {\n\t\t\t\tthis._dismiss(reason);\n\t\t\t} else {\n\t\t\t\tconst dismiss = this._beforeDismiss();\n\t\t\t\tif (isPromise(dismiss)) {\n\t\t\t\t\tdismiss.then(\n\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\tthis._dismiss(reason);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {},\n\t\t\t\t\t);\n\t\t\t\t} else if (dismiss !== false) {\n\t\t\t\t\tthis._dismiss(reason);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _removeModalElements() {\n\t\tconst windowTransition$ = this._windowCmptRef.instance.hide();\n\t\tconst backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n\n\t\t// hiding window\n\t\twindowTransition$.subscribe(() => {\n\t\t\tconst { nativeElement } = this._windowCmptRef.location;\n\t\t\tnativeElement.parentNode.removeChild(nativeElement);\n\t\t\tthis._windowCmptRef.destroy();\n\t\t\tthis._contentRef?.viewRef?.destroy();\n\n\t\t\tthis._windowCmptRef = <any>null;\n\t\t\tthis._contentRef = <any>null;\n\t\t});\n\n\t\t// hiding backdrop\n\t\tbackdropTransition$.subscribe(() => {\n\t\t\tif (this._backdropCmptRef) {\n\t\t\t\tconst { nativeElement } = this._backdropCmptRef.location;\n\t\t\t\tnativeElement.parentNode.removeChild(nativeElement);\n\t\t\t\tthis._backdropCmptRef.destroy();\n\t\t\t\tthis._backdropCmptRef = <any>null;\n\t\t\t}\n\t\t});\n\n\t\t// all done\n\t\tzip(windowTransition$, backdropTransition$).subscribe(() => {\n\t\t\tthis._hidden.next();\n\t\t\tthis._hidden.complete();\n\t\t});\n\t}\n}\n","export enum ModalDismissReasons {\n\tBACKDROP_CLICK,\n\tESC,\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n\tafterNextRender,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { fromEvent, Observable, Subject, zip } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\n\nimport { getFocusableBoundaryElements } from '../util/focus-trap';\nimport { ModalDismissReasons } from './modal-dismiss-reasons';\nimport { ngbRunTransition, NgbTransitionOptions } from '../util/transition/ngbTransition';\nimport { isString, reflow } from '../util/util';\n\n@Component({\n\tselector: 'ngb-modal-window',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n\t\t'[class.fade]': 'animation',\n\t\ttabindex: '-1',\n\t\t'[attr.aria-modal]': 'true',\n\t\t'[attr.aria-labelledby]': 'ariaLabelledBy',\n\t\t'[attr.aria-describedby]': 'ariaDescribedBy',\n\t\t'[attr.role]': 'role',\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content /></div>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './modal.scss',\n})\nexport class NgbModalWindow implements OnInit, OnDestroy {\n\tprivate _document = inject(DOCUMENT);\n\tprivate _elRef = inject(ElementRef<HTMLElement>);\n\tprivate _zone = inject(NgZone);\n\tprivate _injector = inject(Injector);\n\n\tprivate _closed$ = new Subject<void>();\n\tprivate _elWithFocus: Element | null = null; // element that is focused prior to modal opening\n\n\t@ViewChild('dialog', { static: true }) private _dialogEl: ElementRef<HTMLElement>;\n\n\t@Input() animation: boolean;\n\t@Input() ariaLabelledBy: string;\n\t@Input() ariaDescribedBy: string;\n\t@Input() backdrop: boolean | string = true;\n\t@Input() centered: string;\n\t@Input() fullscreen: string | boolean;\n\t@Input() keyboard = true;\n\t@Input() role: string = 'dialog';\n\t@Input() scrollable: string;\n\t@Input() size: string;\n\t@Input() windowClass: string;\n\t@Input() modalDialogClass: string;\n\n\t@Output('dismiss') dismissEvent = new EventEmitter();\n\n\tshown = new Subject<void>();\n\thidden = new Subject<void>();\n\n\tget fullscreenClass(): string {\n\t\treturn this.fullscreen === true\n\t\t\t? ' modal-fullscreen'\n\t\t\t: isString(this.fullscreen)\n\t\t\t  ? ` modal-fullscreen-${this.fullscreen}-down`\n\t\t\t  : '';\n\t}\n\n\tdismiss(reason): void {\n\t\tthis.dismissEvent.emit(reason);\n\t}\n\n\tngOnInit() {\n\t\tthis._elWithFocus = this._document.activeElement;\n\t\tafterNextRender({ mixedReadWrite: () => this._show() }, { injector: this._injector });\n\t}\n\n\tngOnDestroy() {\n\t\tthis._disableEventHandling();\n\t}\n\n\thide(): Observable<any> {\n\t\tconst { nativeElement } = this._elRef;\n\t\tconst context: NgbTransitionOptions<any> = { animation: this.animation, runningTransition: 'stop' };\n\n\t\tconst windowTransition$ = ngbRunTransition(\n\t\t\tthis._zone,\n\t\t\tnativeElement,\n\t\t\t() => nativeElement.classList.remove('show'),\n\t\t\tcontext,\n\t\t);\n\t\tconst dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n\n\t\tconst transitions$ = zip(windowTransition$, dialogTransition$);\n\t\ttransitions$.subscribe(() => {\n\t\t\tthis.hidden.next();\n\t\t\tthis.hidden.complete();\n\t\t});\n\n\t\tthis._disableEventHandling();\n\t\tthis._restoreFocus();\n\n\t\treturn transitions$;\n\t}\n\n\tprivate _show() {\n\t\tconst context: NgbTransitionOptions<any> = { animation: this.animation, runningTransition: 'continue' };\n\n\t\tconst windowTransition$ = ngbRunTransition(\n\t\t\tthis._zone,\n\t\t\tthis._elRef.nativeElement,\n\t\t\t(element: HTMLElement, animation: boolean) => {\n\t\t\t\tif (animation) {\n\t\t\t\t\treflow(element);\n\t\t\t\t}\n\t\t\t\telement.classList.add('show');\n\t\t\t},\n\t\t\tcontext,\n\t\t);\n\t\tconst dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n\n\t\tzip(windowTransition$, dialogTransition$).subscribe(() => {\n\t\t\tthis.shown.next();\n\t\t\tthis.shown.complete();\n\t\t});\n\n\t\tthis._enableEventHandling();\n\t\tthis._setFocus();\n\t}\n\n\tprivate _enableEventHandling() {\n\t\tconst { nativeElement } = this._elRef;\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tfromEvent<KeyboardEvent>(nativeElement, 'keydown')\n\t\t\t\t.pipe(\n\t\t\t\t\ttakeUntil(this._closed$),\n\t\t\t\t\tfilter((e) => e.key === 'Escape'),\n\t\t\t\t)\n\t\t\t\t.subscribe((event) => {\n\t\t\t\t\tif (this.keyboard) {\n\t\t\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t\t\tif (!event.defaultPrevented) {\n\t\t\t\t\t\t\t\tthis._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this.backdrop === 'static') {\n\t\t\t\t\t\tthis._bumpBackdrop();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n\t\t\t// inside the modal dialog and releasing it outside\n\t\t\tlet preventClose = false;\n\t\t\tfromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n\t\t\t\t.pipe(\n\t\t\t\t\ttakeUntil(this._closed$),\n\t\t\t\t\ttap(() => (preventClose = false)),\n\t\t\t\t\tswitchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n\t\t\t\t\tfilter(({ target }) => nativeElement === target),\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\t\t\t\t\tpreventClose = true;\n\t\t\t\t});\n\n\t\t\t// We're listening to 'click' to dismiss modal on modal window click, except when:\n\t\t\t// 1. clicking on modal dialog itself\n\t\t\t// 2. closing was prevented by mousedown/up handlers\n\t\t\t// 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\t\t\tfromEvent<MouseEvent>(nativeElement, 'click')\n\t\t\t\t.pipe(takeUntil(this._closed$))\n\t\t\t\t.subscribe(({ target }) => {\n\t\t\t\t\tif (nativeElement === target) {\n\t\t\t\t\t\tif (this.backdrop === 'static') {\n\t\t\t\t\t\t\tthis._bumpBackdrop();\n\t\t\t\t\t\t} else if (this.backdrop === true && !preventClose) {\n\t\t\t\t\t\t\tthis._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpreventClose = false;\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate _disableEventHandling() {\n\t\tthis._closed$.next();\n\t}\n\n\tprivate _setFocus() {\n\t\tconst { nativeElement } = this._elRef;\n\t\tif (!nativeElement.contains(document.activeElement)) {\n\t\t\tconst autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n\t\t\tconst firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n\t\t\tconst elementToFocus = autoFocusable || firstFocusable || nativeElement;\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n\n\tprivate _restoreFocus() {\n\t\tconst body = this._document.body;\n\t\tconst elWithFocus = this._elWithFocus;\n\n\t\tlet elementToFocus;\n\t\tif (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n\t\t\telementToFocus = elWithFocus;\n\t\t} else {\n\t\t\telementToFocus = body;\n\t\t}\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tsetTimeout(() => elementToFocus.focus());\n\t\t\tthis._elWithFocus = null;\n\t\t});\n\t}\n\n\tprivate _bumpBackdrop() {\n\t\tif (this.backdrop === 'static') {\n\t\t\tngbRunTransition(\n\t\t\t\tthis._zone,\n\t\t\t\tthis._elRef.nativeElement,\n\t\t\t\t({ classList }) => {\n\t\t\t\t\tclassList.add('modal-static');\n\t\t\t\t\treturn () => classList.remove('modal-static');\n\t\t\t\t},\n\t\t\t\t{ animation: this.animation, runningTransition: 'continue' },\n\t\t\t);\n\t\t}\n\t}\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n\tApplicationRef,\n\tComponentRef,\n\tcreateComponent,\n\tEnvironmentInjector,\n\tEventEmitter,\n\tinject,\n\tInjectable,\n\tInjector,\n\tNgZone,\n\tTemplateRef,\n\tType,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { ngbFocusTrap } from '../util/focus-trap';\nimport { ContentRef } from '../util/popup';\nimport { ScrollBar } from '../util/scrollbar';\nimport { isDefined, isString } from '../util/util';\nimport { NgbModalBackdrop } from './modal-backdrop';\nimport { NgbModalOptions, NgbModalUpdatableOptions } from './modal-config';\nimport { NgbActiveModal, NgbModalRef } from './modal-ref';\nimport { NgbModalWindow } from './modal-window';\nimport { take } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class NgbModalStack {\n\tprivate _applicationRef = inject(ApplicationRef);\n\tprivate _injector = inject(Injector);\n\tprivate _environmentInjector = inject(EnvironmentInjector);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _scrollBar = inject(ScrollBar);\n\n\tprivate _activeWindowCmptHasChanged = new Subject<void>();\n\tprivate _ariaHiddenValues: Map<Element, string | null> = new Map();\n\tprivate _scrollBarRestoreFn: null | (() => void) = null;\n\tprivate _modalRefs: NgbModalRef[] = [];\n\tprivate _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\tprivate _activeInstances: EventEmitter<NgbModalRef[]> = new EventEmitter();\n\n\tconstructor() {\n\t\tconst ngZone = inject(NgZone);\n\n\t\t// Trap focus on active WindowCmpt\n\t\tthis._activeWindowCmptHasChanged.subscribe(() => {\n\t\t\tif (this._windowCmpts.length) {\n\t\t\t\tconst activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n\t\t\t\tngbFocusTrap(ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n\t\t\t\tthis._revertAriaHidden();\n\t\t\t\tthis._setAriaHidden(activeWindowCmpt.location.nativeElement);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _restoreScrollBar() {\n\t\tconst scrollBarRestoreFn = this._scrollBarRestoreFn;\n\t\tif (scrollBarRestoreFn) {\n\t\t\tthis._scrollBarRestoreFn = null;\n\t\t\tscrollBarRestoreFn();\n\t\t}\n\t}\n\n\tprivate _hideScrollBar() {\n\t\tif (!this._scrollBarRestoreFn) {\n\t\t\tthis._scrollBarRestoreFn = this._scrollBar.hide();\n\t\t}\n\t}\n\n\topen(contentInjector: Injector, content: any, options: NgbModalOptions): NgbModalRef {\n\t\tconst containerEl =\n\t\t\toptions.container instanceof HTMLElement\n\t\t\t\t? options.container\n\t\t\t\t: isDefined(options.container)\n\t\t\t\t  ? this._document.querySelector(options.container!)\n\t\t\t\t  : this._document.body;\n\n\t\tif (!containerEl) {\n\t\t\tthrow new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n\t\t}\n\n\t\tthis._hideScrollBar();\n\n\t\tconst activeModal = new NgbActiveModal();\n\n\t\tcontentInjector = options.injector || contentInjector;\n\t\tconst environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n\t\tconst contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n\n\t\tlet backdropCmptRef: ComponentRef<NgbModalBackdrop> | undefined =\n\t\t\toptions.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n\t\tlet windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(containerEl, contentRef.nodes);\n\t\tlet ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n\t\tthis._registerModalRef(ngbModalRef);\n\t\tthis._registerWindowCmpt(windowCmptRef);\n\n\t\t// We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n\t\t// - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n\t\t// - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n\t\tngbModalRef.hidden.pipe(take(1)).subscribe(() =>\n\t\t\tPromise.resolve(true).then(() => {\n\t\t\t\tif (!this._modalRefs.length) {\n\t\t\t\t\tthis._document.body.classList.remove('modal-open');\n\t\t\t\t\tthis._restoreScrollBar();\n\t\t\t\t\tthis._revertAriaHidden();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tactiveModal.close = (result: any) => {\n\t\t\tngbModalRef.close(result);\n\t\t};\n\t\tactiveModal.dismiss = (reason: any) => {\n\t\t\tngbModalRef.dismiss(reason);\n\t\t};\n\n\t\tactiveModal.update = (options: NgbModalUpdatableOptions) => {\n\t\t\tngbModalRef.update(options);\n\t\t};\n\n\t\tngbModalRef.update(options);\n\t\tif (this._modalRefs.length === 1) {\n\t\t\tthis._document.body.classList.add('modal-open');\n\t\t}\n\n\t\tif (backdropCmptRef && backdropCmptRef.instance) {\n\t\t\tbackdropCmptRef.changeDetectorRef.detectChanges();\n\t\t}\n\t\twindowCmptRef.changeDetectorRef.detectChanges();\n\t\treturn ngbModalRef;\n\t}\n\n\tget activeInstances() {\n\t\treturn this._activeInstances;\n\t}\n\n\tdismissAll(reason?: any) {\n\t\tthis._modalRefs.forEach((ngbModalRef) => ngbModalRef.dismiss(reason));\n\t}\n\n\thasOpenModals(): boolean {\n\t\treturn this._modalRefs.length > 0;\n\t}\n\n\tprivate _attachBackdrop(containerEl: Element): ComponentRef<NgbModalBackdrop> {\n\t\tlet backdropCmptRef = createComponent(NgbModalBackdrop, {\n\t\t\tenvironmentInjector: this._applicationRef.injector,\n\t\t\telementInjector: this._injector,\n\t\t});\n\t\tthis._applicationRef.attachView(backdropCmptRef.hostView);\n\t\tcontainerEl.appendChild(backdropCmptRef.location.nativeElement);\n\t\treturn backdropCmptRef;\n\t}\n\n\tprivate _attachWindowComponent(containerEl: Element, projectableNodes: Node[][]): ComponentRef<NgbModalWindow> {\n\t\tlet windowCmptRef = createComponent(NgbModalWindow, {\n\t\t\tenvironmentInjector: this._applicationRef.injector,\n\t\t\telementInjector: this._injector,\n\t\t\tprojectableNodes,\n\t\t});\n\t\tthis._applicationRef.attachView(windowCmptRef.hostView);\n\t\tcontainerEl.appendChild(windowCmptRef.location.nativeElement);\n\t\treturn windowCmptRef;\n\t}\n\n\tprivate _getContentRef(\n\t\tcontentInjector: Injector,\n\t\tenvironmentInjector: EnvironmentInjector,\n\t\tcontent: Type<any> | TemplateRef<any> | string,\n\t\tactiveModal: NgbActiveModal,\n\t\toptions: NgbModalOptions,\n\t): ContentRef {\n\t\tif (!content) {\n\t\t\treturn new ContentRef([]);\n\t\t} else if (content instanceof TemplateRef) {\n\t\t\treturn this._createFromTemplateRef(content, activeModal);\n\t\t} else if (isString(content)) {\n\t\t\treturn this._createFromString(content);\n\t\t} else {\n\t\t\treturn this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n\t\t}\n\t}\n\n\tprivate _createFromTemplateRef(templateRef: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n\t\tconst context = {\n\t\t\t$implicit: activeModal,\n\t\t\tclose(result) {\n\t\t\t\tactiveModal.close(result);\n\t\t\t},\n\t\t\tdismiss(reason) {\n\t\t\t\tactiveModal.dismiss(reason);\n\t\t\t},\n\t\t};\n\t\tconst viewRef = templateRef.createEmbeddedView(context);\n\t\tthis._applicationRef.attachView(viewRef);\n\t\treturn new ContentRef([viewRef.rootNodes], viewRef);\n\t}\n\n\tprivate _createFromString(content: string): ContentRef {\n\t\tconst component = this._document.createTextNode(`${content}`);\n\t\treturn new ContentRef([[component]]);\n\t}\n\n\tprivate _createFromComponent(\n\t\tcontentInjector: Injector,\n\t\tenvironmentInjector: EnvironmentInjector,\n\t\tcomponentType: Type<any>,\n\t\tcontext: NgbActiveModal,\n\t\toptions: NgbModalOptions,\n\t): ContentRef {\n\t\tconst elementInjector = Injector.create({\n\t\t\tproviders: [{ provide: NgbActiveModal, useValue: context }],\n\t\t\tparent: contentInjector,\n\t\t});\n\t\tconst componentRef = createComponent(componentType, {\n\t\t\tenvironmentInjector,\n\t\t\telementInjector,\n\t\t});\n\t\tconst componentNativeEl = componentRef.location.nativeElement;\n\t\tif (options.scrollable) {\n\t\t\t(componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n\t\t}\n\t\tthis._applicationRef.attachView(componentRef.hostView);\n\t\t// FIXME: we should here get rid of the component nativeElement\n\t\t// and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\t\treturn new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n\t}\n\n\tprivate _setAriaHidden(element: Element) {\n\t\tconst parent = element.parentElement;\n\t\tif (parent && element !== this._document.body) {\n\t\t\tArray.from(parent.children).forEach((sibling) => {\n\t\t\t\tif (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n\t\t\t\t\tthis._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\t\t\t\t\tsibling.setAttribute('aria-hidden', 'true');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._setAriaHidden(parent);\n\t\t}\n\t}\n\n\tprivate _revertAriaHidden() {\n\t\tthis._ariaHiddenValues.forEach((value, element) => {\n\t\t\tif (value) {\n\t\t\t\telement.setAttribute('aria-hidden', value);\n\t\t\t} else {\n\t\t\t\telement.removeAttribute('aria-hidden');\n\t\t\t}\n\t\t});\n\t\tthis._ariaHiddenValues.clear();\n\t}\n\n\tprivate _registerModalRef(ngbModalRef: NgbModalRef) {\n\t\tconst unregisterModalRef = () => {\n\t\t\tconst index = this._modalRefs.indexOf(ngbModalRef);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._modalRefs.splice(index, 1);\n\t\t\t\tthis._activeInstances.emit(this._modalRefs);\n\t\t\t}\n\t\t};\n\t\tthis._modalRefs.push(ngbModalRef);\n\t\tthis._activeInstances.emit(this._modalRefs);\n\t\tngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n\t}\n\n\tprivate _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n\t\tthis._windowCmpts.push(ngbWindowCmpt);\n\t\tthis._activeWindowCmptHasChanged.next();\n\n\t\tngbWindowCmpt.onDestroy(() => {\n\t\t\tconst index = this._windowCmpts.indexOf(ngbWindowCmpt);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._windowCmpts.splice(index, 1);\n\t\t\t\tthis._activeWindowCmptHasChanged.next();\n\t\t\t}\n\t\t});\n\t}\n}\n","import { inject, Injectable, Injector } from '@angular/core';\n\nimport { NgbModalConfig, NgbModalOptions } from './modal-config';\nimport { NgbModalRef } from './modal-ref';\nimport { NgbModalStack } from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbModal {\n\tprivate _injector = inject(Injector);\n\tprivate _modalStack = inject(NgbModalStack);\n\tprivate _config = inject(NgbModalConfig);\n\n\t/**\n\t * Opens a new modal window with the specified content and supplied options.\n\t *\n\t * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n\t * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n\t * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n\t *\n\t * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n\t */\n\topen(content: any, options: NgbModalOptions = {}): NgbModalRef {\n\t\tconst combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n\t\treturn this._modalStack.open(this._injector, content, combinedOptions);\n\t}\n\n\t/**\n\t * Returns an observable that holds the active modal instances.\n\t */\n\tget activeInstances() {\n\t\treturn this._modalStack.activeInstances;\n\t}\n\n\t/**\n\t * Dismisses all currently displayed modal windows with the supplied reason.\n\t *\n\t * @since 3.1.0\n\t */\n\tdismissAll(reason?: any) {\n\t\tthis._modalStack.dismissAll(reason);\n\t}\n\n\t/**\n\t * Indicates if there are currently any open modal windows in the application.\n\t *\n\t * @since 3.3.0\n\t */\n\thasOpenModals(): boolean {\n\t\treturn this._modalStack.hasOpenModals();\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbModal } from './modal';\n\nexport { NgbModal } from './modal';\nexport { NgbModalConfig, NgbModalOptions, NgbModalUpdatableOptions } from './modal-config';\nexport { NgbModalRef, NgbActiveModal } from './modal-ref';\nexport { ModalDismissReasons } from './modal-dismiss-reasons';\n\n@NgModule({ providers: [NgbModal] })\nexport class NgbModalModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbNavConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tdestroyOnHide = true;\n\torientation: 'horizontal' | 'vertical' = 'horizontal';\n\troles: 'tablist' | false = 'tablist';\n\tkeyboard: boolean | 'changeWithArrows' = true;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import {\n\tAfterContentInit,\n\tAttribute,\n\tChangeDetectorRef,\n\tContentChild,\n\tContentChildren,\n\tDestroyRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tQueryList,\n\tSimpleChanges,\n\tTemplateRef,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Subject } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { isDefined } from '../util/util';\nimport { NgbNavConfig } from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n\t/**\n\t * If `true`, current nav content is visible and active\n\t */\n\t$implicit: boolean;\n}\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({ selector: 'ng-template[ngbNavContent]', standalone: true })\nexport class NgbNavContent {\n\ttemplateRef = inject(TemplateRef);\n}\n\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\n@Directive({\n\tselector: '[ngbNavItem]:not(ng-container)',\n\tstandalone: true,\n\thost: {\n\t\t'[attr.role]': `role ? role : nav.roles ? 'presentation' : undefined`,\n\t},\n})\nexport class NgbNavItemRole {\n\tnav = inject(NgbNav);\n\n\tconstructor(@Attribute('role') public role: string) {}\n}\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({\n\tselector: '[ngbNavItem]',\n\texportAs: 'ngbNavItem',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'nav-item',\n\t},\n})\nexport class NgbNavItem implements OnInit {\n\tprivate _nav = inject(NgbNav);\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\t/**\n\t * If `true`, non-active current nav item content will be removed from DOM\n\t * Otherwise it will just be hidden\n\t */\n\t@Input() destroyOnHide;\n\n\t/**\n\t * If `true`, the current nav item is disabled and can't be toggled by user.\n\t *\n\t * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n\t */\n\t@Input() disabled = false;\n\n\t/**\n\t * The id used for the DOM elements.\n\t * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n\t *\n\t * Autogenerated as `ngb-nav-XXX` if not provided.\n\t */\n\t@Input() domId: string;\n\n\t/**\n\t * The id used as a model for active nav.\n\t * It can be anything, but must be unique inside one `ngbNav`.\n\t *\n\t * The only limitation is that it is not possible to have the `''` (empty string) as id,\n\t * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n\t */\n\t@Input('ngbNavItem') _id: any;\n\n\t/**\n\t * An event emitted when the fade in transition is finished on the related nav content\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() shown = new EventEmitter<void>();\n\n\t/**\n\t * An event emitted when the fade out transition is finished on the related nav content\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() hidden = new EventEmitter<void>();\n\n\t@ContentChild(NgbNavContent, { descendants: false }) contentTpl?: NgbNavContent;\n\n\tngOnInit() {\n\t\tif (!isDefined(this.domId)) {\n\t\t\tthis.domId = `ngb-nav-${navCounter++}`;\n\t\t}\n\t}\n\n\tget active() {\n\t\treturn this._nav.activeId === this.id;\n\t}\n\n\tget id() {\n\t\treturn isValidNavId(this._id) ? this._id : this.domId;\n\t}\n\n\tget panelDomId() {\n\t\treturn `${this.domId}-panel`;\n\t}\n\n\tisPanelInDom() {\n\t\treturn (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tisNgContainer() {\n\t\treturn this._nativeElement.nodeType === Node.COMMENT_NODE;\n\t}\n}\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n\tselector: '[ngbNav]',\n\texportAs: 'ngbNav',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'nav',\n\t\t'[class.flex-column]': `orientation === 'vertical'`,\n\t\t'[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n\t\t'[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n\t\t'(keydown.arrowLeft)': 'onKeyDown($event)',\n\t\t'(keydown.arrowRight)': 'onKeyDown($event)',\n\t\t'(keydown.arrowDown)': 'onKeyDown($event)',\n\t\t'(keydown.arrowUp)': 'onKeyDown($event)',\n\t\t'(keydown.Home)': 'onKeyDown($event)',\n\t\t'(keydown.End)': 'onKeyDown($event)',\n\t\t'(focusout)': 'onFocusout($event)',\n\t},\n})\nexport class NgbNav implements AfterContentInit, OnChanges {\n\tstatic ngAcceptInputType_orientation: string;\n\tstatic ngAcceptInputType_roles: boolean | string;\n\n\tprivate _config = inject(NgbNavConfig);\n\tprivate _cd = inject(ChangeDetectorRef);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\tdestroyRef = inject(DestroyRef);\n\n\t_navigatingWithKeyboard = false;\n\n\t/**\n\t * The id of the nav that should be active\n\t *\n\t * You could also use the `.select()` method and the `(navChange)` event\n\t */\n\t@Input() activeId: any;\n\n\t/**\n\t * The event emitted after the active nav changes\n\t * The payload of the event is the newly active nav id\n\t *\n\t * If you want to prevent nav change, you should use `(navChange)` event\n\t */\n\t@Output() activeIdChange = new EventEmitter<any>();\n\n\t/**\n\t * If `true`, nav change will be animated.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * If `true`, non-active nav content will be removed from DOM\n\t * Otherwise it will just be hidden\n\t */\n\t@Input() destroyOnHide = this._config.destroyOnHide;\n\n\t/**\n\t * The orientation of navs.\n\t *\n\t * Using `vertical` will also add the `aria-orientation` attribute\n\t */\n\t@Input() orientation = this._config.orientation;\n\n\t/**\n\t * Role attribute generating strategy:\n\t * - `false` - no role attributes will be generated\n\t * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n\t */\n\t@Input() roles = this._config.roles;\n\n\t/**\n\t * Keyboard support for nav focus/selection using arrow keys.\n\t *\n\t * * `true` - navs will be focused using keyboard arrow keys\n\t * * `false` - no keyboard support\n\t * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\n\t *\n\t * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\n\t *\n\t * @since 6.1.0\n\t */\n\t@Input() keyboard = this._config.keyboard;\n\n\t/**\n\t * An event emitted when the fade in transition is finished for one of the items.\n\t *\n\t * Payload of the event is the nav id that was just shown.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() shown = new EventEmitter<any>();\n\n\t/**\n\t * An event emitted when the fade out transition is finished for one of the items.\n\t *\n\t * Payload of the event is the nav id that was just hidden.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() hidden = new EventEmitter<any>();\n\n\t@ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\t@ContentChildren(forwardRef(() => NgbNavLinkBase), { descendants: true }) links: QueryList<NgbNavLinkBase>;\n\n\tnavItemChange$ = new Subject<NgbNavItem | null>();\n\n\tconstructor(@Attribute('role') public role: string) {}\n\n\t/**\n\t * The nav change event emitted right before the nav change happens on user click.\n\t *\n\t * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n\t *\n\t * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n\t */\n\t@Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n\tclick(item: NgbNavItem) {\n\t\tif (!item.disabled) {\n\t\t\tthis._updateActiveId(item.id);\n\t\t}\n\t}\n\n\tonFocusout({ relatedTarget }: FocusEvent) {\n\t\tif (!this._nativeElement.contains(relatedTarget as HTMLElement)) {\n\t\t\tthis._navigatingWithKeyboard = false;\n\t\t}\n\t}\n\n\tonKeyDown(event: KeyboardEvent) {\n\t\tif (this.roles !== 'tablist' || !this.keyboard) {\n\t\t\treturn;\n\t\t}\n\t\tconst enabledLinks = this.links.filter((link) => !link.navItem.disabled);\n\t\tconst { length } = enabledLinks;\n\n\t\tlet position = -1;\n\n\t\tenabledLinks.forEach((link, index) => {\n\t\t\tif (link.nativeElement === this._document.activeElement) {\n\t\t\t\tposition = index;\n\t\t\t}\n\t\t});\n\n\t\tif (length) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tposition = (position - 1 + length) % length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tposition = (position + 1) % length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Home':\n\t\t\t\t\tposition = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'End':\n\t\t\t\t\tposition = length - 1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.keyboard === 'changeWithArrows') {\n\t\t\t\tthis.select(enabledLinks[position].navItem.id);\n\t\t\t}\n\t\t\tenabledLinks[position].nativeElement.focus();\n\t\t\tthis._navigatingWithKeyboard = true;\n\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Selects the nav with the given id and shows its associated pane.\n\t * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n\t */\n\tselect(id: any) {\n\t\tthis._updateActiveId(id, false);\n\t}\n\n\tngAfterContentInit() {\n\t\tif (!isDefined(this.activeId)) {\n\t\t\tconst nextId = this.items.first ? this.items.first.id : null;\n\t\t\tif (isValidNavId(nextId)) {\n\t\t\t\tthis._updateActiveId(nextId, false);\n\t\t\t\tthis._cd.detectChanges();\n\t\t\t}\n\t\t}\n\n\t\tthis.items.changes\n\t\t\t.pipe(takeUntilDestroyed(this.destroyRef))\n\t\t\t.subscribe(() => this._notifyItemChanged(this.activeId));\n\t}\n\n\tngOnChanges({ activeId }: SimpleChanges): void {\n\t\tif (activeId && !activeId.firstChange) {\n\t\t\tthis._notifyItemChanged(activeId.currentValue);\n\t\t}\n\t}\n\n\tprivate _updateActiveId(nextId: any, emitNavChange = true) {\n\t\tif (this.activeId !== nextId) {\n\t\t\tlet defaultPrevented = false;\n\n\t\t\tif (emitNavChange) {\n\t\t\t\tthis.navChange.emit({\n\t\t\t\t\tactiveId: this.activeId,\n\t\t\t\t\tnextId,\n\t\t\t\t\tpreventDefault: () => {\n\t\t\t\t\t\tdefaultPrevented = true;\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!defaultPrevented) {\n\t\t\t\tthis.activeId = nextId;\n\t\t\t\tthis.activeIdChange.emit(nextId);\n\t\t\t\tthis._notifyItemChanged(nextId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _notifyItemChanged(nextItemId: any) {\n\t\tthis.navItemChange$.next(this._getItemById(nextItemId));\n\t}\n\n\tprivate _getItemById(itemId: any): NgbNavItem | null {\n\t\treturn (this.items && this.items.find((item) => item.id === itemId)) || null;\n\t}\n}\n\n@Directive({\n\tselector: '[ngbNavLink]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'navItem.domId',\n\t\tclass: 'nav-link',\n\t\t'[class.nav-item]': 'navItem.isNgContainer()',\n\t\t'[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n\t\t'[class.active]': 'navItem.active',\n\t\t'[class.disabled]': 'navItem.disabled',\n\t\t'[attr.tabindex]': 'tabindex',\n\t\t'[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n\t\t'[attr.aria-selected]': 'navItem.active',\n\t\t'[attr.aria-disabled]': 'navItem.disabled',\n\t},\n})\nexport class NgbNavLinkBase {\n\tnavItem = inject(NgbNavItem);\n\tnav = inject(NgbNav);\n\tnativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\tconstructor(@Attribute('role') public role: string) {}\n\n\tget tabindex() {\n\t\tif (this.nav.keyboard === false) {\n\t\t\treturn this.navItem.disabled ? -1 : undefined;\n\t\t}\n\t\tif (this.nav._navigatingWithKeyboard) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn this.navItem.disabled || !this.navItem.active ? -1 : undefined;\n\t}\n}\n\n/**\n * A directive to mark the nav link when used on a button element.\n */\n@Directive({\n\tselector: 'button[ngbNavLink]',\n\tstandalone: true,\n\thost: {\n\t\ttype: 'button',\n\t\t'[disabled]': 'navItem.disabled',\n\t\t'(click)': 'nav.click(navItem)',\n\t},\n})\nexport class NgbNavLinkButton extends NgbNavLinkBase {}\n\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\n@Directive({\n\tselector: 'a[ngbNavLink]',\n\tstandalone: true,\n\thost: {\n\t\thref: '',\n\t\t'(click)': 'nav.click(navItem); $event.preventDefault()',\n\t},\n})\nexport class NgbNavLink extends NgbNavLinkBase {}\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent<T = any> {\n\t/**\n\t * Id of the currently active nav.\n\t */\n\tactiveId: T;\n\n\t/**\n\t * Id of the newly selected nav.\n\t */\n\tnextId: T;\n\n\t/**\n\t * Function that will prevent nav change if called.\n\t */\n\tpreventDefault: () => void;\n}\n","import { NgbTransitionStartFn } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\n\nexport const ngbNavFadeOutTransition: NgbTransitionStartFn = ({ classList }) => {\n\tclassList.remove('show');\n\treturn () => classList.remove('active');\n};\n\nexport const ngbNavFadeInTransition: NgbTransitionStartFn = (element: HTMLElement, animation: boolean) => {\n\tif (animation) {\n\t\treflow(element);\n\t}\n\telement.classList.add('show');\n};\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tDirective,\n\tElementRef,\n\tinject,\n\tInput,\n\tNgZone,\n\tQueryList,\n\tViewChildren,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { distinctUntilChanged, skip, startWith } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { ngbNavFadeInTransition, ngbNavFadeOutTransition } from './nav-transition';\nimport { ngbRunTransition, NgbTransitionOptions } from '../util/transition/ngbTransition';\nimport { NgbNav, NgbNavItem } from './nav';\nimport { NgTemplateOutlet } from '@angular/common';\n\n@Directive({\n\tselector: '[ngbNavPane]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'item.panelDomId',\n\t\tclass: 'tab-pane',\n\t\t'[class.fade]': 'nav.animation',\n\t\t'[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n\t\t'[attr.aria-labelledby]': 'item.domId',\n\t},\n})\nexport class NgbNavPane {\n\tnativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\n\t@Input() item: NgbNavItem;\n\t@Input() nav: NgbNav;\n\t@Input() role: string;\n}\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n\tselector: '[ngbNavOutlet]',\n\timports: [NgbNavPane, NgTemplateOutlet],\n\thost: {\n\t\tclass: 'tab-content',\n\t},\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\ttemplate: `\n\t\t@for (item of nav.items; track item) {\n\t\t\t@if (item.isPanelInDom() || isPanelTransitioning(item)) {\n\t\t\t\t<div ngbNavPane [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`,\n})\nexport class NgbNavOutlet implements AfterViewInit {\n\tprivate _cd = inject(ChangeDetectorRef);\n\tprivate _ngZone = inject(NgZone);\n\n\tprivate _activePane: NgbNavPane | null = null;\n\n\t@ViewChildren(NgbNavPane) private _panes: QueryList<NgbNavPane>;\n\n\t/**\n\t * A role to set on the nav pane\n\t */\n\t@Input() paneRole;\n\n\t/**\n\t * Reference to the `NgbNav`\n\t */\n\t@Input('ngbNavOutlet') nav: NgbNav;\n\n\tisPanelTransitioning(item: NgbNavItem) {\n\t\treturn this._activePane?.item === item;\n\t}\n\n\tngAfterViewInit() {\n\t\t// initial display\n\t\tthis._updateActivePane();\n\n\t\t// this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n\t\tthis.nav.navItemChange$\n\t\t\t.pipe(\n\t\t\t\ttakeUntilDestroyed(this.nav.destroyRef),\n\t\t\t\tstartWith(this._activePane?.item || null),\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tskip(1),\n\t\t\t)\n\t\t\t.subscribe((nextItem) => {\n\t\t\t\tconst options: NgbTransitionOptions<undefined> = { animation: this.nav.animation, runningTransition: 'stop' };\n\n\t\t\t\t// next panel we're switching to will only appear in DOM after the change detection is done\n\t\t\t\t// and `this._panes` will be updated\n\t\t\t\tthis._cd.detectChanges();\n\n\t\t\t\t// fading out\n\t\t\t\tif (this._activePane) {\n\t\t\t\t\tngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeOutTransition, options).subscribe(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tconst activeItem = this._activePane?.item;\n\t\t\t\t\t\t\tthis._activePane = this._getPaneForItem(nextItem);\n\n\t\t\t\t\t\t\t// mark for check when transition finishes as outlet or parent containers might be OnPush\n\t\t\t\t\t\t\t// without this the panes that have \"faded out\" will stay in DOM\n\t\t\t\t\t\t\tthis._cd.markForCheck();\n\n\t\t\t\t\t\t\t// fading in\n\t\t\t\t\t\t\tif (this._activePane) {\n\t\t\t\t\t\t\t\t// we have to add the '.active' class before running the transition,\n\t\t\t\t\t\t\t\t// because it should be in place before `ngbRunTransition` does `reflow()`\n\t\t\t\t\t\t\t\tthis._activePane.nativeElement.classList.add('active');\n\t\t\t\t\t\t\t\tngbRunTransition(\n\t\t\t\t\t\t\t\t\tthis._ngZone,\n\t\t\t\t\t\t\t\t\tthis._activePane.nativeElement,\n\t\t\t\t\t\t\t\t\tngbNavFadeInTransition,\n\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t).subscribe(() => {\n\t\t\t\t\t\t\t\t\tif (nextItem) {\n\t\t\t\t\t\t\t\t\t\tnextItem.shown.emit();\n\t\t\t\t\t\t\t\t\t\tthis.nav.shown.emit(nextItem.id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (activeItem) {\n\t\t\t\t\t\t\t\tactiveItem.hidden.emit();\n\t\t\t\t\t\t\t\tthis.nav.hidden.emit(activeItem.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._updateActivePane();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate _updateActivePane() {\n\t\tthis._activePane = this._getActivePane();\n\t\tthis._activePane?.nativeElement.classList.add('show', 'active');\n\t}\n\n\tprivate _getPaneForItem(item: NgbNavItem | null) {\n\t\treturn (this._panes && this._panes.find((pane) => pane.item === item)) || null;\n\t}\n\n\tprivate _getActivePane(): NgbNavPane | null {\n\t\treturn (this._panes && this._panes.find((pane) => pane.item.active)) || null;\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbNav, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkButton, NgbNavLinkBase } from './nav';\n\nimport { NgbNavOutlet, NgbNavPane } from './nav-outlet';\n\nexport {\n\tNgbNav,\n\tNgbNavContent,\n\tNgbNavContentContext,\n\tNgbNavItem,\n\tNgbNavItemRole,\n\tNgbNavLink,\n\tNgbNavLinkButton,\n\tNgbNavLinkBase,\n\tNgbNavChangeEvent,\n} from './nav';\nexport { NgbNavOutlet, NgbNavPane } from './nav-outlet';\nexport { NgbNavConfig } from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [\n\tNgbNavContent,\n\tNgbNav,\n\tNgbNavItem,\n\tNgbNavItemRole,\n\tNgbNavLink,\n\tNgbNavLinkButton,\n\tNgbNavLinkBase,\n\tNgbNavOutlet,\n\tNgbNavPane,\n];\n\n@NgModule({\n\timports: NGB_NAV_DIRECTIVES,\n\texports: NGB_NAV_DIRECTIVES,\n})\nexport class NgbNavModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbPaginationConfig {\n\tdisabled = false;\n\tboundaryLinks = false;\n\tdirectionLinks = true;\n\tellipses = true;\n\tmaxSize = 0;\n\tpageSize = 10;\n\trotate = false;\n\tsize: 'sm' | 'lg' | string | null;\n}\n","import {\n\tChangeDetectionStrategy,\n\tComponent,\n\tContentChild,\n\tDirective,\n\tEventEmitter,\n\tinject,\n\tInput,\n\tOnChanges,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n} from '@angular/core';\nimport { getValueInRange, isNumber } from '../util/util';\nimport { NgbPaginationConfig } from './pagination-config';\nimport { NgTemplateOutlet } from '@angular/common';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n * * `NgbPaginationPages`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n\t/**\n\t * Page number displayed by the current link.\n\t */\n\tcurrentPage: number;\n\n\t/**\n\t * If `true`, the current link is disabled.\n\t */\n\tdisabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n\t/**\n\t * The page number, displayed by the current page link.\n\t */\n\t$implicit: number;\n}\n\n/**\n * A context for the `NgbPaginationPages` pages template in case you want to override\n * the way all pages are displayed.\n *\n * @since 9.1.0\n */\nexport interface NgbPaginationPagesContext {\n\t/**\n\t * The currently selected page number.\n\t */\n\t$implicit: number;\n\n\t/**\n\t * If `true`, pagination is disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * Pages numbers that should be rendered starting with 1.\n\t */\n\tpages: number[];\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationEllipsis]', standalone: true })\nexport class NgbPaginationEllipsis {\n\ttemplateRef = inject(TemplateRef<NgbPaginationLinkContext>);\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationFirst]', standalone: true })\nexport class NgbPaginationFirst {\n\ttemplateRef = inject(TemplateRef<NgbPaginationLinkContext>);\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationLast]', standalone: true })\nexport class NgbPaginationLast {\n\ttemplateRef = inject(TemplateRef<NgbPaginationLinkContext>);\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationNext]', standalone: true })\nexport class NgbPaginationNext {\n\ttemplateRef = inject(TemplateRef<NgbPaginationLinkContext>);\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationNumber]', standalone: true })\nexport class NgbPaginationNumber {\n\ttemplateRef = inject(TemplateRef<NgbPaginationNumberContext>);\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationPrevious]', standalone: true })\nexport class NgbPaginationPrevious {\n\ttemplateRef = inject(TemplateRef<NgbPaginationLinkContext>);\n}\n\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\n@Directive({ selector: 'ng-template[ngbPaginationPages]', standalone: true })\nexport class NgbPaginationPages {\n\ttemplateRef = inject(TemplateRef<NgbPaginationPagesContext>);\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n\tselector: 'ngb-pagination',\n\timports: [NgTemplateOutlet],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\trole: 'navigation',\n\t},\n\ttemplate: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t@for (pageNumber of pages; track $index) {\n\t\t\t\t<li\n\t\t\t\t\tclass=\"page-item\"\n\t\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t\t>\n\t\t\t\t\t@if (isEllipsis(pageNumber)) {\n\t\t\t\t\t\t<a class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t} @else {\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t/>\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ul>\n\t`,\n})\nexport class NgbPagination implements OnChanges {\n\tprivate _config = inject(NgbPaginationConfig);\n\n\tpageCount = 0;\n\tpages: number[] = [];\n\n\t@ContentChild(NgbPaginationEllipsis, { static: false }) tplEllipsis?: NgbPaginationEllipsis;\n\t@ContentChild(NgbPaginationFirst, { static: false }) tplFirst?: NgbPaginationFirst;\n\t@ContentChild(NgbPaginationLast, { static: false }) tplLast?: NgbPaginationLast;\n\t@ContentChild(NgbPaginationNext, { static: false }) tplNext?: NgbPaginationNext;\n\t@ContentChild(NgbPaginationNumber, { static: false }) tplNumber?: NgbPaginationNumber;\n\t@ContentChild(NgbPaginationPrevious, { static: false }) tplPrevious?: NgbPaginationPrevious;\n\t@ContentChild(NgbPaginationPages, { static: false }) tplPages?: NgbPaginationPages;\n\n\t/**\n\t * If `true`, pagination links will be disabled.\n\t */\n\t@Input() disabled = this._config.disabled;\n\n\t/**\n\t * If `true`, the \"First\" and \"Last\" page links are shown.\n\t */\n\t@Input() boundaryLinks = this._config.boundaryLinks;\n\n\t/**\n\t * If `true`, the \"Next\" and \"Previous\" page links are shown.\n\t */\n\t@Input() directionLinks = this._config.directionLinks;\n\n\t/**\n\t * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n\t */\n\t@Input() ellipses = this._config.ellipses;\n\n\t/**\n\t * Whether to rotate pages when `maxSize` > number of pages.\n\t *\n\t * The current page always stays in the middle if `true`.\n\t */\n\t@Input() rotate = this._config.rotate;\n\n\t/**\n\t *  The number of items in your paginated collection.\n\t *\n\t *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n\t *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n\t *  you'll end up with 5 pages.\n\t */\n\t@Input({ required: true }) collectionSize: number;\n\n\t/**\n\t *  The maximum number of pages to display.\n\t */\n\t@Input() maxSize = this._config.maxSize;\n\n\t/**\n\t *  The current page.\n\t *\n\t *  Page numbers start with `1`.\n\t */\n\t@Input() page = 1;\n\n\t/**\n\t *  The number of items per page.\n\t */\n\t@Input() pageSize = this._config.pageSize;\n\n\t/**\n\t *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n\t *\n\t *  Event payload is the number of the newly selected page.\n\t *\n\t *  Page numbers start with `1`.\n\t */\n\t@Output() pageChange = new EventEmitter<number>(true);\n\n\t/**\n\t * The pagination display size.\n\t *\n\t * Bootstrap currently supports small and large sizes.\n\t *\n\t * If the passed value is a string (ex. 'custom'), it will just add the `pagination-custom` css class\n\t */\n\t@Input() size = this._config.size;\n\n\thasPrevious(): boolean {\n\t\treturn this.page > 1;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this.page < this.pageCount;\n\t}\n\n\tnextDisabled(): boolean {\n\t\treturn !this.hasNext() || this.disabled;\n\t}\n\n\tpreviousDisabled(): boolean {\n\t\treturn !this.hasPrevious() || this.disabled;\n\t}\n\n\tselectPage(pageNumber: number): void {\n\t\tthis._updatePages(pageNumber);\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis._updatePages(this.page);\n\t}\n\n\tisEllipsis(pageNumber): boolean {\n\t\treturn pageNumber === -1;\n\t}\n\n\t/**\n\t * Appends ellipses and first/last page number to the displayed pages\n\t */\n\tprivate _applyEllipses(start: number, end: number) {\n\t\tif (this.ellipses) {\n\t\t\tif (start > 0) {\n\t\t\t\t// The first page will always be included. If the displayed range\n\t\t\t\t// starts after the third page, then add ellipsis. But if the range\n\t\t\t\t// starts on the third page, then add the second page instead of\n\t\t\t\t// an ellipsis, because the ellipsis would only hide a single page.\n\t\t\t\tif (start > 2) {\n\t\t\t\t\tthis.pages.unshift(-1);\n\t\t\t\t} else if (start === 2) {\n\t\t\t\t\tthis.pages.unshift(2);\n\t\t\t\t}\n\t\t\t\tthis.pages.unshift(1);\n\t\t\t}\n\t\t\tif (end < this.pageCount) {\n\t\t\t\t// The last page will always be included. If the displayed range\n\t\t\t\t// ends before the third-last page, then add ellipsis. But if the range\n\t\t\t\t// ends on third-last page, then add the second-last page instead of\n\t\t\t\t// an ellipsis, because the ellipsis would only hide a single page.\n\t\t\t\tif (end < this.pageCount - 2) {\n\t\t\t\t\tthis.pages.push(-1);\n\t\t\t\t} else if (end === this.pageCount - 2) {\n\t\t\t\t\tthis.pages.push(this.pageCount - 1);\n\t\t\t\t}\n\t\t\t\tthis.pages.push(this.pageCount);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Rotates page numbers based on maxSize items visible.\n\t * Currently selected page stays in the middle:\n\t *\n\t * Ex. for selected page = 6:\n\t * [5,*6*,7] for maxSize = 3\n\t * [4,5,*6*,7] for maxSize = 4\n\t */\n\tprivate _applyRotation(): [number, number] {\n\t\tlet start = 0;\n\t\tlet end = this.pageCount;\n\t\tlet leftOffset = Math.floor(this.maxSize / 2);\n\t\tlet rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n\t\tif (this.page <= leftOffset) {\n\t\t\t// very beginning, no rotation -> [0..maxSize]\n\t\t\tend = this.maxSize;\n\t\t} else if (this.pageCount - this.page < leftOffset) {\n\t\t\t// very end, no rotation -> [len-maxSize..len]\n\t\t\tstart = this.pageCount - this.maxSize;\n\t\t} else {\n\t\t\t// rotate\n\t\t\tstart = this.page - leftOffset - 1;\n\t\t\tend = this.page + rightOffset;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\t/**\n\t * Paginates page numbers based on maxSize items per page.\n\t */\n\tprivate _applyPagination(): [number, number] {\n\t\tlet page = Math.ceil(this.page / this.maxSize) - 1;\n\t\tlet start = page * this.maxSize;\n\t\tlet end = start + this.maxSize;\n\n\t\treturn [start, end];\n\t}\n\n\tprivate _setPageInRange(newPageNo) {\n\t\tconst prevPageNo = this.page;\n\t\tthis.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n\t\tif (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n\t\t\tthis.pageChange.emit(this.page);\n\t\t}\n\t}\n\n\tprivate _updatePages(newPage: number) {\n\t\tthis.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n\t\tif (!isNumber(this.pageCount)) {\n\t\t\tthis.pageCount = 0;\n\t\t}\n\n\t\t// fill-in model needed to render pages\n\t\tthis.pages.length = 0;\n\t\tfor (let i = 1; i <= this.pageCount; i++) {\n\t\t\tthis.pages.push(i);\n\t\t}\n\n\t\t// set page within 1..max range\n\t\tthis._setPageInRange(newPage);\n\n\t\t// apply maxSize if necessary\n\t\tif (this.maxSize > 0 && this.pageCount > this.maxSize) {\n\t\t\tlet start = 0;\n\t\t\tlet end = this.pageCount;\n\n\t\t\t// either paginating or rotating page numbers\n\t\t\tif (this.rotate) {\n\t\t\t\t[start, end] = this._applyRotation();\n\t\t\t} else {\n\t\t\t\t[start, end] = this._applyPagination();\n\t\t\t}\n\n\t\t\tthis.pages = this.pages.slice(start, end);\n\n\t\t\t// adding ellipses\n\t\t\tthis._applyEllipses(start, end);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n\tNgbPagination,\n\tNgbPaginationEllipsis,\n\tNgbPaginationFirst,\n\tNgbPaginationLast,\n\tNgbPaginationNext,\n\tNgbPaginationNumber,\n\tNgbPaginationPrevious,\n\tNgbPaginationPages,\n} from './pagination';\n\nexport {\n\tNgbPagination,\n\tNgbPaginationEllipsis,\n\tNgbPaginationFirst,\n\tNgbPaginationLast,\n\tNgbPaginationNext,\n\tNgbPaginationNumber,\n\tNgbPaginationPrevious,\n\tNgbPaginationPages,\n} from './pagination';\nexport { NgbPaginationConfig } from './pagination-config';\n\nconst NGB_PAGINATION_DIRECTIVES = [\n\tNgbPagination,\n\tNgbPaginationEllipsis,\n\tNgbPaginationFirst,\n\tNgbPaginationLast,\n\tNgbPaginationNext,\n\tNgbPaginationNumber,\n\tNgbPaginationPrevious,\n\tNgbPaginationPages,\n];\n\n@NgModule({\n\timports: NGB_PAGINATION_DIRECTIVES,\n\texports: NGB_PAGINATION_DIRECTIVES,\n})\nexport class NgbPaginationModule {}\n","const ALIASES = {\n\thover: ['mouseenter', 'mouseleave'],\n\tfocus: ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string): [string, string?][] {\n\tconst trimmedTriggers = (triggers || '').trim();\n\n\tif (trimmedTriggers.length === 0) {\n\t\treturn [];\n\t}\n\n\tconst parsedTriggers = trimmedTriggers\n\t\t.split(/\\s+/)\n\t\t.map((trigger) => trigger.split(':'))\n\t\t.map((triggerPair) => (ALIASES[triggerPair[0]] || triggerPair) as [string, string?]);\n\n\tconst manualTriggers = parsedTriggers.filter((triggerPair) => triggerPair.includes('manual'));\n\n\tif (manualTriggers.length > 1) {\n\t\tthrow `Triggers parse error: only one manual trigger is allowed`;\n\t}\n\n\tif (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n\t\tthrow `Triggers parse error: manual trigger can't be mixed with other triggers`;\n\t}\n\n\treturn manualTriggers.length ? [] : parsedTriggers;\n}\n\nexport function listenToTriggers(\n\telement: HTMLElement,\n\ttriggers: string,\n\tisOpenedFn: () => boolean,\n\topenFn: () => void,\n\tcloseFn: () => void,\n\topenDelayMs = 0,\n\tcloseDelayMs = 0,\n) {\n\tconst parsedTriggers = parseTriggers(triggers);\n\n\tif (parsedTriggers.length === 0) {\n\t\treturn () => {};\n\t}\n\n\tconst activeOpenTriggers = new Set<string>();\n\tconst cleanupFns: (() => void)[] = [];\n\tlet timeout: any;\n\n\tfunction addEventListener(name: string, listener: () => void) {\n\t\telement.addEventListener(name, listener);\n\t\tcleanupFns.push(() => element.removeEventListener(name, listener));\n\t}\n\n\tfunction withDelay(fn: () => void, delayMs: number) {\n\t\tclearTimeout(timeout);\n\t\tif (delayMs > 0) {\n\t\t\ttimeout = setTimeout(fn, delayMs);\n\t\t} else {\n\t\t\tfn();\n\t\t}\n\t}\n\n\tfor (const [openTrigger, closeTrigger] of parsedTriggers) {\n\t\tif (!closeTrigger) {\n\t\t\taddEventListener(openTrigger, () =>\n\t\t\t\tisOpenedFn() ? withDelay(closeFn, closeDelayMs) : withDelay(openFn, openDelayMs),\n\t\t\t);\n\t\t} else {\n\t\t\taddEventListener(openTrigger, () => {\n\t\t\t\tactiveOpenTriggers.add(openTrigger);\n\t\t\t\twithDelay(() => activeOpenTriggers.size > 0 && openFn(), openDelayMs);\n\t\t\t});\n\t\t\taddEventListener(closeTrigger, () => {\n\t\t\t\tactiveOpenTriggers.delete(openTrigger);\n\t\t\t\twithDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn () => cleanupFns.forEach((cleanupFn) => cleanupFn());\n}\n","import { inject, Injectable } from '@angular/core';\nimport { PlacementArray } from '../util/positioning';\nimport { NgbConfig } from '../ngb-config';\nimport { Options } from '@popperjs/core';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbPopoverConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tautoClose: boolean | 'inside' | 'outside' = true;\n\tplacement: PlacementArray = 'auto';\n\tpopperOptions = (options: Partial<Options>) => options;\n\ttriggers = 'click';\n\tcontainer: string;\n\tdisablePopover = false;\n\tpopoverClass: string;\n\topenDelay = 0;\n\tcloseDelay = 0;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import {\n\tafterRender,\n\tAfterRenderRef,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tComponentRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { DOCUMENT, NgTemplateOutlet } from '@angular/common';\n\nimport { listenToTriggers } from '../util/triggers';\nimport { ngbAutoClose } from '../util/autoclose';\nimport { ngbPositioning } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { isString } from '../util/util';\n\nimport { NgbPopoverConfig } from './popover-config';\n\nimport { addPopperOffset } from '../util/positioning-util';\n\nlet nextId = 0;\n\n@Component({\n\tselector: 'ngb-popover-window',\n\timports: [NgTemplateOutlet],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n\t\t'[class.fade]': 'animation',\n\t\trole: 'tooltip',\n\t\t'[id]': 'id',\n\t\tstyle: 'position: absolute;',\n\t},\n\ttemplate: `\n\t\t<div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t@if (title) {\n\t\t\t<h3 class=\"popover-header\">\n\t\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t}\n\t\t<div class=\"popover-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n})\nexport class NgbPopoverWindow {\n\t@Input() animation: boolean;\n\t@Input() title: string | TemplateRef<any> | null | undefined;\n\t@Input() id: string;\n\t@Input() popoverClass: string;\n\t@Input() context: any;\n\n\tisTitleTemplate() {\n\t\treturn this.title instanceof TemplateRef;\n\t}\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({ selector: '[ngbPopover]', exportAs: 'ngbPopover', standalone: true })\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n\tstatic ngAcceptInputType_autoClose: boolean | string;\n\n\tprivate _config = inject(NgbPopoverConfig);\n\n\t/**\n\t * If `true`, popover opening and closing will be animated.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n\t *\n\t * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n\t * * `false` - disables the autoClose feature (NB: triggers still apply)\n\t * * `\"inside\"` - closes on inside clicks as well as Escape presses\n\t * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n\t * as well as `Escape` presses\n\t *\n\t * @since 3.0.0\n\t */\n\t@Input() autoClose = this._config.autoClose;\n\n\t/**\n\t * The string content or a `TemplateRef` for the content to be displayed in the popover.\n\t *\n\t * If the title and the content are falsy, the popover won't open.\n\t */\n\t@Input() ngbPopover: string | TemplateRef<any> | null | undefined;\n\n\t/**\n\t * The title of the popover.\n\t *\n\t * If the title and the content are falsy, the popover won't open.\n\t */\n\t@Input() popoverTitle: string | TemplateRef<any> | null | undefined;\n\n\t/**\n\t * The preferred placement of the popover, among the [possible values](#/guides/positioning#api).\n\t *\n\t * The default order of preference is `\"auto\"`.\n\t *\n\t * Please see the [positioning overview](#/positioning) for more details.\n\t */\n\t@Input() placement = this._config.placement;\n\n\t/**\n\t * Allows to change default Popper options when positioning the popover.\n\t * Receives current popper options and returns modified ones.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() popperOptions = this._config.popperOptions;\n\n\t/**\n\t * Specifies events that should trigger the tooltip.\n\t *\n\t * Supports a space separated list of event names.\n\t * For more details see the [triggers demo](#/components/popover/examples#triggers).\n\t */\n\t@Input() triggers = this._config.triggers;\n\n\t/**\n\t * A css selector or html element specifying the element the popover should be positioned against.\n\t * By default, the element `ngbPopover` directive is applied to will be set as a target.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() positionTarget?: string | HTMLElement;\n\n\t/**\n\t * A selector specifying the element the popover should be appended to.\n\t *\n\t * Currently only supports `body`.\n\t */\n\t@Input() container = this._config.container;\n\n\t/**\n\t * If `true`, popover is disabled and won't be displayed.\n\t *\n\t * @since 1.1.0\n\t */\n\t@Input() disablePopover = this._config.disablePopover;\n\n\t/**\n\t * An optional class applied to the popover window element.\n\t *\n\t * @since 2.2.0\n\t */\n\t@Input() popoverClass = this._config.popoverClass;\n\n\t/**\n\t * Default template context for `TemplateRef`, can be overridden with `open` method.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Input() popoverContext: any;\n\n\t/**\n\t * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n\t *\n\t * @since 4.1.0\n\t */\n\t@Input() openDelay = this._config.openDelay;\n\n\t/**\n\t * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n\t *\n\t * @since 4.1.0\n\t */\n\t@Input() closeDelay = this._config.closeDelay;\n\n\t/**\n\t * An event emitted when the popover opening animation has finished. Contains no payload.\n\t */\n\t@Output() shown = new EventEmitter<void>();\n\n\t/**\n\t * An event emitted when the popover closing animation has finished. Contains no payload.\n\t *\n\t * At this point popover is not in the DOM anymore.\n\t */\n\t@Output() hidden = new EventEmitter<void>();\n\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\tprivate _ngZone = inject(NgZone);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _injector = inject(Injector);\n\n\tprivate _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n\tprivate _popupService = new PopupService(NgbPopoverWindow);\n\tprivate _windowRef: ComponentRef<NgbPopoverWindow> | null = null;\n\tprivate _unregisterListenersFn;\n\tprivate _positioning = ngbPositioning();\n\tprivate _afterRenderRef: AfterRenderRef;\n\n\t/**\n\t * Opens the popover.\n\t *\n\t * This is considered to be a \"manual\" triggering.\n\t * The `context` is an optional value to be injected into the popover template when it is created.\n\t */\n\topen(context?: any) {\n\t\tif (!this._windowRef && !this._isDisabled()) {\n\t\t\t// this type assertion is safe because otherwise _isDisabled would return true\n\t\t\tconst { windowRef, transition$ } = this._popupService.open(\n\t\t\t\tthis.ngbPopover as string | TemplateRef<any>,\n\t\t\t\tcontext ?? this.popoverContext,\n\t\t\t\tthis.animation,\n\t\t\t);\n\t\t\tthis._windowRef = windowRef;\n\t\t\tthis._windowRef.setInput('animation', this.animation);\n\t\t\tthis._windowRef.setInput('title', this.popoverTitle);\n\t\t\tthis._windowRef.setInput('context', context ?? this.popoverContext);\n\t\t\tthis._windowRef.setInput('popoverClass', this.popoverClass);\n\t\t\tthis._windowRef.setInput('id', this._ngbPopoverWindowId);\n\n\t\t\tthis._getPositionTargetElement().setAttribute('aria-describedby', this._ngbPopoverWindowId);\n\n\t\t\tif (this.container === 'body') {\n\t\t\t\tthis._document.body.appendChild(this._windowRef.location.nativeElement);\n\t\t\t}\n\n\t\t\t// We need to detect changes, because we don't know where .open() might be called from.\n\t\t\t// Ex. opening popover from one of lifecycle hooks that run after the CD\n\t\t\t// (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\t\t\tthis._windowRef.changeDetectorRef.detectChanges();\n\n\t\t\t// We need to mark for check, because popover won't work inside the OnPush component.\n\t\t\t// Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n\t\t\t// inside the template of an OnPush component and we change the popover from\n\t\t\t// open -> closed, the expression in question won't be updated unless we explicitly\n\t\t\t// mark the parent component to be checked.\n\t\t\tthis._windowRef.changeDetectorRef.markForCheck();\n\n\t\t\t// Setting up popper and scheduling updates when zone is stable\n\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\tthis._positioning.createPopper({\n\t\t\t\t\thostElement: this._getPositionTargetElement(),\n\t\t\t\t\ttargetElement: this._windowRef!.location.nativeElement,\n\t\t\t\t\tplacement: this.placement,\n\t\t\t\t\tbaseClass: 'bs-popover',\n\t\t\t\t\tupdatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 8])(options)),\n\t\t\t\t});\n\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t// This update is required for correct arrow placement\n\t\t\t\t\tthis._positioning.update();\n\t\t\t\t});\n\t\t\t\tthis._afterRenderRef = afterRender(\n\t\t\t\t\t{\n\t\t\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\t\t\tthis._positioning.update();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{ injector: this._injector },\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [\n\t\t\t\tthis._windowRef.location.nativeElement,\n\t\t\t]);\n\n\t\t\ttransition$.subscribe(() => this.shown.emit());\n\t\t}\n\t}\n\n\t/**\n\t * Closes the popover.\n\t *\n\t * This is considered to be a \"manual\" triggering of the popover.\n\t */\n\tclose(animation = this.animation) {\n\t\tif (this._windowRef) {\n\t\t\tthis._getPositionTargetElement().removeAttribute('aria-describedby');\n\t\t\tthis._popupService.close(animation).subscribe(() => {\n\t\t\t\tthis._windowRef = null;\n\t\t\t\tthis._positioning.destroy();\n\t\t\t\tthis._afterRenderRef?.destroy();\n\t\t\t\tthis.hidden.emit();\n\t\t\t\tthis._changeDetector.markForCheck();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the popover.\n\t *\n\t * This is considered to be a \"manual\" triggering of the popover.\n\t */\n\ttoggle(): void {\n\t\tif (this._windowRef) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true`, if the popover is currently shown.\n\t */\n\tisOpen(): boolean {\n\t\treturn this._windowRef != null;\n\t}\n\n\tngOnInit() {\n\t\tthis._unregisterListenersFn = listenToTriggers(\n\t\t\tthis._nativeElement,\n\t\t\tthis.triggers,\n\t\t\tthis.isOpen.bind(this),\n\t\t\tthis.open.bind(this),\n\t\t\tthis.close.bind(this),\n\t\t\t+this.openDelay,\n\t\t\t+this.closeDelay,\n\t\t);\n\t}\n\n\tngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }: SimpleChanges) {\n\t\tif (popoverClass && this.isOpen()) {\n\t\t\tthis._windowRef!.setInput('popoverClass', popoverClass.currentValue);\n\t\t}\n\t\t// close popover if title and content become empty, or disablePopover set to true\n\t\tif ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.close(false);\n\t\t// This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n\t\t// under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\t\tthis._unregisterListenersFn?.();\n\t}\n\n\tprivate _isDisabled(): boolean {\n\t\treturn this.disablePopover ? true : !this.ngbPopover && !this.popoverTitle;\n\t}\n\n\tprivate _getPositionTargetElement(): HTMLElement {\n\t\treturn (\n\t\t\t(isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n\t\t\tthis._nativeElement\n\t\t);\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbPopover } from './popover';\n\nexport { NgbPopover } from './popover';\nexport { NgbPopoverConfig } from './popover-config';\nexport { Placement } from '../util/positioning';\n\n@NgModule({\n\timports: [NgbPopover],\n\texports: [NgbPopover],\n})\nexport class NgbPopoverModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbProgressbarConfig {\n\tmax = 100;\n\tanimated = false;\n\tariaLabel = 'progress bar';\n\tstriped = false;\n\ttextType: string;\n\ttype: string;\n\tshowValue = false;\n\theight: string;\n}\n","import { ChangeDetectionStrategy, Component, inject, Input, ViewEncapsulation } from '@angular/core';\nimport { getValueInRange, isNumber } from '../util/util';\nimport { NgbProgressbarConfig } from './progressbar-config';\nimport { PercentPipe } from '@angular/common';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n\tselector: 'ngb-progressbar',\n\timports: [PercentPipe],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\tclass: 'progress',\n\t\trole: 'progressbar',\n\t\t'[attr.aria-valuenow]': 'getValue()',\n\t\t'aria-valuemin': '0',\n\t\t'[attr.aria-valuemax]': 'max',\n\t\t'[attr.aria-label]': 'ariaLabel',\n\t\t'[style.width.%]': 'stacked ? getPercentValue() : null',\n\t\t'[style.height]': 'height',\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"!stacked ? getPercentValue() : null\"\n\t\t>\n\t\t\t@if (showValue) {\n\t\t\t\t<span i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span>\n\t\t\t}\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n})\nexport class NgbProgressbar {\n\tprivate _config = inject(NgbProgressbarConfig);\n\tpublic stacked = inject(NgbProgressbarStacked, { optional: true });\n\tprivate _max: number;\n\n\t/**\n\t * The maximal value to be displayed in the progress bar.\n\t *\n\t * Should be a positive number. Will default to 100 otherwise.\n\t */\n\t@Input()\n\tset max(max: number) {\n\t\tthis._max = !isNumber(max) || max <= 0 ? 100 : max;\n\t}\n\n\tget max(): number {\n\t\treturn this._max;\n\t}\n\n\t/**\n\t * If `true`, the stripes on the progress bar are animated.\n\t *\n\t * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\t */\n\t@Input() animated = this._config.animated;\n\n\t/**\n\t * The accessible progress bar name.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() ariaLabel = this._config.ariaLabel;\n\n\t/**\n\t * If `true`, the progress bars will be displayed as striped.\n\t */\n\t@Input() striped = this._config.striped;\n\n\t/**\n\t * If `true`, the current percentage will be shown in the `xx%` format.\n\t */\n\t@Input() showValue = this._config.showValue;\n\n\t/**\n\t * Optional text variant type of the progress bar.\n\t *\n\t * Supports types based on Bootstrap background color variants, like:\n\t *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n\t *\n\t * @since 5.2.0\n\t */\n\t@Input() textType = this._config.textType;\n\n\t/**\n\t * The type of the progress bar.\n\t *\n\t * Supports types based on Bootstrap background color variants, like:\n\t *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n\t */\n\t@Input() type = this._config.type;\n\n\t/**\n\t * The current value for the progress bar.\n\t *\n\t * Should be in the `[0, max]` range.\n\t */\n\t@Input({ required: true }) value = 0;\n\n\t/**\n\t * The height of the progress bar.\n\t *\n\t * Accepts any valid CSS height values, ex. `\"2rem\"`\n\t */\n\t@Input() height = this._config.height;\n\n\tconstructor() {\n\t\tthis.max = this._config.max;\n\t}\n\n\tgetValue() {\n\t\treturn getValueInRange(this.value, this.max);\n\t}\n\n\tgetPercentValue() {\n\t\treturn (100 * this.getValue()) / this.max;\n\t}\n}\n\n/**\n * A directive that allow to stack progress bars.\n *\n * @since 16.0.0\n */\n@Component({\n\tselector: 'ngb-progressbar-stacked',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\tclass: 'progress-stacked',\n\t},\n\ttemplate: `<ng-content></ng-content>`,\n})\nexport class NgbProgressbarStacked {}\n","import { NgModule } from '@angular/core';\n\nimport { NgbProgressbar, NgbProgressbarStacked } from './progressbar';\n\nexport { NgbProgressbar, NgbProgressbarStacked } from './progressbar';\nexport { NgbProgressbarConfig } from './progressbar-config';\n\n@NgModule({\n\timports: [NgbProgressbar, NgbProgressbarStacked],\n\texports: [NgbProgressbar, NgbProgressbarStacked],\n})\nexport class NgbProgressbarModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbRatingConfig {\n\tmax = 10;\n\treadonly = false;\n\tresettable = false;\n\ttabindex: number | string = 0;\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tContentChild,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { NgbRatingConfig } from './rating-config';\nimport { getValueInRange } from '../util/util';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgTemplateOutlet } from '@angular/common';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n\t/**\n\t * The star fill percentage, an integer in the `[0, 100]` range.\n\t */\n\tfill: number;\n\n\t/**\n\t * Index of the star, starts with `0`.\n\t */\n\tindex: number;\n}\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n\tselector: 'ngb-rating',\n\timports: [NgTemplateOutlet],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\tclass: 'd-inline-flex',\n\t\t'[tabindex]': 'disabled ? -1 : tabindex',\n\t\trole: 'slider',\n\t\t'aria-valuemin': '0',\n\t\t'[attr.aria-valuemax]': 'max',\n\t\t'[attr.aria-valuenow]': 'nextRate',\n\t\t'[attr.aria-valuetext]': 'ariaValueText(nextRate, max)',\n\t\t'[attr.aria-readonly]': 'readonly && !disabled ? true : null',\n\t\t'[attr.aria-disabled]': 'disabled ? true : null',\n\t\t'(blur)': 'handleBlur()',\n\t\t'(keydown)': 'handleKeyDown($event)',\n\t\t'(mouseleave)': 'reset()',\n\t},\n\ttemplate: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t@for (_ of contexts; track _; let index = $index) {\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t}\n\t`,\n\tproviders: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }],\n})\nexport class NgbRating implements ControlValueAccessor, OnInit, OnChanges {\n\tcontexts: StarTemplateContext[] = [];\n\tnextRate: number;\n\n\tprivate _config = inject(NgbRatingConfig);\n\tprivate _changeDetectorRef = inject(ChangeDetectorRef);\n\n\t/**\n\t * If `true`, the rating can't be changed or focused.\n\t */\n\t@Input() disabled = false;\n\n\t/**\n\t * The maximal rating that can be given.\n\t */\n\t@Input() max = this._config.max;\n\n\t/**\n\t * The current rating. Could be a decimal value like `3.75`.\n\t */\n\t@Input() rate: number;\n\n\t/**\n\t * If `true`, the rating can't be changed.\n\t */\n\t@Input() readonly = this._config.readonly;\n\n\t/**\n\t * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n\t */\n\t@Input() resettable = this._config.resettable;\n\n\t/**\n\t * The template to override the way each star is displayed.\n\t *\n\t * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n\t */\n\t@Input() starTemplate: TemplateRef<StarTemplateContext>;\n\t@ContentChild(TemplateRef, { static: false }) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n\t/**\n\t * Allows setting a custom rating tabindex.\n\t * If the component is disabled, `tabindex` will still be set to `-1`.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() tabindex = this._config.tabindex;\n\n\t/**\n\t * Allows to provide a function to set a custom aria-valuetext\n\t *\n\t * @since 14.1.0\n\t */\n\t@Input() ariaValueText(current: number, max: number) {\n\t\treturn `${current} out of ${max}`;\n\t}\n\n\t/**\n\t * An event emitted when the user is hovering over a given rating.\n\t *\n\t * Event payload equals to the rating being hovered over.\n\t */\n\t@Output() hover = new EventEmitter<number>();\n\n\t/**\n\t * An event emitted when the user stops hovering over a given rating.\n\t *\n\t * Event payload equals to the rating of the last item being hovered over.\n\t */\n\t@Output() leave = new EventEmitter<number>();\n\n\t/**\n\t * An event emitted when the rating is changed.\n\t *\n\t * Event payload equals to the newly selected rating.\n\t */\n\t@Output() rateChange = new EventEmitter<number>(true);\n\n\tonChange = (_: any) => {};\n\tonTouched = () => {};\n\n\tisInteractive(): boolean {\n\t\treturn !this.readonly && !this.disabled;\n\t}\n\n\tenter(value: number): void {\n\t\tif (this.isInteractive()) {\n\t\t\tthis._updateState(value);\n\t\t}\n\t\tthis.hover.emit(value);\n\t}\n\n\thandleBlur() {\n\t\tthis.onTouched();\n\t}\n\n\thandleClick(value: number) {\n\t\tif (this.isInteractive()) {\n\t\t\tthis.update(this.resettable && this.rate === value ? 0 : value);\n\t\t}\n\t}\n\n\thandleKeyDown(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowDown':\n\t\t\tcase 'ArrowLeft':\n\t\t\t\tthis.update(this.rate - 1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowUp':\n\t\t\tcase 'ArrowRight':\n\t\t\t\tthis.update(this.rate + 1);\n\t\t\t\tbreak;\n\t\t\tcase 'Home':\n\t\t\t\tthis.update(0);\n\t\t\t\tbreak;\n\t\t\tcase 'End':\n\t\t\t\tthis.update(this.max);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\t// note 'return' in default case\n\t\tevent.preventDefault();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['rate']) {\n\t\t\tthis.update(this.rate);\n\t\t}\n\t\tif (changes['max']) {\n\t\t\tthis._updateMax();\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis._setupContexts();\n\t\tthis._updateState(this.rate);\n\t}\n\n\tregisterOnChange(fn: (value: any) => any): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => any): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\treset(): void {\n\t\tthis.leave.emit(this.nextRate);\n\t\tthis._updateState(this.rate);\n\t}\n\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\tupdate(value: number, internalChange = true): void {\n\t\tconst newRate = getValueInRange(value, this.max, 0);\n\t\tif (this.isInteractive() && this.rate !== newRate) {\n\t\t\tthis.rate = newRate;\n\t\t\tthis.rateChange.emit(this.rate);\n\t\t}\n\t\tif (internalChange) {\n\t\t\tthis.onChange(this.rate);\n\t\t\tthis.onTouched();\n\t\t}\n\t\tthis._updateState(this.rate);\n\t}\n\n\twriteValue(value) {\n\t\tthis.update(value, false);\n\t\tthis._changeDetectorRef.markForCheck();\n\t}\n\n\tprivate _updateState(nextValue: number) {\n\t\tthis.nextRate = nextValue;\n\t\tthis.contexts.forEach(\n\t\t\t(context, index) => (context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100)),\n\t\t);\n\t}\n\n\tprivate _updateMax() {\n\t\tif (this.max > 0) {\n\t\t\tthis._setupContexts();\n\t\t\tthis.update(this.rate);\n\t\t}\n\t}\n\n\tprivate _setupContexts() {\n\t\tthis.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbRating } from './rating';\n\nexport { NgbRating } from './rating';\nexport { NgbRatingConfig } from './rating-config';\n\n@NgModule({\n\timports: [NgbRating],\n\texports: [NgbRating],\n})\nexport class NgbRatingModule {}\n","import { NgbScrollSpyOptions, NgbScrollSpyProcessChanges, NgbScrollSpyService } from './scrollspy.service';\nimport { isString } from '../util/util';\n\nexport function toFragmentElement(container: Element | null, id?: string | HTMLElement | null): HTMLElement | null {\n\tif (!container || id == null) {\n\t\treturn null;\n\t}\n\treturn isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\n\nfunction getOrderedFragments(container: Element, fragments: Set<Element>): Element[] {\n\tconst selector = [...fragments].map(({ id }) => `#${CSS.escape(id)}`).join(',');\n\treturn Array.from(container.querySelectorAll(selector));\n}\n\nexport const defaultProcessChanges: NgbScrollSpyProcessChanges = (\n\tstate: {\n\t\tentries: IntersectionObserverEntry[];\n\t\trootElement: HTMLElement;\n\t\tfragments: Set<Element>;\n\t\tscrollSpy: NgbScrollSpyService;\n\t\toptions: NgbScrollSpyOptions;\n\t},\n\tchangeActive: (active: string) => void,\n\tctx: {\n\t\tinitialized: boolean;\n\t\tgapFragment: Element | null;\n\t\tvisibleFragments: Set<Element>;\n\t},\n) => {\n\tconst { rootElement, fragments, scrollSpy, options, entries } = state;\n\tconst orderedFragments = getOrderedFragments(rootElement, fragments);\n\n\tif (!ctx.initialized) {\n\t\tctx.initialized = true;\n\t\tctx.gapFragment = null;\n\t\tctx.visibleFragments = new Set<Element>();\n\n\t\t// special case when one of the fragments was pre-selected\n\t\tconst preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n\t\tif (preSelectedFragment) {\n\t\t\tscrollSpy.scrollTo(preSelectedFragment);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tfor (const entry of entries) {\n\t\tconst { isIntersecting, target: fragment } = entry;\n\n\t\t// 1. an entry became visible\n\t\tif (isIntersecting) {\n\t\t\t// if we were in-between two elements, we have to clear it up\n\t\t\tif (ctx.gapFragment) {\n\t\t\t\tctx.visibleFragments.delete(ctx.gapFragment);\n\t\t\t\tctx.gapFragment = null;\n\t\t\t}\n\n\t\t\tctx.visibleFragments.add(fragment);\n\t\t}\n\n\t\t// 2. an entry became invisible\n\t\telse {\n\t\t\tctx.visibleFragments.delete(fragment);\n\n\t\t\t// nothing is visible anymore, but something just was actually\n\t\t\tif (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n\t\t\t\t// 2.1 scrolling down - keeping the same element\n\t\t\t\tif (entry.boundingClientRect.top < entry.rootBounds!.top) {\n\t\t\t\t\tctx.gapFragment = fragment;\n\t\t\t\t\tctx.visibleFragments.add(ctx.gapFragment);\n\t\t\t\t}\n\t\t\t\t// 2.2 scrolling up - getting the previous element\n\t\t\t\telse {\n\t\t\t\t\t// scrolling up and no more fragments above\n\t\t\t\t\tif (fragment === orderedFragments[0]) {\n\t\t\t\t\t\tctx.gapFragment = null;\n\t\t\t\t\t\tctx.visibleFragments.clear();\n\t\t\t\t\t\tchangeActive('');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// getting previous fragment\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst fragmentIndex = orderedFragments.indexOf(fragment);\n\t\t\t\t\t\tctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n\t\t\t\t\t\tif (ctx.gapFragment) {\n\t\t\t\t\t\t\tctx.visibleFragments.add(ctx.gapFragment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// getting the first visible element in the DOM order of the fragments\n\tfor (const fragment of orderedFragments) {\n\t\tif (ctx.visibleFragments.has(fragment)) {\n\t\t\tchangeActive(fragment.id);\n\t\t\tbreak;\n\t\t}\n\t}\n};\n","import { Injectable } from '@angular/core';\nimport { NgbScrollSpyProcessChanges } from './scrollspy.service';\nimport { defaultProcessChanges } from './scrollspy.utils';\n\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbScrollSpyConfig {\n\tscrollBehavior: 'auto' | 'smooth' = 'smooth';\n\tprocessChanges: NgbScrollSpyProcessChanges = defaultProcessChanges;\n}\n","import { ChangeDetectorRef, inject, Injectable, NgZone, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NgbScrollSpyRef } from './scrollspy';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NgbScrollSpyConfig } from './scrollspy-config';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { toFragmentElement } from './scrollspy.utils';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst MATCH_THRESHOLD = 3;\n\nexport type NgbScrollSpyProcessChanges = (\n\tstate: {\n\t\tentries: IntersectionObserverEntry[];\n\t\trootElement: HTMLElement;\n\t\tfragments: Set<Element>;\n\t\tscrollSpy: NgbScrollSpyService;\n\t\toptions: NgbScrollSpyOptions;\n\t},\n\tchangeActive: (active: string) => void,\n\tcontext: object,\n) => void;\n\n/**\n * Options passed to the `NgbScrollSpyService.start()` method for scrollspy initialization.\n *\n * It contains a subset of the `IntersectionObserverInit` options, as well additional optional properties\n * like `changeDetectorRef` or `fragments`\n *\n * @since 15.1.0\n */\nexport interface NgbScrollSpyOptions extends Pick<IntersectionObserverInit, 'root' | 'rootMargin' | 'threshold'> {\n\t/**\n\t * An optional reference to the change detector, that should be marked for check when active fragment changes.\n\t * If it is not provided, the service will try to get it from the DI. Ex. when using the `ngbScrollSpy` directive,\n\t * it will mark for check the directive's host component.\n\t *\n\t * `.markForCheck()` will be called on the change detector when the active fragment changes.\n\t */\n\tchangeDetectorRef?: ChangeDetectorRef;\n\n\t/**\n\t * An optional initial fragment to scroll to when the service starts.\n\t */\n\tinitialFragment?: string | HTMLElement;\n\n\t/**\n\t * An optional list of fragments to observe when the service starts.\n\t * You can alternatively use `.addFragment()` to add fragments.\n\t */\n\tfragments?: (string | HTMLElement)[];\n\n\t/**\n\t * An optional function that is called when the `IntersectionObserver` detects a change.\n\t * It is used to determine if currently active fragment should be changed.\n\t *\n\t * You can override this function to provide your own scrollspy logic.\n\t * It provides:\n\t *  - a scrollspy `state` (observer entries, root element, fragments, scrollSpy instance, etc.)\n\t *  - a `changeActive` function that should be called with the new active fragment\n\t *  - a `context` that is persisted between calls\n\t */\n\tprocessChanges?: NgbScrollSpyProcessChanges;\n\n\t/**\n\t * An optional `IntersectionObserver` root element. If not provided, the document element will be used.\n\t */\n\troot?: HTMLElement;\n\n\t/**\n\t * An optional `IntersectionObserver` margin for the root element.\n\t */\n\trootMargin?: string;\n\n\t/**\n\t * An optional default scroll behavior to use when using the `.scrollTo()` method.\n\t */\n\tscrollBehavior?: 'auto' | 'smooth';\n\n\t/**\n\t * An optional `IntersectionObserver` threshold.\n\t */\n\tthreshold?: number | number[];\n}\n\n/**\n * Scroll options passed to the `.scrollTo()` method.\n * An extension of the standard `ScrollOptions` interface.\n *\n * @since 15.1.0\n */\nexport interface NgbScrollToOptions extends ScrollOptions {\n\t/**\n\t * Scroll behavior as defined in the `ScrollOptions` interface.\n\t */\n\tbehavior?: 'auto' | 'smooth';\n}\n\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class NgbScrollSpyService implements NgbScrollSpyRef, OnDestroy {\n\tprivate _observer: IntersectionObserver | null = null;\n\n\tprivate _containerElement: HTMLElement | null = null;\n\tprivate _fragments = new Set<Element>();\n\tprivate _preRegisteredFragments = new Set<string | HTMLElement>();\n\n\tprivate _active$ = new Subject<string>();\n\tprivate _distinctActive$ = this._active$.pipe(distinctUntilChanged());\n\tprivate _active = '';\n\n\tprivate _config = inject(NgbScrollSpyConfig);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _platformId = inject(PLATFORM_ID);\n\tprivate _scrollBehavior = this._config.scrollBehavior;\n\tprivate _diChangeDetectorRef = inject(ChangeDetectorRef, { optional: true });\n\tprivate _changeDetectorRef = this._diChangeDetectorRef;\n\tprivate _zone = inject(NgZone);\n\n\tconstructor() {\n\t\tthis._distinctActive$.pipe(takeUntilDestroyed()).subscribe((active) => {\n\t\t\tthis._active = active;\n\t\t\tthis._changeDetectorRef?.markForCheck();\n\t\t});\n\t}\n\n\t/**\n\t * Getter for the currently active fragment id. Returns empty string if none.\n\t */\n\tget active(): string {\n\t\treturn this._active;\n\t}\n\n\t/**\n\t * An observable emitting the currently active fragment. Emits empty string if none.\n\t */\n\tget active$(): Observable<string> {\n\t\treturn this._distinctActive$;\n\t}\n\n\t/**\n\t * Starts the scrollspy service and observes specified fragments.\n\t *\n\t * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n\t * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n\t */\n\tstart(options?: NgbScrollSpyOptions) {\n\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\tthis._cleanup();\n\n\t\t\tconst { root, rootMargin, scrollBehavior, threshold, fragments, changeDetectorRef, processChanges } = {\n\t\t\t\t...options,\n\t\t\t};\n\t\t\tthis._containerElement = root ?? this._document.documentElement;\n\t\t\tthis._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n\t\t\tthis._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n\t\t\tconst processChangesFn = processChanges ?? this._config.processChanges;\n\n\t\t\tconst context = {};\n\t\t\tthis._observer = new IntersectionObserver(\n\t\t\t\t(entries) =>\n\t\t\t\t\tprocessChangesFn(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\trootElement: this._containerElement!,\n\t\t\t\t\t\t\tfragments: this._fragments,\n\t\t\t\t\t\t\tscrollSpy: this,\n\t\t\t\t\t\t\toptions: { ...options },\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(active: string) => this._active$.next(active),\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\troot: root ?? this._document,\n\t\t\t\t\t...(rootMargin && { rootMargin }),\n\t\t\t\t\t...(threshold && { threshold }),\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// merging fragments added before starting and the ones passed as options\n\t\t\tfor (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n\t\t\t\tthis.observe(element);\n\t\t\t}\n\n\t\t\tthis._preRegisteredFragments.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Stops the service and unobserves all fragments.\n\t */\n\tstop() {\n\t\tthis._cleanup();\n\t\tthis._active$.next('');\n\t}\n\n\t/**\n\t * Scrolls to a fragment, it must be known to the service and contained in the root element.\n\t * An id or an element reference can be passed.\n\t *\n\t * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n\t */\n\tscrollTo(fragment: string | HTMLElement, options?: NgbScrollToOptions) {\n\t\tconst { behavior } = { behavior: this._scrollBehavior, ...options };\n\n\t\tif (this._containerElement) {\n\t\t\tconst fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n\t\t\tif (fragmentElement) {\n\t\t\t\tconst heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n\n\t\t\t\tthis._containerElement.scrollTo({ top: heightPx, behavior });\n\n\t\t\t\tlet lastOffset = this._containerElement.scrollTop;\n\t\t\t\tlet matchCounter = 0;\n\n\t\t\t\t// we should update the active section only after scrolling is finished\n\t\t\t\t// and there is no clean way to do it at the moment\n\t\t\t\tconst containerElement = this._containerElement;\n\t\t\t\tthis._zone.runOutsideAngular(() => {\n\t\t\t\t\tconst updateActiveWhenScrollingIsFinished = () => {\n\t\t\t\t\t\tconst sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n\n\t\t\t\t\t\tif (sameOffsetAsLastTime) {\n\t\t\t\t\t\t\tmatchCounter++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatchCounter = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!sameOffsetAsLastTime || (sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD)) {\n\t\t\t\t\t\t\tlastOffset = containerElement.scrollTop;\n\n\t\t\t\t\t\t\trequestAnimationFrame(updateActiveWhenScrollingIsFinished);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._zone.run(() => this._active$.next(fragmentElement.id));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\trequestAnimationFrame(updateActiveWhenScrollingIsFinished);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds a fragment to observe. It must be contained in the root element.\n\t * An id or an element reference can be passed.\n\t */\n\tobserve(fragment: string | HTMLElement) {\n\t\tif (!this._observer) {\n\t\t\tthis._preRegisteredFragments.add(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n\t\tif (fragmentElement && !this._fragments.has(fragmentElement)) {\n\t\t\tthis._fragments.add(fragmentElement);\n\t\t\tthis._observer.observe(fragmentElement);\n\t\t}\n\t}\n\n\t/**\n\t * Unobserves a fragment.\n\t * An id or an element reference can be passed.\n\t */\n\tunobserve(fragment: string | HTMLElement) {\n\t\tif (!this._observer) {\n\t\t\tthis._preRegisteredFragments.delete(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n\t\tif (fragmentElement) {\n\t\t\tthis._fragments.delete(fragmentElement);\n\n\t\t\t// we're removing and re-adding all current fragments to recompute active one\n\t\t\tthis._observer.disconnect();\n\n\t\t\tfor (const fragment of this._fragments) {\n\t\t\t\tthis._observer.observe(fragment);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis._cleanup();\n\t}\n\n\tprivate _cleanup() {\n\t\tthis._fragments.clear();\n\t\tthis._observer?.disconnect();\n\t\tthis._changeDetectorRef = this._diChangeDetectorRef;\n\t\tthis._scrollBehavior = this._config.scrollBehavior;\n\t\tthis._observer = null;\n\t\tthis._containerElement = null;\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectorRef,\n\tContentChildren,\n\tDestroyRef,\n\tDirective,\n\tElementRef,\n\tinject,\n\tInput,\n\tOnInit,\n\tOutput,\n\tQueryList,\n} from '@angular/core';\nimport { NgbScrollSpyProcessChanges, NgbScrollSpyService, NgbScrollToOptions } from './scrollspy.service';\nimport { Observable } from 'rxjs';\nimport { isString } from '../util/util';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n/**\n * Common interface for the scroll spy API.\n *\n * @internal\n */\nexport interface NgbScrollSpyRef {\n\tget active(): string;\n\tget active$(): Observable<string>;\n\tscrollTo(fragment: string | HTMLElement, options?: NgbScrollToOptions): void;\n}\n\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\n@Directive({\n\tselector: '[ngbScrollSpyItem]',\n\tstandalone: true,\n\texportAs: 'ngbScrollSpyItem',\n\thost: {\n\t\t'[class.active]': 'isActive()',\n\t\t'(click)': 'scrollTo();',\n\t},\n})\nexport class NgbScrollSpyItem implements OnInit {\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _scrollSpyMenu = inject(NgbScrollSpyMenu, { optional: true });\n\tprivate _scrollSpyAPI: NgbScrollSpyRef = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n\tprivate _destroyRef = inject(DestroyRef);\n\n\tprivate _isActive = false;\n\n\t/**\n\t * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n\t *\n\t * Can be used like:\n\t *  - `ngbScrollSpyItem=\"fragmentId\"`\n\t *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n\t *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n\t *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n\t *\n\t *  As well as together with `[fragment]` and `[parent]` inputs.\n\t */\n\t@Input('ngbScrollSpyItem') set data(data: NgbScrollSpy | string | [NgbScrollSpy, string, string?]) {\n\t\tif (Array.isArray(data)) {\n\t\t\tthis._scrollSpyAPI = data[0];\n\t\t\tthis.fragment = data[1];\n\t\t\tthis.parent ??= data[2];\n\t\t} else if (data instanceof NgbScrollSpy) {\n\t\t\tthis._scrollSpyAPI = data;\n\t\t} else if (isString(data)) {\n\t\t\tthis.fragment = data;\n\t\t}\n\t}\n\n\t/**\n\t * The id of the associated fragment.\n\t */\n\t@Input() fragment: string;\n\n\t/**\n\t * The id of the parent scroll spy menu item.\n\t */\n\t@Input() parent: string | undefined;\n\n\tngOnInit(): void {\n\t\t// if it is not a part of a bigger menu, it should handle activation itself\n\t\tif (!this._scrollSpyMenu) {\n\t\t\tthis._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((active: string) => {\n\t\t\t\tif (active === this.fragment) {\n\t\t\t\t\tthis._activate();\n\t\t\t\t} else {\n\t\t\t\t\tthis._deactivate();\n\t\t\t\t}\n\t\t\t\tthis._changeDetector.markForCheck();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_activate(): void {\n\t\tthis._isActive = true;\n\t\tif (this._scrollSpyMenu) {\n\t\t\tthis._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_deactivate(): void {\n\t\tthis._isActive = false;\n\t\tif (this._scrollSpyMenu) {\n\t\t\tthis._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true`, if the associated fragment is active.\n\t */\n\tisActive(): boolean {\n\t\treturn this._isActive;\n\t}\n\n\t/**\n\t * Scrolls to the associated fragment.\n\t */\n\tscrollTo(options?: NgbScrollToOptions): void {\n\t\tthis._scrollSpyAPI.scrollTo(this.fragment, options);\n\t}\n}\n\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\n@Directive({\n\tselector: '[ngbScrollSpyMenu]',\n\tstandalone: true,\n})\nexport class NgbScrollSpyMenu implements NgbScrollSpyRef, AfterViewInit {\n\tprivate _scrollSpyRef: NgbScrollSpyRef = inject(NgbScrollSpyService);\n\tprivate _destroyRef = inject(DestroyRef);\n\tprivate _map = new Map<string, NgbScrollSpyItem>();\n\tprivate _lastActiveItem: NgbScrollSpyItem | null = null;\n\n\t@ContentChildren(NgbScrollSpyItem, { descendants: true }) private _items: QueryList<NgbScrollSpyItem>;\n\n\t@Input('ngbScrollSpyMenu') set scrollSpy(scrollSpy: NgbScrollSpy) {\n\t\tthis._scrollSpyRef = scrollSpy;\n\t}\n\n\tget active(): string {\n\t\treturn this._scrollSpyRef.active;\n\t}\n\tget active$(): Observable<string> {\n\t\treturn this._scrollSpyRef.active$;\n\t}\n\tscrollTo(fragment: string, options?: NgbScrollToOptions): void {\n\t\tthis._scrollSpyRef.scrollTo(fragment, options);\n\t}\n\n\tgetItem(id: string): NgbScrollSpyItem | undefined {\n\t\treturn this._map.get(id);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n\t\tthis._rebuildMap();\n\n\t\tthis._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((activeId) => {\n\t\t\tthis._lastActiveItem?._deactivate();\n\t\t\tconst item = this._map.get(activeId);\n\t\t\tif (item) {\n\t\t\t\titem._activate();\n\t\t\t\tthis._lastActiveItem = item;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _rebuildMap() {\n\t\tthis._map.clear();\n\t\tfor (let item of this._items) {\n\t\t\tthis._map.set(item.fragment, item);\n\t\t}\n\t}\n}\n\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\n@Directive({\n\tselector: '[ngbScrollSpy]',\n\tstandalone: true,\n\texportAs: 'ngbScrollSpy',\n\thost: {\n\t\ttabindex: '0',\n\t\tstyle: 'overflow-y: auto',\n\t},\n\tproviders: [NgbScrollSpyService],\n})\nexport class NgbScrollSpy implements NgbScrollSpyRef, AfterViewInit {\n\tstatic ngAcceptInputType_scrollBehavior: string;\n\n\tprivate _initialFragment: string | null = null;\n\tprivate _service = inject(NgbScrollSpyService);\n\tprivate _nativeElement = inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n\n\t/**\n\t * A function that is called when the `IntersectionObserver` detects a change.\n\t *\n\t * See [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) for more details.\n\t */\n\t@Input() processChanges: NgbScrollSpyProcessChanges;\n\n\t/**\n\t * An `IntersectionObserver` root margin.\n\t */\n\t@Input() rootMargin: string;\n\n\t/**\n\t * The scroll behavior for the `.scrollTo()` method.\n\t */\n\t@Input() scrollBehavior: 'auto' | 'smooth';\n\n\t/**\n\t * An `IntersectionObserver` threshold.\n\t */\n\t@Input() threshold: number | number[];\n\n\t@Input() set active(fragment: string) {\n\t\tthis._initialFragment = fragment;\n\t\tthis.scrollTo(fragment);\n\t}\n\n\t/**\n\t * An event raised when the active section changes.\n\t *\n\t * Payload is the id of the new active section, empty string if none.\n\t */\n\t@Output() activeChange = this._service.active$;\n\n\t/**\n\t * Getter/setter for the currently active fragment id.\n\t */\n\tget active(): string {\n\t\treturn this._service.active;\n\t}\n\n\t/**\n\t * Returns an observable that emits currently active section id.\n\t */\n\tget active$(): Observable<string> {\n\t\treturn this._service.active$;\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis._service.start({\n\t\t\tprocessChanges: this.processChanges,\n\t\t\troot: this._nativeElement,\n\t\t\trootMargin: this.rootMargin,\n\t\t\tthreshold: this.threshold,\n\t\t\t...(this._initialFragment && { initialFragment: this._initialFragment }),\n\t\t});\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_registerFragment(fragment: NgbScrollSpyFragment): void {\n\t\tthis._service.observe(fragment.id);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_unregisterFragment(fragment: NgbScrollSpyFragment): void {\n\t\tthis._service.unobserve(fragment.id);\n\t}\n\n\t/**\n\t * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n\t * An id or an element reference can be passed.\n\t */\n\tscrollTo(fragment: string | HTMLElement, options?: NgbScrollToOptions): void {\n\t\tthis._service.scrollTo(fragment, {\n\t\t\t...(this.scrollBehavior && { behavior: this.scrollBehavior }),\n\t\t\t...options,\n\t\t});\n\t}\n}\n\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\n@Directive({\n\tselector: '[ngbScrollSpyFragment]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'id',\n\t},\n})\nexport class NgbScrollSpyFragment implements AfterViewInit {\n\tprivate _destroyRef = inject(DestroyRef);\n\tprivate _scrollSpy = inject(NgbScrollSpy);\n\n\t/**\n\t * The unique id of the fragment.\n\t * It must be a string unique to the document, as it will be set as the id of the element.\n\t */\n\t@Input('ngbScrollSpyFragment') id: string;\n\n\tngAfterViewInit() {\n\t\tthis._scrollSpy._registerFragment(this);\n\t\tthis._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbScrollSpy, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu } from './scrollspy';\n\nexport { NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu } from './scrollspy';\nexport { NgbScrollSpyConfig } from './scrollspy-config';\nexport { NgbScrollSpyService, NgbScrollSpyProcessChanges } from './scrollspy.service';\n\n@NgModule({\n\timports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n\texports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n})\nexport class NgbScrollSpyModule {}\n","import { isNumber, toInteger } from '../util/util';\n\nexport class NgbTime {\n\thour: number;\n\tminute: number;\n\tsecond: number;\n\n\tconstructor(hour?: number, minute?: number, second?: number) {\n\t\tthis.hour = toInteger(hour);\n\t\tthis.minute = toInteger(minute);\n\t\tthis.second = toInteger(second);\n\t}\n\n\tchangeHour(step = 1) {\n\t\tthis.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n\t}\n\n\tupdateHour(hour: number) {\n\t\tif (isNumber(hour)) {\n\t\t\tthis.hour = (hour < 0 ? 24 + hour : hour) % 24;\n\t\t} else {\n\t\t\tthis.hour = NaN;\n\t\t}\n\t}\n\n\tchangeMinute(step = 1) {\n\t\tthis.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n\t}\n\n\tupdateMinute(minute: number) {\n\t\tif (isNumber(minute)) {\n\t\t\tthis.minute = minute % 60 < 0 ? 60 + (minute % 60) : minute % 60;\n\t\t\tthis.changeHour(Math.floor(minute / 60));\n\t\t} else {\n\t\t\tthis.minute = NaN;\n\t\t}\n\t}\n\n\tchangeSecond(step = 1) {\n\t\tthis.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n\t}\n\n\tupdateSecond(second: number) {\n\t\tif (isNumber(second)) {\n\t\t\tthis.second = second < 0 ? 60 + (second % 60) : second % 60;\n\t\t\tthis.changeMinute(Math.floor(second / 60));\n\t\t} else {\n\t\t\tthis.second = NaN;\n\t\t}\n\t}\n\n\tisValid(checkSecs = true) {\n\t\treturn isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n\t}\n\n\ttoString() {\n\t\treturn `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbTimepickerConfig {\n\tmeridian = false;\n\tspinners = true;\n\tseconds = false;\n\thourStep = 1;\n\tminuteStep = 1;\n\tsecondStep = 1;\n\tdisabled = false;\n\treadonlyInputs = false;\n\tsize: 'small' | 'medium' | 'large' = 'medium';\n}\n","import { Injectable } from '@angular/core';\nimport { NgbTimeStruct } from './ngb-time-struct';\nimport { isInteger } from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n\treturn new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY })\nexport abstract class NgbTimeAdapter<T> {\n\t/**\n\t * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n\t */\n\tabstract fromModel(value: T | null): NgbTimeStruct | null;\n\n\t/**\n\t * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n\t */\n\tabstract toModel(time: NgbTimeStruct | null): T | null;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n\t/**\n\t * Converts a NgbTimeStruct value into NgbTimeStruct value\n\t */\n\tfromModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\n\t\treturn time && isInteger(time.hour) && isInteger(time.minute)\n\t\t\t? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null }\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Converts a NgbTimeStruct value into NgbTimeStruct value\n\t */\n\ttoModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\n\t\treturn time && isInteger(time.hour) && isInteger(time.minute)\n\t\t\t? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null }\n\t\t\t: null;\n\t}\n}\n","import { formatDate } from '@angular/common';\nimport { Injectable, LOCALE_ID, inject } from '@angular/core';\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({\n\tprovidedIn: 'root',\n\tuseFactory: () => new NgbTimepickerI18nDefault(),\n})\nexport abstract class NgbTimepickerI18n {\n\t/**\n\t * Returns the name for the period before midday.\n\t */\n\tabstract getMorningPeriod(): string;\n\n\t/**\n\t * Returns the name for the period after midday.\n\t */\n\tabstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n\tprivate _locale = inject(LOCALE_ID);\n\n\tprivate _periods = [\n\t\tformatDate(new Date(3600000), 'a', this._locale, 'UTC'),\n\t\tformatDate(new Date(3600000 * 13), 'a', this._locale, 'UTC'),\n\t];\n\n\tgetMorningPeriod(): string {\n\t\treturn this._periods[0];\n\t}\n\n\tgetAfternoonPeriod(): string {\n\t\treturn this._periods[1];\n\t}\n}\n","import {\n\tChangeDetectorRef,\n\tComponent,\n\tforwardRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isInteger, isNumber, padNumber, toInteger } from '../util/util';\nimport { NgbTime } from './ngb-time';\nimport { NgbTimepickerConfig } from './timepicker-config';\nimport { NgbTimeAdapter } from './ngb-time-adapter';\nimport { NgbTimepickerI18n } from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n\texportAs: 'ngbTimepicker',\n\tselector: 'ngb-timepicker',\n\tstandalone: true,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrl: './timepicker.scss',\n\ttemplate: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t@if (seconds) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t@if (meridian) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\"></div>\n\t\t\t\t\t<div class=\"ngb-tp-meridian\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (model && model.hour >= 12) {\n\t\t\t\t\t\t\t\t<ng-container i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n\t\t\t\t\t\t\t} @else {\n\t\t\t\t\t\t\t\t<ng-container>{{ i18n.getMorningPeriod() }}</ng-container>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t`,\n\tproviders: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }],\n})\nexport class NgbTimepicker implements ControlValueAccessor, OnChanges {\n\tstatic ngAcceptInputType_size: string;\n\n\tdisabled: boolean;\n\tmodel?: NgbTime;\n\n\tprivate _hourStep: number;\n\tprivate _minuteStep: number;\n\tprivate _secondStep: number;\n\n\t/**\n\t * Whether to display 12H or 24H mode.\n\t */\n\t@Input() meridian: boolean;\n\n\t/**\n\t * If `true`, the spinners above and below inputs are visible.\n\t */\n\t@Input() spinners: boolean;\n\n\t/**\n\t * If `true`, it is possible to select seconds.\n\t */\n\t@Input() seconds: boolean;\n\n\t/**\n\t * The number of hours to add/subtract when clicking hour spinners.\n\t */\n\t@Input()\n\tset hourStep(step: number) {\n\t\tthis._hourStep = isInteger(step) ? step : this._config.hourStep;\n\t}\n\n\tget hourStep(): number {\n\t\treturn this._hourStep;\n\t}\n\n\t/**\n\t * The number of minutes to add/subtract when clicking minute spinners.\n\t */\n\t@Input()\n\tset minuteStep(step: number) {\n\t\tthis._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n\t}\n\n\tget minuteStep(): number {\n\t\treturn this._minuteStep;\n\t}\n\n\t/**\n\t * The number of seconds to add/subtract when clicking second spinners.\n\t */\n\t@Input()\n\tset secondStep(step: number) {\n\t\tthis._secondStep = isInteger(step) ? step : this._config.secondStep;\n\t}\n\n\tget secondStep(): number {\n\t\treturn this._secondStep;\n\t}\n\n\t/**\n\t * If `true`, the timepicker is readonly and can't be changed.\n\t */\n\t@Input() readonlyInputs: boolean;\n\n\t/**\n\t * The size of inputs and buttons.\n\t */\n\t@Input() size: 'small' | 'medium' | 'large';\n\n\tconstructor(\n\t\tprivate readonly _config: NgbTimepickerConfig,\n\t\tprivate _ngbTimeAdapter: NgbTimeAdapter<any>,\n\t\tprivate _cd: ChangeDetectorRef,\n\t\tpublic i18n: NgbTimepickerI18n,\n\t) {\n\t\tthis.meridian = _config.meridian;\n\t\tthis.spinners = _config.spinners;\n\t\tthis.seconds = _config.seconds;\n\t\tthis.hourStep = _config.hourStep;\n\t\tthis.minuteStep = _config.minuteStep;\n\t\tthis.secondStep = _config.secondStep;\n\t\tthis.disabled = _config.disabled;\n\t\tthis.readonlyInputs = _config.readonlyInputs;\n\t\tthis.size = _config.size;\n\t}\n\n\tonChange = (_: any) => {};\n\tonTouched = () => {};\n\n\twriteValue(value) {\n\t\tconst structValue = this._ngbTimeAdapter.fromModel(value);\n\t\tthis.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\t\tif (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n\t\t\tthis.model.second = 0;\n\t\t}\n\t\tthis._cd.markForCheck();\n\t}\n\n\tregisterOnChange(fn: (value: any) => any): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => any): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Increments the hours by the given step.\n\t */\n\tchangeHour(step: number) {\n\t\tthis.model?.changeHour(step);\n\t\tthis.propagateModelChange();\n\t}\n\n\t/**\n\t * Increments the minutes by the given step.\n\t */\n\tchangeMinute(step: number) {\n\t\tthis.model?.changeMinute(step);\n\t\tthis.propagateModelChange();\n\t}\n\n\t/**\n\t * Increments the seconds by the given step.\n\t */\n\tchangeSecond(step: number) {\n\t\tthis.model?.changeSecond(step);\n\t\tthis.propagateModelChange();\n\t}\n\n\t/**\n\t * Update hours with the new value.\n\t */\n\tupdateHour(newVal: string) {\n\t\tconst isPM = this.model ? this.model.hour >= 12 : false;\n\t\tconst enteredHour = toInteger(newVal);\n\t\tif (this.meridian && ((isPM && enteredHour < 12) || (!isPM && enteredHour === 12))) {\n\t\t\tthis.model?.updateHour(enteredHour + 12);\n\t\t} else {\n\t\t\tthis.model?.updateHour(enteredHour);\n\t\t}\n\t\tthis.propagateModelChange();\n\t}\n\n\t/**\n\t * Update minutes with the new value.\n\t */\n\tupdateMinute(newVal: string) {\n\t\tthis.model?.updateMinute(toInteger(newVal));\n\t\tthis.propagateModelChange();\n\t}\n\n\t/**\n\t * Update seconds with the new value.\n\t */\n\tupdateSecond(newVal: string) {\n\t\tthis.model?.updateSecond(toInteger(newVal));\n\t\tthis.propagateModelChange();\n\t}\n\n\ttoggleMeridian() {\n\t\tif (this.meridian) {\n\t\t\tthis.changeHour(12);\n\t\t}\n\t}\n\n\tformatInput(input: HTMLInputElement) {\n\t\tinput.value = input.value.replace(FILTER_REGEX, '');\n\t}\n\n\tformatHour(value?: number) {\n\t\tif (isNumber(value)) {\n\t\t\tif (this.meridian) {\n\t\t\t\treturn padNumber(value % 12 === 0 ? 12 : value % 12);\n\t\t\t} else {\n\t\t\t\treturn padNumber(value % 24);\n\t\t\t}\n\t\t} else {\n\t\t\treturn padNumber(NaN);\n\t\t}\n\t}\n\n\tformatMinSec(value?: number) {\n\t\treturn padNumber(isNumber(value) ? value : NaN);\n\t}\n\n\thandleBlur() {\n\t\tthis.onTouched();\n\t}\n\n\tget isSmallSize(): boolean {\n\t\treturn this.size === 'small';\n\t}\n\n\tget isLargeSize(): boolean {\n\t\treturn this.size === 'large';\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n\t\t\tthis.model.second = 0;\n\t\t\tthis.propagateModelChange(false);\n\t\t}\n\t}\n\n\tprivate propagateModelChange(touched = true) {\n\t\tif (touched) {\n\t\t\tthis.onTouched();\n\t\t}\n\t\tif (this.model?.isValid(this.seconds)) {\n\t\t\tthis.onChange(\n\t\t\t\tthis._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onChange(this._ngbTimeAdapter.toModel(null));\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbTimepicker } from './timepicker';\n\nexport { NgbTimepicker } from './timepicker';\nexport { NgbTimepickerConfig } from './timepicker-config';\nexport { NgbTimeStruct } from './ngb-time-struct';\nexport { NgbTimeAdapter } from './ngb-time-adapter';\nexport { NgbTimepickerI18n } from './timepicker-i18n';\n\n@NgModule({\n\timports: [NgbTimepicker],\n\texports: [NgbTimepicker],\n})\nexport class NgbTimepickerModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n\t/**\n\t * Specify if the toast component should emit the `hide()` output\n\t * after a certain `delay` in ms.\n\t */\n\tautohide?: boolean;\n\n\t/**\n\t * Delay in ms after which the `hide()` output should be emitted.\n\t */\n\tdelay?: number;\n\n\t/**\n\t * Type of aria-live attribute to be used.\n\t *\n\t * Could be one of these 2 values (as string):\n\t * - `polite` (default)\n\t * - `assertive`\n\t */\n\tariaLive?: 'polite' | 'assertive';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbToastConfig implements NgbToastOptions {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tautohide = true;\n\tdelay = 5000;\n\tariaLive: 'polite' | 'assertive' = 'polite';\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import { NgbTransitionStartFn } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\n\nexport const ngbToastFadeInTransition: NgbTransitionStartFn = (element: HTMLElement, animation: true) => {\n\tconst { classList } = element;\n\n\tif (animation) {\n\t\tclassList.add('fade');\n\t} else {\n\t\tclassList.add('show');\n\t\treturn;\n\t}\n\n\treflow(element);\n\tclassList.add('show', 'showing');\n\n\treturn () => {\n\t\tclassList.remove('showing');\n\t};\n};\n\nexport const ngbToastFadeOutTransition: NgbTransitionStartFn = ({ classList }: HTMLElement) => {\n\tclassList.add('showing');\n\treturn () => {\n\t\tclassList.remove('show', 'showing');\n\t};\n};\n","import {\n\tAfterContentInit,\n\tafterNextRender,\n\tAttribute,\n\tComponent,\n\tContentChild,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { NgbToastConfig } from './toast-config';\nimport { ngbRunTransition } from '../util/transition/ngbTransition';\nimport { ngbToastFadeInTransition, ngbToastFadeOutTransition } from './toast-transition';\nimport { NgTemplateOutlet } from '@angular/common';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({ selector: '[ngbToastHeader]', standalone: true })\nexport class NgbToastHeader {}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n\tselector: 'ngb-toast',\n\texportAs: 'ngbToast',\n\timports: [NgTemplateOutlet],\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\trole: 'alert',\n\t\t'[attr.aria-live]': 'ariaLive',\n\t\t'aria-atomic': 'true',\n\t\tclass: 'toast',\n\t\t'[class.fade]': 'animation',\n\t},\n\ttemplate: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t@if (contentHeaderTpl || header) {\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\" />\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t}\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n\tstyleUrl: './toast.scss',\n})\nexport class NgbToast implements AfterContentInit, OnChanges {\n\tprivate _config = inject(NgbToastConfig);\n\tprivate _zone = inject(NgZone);\n\tprivate _injector = inject(Injector);\n\tprivate _element = inject(ElementRef);\n\n\tprivate _timeoutID;\n\t/**\n\t * If `true`, toast opening and closing will be animated.\n\t *\n\t * Animation is triggered only when the `.hide()` or `.show()` functions are called\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * Delay after which the toast will hide (ms).\n\t * default: `500` (ms) (inherited from NgbToastConfig)\n\t */\n\t@Input() delay = this._config.delay;\n\n\t/**\n\t * Auto hide the toast after a delay in ms.\n\t * default: `true` (inherited from NgbToastConfig)\n\t */\n\t@Input() autohide = this._config.autohide;\n\n\t/**\n\t * Text to be used as toast's header.\n\t * Ignored if a ContentChild template is specified at the same time.\n\t */\n\t@Input() header: string;\n\n\t/**\n\t * A template like `<ng-template ngbToastHeader></ng-template>` can be\n\t * used in the projected content to allow markup usage.\n\t */\n\t@ContentChild(NgbToastHeader, { read: TemplateRef, static: true }) contentHeaderTpl: TemplateRef<any> | null = null;\n\n\t/**\n\t * An event fired after the animation triggered by calling `.show()` method has finished.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() shown = new EventEmitter<void>();\n\n\t/**\n\t * An event fired after the animation triggered by calling `.hide()` method has finished.\n\t *\n\t * It can only occur in 2 different scenarios:\n\t * - `autohide` timeout fires\n\t * - user clicks on a closing cross\n\t *\n\t * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n\t * to the user to take care of that.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Output() hidden = new EventEmitter<void>();\n\n\tconstructor(@Attribute('aria-live') public ariaLive: string) {\n\t\tthis.ariaLive ??= this._config.ariaLive;\n\t}\n\n\tngAfterContentInit() {\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\tthis._init();\n\t\t\t\t\tthis.show();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ injector: this._injector },\n\t\t);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif ('autohide' in changes) {\n\t\t\tthis._clearTimeout();\n\t\t\tthis._init();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers toast closing programmatically.\n\t *\n\t * The returned observable will emit and be completed once the closing transition has finished.\n\t * If the animations are turned off this happens synchronously.\n\t *\n\t * Alternatively you could listen or subscribe to the `(hidden)` output\n\t *\n\t * @since 8.0.0\n\t */\n\thide(): Observable<void> {\n\t\tthis._clearTimeout();\n\t\tconst transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n\t\t\tanimation: this.animation,\n\t\t\trunningTransition: 'stop',\n\t\t});\n\t\ttransition.subscribe(() => {\n\t\t\tthis.hidden.emit();\n\t\t});\n\t\treturn transition;\n\t}\n\n\t/**\n\t * Triggers toast opening programmatically.\n\t *\n\t * The returned observable will emit and be completed once the opening transition has finished.\n\t * If the animations are turned off this happens synchronously.\n\t *\n\t * Alternatively you could listen or subscribe to the `(shown)` output\n\t *\n\t * @since 8.0.0\n\t */\n\tshow(): Observable<void> {\n\t\tconst transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n\t\t\tanimation: this.animation,\n\t\t\trunningTransition: 'continue',\n\t\t});\n\t\ttransition.subscribe(() => {\n\t\t\tthis.shown.emit();\n\t\t});\n\t\treturn transition;\n\t}\n\n\tprivate _init() {\n\t\tif (this.autohide && !this._timeoutID) {\n\t\t\tthis._timeoutID = setTimeout(() => this.hide(), this.delay);\n\t\t}\n\t}\n\n\tprivate _clearTimeout() {\n\t\tif (this._timeoutID) {\n\t\t\tclearTimeout(this._timeoutID);\n\t\t\tthis._timeoutID = null;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbToast, NgbToastHeader } from './toast';\n\nexport { NgbToast, NgbToastHeader } from './toast';\nexport { NgbToastConfig, NgbToastOptions } from './toast-config';\n\n@NgModule({\n\timports: [NgbToast, NgbToastHeader],\n\texports: [NgbToast, NgbToastHeader],\n})\nexport class NgbToastModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { PlacementArray } from '../util/positioning';\nimport { NgbConfig } from '../ngb-config';\nimport { Options } from '@popperjs/core';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbTooltipConfig {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tautoClose: boolean | 'inside' | 'outside' = true;\n\tplacement: PlacementArray = 'auto';\n\tpopperOptions = (options: Partial<Options>) => options;\n\ttriggers = 'hover focus';\n\tcontainer: string;\n\tdisableTooltip = false;\n\ttooltipClass: string;\n\topenDelay = 0;\n\tcloseDelay = 0;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import {\n\tafterRender,\n\tAfterRenderRef,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tComponentRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n\tViewEncapsulation,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { listenToTriggers } from '../util/triggers';\nimport { ngbAutoClose } from '../util/autoclose';\nimport { ngbPositioning } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { isString } from '../util/util';\n\nimport { NgbTooltipConfig } from './tooltip-config';\nimport { addPopperOffset } from '../util/positioning-util';\n\nlet nextId = 0;\n\n@Component({\n\tselector: 'ngb-tooltip-window',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n\t\t'[class.fade]': 'animation',\n\t\trole: 'tooltip',\n\t\t'[id]': 'id',\n\t},\n\tstyleUrl: './tooltip.scss',\n\ttemplate: `\n\t\t<div class=\"tooltip-arrow\" data-popper-arrow></div>\n\t\t<div class=\"tooltip-inner\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n})\nexport class NgbTooltipWindow {\n\t@Input() animation: boolean;\n\t@Input() id: string;\n\t@Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({ selector: '[ngbTooltip]', standalone: true, exportAs: 'ngbTooltip' })\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n\tstatic ngAcceptInputType_autoClose: boolean | string;\n\n\tprivate _config = inject(NgbTooltipConfig);\n\n\t/**\n\t * If `true`, tooltip opening and closing will be animated.\n\t *\n\t * @since 8.0.0\n\t */\n\t@Input() animation = this._config.animation;\n\n\t/**\n\t * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n\t *\n\t * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n\t * * `false` - disables the autoClose feature (NB: triggers still apply)\n\t * * `\"inside\"` - closes on inside clicks as well as Escape presses\n\t * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n\t * as well as `Escape` presses\n\t *\n\t * @since 3.0.0\n\t */\n\t@Input() autoClose = this._config.autoClose;\n\n\t/**\n\t * The preferred placement of the tooltip, among the [possible values](#/guides/positioning#api).\n\t *\n\t * The default order of preference is `\"auto\"`.\n\t *\n\t * Please see the [positioning overview](#/positioning) for more details.\n\t */\n\t@Input() placement = this._config.placement;\n\n\t/**\n\t * Allows to change default Popper options when positioning the tooltip.\n\t * Receives current popper options and returns modified ones.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() popperOptions = this._config.popperOptions;\n\n\t/**\n\t * Specifies events that should trigger the tooltip.\n\t *\n\t * Supports a space separated list of event names.\n\t * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n\t */\n\t@Input() triggers = this._config.triggers;\n\n\t/**\n\t * A css selector or html element specifying the element the tooltip should be positioned against.\n\t * By default, the element `ngbTooltip` directive is applied to will be set as a target.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() positionTarget?: string | HTMLElement;\n\n\t/**\n\t * A selector specifying the element the tooltip should be appended to.\n\t *\n\t * Currently only supports `\"body\"`.\n\t */\n\t@Input() container = this._config.container;\n\n\t/**\n\t * If `true`, tooltip is disabled and won't be displayed.\n\t *\n\t * @since 1.1.0\n\t */\n\t@Input() disableTooltip = this._config.disableTooltip;\n\n\t/**\n\t * An optional class applied to the tooltip window element.\n\t *\n\t * @since 3.2.0\n\t */\n\t@Input() tooltipClass = this._config.tooltipClass;\n\n\t/**\n\t * Default template context for `TemplateRef`, can be overridden with `open` method.\n\t *\n\t * @since 15.1.0\n\t */\n\t@Input() tooltipContext: any;\n\n\t/**\n\t * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n\t *\n\t * @since 4.1.0\n\t */\n\t@Input() openDelay = this._config.openDelay;\n\n\t/**\n\t * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n\t *\n\t * @since 4.1.0\n\t */\n\t@Input() closeDelay = this._config.closeDelay;\n\n\t/**\n\t * An event emitted when the tooltip opening animation has finished. Contains no payload.\n\t */\n\t@Output() shown = new EventEmitter();\n\n\t/**\n\t * An event emitted when the tooltip closing animation has finished. Contains no payload.\n\t */\n\t@Output() hidden = new EventEmitter();\n\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\tprivate _ngZone = inject(NgZone);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _injector = inject(Injector);\n\n\tprivate _ngbTooltip: string | TemplateRef<any> | null | undefined;\n\tprivate _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n\tprivate _popupService = new PopupService(NgbTooltipWindow);\n\tprivate _windowRef: ComponentRef<NgbTooltipWindow> | null = null;\n\tprivate _unregisterListenersFn;\n\tprivate _positioning = ngbPositioning();\n\tprivate _afterRenderRef: AfterRenderRef | undefined;\n\n\t/**\n\t * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n\t *\n\t * If the content if falsy, the tooltip won't open.\n\t */\n\t@Input()\n\tset ngbTooltip(value: string | TemplateRef<any> | null | undefined) {\n\t\tthis._ngbTooltip = value;\n\t\tif (!value && this._windowRef) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\tget ngbTooltip() {\n\t\treturn this._ngbTooltip;\n\t}\n\n\t/**\n\t * Opens the tooltip.\n\t *\n\t * This is considered to be a \"manual\" triggering.\n\t * The `context` is an optional value to be injected into the tooltip template when it is created.\n\t */\n\topen(context?: any) {\n\t\tif (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n\t\t\tconst { windowRef, transition$ } = this._popupService.open(\n\t\t\t\tthis._ngbTooltip,\n\t\t\t\tcontext ?? this.tooltipContext,\n\t\t\t\tthis.animation,\n\t\t\t);\n\t\t\tthis._windowRef = windowRef;\n\t\t\tthis._windowRef.setInput('animation', this.animation);\n\t\t\tthis._windowRef.setInput('tooltipClass', this.tooltipClass);\n\t\t\tthis._windowRef.setInput('id', this._ngbTooltipWindowId);\n\n\t\t\tthis._getPositionTargetElement().setAttribute('aria-describedby', this._ngbTooltipWindowId);\n\n\t\t\tif (this.container === 'body') {\n\t\t\t\tthis._document.body.appendChild(this._windowRef.location.nativeElement);\n\t\t\t}\n\n\t\t\t// We need to detect changes, because we don't know where .open() might be called from.\n\t\t\t// Ex. opening tooltip from one of lifecycle hooks that run after the CD\n\t\t\t// (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\t\t\tthis._windowRef.changeDetectorRef.detectChanges();\n\n\t\t\t// We need to mark for check, because tooltip won't work inside the OnPush component.\n\t\t\t// Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n\t\t\t// inside the template of an OnPush component and we change the tooltip from\n\t\t\t// open -> closed, the expression in question won't be updated unless we explicitly\n\t\t\t// mark the parent component to be checked.\n\t\t\tthis._windowRef.changeDetectorRef.markForCheck();\n\n\t\t\t// Setting up popper and scheduling updates when zone is stable\n\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\tthis._positioning.createPopper({\n\t\t\t\t\thostElement: this._getPositionTargetElement(),\n\t\t\t\t\ttargetElement: this._windowRef!.location.nativeElement,\n\t\t\t\t\tplacement: this.placement,\n\t\t\t\t\tbaseClass: 'bs-tooltip',\n\t\t\t\t\tupdatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 6])(options)),\n\t\t\t\t});\n\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t// This update is required for correct arrow placement\n\t\t\t\t\tthis._positioning.update();\n\t\t\t\t});\n\t\t\t\tthis._afterRenderRef = afterRender(\n\t\t\t\t\t{\n\t\t\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\t\t\tthis._positioning.update();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{ injector: this._injector },\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tngbAutoClose(\n\t\t\t\tthis._ngZone,\n\t\t\t\tthis._document,\n\t\t\t\tthis.autoClose,\n\t\t\t\t() => this.close(),\n\t\t\t\tthis.hidden,\n\t\t\t\t[this._windowRef.location.nativeElement],\n\t\t\t\t[this._nativeElement],\n\t\t\t);\n\n\t\t\ttransition$.subscribe(() => this.shown.emit());\n\t\t}\n\t}\n\n\t/**\n\t * Closes the tooltip.\n\t *\n\t * This is considered to be a \"manual\" triggering of the tooltip.\n\t */\n\tclose(animation = this.animation): void {\n\t\tif (this._windowRef != null) {\n\t\t\tthis._getPositionTargetElement().removeAttribute('aria-describedby');\n\t\t\tthis._popupService.close(animation).subscribe(() => {\n\t\t\t\tthis._windowRef = null;\n\t\t\t\tthis._positioning.destroy();\n\t\t\t\tthis._afterRenderRef?.destroy();\n\t\t\t\tthis.hidden.emit();\n\t\t\t\tthis._changeDetector.markForCheck();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the tooltip.\n\t *\n\t * This is considered to be a \"manual\" triggering of the tooltip.\n\t */\n\ttoggle(): void {\n\t\tif (this._windowRef) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true`, if the tooltip is currently shown.\n\t */\n\tisOpen(): boolean {\n\t\treturn this._windowRef != null;\n\t}\n\n\tngOnInit() {\n\t\tthis._unregisterListenersFn = listenToTriggers(\n\t\t\tthis._nativeElement,\n\t\t\tthis.triggers,\n\t\t\tthis.isOpen.bind(this),\n\t\t\tthis.open.bind(this),\n\t\t\tthis.close.bind(this),\n\t\t\t+this.openDelay,\n\t\t\t+this.closeDelay,\n\t\t);\n\t}\n\n\tngOnChanges({ tooltipClass }: SimpleChanges) {\n\t\tif (tooltipClass && this.isOpen()) {\n\t\t\tthis._windowRef!.setInput('tooltipClass', tooltipClass.currentValue);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.close(false);\n\t\t// This check is necessary because it's possible that ngOnDestroy could be invoked before ngOnInit.\n\t\t// under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\t\tthis._unregisterListenersFn?.();\n\t}\n\n\tprivate _getPositionTargetElement(): HTMLElement {\n\t\treturn (\n\t\t\t(isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n\t\t\tthis._nativeElement\n\t\t);\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbTooltip } from './tooltip';\n\nexport { NgbTooltipConfig } from './tooltip-config';\nexport { NgbTooltip } from './tooltip';\nexport { Placement } from '../util/positioning';\n\n@NgModule({\n\timports: [NgbTooltip],\n\texports: [NgbTooltip],\n})\nexport class NgbTooltipModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { regExpEscape, removeAccents, toString } from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n\tselector: 'ngb-highlight',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\ttemplate: `\n\t\t@for (part of parts; track $index) {\n\t\t\t@if ($odd) {\n\t\t\t\t<span class=\"{{ highlightClass }}\">{{ part }}</span>\n\t\t\t} @else {\n\t\t\t\t<ng-container>{{ part }}</ng-container>\n\t\t\t}\n\t\t}\n\t`,\n\tstyleUrl: './highlight.scss',\n})\nexport class NgbHighlight implements OnChanges {\n\tparts: string[];\n\n\t/**\n\t * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n\t */\n\t@Input() highlightClass = 'ngb-highlight';\n\n\t/**\n\t * The text highlighting is added to.\n\t *\n\t * If the `term` is found inside this text, it will be highlighted.\n\t * If the `term` contains array then all the items from it will be highlighted inside the text.\n\t */\n\t@Input({ required: true }) result?: string | null;\n\n\t/**\n\t * The term or array of terms to be highlighted.\n\t * Since version `v4.2.0` term could be a `string[]`\n\t */\n\t@Input({ required: true }) term: string | readonly string[];\n\n\t/**\n\t * Boolean option to determine if the highlighting should be sensitive to accents or not.\n\t *\n\t * This feature is only available for browsers that implement the `String.normalize` function\n\t * (typically not Internet Explorer).\n\t * If you want to use this feature in a browser that does not implement `String.normalize`,\n\t * you will have to include a polyfill in your application (`unorm` for example).\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() accentSensitive = true;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (!this.accentSensitive && !String.prototype.normalize) {\n\t\t\tconsole.warn(\n\t\t\t\t'The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\n\t\t\t\t\t'that does not implement the `String.normalize` function. ' +\n\t\t\t\t\t'You will have to include a polyfill in your application to use this feature in the current browser.',\n\t\t\t);\n\t\t\tthis.accentSensitive = true;\n\t\t}\n\t\tconst result = toString(this.result);\n\n\t\tconst terms = Array.isArray(this.term) ? this.term : [this.term];\n\t\tconst prepareTerm = (term) => (this.accentSensitive ? term : removeAccents(term));\n\t\tconst escapedTerms = terms.map((term) => regExpEscape(prepareTerm(toString(term)))).filter((term) => term);\n\t\tconst toSplit = this.accentSensitive ? result : removeAccents(result);\n\n\t\tconst parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n\n\t\tif (this.accentSensitive) {\n\t\t\tthis.parts = parts;\n\t\t} else {\n\t\t\tlet offset = 0;\n\t\t\tthis.parts = parts.map((part) => result.substring(offset, (offset += part.length)));\n\t\t}\n\t}\n}\n","import { inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport const ARIA_LIVE_DELAY = new InjectionToken<number | null>('live announcer delay', {\n\tprovidedIn: 'root',\n\tfactory: () => 100,\n});\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n\tlet element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n\tif (element == null && lazyCreate) {\n\t\telement = document.createElement('div');\n\n\t\telement.setAttribute('id', 'ngb-live');\n\t\telement.setAttribute('aria-live', 'polite');\n\t\telement.setAttribute('aria-atomic', 'true');\n\n\t\telement.classList.add('visually-hidden');\n\n\t\tdocument.body.appendChild(element);\n\t}\n\n\treturn element;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class Live implements OnDestroy {\n\tprivate _document = inject(DOCUMENT);\n\tprivate _delay = inject(ARIA_LIVE_DELAY);\n\n\tngOnDestroy() {\n\t\tconst element = getLiveElement(this._document);\n\t\tif (element) {\n\t\t\t// if exists, it will always be attached to the <body>\n\t\t\telement.parentElement!.removeChild(element);\n\t\t}\n\t}\n\n\tsay(message: string) {\n\t\tconst element = getLiveElement(this._document, true);\n\t\tconst delay = this._delay;\n\n\t\tif (element != null) {\n\t\t\telement.textContent = '';\n\t\t\tconst setText = () => (element.textContent = message);\n\t\t\tif (delay === null) {\n\t\t\t\tsetText();\n\t\t\t} else {\n\t\t\t\tsetTimeout(setText, delay);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { PlacementArray } from '../util/positioning';\nimport { Options } from '@popperjs/core';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbTypeaheadConfig {\n\tcontainer;\n\teditable = true;\n\tfocusFirst = true;\n\tselectOnExact = false;\n\tshowHint = false;\n\tplacement: PlacementArray = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\tpopperOptions = (options: Partial<Options>) => options;\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { toString } from '../util/util';\nimport { NgbHighlight } from './highlight';\nimport { NgTemplateOutlet } from '@angular/common';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n\t/**\n\t * Your typeahead result item.\n\t */\n\tresult: any;\n\n\t/**\n\t * Search term from the `<input>` used to get current result.\n\t */\n\tterm: string;\n\n\t/**\n\t * The function which transforms the result into a string\n\t */\n\tformatter: (result: any) => string;\n}\n\n@Component({\n\tselector: 'ngb-typeahead-window',\n\texportAs: 'ngbTypeaheadWindow',\n\timports: [NgbHighlight, NgTemplateOutlet],\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'(mousedown)': '$event.preventDefault()',\n\t\t'[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n\t\trole: 'listbox',\n\t\t'[id]': 'id',\n\t},\n\ttemplate: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\" />\n\t\t</ng-template>\n\t\t@for (result of results; track $index) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + $index\"\n\t\t\t\t[class.active]=\"$index === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive($index)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t}\n\t`,\n})\nexport class NgbTypeaheadWindow implements OnInit {\n\tactiveIdx = 0;\n\n\t/**\n\t *  The id for the typeahead window. The id should be unique and the same\n\t *  as the associated typeahead's id.\n\t */\n\t@Input() id: string;\n\n\t/**\n\t * Flag indicating if the first row should be active initially\n\t */\n\t@Input() focusFirst = true;\n\n\t/**\n\t * Typeahead match results to be displayed\n\t */\n\t@Input() results;\n\n\t/**\n\t * Search term used to get current results\n\t */\n\t@Input() term: string;\n\n\t/**\n\t * A function used to format a given result before display. This function should return a formatted string without any\n\t * HTML markup\n\t */\n\t@Input() formatter = toString;\n\n\t/**\n\t * A template to override a matching result default display\n\t */\n\t@Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n\t/**\n\t * A custom class to append to the typeahead window\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() popupClass: string;\n\n\t/**\n\t * Event raised when user selects a particular result row\n\t */\n\t@Output('select') selectEvent = new EventEmitter();\n\n\t@Output('activeChange') activeChangeEvent = new EventEmitter();\n\n\thasActive() {\n\t\treturn this.activeIdx > -1 && this.activeIdx < this.results.length;\n\t}\n\n\tgetActive() {\n\t\treturn this.results[this.activeIdx];\n\t}\n\n\tmarkActive(activeIdx: number) {\n\t\tthis.activeIdx = activeIdx;\n\t\tthis._activeChanged();\n\t}\n\n\tnext() {\n\t\tif (this.activeIdx === this.results.length - 1) {\n\t\t\tthis.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n\t\t} else {\n\t\t\tthis.activeIdx++;\n\t\t}\n\t\tthis._activeChanged();\n\t}\n\n\tprev() {\n\t\tif (this.activeIdx < 0) {\n\t\t\tthis.activeIdx = this.results.length - 1;\n\t\t} else if (this.activeIdx === 0) {\n\t\t\tthis.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n\t\t} else {\n\t\t\tthis.activeIdx--;\n\t\t}\n\t\tthis._activeChanged();\n\t}\n\n\tresetActive() {\n\t\tthis.activeIdx = this.focusFirst ? 0 : -1;\n\t\tthis._activeChanged();\n\t}\n\n\tselect(item) {\n\t\tthis.selectEvent.emit(item);\n\t}\n\n\tngOnInit() {\n\t\tthis.resetActive();\n\t}\n\n\tprivate _activeChanged() {\n\t\tthis.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n\t}\n}\n","import {\n\tafterRender,\n\tAfterRenderRef,\n\tChangeDetectorRef,\n\tComponentRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tTemplateRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\nimport { BehaviorSubject, fromEvent, of, OperatorFunction, Subject, Subscription } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\nimport { Live } from '../util/accessibility/live';\nimport { ngbAutoClose } from '../util/autoclose';\nimport { PopupService } from '../util/popup';\nimport { ngbPositioning } from '../util/positioning';\nimport { isDefined, toString } from '../util/util';\n\nimport { NgbTypeaheadConfig } from './typeahead-config';\nimport { NgbTypeaheadWindow, ResultTemplateContext } from './typeahead-window';\nimport { addPopperOffset } from '../util/positioning-util';\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent<T = any> {\n\t/**\n\t * The item from the result list about to be selected.\n\t */\n\titem: T;\n\n\t/**\n\t * Calling this function will prevent item selection from happening.\n\t */\n\tpreventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n\tselector: 'input[ngbTypeahead]',\n\texportAs: 'ngbTypeahead',\n\tstandalone: true,\n\thost: {\n\t\t'(blur)': 'handleBlur()',\n\t\t'[class.open]': 'isPopupOpen()',\n\t\t'(keydown)': 'handleKeyDown($event)',\n\t\t'[autocomplete]': 'autocomplete',\n\t\tautocapitalize: 'off',\n\t\tautocorrect: 'off',\n\t\trole: 'combobox',\n\t\t'[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n\t\t'[attr.aria-activedescendant]': 'activeDescendant',\n\t\t'[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n\t\t'[attr.aria-expanded]': 'isPopupOpen()',\n\t},\n\tproviders: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }],\n})\nexport class NgbTypeahead implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLInputElement;\n\tprivate _config = inject(NgbTypeaheadConfig);\n\tprivate _live = inject(Live);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _ngZone = inject(NgZone);\n\tprivate _changeDetector = inject(ChangeDetectorRef);\n\tprivate _injector = inject(Injector);\n\n\tprivate _popupService = new PopupService(NgbTypeaheadWindow);\n\tprivate _positioning = ngbPositioning();\n\n\tprivate _subscription: Subscription | null = null;\n\tprivate _closed$ = new Subject<void>();\n\tprivate _inputValueBackup: string | null = null;\n\tprivate _inputValueForSelectOnExact: string | null = null;\n\tprivate _valueChanges$ = fromEvent<Event>(this._nativeElement, 'input').pipe(\n\t\tmap(($event) => ($event.target as HTMLInputElement).value),\n\t);\n\tprivate _resubscribeTypeahead$ = new BehaviorSubject(null);\n\tprivate _windowRef: ComponentRef<NgbTypeaheadWindow> | null = null;\n\tprivate _afterRenderRef: AfterRenderRef;\n\n\t/**\n\t * The value for the `autocomplete` attribute for the `<input>` element.\n\t *\n\t * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n\t *\n\t * @since 2.1.0\n\t */\n\t@Input() autocomplete = 'off';\n\n\t/**\n\t * A selector specifying the element the typeahead popup will be appended to.\n\t *\n\t * Currently only supports `\"body\"`.\n\t */\n\t@Input() container = this._config.container;\n\n\t/**\n\t * If `true`, model values will not be restricted only to items selected from the popup.\n\t */\n\t@Input() editable = this._config.editable;\n\n\t/**\n\t * If `true`, the first item in the result list will always stay focused while typing.\n\t */\n\t@Input() focusFirst = this._config.focusFirst;\n\n\t/**\n\t * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n\t *\n\t * It is called when the user selects something in the popup or the model value changes, so the input needs to\n\t * be updated.\n\t */\n\t@Input() inputFormatter: (item: any) => string;\n\n\t/**\n\t * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n\t * to display in the typeahead popup.\n\t *\n\t * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n\t * popup will be closed.\n\t *\n\t * See the [basic example](#/components/typeahead/examples#basic) for more details.\n\t *\n\t * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n\t */\n\t@Input() ngbTypeahead: OperatorFunction<string, readonly any[]> | null | undefined;\n\n\t/**\n\t * The function that converts an item from the result list to a `string` to display in the popup.\n\t *\n\t * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n\t *\n\t * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n\t */\n\t@Input() resultFormatter: (item: any) => string;\n\n\t/**\n\t * The template to override the way resulting items are displayed in the popup.\n\t *\n\t * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n\t *\n\t * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n\t */\n\t@Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n\t/**\n\t * If `true`, automatically selects the item when it is the only one that exactly matches the user input\n\t *\n\t * @since 14.2.0\n\t */\n\t@Input() selectOnExact = this._config.selectOnExact;\n\n\t/**\n\t * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n\t */\n\t@Input() showHint = this._config.showHint;\n\n\t/**\n\t * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n\t *\n\t * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n\t *\n\t * Please see the [positioning overview](#/positioning) for more details.\n\t */\n\t@Input() placement = this._config.placement;\n\n\t/**\n\t * Allows to change default Popper options when positioning the typeahead.\n\t * Receives current popper options and returns modified ones.\n\t *\n\t * @since 13.1.0\n\t */\n\t@Input() popperOptions = this._config.popperOptions;\n\n\t/**\n\t * A custom class to append to the typeahead popup window\n\t *\n\t * Accepts a string containing CSS class to be applied on the `ngb-typeahead-window`.\n\t *\n\t * This can be used to provide instance-specific styling, ex. you can override popup window `z-index`\n\t *\n\t * @since 9.1.0\n\t */\n\t@Input() popupClass: string;\n\n\t/**\n\t * An event emitted right before an item is selected from the result list.\n\t *\n\t * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n\t */\n\t@Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n\tactiveDescendant: string | null = null;\n\tpopupId = `ngb-typeahead-${nextWindowId++}`;\n\n\tprivate _onTouched = () => {};\n\tprivate _onChange = (_: any) => {};\n\n\tngOnInit(): void {\n\t\tthis._subscribeToUserInput();\n\t}\n\n\tngOnChanges({ ngbTypeahead }: SimpleChanges): void {\n\t\tif (ngbTypeahead && !ngbTypeahead.firstChange) {\n\t\t\tthis._unsubscribeFromUserInput();\n\t\t\tthis._subscribeToUserInput();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis._closePopup();\n\t\tthis._unsubscribeFromUserInput();\n\t}\n\n\tregisterOnChange(fn: (value: any) => any): void {\n\t\tthis._onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => any): void {\n\t\tthis._onTouched = fn;\n\t}\n\n\twriteValue(value) {\n\t\tthis._writeInputValue(this._formatItemForInput(value));\n\t\tif (this.showHint) {\n\t\t\tthis._inputValueBackup = value;\n\t\t}\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis._nativeElement.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Dismisses typeahead popup window\n\t */\n\tdismissPopup() {\n\t\tif (this.isPopupOpen()) {\n\t\t\tthis._resubscribeTypeahead$.next(null);\n\t\t\tthis._closePopup();\n\t\t\tif (this.showHint && this._inputValueBackup !== null) {\n\t\t\t\tthis._writeInputValue(this._inputValueBackup);\n\t\t\t}\n\t\t\tthis._changeDetector.markForCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the typeahead popup window is displayed\n\t */\n\tisPopupOpen() {\n\t\treturn this._windowRef != null;\n\t}\n\n\thandleBlur() {\n\t\tthis._resubscribeTypeahead$.next(null);\n\t\tthis._onTouched();\n\t}\n\n\thandleKeyDown(event: KeyboardEvent) {\n\t\tif (!this.isPopupOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowDown':\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._windowRef!.instance.next();\n\t\t\t\tthis._showHint();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowUp':\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._windowRef!.instance.prev();\n\t\t\t\tthis._showHint();\n\t\t\t\tbreak;\n\t\t\tcase 'Enter':\n\t\t\tcase 'Tab': {\n\t\t\t\tconst result = this._windowRef!.instance.getActive();\n\t\t\t\tif (isDefined(result)) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tthis._selectResult(result);\n\t\t\t\t}\n\t\t\t\tthis._closePopup();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _openPopup() {\n\t\tif (!this.isPopupOpen()) {\n\t\t\tthis._inputValueBackup = this._nativeElement.value;\n\t\t\tconst { windowRef } = this._popupService.open();\n\t\t\tthis._windowRef = windowRef;\n\t\t\tthis._windowRef.setInput('id', this.popupId);\n\t\t\tthis._windowRef.setInput('popupClass', this.popupClass);\n\t\t\tthis._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n\t\t\tthis._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => (this.activeDescendant = activeId));\n\n\t\t\tif (this.container === 'body') {\n\t\t\t\t(this._windowRef.location.nativeElement as HTMLElement).style.zIndex = '1055';\n\t\t\t\tthis._document.body.appendChild(this._windowRef.location.nativeElement);\n\t\t\t}\n\n\t\t\tthis._changeDetector.markForCheck();\n\n\t\t\t// Setting up popper and scheduling updates when zone is stable\n\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\tif (this._windowRef) {\n\t\t\t\t\tthis._positioning.createPopper({\n\t\t\t\t\t\thostElement: this._nativeElement,\n\t\t\t\t\t\ttargetElement: this._windowRef.location.nativeElement,\n\t\t\t\t\t\tplacement: this.placement,\n\t\t\t\t\t\tupdatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._afterRenderRef = afterRender(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmixedReadWrite: () => {\n\t\t\t\t\t\t\t\tthis._positioning.update();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ injector: this._injector },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [\n\t\t\t\tthis._nativeElement,\n\t\t\t\tthis._windowRef.location.nativeElement,\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate _closePopup() {\n\t\tthis._popupService.close().subscribe(() => {\n\t\t\tthis._positioning.destroy();\n\t\t\tthis._afterRenderRef?.destroy();\n\t\t\tthis._closed$.next();\n\t\t\tthis._windowRef = null;\n\t\t\tthis.activeDescendant = null;\n\t\t});\n\t}\n\n\tprivate _selectResult(result: any) {\n\t\tlet defaultPrevented = false;\n\t\tthis.selectItem.emit({\n\t\t\titem: result,\n\t\t\tpreventDefault: () => {\n\t\t\t\tdefaultPrevented = true;\n\t\t\t},\n\t\t});\n\t\tthis._resubscribeTypeahead$.next(null);\n\n\t\tif (!defaultPrevented) {\n\t\t\tthis.writeValue(result);\n\t\t\tthis._onChange(result);\n\t\t}\n\t}\n\n\tprivate _selectResultClosePopup(result: any) {\n\t\tthis._selectResult(result);\n\t\tthis._closePopup();\n\t}\n\n\tprivate _showHint() {\n\t\tif (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n\t\t\tconst userInputLowerCase = this._inputValueBackup.toLowerCase();\n\t\t\tconst formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n\t\t\tif (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n\t\t\t\tthis._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n\t\t\t\tthis._nativeElement['setSelectionRange'].apply(this._nativeElement, [\n\t\t\t\t\tthis._inputValueBackup.length,\n\t\t\t\t\tformattedVal.length,\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tthis._writeInputValue(formattedVal);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _formatItemForInput(item: any): string {\n\t\treturn item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n\t}\n\n\tprivate _writeInputValue(value: string): void {\n\t\tthis._nativeElement.value = toString(value);\n\t}\n\n\tprivate _subscribeToUserInput(): void {\n\t\tconst results$ = this._valueChanges$.pipe(\n\t\t\ttap((value) => {\n\t\t\t\tthis._inputValueBackup = this.showHint ? value : null;\n\t\t\t\tthis._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n\t\t\t\tthis._onChange(this.editable ? value : undefined);\n\t\t\t}),\n\t\t\tthis.ngbTypeahead ? this.ngbTypeahead : () => of([]),\n\t\t);\n\n\t\tthis._subscription = this._resubscribeTypeahead$.pipe(switchMap(() => results$)).subscribe((results) => {\n\t\t\tif (!results || results.length === 0) {\n\t\t\t\tthis._closePopup();\n\t\t\t} else {\n\t\t\t\t// when there is only one result and this matches the input value\n\t\t\t\tif (\n\t\t\t\t\tthis.selectOnExact &&\n\t\t\t\t\tresults.length === 1 &&\n\t\t\t\t\tthis._formatItemForInput(results[0]) === this._inputValueForSelectOnExact\n\t\t\t\t) {\n\t\t\t\t\tthis._selectResult(results[0]);\n\t\t\t\t\tthis._closePopup();\n\t\t\t\t} else {\n\t\t\t\t\tthis._openPopup();\n\t\t\t\t\tthis._windowRef!.setInput('focusFirst', this.focusFirst);\n\t\t\t\t\tthis._windowRef!.setInput('results', results);\n\t\t\t\t\tthis._windowRef!.setInput('term', this._nativeElement.value);\n\t\t\t\t\tif (this.resultFormatter) {\n\t\t\t\t\t\tthis._windowRef!.setInput('formatter', this.resultFormatter);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.resultTemplate) {\n\t\t\t\t\t\tthis._windowRef!.setInput('resultTemplate', this.resultTemplate);\n\t\t\t\t\t}\n\t\t\t\t\tthis._windowRef!.instance.resetActive();\n\n\t\t\t\t\t// The observable stream we are subscribing to might have async steps\n\t\t\t\t\t// and if a component containing typeahead is using the OnPush strategy\n\t\t\t\t\t// the change detection turn wouldn't be invoked automatically.\n\t\t\t\t\tthis._windowRef!.changeDetectorRef.detectChanges();\n\n\t\t\t\t\tthis._showHint();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// live announcer\n\t\t\tconst count = results ? results.length : 0;\n\t\t\tthis._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n\t\t});\n\t}\n\n\tprivate _unsubscribeFromUserInput() {\n\t\tif (this._subscription) {\n\t\t\tthis._subscription.unsubscribe();\n\t\t}\n\t\tthis._subscription = null;\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbHighlight } from './highlight';\nimport { NgbTypeahead } from './typeahead';\n\nexport { NgbHighlight } from './highlight';\nexport { NgbTypeaheadWindow } from './typeahead-window';\nexport { NgbTypeaheadConfig } from './typeahead-config';\nexport { NgbTypeahead, NgbTypeaheadSelectItemEvent } from './typeahead';\n\n@NgModule({\n\timports: [NgbHighlight, NgbTypeahead],\n\texports: [NgbHighlight, NgbTypeahead],\n})\nexport class NgbTypeaheadModule {}\n","import { inject, Injectable, Injector } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n\n/**\n * Options available when opening new offcanvas windows with `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nexport interface NgbOffcanvasOptions {\n\t/**\n\t * If `true`, opening and closing will be animated.\n\t */\n\tanimation?: boolean;\n\n\t/**\n\t * `aria-describedby` attribute value to set on the offcanvas panel.\n\t */\n\tariaDescribedBy?: string;\n\n\t/**\n\t * `aria-labelledby` attribute value to set on the offcanvas panel.\n\t */\n\tariaLabelledBy?: string;\n\n\t/**\n\t * If `true`, the backdrop element will be created for a given offcanvas.\n\t * If 'static', clicking the backdrop won't close the offcanvas (available since 13.1.0).\n\t *\n\t * Default value is `true`.\n\t */\n\tbackdrop?: boolean | 'static';\n\n\t/**\n\t * A custom class to append to the offcanvas backdrop.\n\t */\n\tbackdropClass?: string;\n\n\t/**\n\t * Callback right before the offcanvas will be dismissed.\n\t *\n\t * If this function returns:\n\t * * `false`\n\t * * a promise resolved with `false`\n\t * * a promise that is rejected\n\t *\n\t * then the offcanvas won't be dismissed.\n\t */\n\tbeforeDismiss?: () => boolean | Promise<boolean>;\n\n\t/**\n\t * A selector specifying the element all new offcanvas panels and backdrops should be appended to.\n\t *\n\t * If not specified, will be `body`.\n\t */\n\tcontainer?: string | HTMLElement;\n\n\t/**\n\t * The `Injector` to use for offcanvas content.\n\t */\n\tinjector?: Injector;\n\n\t/**\n\t * If `true`, the offcanvas will be closed when `Escape` key is pressed\n\t *\n\t * Default value is `true`.\n\t */\n\tkeyboard?: boolean;\n\n\t/**\n\t * A custom class to append to the offcanvas panel.\n\t */\n\tpanelClass?: string;\n\n\t/**\n\t * The position of the offcanvas\n\t */\n\tposition?: 'start' | 'end' | 'top' | 'bottom';\n\n\t/**\n\t * Scroll content while offcanvas is open (false by default).\n\t */\n\tscroll?: boolean;\n}\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbOffcanvasConfig implements Required<NgbOffcanvasOptions> {\n\tprivate _ngbConfig = inject(NgbConfig);\n\tprivate _animation: boolean;\n\n\tariaDescribedBy: string;\n\tariaLabelledBy: string;\n\tbackdrop: boolean | 'static' = true;\n\tbackdropClass: string;\n\tbeforeDismiss: () => boolean | Promise<boolean>;\n\tcontainer: string | HTMLElement;\n\tinjector: Injector;\n\tkeyboard = true;\n\tpanelClass: string;\n\tposition: 'start' | 'end' | 'top' | 'bottom' = 'start';\n\tscroll = false;\n\n\tget animation(): boolean {\n\t\treturn this._animation ?? this._ngbConfig.animation;\n\t}\n\tset animation(animation: boolean) {\n\t\tthis._animation = animation;\n\t}\n}\n","import { ComponentRef } from '@angular/core';\n\nimport { Observable, of, Subject, zip } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ContentRef } from '../util/popup';\nimport { isPromise } from '../util/util';\nimport { NgbOffcanvasBackdrop } from './offcanvas-backdrop';\nimport { NgbOffcanvasPanel } from './offcanvas-panel';\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nexport class NgbActiveOffcanvas {\n\t/**\n\t * Closes the offcanvas with an optional `result` value.\n\t *\n\t * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n\t */\n\tclose(result?: any): void {}\n\n\t/**\n\t * Dismisses the offcanvas with an optional `reason` value.\n\t *\n\t * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n\t */\n\tdismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nexport class NgbOffcanvasRef {\n\tprivate _closed = new Subject<any>();\n\tprivate _dismissed = new Subject<any>();\n\tprivate _hidden = new Subject<void>();\n\tprivate _resolve: (result?: any) => void;\n\tprivate _reject: (reason?: any) => void;\n\n\t/**\n\t * The instance of a component used for the offcanvas content.\n\t *\n\t * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n\t */\n\tget componentInstance(): any {\n\t\tif (this._contentRef && this._contentRef.componentRef) {\n\t\t\treturn this._contentRef.componentRef.instance;\n\t\t}\n\t}\n\n\t/**\n\t * The promise that is resolved when the offcanvas is closed and rejected when the offcanvas is dismissed.\n\t */\n\tresult: Promise<any>;\n\n\t/**\n\t * The observable that emits when the offcanvas is closed via the `.close()` method.\n\t *\n\t * It will emit the result passed to the `.close()` method.\n\t */\n\tget closed(): Observable<any> {\n\t\treturn this._closed.asObservable().pipe(takeUntil(this._hidden));\n\t}\n\n\t/**\n\t * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n\t *\n\t * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n\t * reasons like backdrop click or ESC key press.\n\t */\n\tget dismissed(): Observable<any> {\n\t\treturn this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n\t}\n\n\t/**\n\t * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n\t * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n\t *\n\t * This observable will be completed after emitting.\n\t */\n\tget hidden(): Observable<void> {\n\t\treturn this._hidden.asObservable();\n\t}\n\n\t/**\n\t * The observable that emits when offcanvas is fully visible and animation was finished.\n\t * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n\t *\n\t * This observable will be completed after emitting.\n\t * It will not emit, if offcanvas is closed before open animation is finished.\n\t */\n\tget shown(): Observable<void> {\n\t\treturn this._panelCmptRef.instance.shown.asObservable();\n\t}\n\n\tconstructor(\n\t\tprivate _panelCmptRef: ComponentRef<NgbOffcanvasPanel>,\n\t\tprivate _contentRef: ContentRef,\n\t\tprivate _backdropCmptRef?: ComponentRef<NgbOffcanvasBackdrop>,\n\t\tprivate _beforeDismiss?: () => boolean | Promise<boolean>,\n\t) {\n\t\t_panelCmptRef.instance.dismissEvent.subscribe((reason: any) => {\n\t\t\tthis.dismiss(reason);\n\t\t});\n\t\tif (_backdropCmptRef) {\n\t\t\t_backdropCmptRef.instance.dismissEvent.subscribe((reason: any) => {\n\t\t\t\tthis.dismiss(reason);\n\t\t\t});\n\t\t}\n\t\tthis.result = new Promise((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\t\t});\n\t\tthis.result.then(null, () => {});\n\t}\n\n\t/**\n\t * Closes the offcanvas with an optional `result` value.\n\t *\n\t * The `NgbMobalRef.result` promise will be resolved with the provided value.\n\t */\n\tclose(result?: any): void {\n\t\tif (this._panelCmptRef) {\n\t\t\tthis._closed.next(result);\n\t\t\tthis._resolve(result);\n\t\t\tthis._removeOffcanvasElements();\n\t\t}\n\t}\n\n\tprivate _dismiss(reason?: any) {\n\t\tthis._dismissed.next(reason);\n\t\tthis._reject(reason);\n\t\tthis._removeOffcanvasElements();\n\t}\n\n\t/**\n\t * Dismisses the offcanvas with an optional `reason` value.\n\t *\n\t * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n\t */\n\tdismiss(reason?: any): void {\n\t\tif (this._panelCmptRef) {\n\t\t\tif (!this._beforeDismiss) {\n\t\t\t\tthis._dismiss(reason);\n\t\t\t} else {\n\t\t\t\tconst dismiss = this._beforeDismiss();\n\t\t\t\tif (isPromise(dismiss)) {\n\t\t\t\t\tdismiss.then(\n\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\tthis._dismiss(reason);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {},\n\t\t\t\t\t);\n\t\t\t\t} else if (dismiss !== false) {\n\t\t\t\t\tthis._dismiss(reason);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _removeOffcanvasElements() {\n\t\tconst panelTransition$ = this._panelCmptRef.instance.hide();\n\t\tconst backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n\n\t\t// hiding panel\n\t\tpanelTransition$.subscribe(() => {\n\t\t\tconst { nativeElement } = this._panelCmptRef.location;\n\t\t\tnativeElement.parentNode.removeChild(nativeElement);\n\t\t\tthis._panelCmptRef.destroy();\n\t\t\tthis._contentRef?.viewRef?.destroy();\n\n\t\t\tthis._panelCmptRef = <any>null;\n\t\t\tthis._contentRef = <any>null;\n\t\t});\n\n\t\t// hiding backdrop\n\t\tbackdropTransition$.subscribe(() => {\n\t\t\tif (this._backdropCmptRef) {\n\t\t\t\tconst { nativeElement } = this._backdropCmptRef.location;\n\t\t\t\tnativeElement.parentNode.removeChild(nativeElement);\n\t\t\t\tthis._backdropCmptRef.destroy();\n\t\t\t\tthis._backdropCmptRef = <any>null;\n\t\t\t}\n\t\t});\n\n\t\t// all done\n\t\tzip(panelTransition$, backdropTransition$).subscribe(() => {\n\t\t\tthis._hidden.next();\n\t\t\tthis._hidden.complete();\n\t\t});\n\t}\n}\n","export enum OffcanvasDismissReasons {\n\tBACKDROP_CLICK,\n\tESC,\n}\n","import {\n\tafterNextRender,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { ngbRunTransition } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\nimport { OffcanvasDismissReasons } from './offcanvas-dismiss-reasons';\n\n@Component({\n\tselector: 'ngb-offcanvas-backdrop',\n\tstandalone: true,\n\tencapsulation: ViewEncapsulation.None,\n\ttemplate: '',\n\thost: {\n\t\t'[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n\t\t'[class.show]': '!animation',\n\t\t'[class.fade]': 'animation',\n\t\t'(mousedown)': 'dismiss()',\n\t},\n})\nexport class NgbOffcanvasBackdrop implements OnInit {\n\tprivate _nativeElement = inject(ElementRef).nativeElement as HTMLElement;\n\tprivate _zone = inject(NgZone);\n\tprivate _injector = inject(Injector);\n\n\t@Input() animation: boolean;\n\t@Input() backdropClass: string;\n\t@Input() static: boolean;\n\n\t@Output('dismiss') dismissEvent = new EventEmitter();\n\n\tngOnInit() {\n\t\tafterNextRender(\n\t\t\t{\n\t\t\t\tmixedReadWrite: () =>\n\t\t\t\t\tngbRunTransition(\n\t\t\t\t\t\tthis._zone,\n\t\t\t\t\t\tthis._nativeElement,\n\t\t\t\t\t\t(element: HTMLElement, animation: boolean) => {\n\t\t\t\t\t\t\tif (animation) {\n\t\t\t\t\t\t\t\treflow(element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telement.classList.add('show');\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ animation: this.animation, runningTransition: 'continue' },\n\t\t\t\t\t),\n\t\t\t},\n\t\t\t{ injector: this._injector },\n\t\t);\n\t}\n\n\thide(): Observable<void> {\n\t\treturn ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n\t\t\tanimation: this.animation,\n\t\t\trunningTransition: 'stop',\n\t\t});\n\t}\n\n\tdismiss() {\n\t\tif (!this.static) {\n\t\t\tthis.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n\t\t}\n\t}\n}\n","import {\n\tafterNextRender,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation,\n} from '@angular/core';\n\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { getFocusableBoundaryElements } from '../util/focus-trap';\nimport { OffcanvasDismissReasons } from './offcanvas-dismiss-reasons';\nimport { ngbRunTransition, NgbTransitionOptions } from '../util/transition/ngbTransition';\nimport { reflow } from '../util/util';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n\tselector: 'ngb-offcanvas-panel',\n\tstandalone: true,\n\ttemplate: '<ng-content />',\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n\t\trole: 'dialog',\n\t\ttabindex: '-1',\n\t\t'[attr.aria-modal]': 'true',\n\t\t'[attr.aria-labelledby]': 'ariaLabelledBy',\n\t\t'[attr.aria-describedby]': 'ariaDescribedBy',\n\t},\n})\nexport class NgbOffcanvasPanel implements OnInit, OnDestroy {\n\tprivate _document = inject(DOCUMENT);\n\tprivate _elRef = inject(ElementRef<HTMLElement>);\n\tprivate _zone = inject(NgZone);\n\tprivate _injector = inject(Injector);\n\n\tprivate _closed$ = new Subject<void>();\n\tprivate _elWithFocus: Element | null = null; // element that is focused prior to offcanvas opening\n\n\t@Input() animation: boolean;\n\t@Input() ariaLabelledBy?: string;\n\t@Input() ariaDescribedBy?: string;\n\t@Input() keyboard = true;\n\t@Input() panelClass: string;\n\t@Input() position: 'start' | 'end' | 'top' | 'bottom' = 'start';\n\n\t@Output('dismiss') dismissEvent = new EventEmitter();\n\n\tshown = new Subject<void>();\n\thidden = new Subject<void>();\n\n\tdismiss(reason): void {\n\t\tthis.dismissEvent.emit(reason);\n\t}\n\n\tngOnInit() {\n\t\tthis._elWithFocus = this._document.activeElement;\n\t\tafterNextRender({ mixedReadWrite: () => this._show() }, { injector: this._injector });\n\t}\n\n\tngOnDestroy() {\n\t\tthis._disableEventHandling();\n\t}\n\n\thide(): Observable<any> {\n\t\tconst context: NgbTransitionOptions<any> = { animation: this.animation, runningTransition: 'stop' };\n\n\t\tconst offcanvasTransition$ = ngbRunTransition(\n\t\t\tthis._zone,\n\t\t\tthis._elRef.nativeElement,\n\t\t\t(element) => {\n\t\t\t\telement.classList.remove('showing');\n\t\t\t\telement.classList.add('hiding');\n\t\t\t\treturn () => element.classList.remove('show', 'hiding');\n\t\t\t},\n\t\t\tcontext,\n\t\t);\n\n\t\toffcanvasTransition$.subscribe(() => {\n\t\t\tthis.hidden.next();\n\t\t\tthis.hidden.complete();\n\t\t});\n\n\t\tthis._disableEventHandling();\n\t\tthis._restoreFocus();\n\n\t\treturn offcanvasTransition$;\n\t}\n\n\tprivate _show() {\n\t\tconst context: NgbTransitionOptions<any> = { animation: this.animation, runningTransition: 'continue' };\n\n\t\tconst offcanvasTransition$ = ngbRunTransition(\n\t\t\tthis._zone,\n\t\t\tthis._elRef.nativeElement,\n\t\t\t(element: HTMLElement, animation: boolean) => {\n\t\t\t\tif (animation) {\n\t\t\t\t\treflow(element);\n\t\t\t\t}\n\t\t\t\telement.classList.add('show', 'showing');\n\t\t\t\treturn () => element.classList.remove('showing');\n\t\t\t},\n\t\t\tcontext,\n\t\t);\n\n\t\toffcanvasTransition$.subscribe(() => {\n\t\t\tthis.shown.next();\n\t\t\tthis.shown.complete();\n\t\t});\n\n\t\tthis._enableEventHandling();\n\t\tthis._setFocus();\n\t}\n\n\tprivate _enableEventHandling() {\n\t\tconst { nativeElement } = this._elRef;\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tfromEvent<KeyboardEvent>(nativeElement, 'keydown')\n\t\t\t\t.pipe(\n\t\t\t\t\ttakeUntil(this._closed$),\n\t\t\t\t\tfilter((e) => e.key === 'Escape'),\n\t\t\t\t)\n\t\t\t\t.subscribe((event) => {\n\t\t\t\t\tif (this.keyboard) {\n\t\t\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t\t\tif (!event.defaultPrevented) {\n\t\t\t\t\t\t\t\tthis._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate _disableEventHandling() {\n\t\tthis._closed$.next();\n\t}\n\n\tprivate _setFocus() {\n\t\tconst { nativeElement } = this._elRef;\n\t\tif (!nativeElement.contains(document.activeElement)) {\n\t\t\tconst autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n\t\t\tconst firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n\t\t\tconst elementToFocus = autoFocusable || firstFocusable || nativeElement;\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n\n\tprivate _restoreFocus() {\n\t\tconst body = this._document.body;\n\t\tconst elWithFocus = this._elWithFocus;\n\n\t\tlet elementToFocus;\n\t\tif (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n\t\t\telementToFocus = elWithFocus;\n\t\t} else {\n\t\t\telementToFocus = body;\n\t\t}\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tsetTimeout(() => elementToFocus.focus());\n\t\t\tthis._elWithFocus = null;\n\t\t});\n\t}\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n\tApplicationRef,\n\tComponentRef,\n\tcreateComponent,\n\tEventEmitter,\n\tinject,\n\tInjectable,\n\tInjector,\n\tNgZone,\n\tTemplateRef,\n\tType,\n} from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { ngbFocusTrap } from '../util/focus-trap';\nimport { ContentRef } from '../util/popup';\nimport { ScrollBar } from '../util/scrollbar';\nimport { isDefined, isString } from '../util/util';\nimport { NgbActiveOffcanvas, NgbOffcanvasRef } from './offcanvas-ref';\nimport { NgbOffcanvasOptions } from './offcanvas-config';\nimport { NgbOffcanvasBackdrop } from './offcanvas-backdrop';\nimport { NgbOffcanvasPanel } from './offcanvas-panel';\n\n@Injectable({ providedIn: 'root' })\nexport class NgbOffcanvasStack {\n\tprivate _applicationRef = inject(ApplicationRef);\n\tprivate _injector = inject(Injector);\n\tprivate _document = inject(DOCUMENT);\n\tprivate _scrollBar = inject(ScrollBar);\n\n\tprivate _activePanelCmptHasChanged = new Subject<void>();\n\tprivate _scrollBarRestoreFn: null | (() => void) = null;\n\tprivate _backdropAttributes = ['animation', 'backdropClass'];\n\tprivate _offcanvasRef?: NgbOffcanvasRef;\n\tprivate _panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n\tprivate _panelCmpt?: ComponentRef<NgbOffcanvasPanel>;\n\tprivate _activeInstance: EventEmitter<NgbOffcanvasRef | undefined> = new EventEmitter();\n\n\tconstructor() {\n\t\tconst ngZone = inject(NgZone);\n\t\t// Trap focus on active PanelCmpt\n\t\tthis._activePanelCmptHasChanged.subscribe(() => {\n\t\t\tif (this._panelCmpt) {\n\t\t\t\tngbFocusTrap(ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _restoreScrollBar() {\n\t\tconst scrollBarRestoreFn = this._scrollBarRestoreFn;\n\t\tif (scrollBarRestoreFn) {\n\t\t\tthis._scrollBarRestoreFn = null;\n\t\t\tscrollBarRestoreFn();\n\t\t}\n\t}\n\n\tprivate _hideScrollBar() {\n\t\tif (!this._scrollBarRestoreFn) {\n\t\t\tthis._scrollBarRestoreFn = this._scrollBar.hide();\n\t\t}\n\t}\n\n\topen(contentInjector: Injector, content: any, options: NgbOffcanvasOptions): NgbOffcanvasRef {\n\t\tconst containerEl =\n\t\t\toptions.container instanceof HTMLElement\n\t\t\t\t? options.container\n\t\t\t\t: isDefined(options.container)\n\t\t\t\t  ? this._document.querySelector(options.container!)\n\t\t\t\t  : this._document.body;\n\t\tif (!containerEl) {\n\t\t\tthrow new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n\t\t}\n\n\t\tif (!options.scroll) {\n\t\t\tthis._hideScrollBar();\n\t\t}\n\n\t\tconst activeOffcanvas = new NgbActiveOffcanvas();\n\t\tconst contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n\n\t\tlet backdropCmptRef: ComponentRef<NgbOffcanvasBackdrop> | undefined =\n\t\t\toptions.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n\t\tlet panelCmptRef: ComponentRef<NgbOffcanvasPanel> = this._attachWindowComponent(containerEl, contentRef.nodes);\n\t\tlet ngbOffcanvasRef: NgbOffcanvasRef = new NgbOffcanvasRef(\n\t\t\tpanelCmptRef,\n\t\t\tcontentRef,\n\t\t\tbackdropCmptRef,\n\t\t\toptions.beforeDismiss,\n\t\t);\n\n\t\tthis._registerOffcanvasRef(ngbOffcanvasRef);\n\t\tthis._registerPanelCmpt(panelCmptRef);\n\t\tngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n\t\tactiveOffcanvas.close = (result: any) => {\n\t\t\tngbOffcanvasRef.close(result);\n\t\t};\n\t\tactiveOffcanvas.dismiss = (reason: any) => {\n\t\t\tngbOffcanvasRef.dismiss(reason);\n\t\t};\n\n\t\tthis._applyPanelOptions(panelCmptRef.instance, options);\n\n\t\tif (backdropCmptRef && backdropCmptRef.instance) {\n\t\t\tthis._applyBackdropOptions(backdropCmptRef.instance, options);\n\t\t\tbackdropCmptRef.changeDetectorRef.detectChanges();\n\t\t}\n\t\tpanelCmptRef.changeDetectorRef.detectChanges();\n\t\treturn ngbOffcanvasRef;\n\t}\n\n\tget activeInstance() {\n\t\treturn this._activeInstance;\n\t}\n\n\tdismiss(reason?: any) {\n\t\tthis._offcanvasRef?.dismiss(reason);\n\t}\n\n\thasOpenOffcanvas(): boolean {\n\t\treturn !!this._offcanvasRef;\n\t}\n\n\tprivate _attachBackdrop(containerEl: Element): ComponentRef<NgbOffcanvasBackdrop> {\n\t\tlet backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n\t\t\tenvironmentInjector: this._applicationRef.injector,\n\t\t\telementInjector: this._injector,\n\t\t});\n\t\tthis._applicationRef.attachView(backdropCmptRef.hostView);\n\t\tcontainerEl.appendChild(backdropCmptRef.location.nativeElement);\n\t\treturn backdropCmptRef;\n\t}\n\n\tprivate _attachWindowComponent(containerEl: Element, projectableNodes: Node[][]): ComponentRef<NgbOffcanvasPanel> {\n\t\tlet panelCmptRef = createComponent(NgbOffcanvasPanel, {\n\t\t\tenvironmentInjector: this._applicationRef.injector,\n\t\t\telementInjector: this._injector,\n\t\t\tprojectableNodes,\n\t\t});\n\t\tthis._applicationRef.attachView(panelCmptRef.hostView);\n\t\tcontainerEl.appendChild(panelCmptRef.location.nativeElement);\n\t\treturn panelCmptRef;\n\t}\n\n\tprivate _applyPanelOptions(windowInstance: NgbOffcanvasPanel, options: NgbOffcanvasOptions): void {\n\t\tthis._panelAttributes.forEach((optionName: string) => {\n\t\t\tif (isDefined(options[optionName])) {\n\t\t\t\twindowInstance[optionName] = options[optionName];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _applyBackdropOptions(backdropInstance: NgbOffcanvasBackdrop, options: NgbOffcanvasOptions): void {\n\t\tthis._backdropAttributes.forEach((optionName: string) => {\n\t\t\tif (isDefined(options[optionName])) {\n\t\t\t\tbackdropInstance[optionName] = options[optionName];\n\t\t\t}\n\t\t});\n\t\tbackdropInstance.static = options.backdrop === 'static';\n\t}\n\n\tprivate _getContentRef(\n\t\tcontentInjector: Injector,\n\t\tcontent: Type<any> | TemplateRef<any> | string,\n\t\tactiveOffcanvas: NgbActiveOffcanvas,\n\t): ContentRef {\n\t\tif (!content) {\n\t\t\treturn new ContentRef([]);\n\t\t} else if (content instanceof TemplateRef) {\n\t\t\treturn this._createFromTemplateRef(content, activeOffcanvas);\n\t\t} else if (isString(content)) {\n\t\t\treturn this._createFromString(content);\n\t\t} else {\n\t\t\treturn this._createFromComponent(contentInjector, content, activeOffcanvas);\n\t\t}\n\t}\n\n\tprivate _createFromTemplateRef(templateRef: TemplateRef<any>, activeOffcanvas: NgbActiveOffcanvas): ContentRef {\n\t\tconst context = {\n\t\t\t$implicit: activeOffcanvas,\n\t\t\tclose(result) {\n\t\t\t\tactiveOffcanvas.close(result);\n\t\t\t},\n\t\t\tdismiss(reason) {\n\t\t\t\tactiveOffcanvas.dismiss(reason);\n\t\t\t},\n\t\t};\n\t\tconst viewRef = templateRef.createEmbeddedView(context);\n\t\tthis._applicationRef.attachView(viewRef);\n\t\treturn new ContentRef([viewRef.rootNodes], viewRef);\n\t}\n\n\tprivate _createFromString(content: string): ContentRef {\n\t\tconst component = this._document.createTextNode(`${content}`);\n\t\treturn new ContentRef([[component]]);\n\t}\n\n\tprivate _createFromComponent(\n\t\tcontentInjector: Injector,\n\t\tcomponentType: Type<any>,\n\t\tcontext: NgbActiveOffcanvas,\n\t): ContentRef {\n\t\tconst elementInjector = Injector.create({\n\t\t\tproviders: [{ provide: NgbActiveOffcanvas, useValue: context }],\n\t\t\tparent: contentInjector,\n\t\t});\n\t\tconst componentRef = createComponent(componentType, {\n\t\t\tenvironmentInjector: this._applicationRef.injector,\n\t\t\telementInjector,\n\t\t});\n\t\tconst componentNativeEl = componentRef.location.nativeElement;\n\t\tthis._applicationRef.attachView(componentRef.hostView);\n\t\treturn new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n\t}\n\n\tprivate _registerOffcanvasRef(ngbOffcanvasRef: NgbOffcanvasRef) {\n\t\tconst unregisterOffcanvasRef = () => {\n\t\t\tthis._offcanvasRef = undefined;\n\t\t\tthis._activeInstance.emit(this._offcanvasRef);\n\t\t};\n\t\tthis._offcanvasRef = ngbOffcanvasRef;\n\t\tthis._activeInstance.emit(this._offcanvasRef);\n\t\tngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n\t}\n\n\tprivate _registerPanelCmpt(ngbPanelCmpt: ComponentRef<NgbOffcanvasPanel>) {\n\t\tthis._panelCmpt = ngbPanelCmpt;\n\t\tthis._activePanelCmptHasChanged.next();\n\n\t\tngbPanelCmpt.onDestroy(() => {\n\t\t\tthis._panelCmpt = undefined;\n\t\t\tthis._activePanelCmptHasChanged.next();\n\t\t});\n\t}\n}\n","import { inject, Injectable, Injector } from '@angular/core';\nimport { NgbOffcanvasConfig, NgbOffcanvasOptions } from './offcanvas-config';\nimport { NgbOffcanvasRef } from './offcanvas-ref';\nimport { NgbOffcanvasStack } from './offcanvas-stack';\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\n@Injectable({ providedIn: 'root' })\nexport class NgbOffcanvas {\n\tprivate _injector = inject(Injector);\n\tprivate _offcanvasStack = inject(NgbOffcanvasStack);\n\tprivate _config = inject(NgbOffcanvasConfig);\n\n\t/**\n\t * Opens a new offcanvas panel with the specified content and supplied options.\n\t *\n\t * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n\t * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n\t * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n\t *\n\t * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n\t * options.\n\t */\n\topen(content: any, options: NgbOffcanvasOptions = {}): NgbOffcanvasRef {\n\t\tconst combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n\t\treturn this._offcanvasStack.open(this._injector, content, combinedOptions);\n\t}\n\n\t/**\n\t * Returns an observable that holds the active offcanvas instance.\n\t */\n\tget activeInstance() {\n\t\treturn this._offcanvasStack.activeInstance;\n\t}\n\n\t/**\n\t * Dismisses the currently displayed offcanvas with the supplied reason.\n\t */\n\tdismiss(reason?: any) {\n\t\tthis._offcanvasStack.dismiss(reason);\n\t}\n\n\t/**\n\t * Indicates if there is currently an open offcanvas in the application.\n\t */\n\thasOpenOffcanvas(): boolean {\n\t\treturn this._offcanvasStack.hasOpenOffcanvas();\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nexport { NgbOffcanvas } from './offcanvas';\nexport { NgbOffcanvasConfig, NgbOffcanvasOptions } from './offcanvas-config';\nexport { NgbOffcanvasRef, NgbActiveOffcanvas } from './offcanvas-ref';\nexport { OffcanvasDismissReasons } from './offcanvas-dismiss-reasons';\n\n@NgModule({})\nexport class NgbOffcanvasModule {}\n","import { NgModule } from '@angular/core';\n\nimport { NgbAccordionModule } from './accordion/accordion.module';\nimport { NgbAlertModule } from './alert/alert.module';\nimport { NgbCarouselModule } from './carousel/carousel.module';\nimport { NgbCollapseModule } from './collapse/collapse.module';\nimport { NgbDatepickerModule } from './datepicker/datepicker.module';\nimport { NgbDropdownModule } from './dropdown/dropdown.module';\nimport { NgbModalModule } from './modal/modal.module';\nimport { NgbNavModule } from './nav/nav.module';\nimport { NgbPaginationModule } from './pagination/pagination.module';\nimport { NgbPopoverModule } from './popover/popover.module';\nimport { NgbProgressbarModule } from './progressbar/progressbar.module';\nimport { NgbRatingModule } from './rating/rating.module';\nimport { NgbScrollSpyModule } from './scrollspy/scrollspy.module';\nimport { NgbTimepickerModule } from './timepicker/timepicker.module';\nimport { NgbToastModule } from './toast/toast.module';\nimport { NgbTooltipModule } from './tooltip/tooltip.module';\nimport { NgbTypeaheadModule } from './typeahead/typeahead.module';\nimport { NgbOffcanvasModule } from './offcanvas/offcanvas.module';\n\nexport {\n\tNgbAccordionDirective,\n\tNgbAccordionConfig,\n\tNgbAccordionModule,\n\tNgbAccordionItem,\n\tNgbAccordionHeader,\n\tNgbAccordionToggle,\n\tNgbAccordionCollapse,\n\tNgbAccordionBody,\n\tNgbAccordionButton,\n} from './accordion/accordion.module';\n\nexport { NgbAlert, NgbAlertConfig, NgbAlertModule } from './alert/alert.module';\nexport {\n\tNgbCarousel,\n\tNgbCarouselConfig,\n\tNgbCarouselModule,\n\tNgbSlide,\n\tNgbSlideEvent,\n\tNgbSlideEventDirection,\n\tNgbSlideEventSource,\n} from './carousel/carousel.module';\nexport { NgbCollapse, NgbCollapseConfig, NgbCollapseModule } from './collapse/collapse.module';\nexport {\n\tNgbCalendar,\n\tNgbCalendarEthiopian,\n\tNgbCalendarGregorian,\n\tNgbCalendarHebrew,\n\tNgbCalendarIslamicCivil,\n\tNgbCalendarIslamicUmalqura,\n\tNgbCalendarPersian,\n\tNgbCalendarBuddhist,\n\tNgbDate,\n\tNgbDateAdapter,\n\tNgbDateStructAdapter,\n\tNgbDateNativeAdapter,\n\tNgbDateNativeUTCAdapter,\n\tNgbDateParserFormatter,\n\tNgbDatepicker,\n\tNgbDatepickerConfig,\n\tNgbInputDatepickerConfig,\n\tNgbDatepickerContent,\n\tNgbDatepickerI18n,\n\tNgbDatepickerI18nAmharic,\n\tNgbDatepickerI18nDefault,\n\tNgbDatepickerI18nHebrew,\n\tNgbDatepickerKeyboardService,\n\tNgbDatepickerModule,\n\tNgbDatepickerMonth,\n\tNgbDatepickerNavigateEvent,\n\tNgbDatepickerState,\n\tNgbDateStruct,\n\tNgbInputDatepicker,\n\tNgbPeriod,\n} from './datepicker/datepicker.module';\nexport {\n\tNgbDropdown,\n\tNgbDropdownAnchor,\n\tNgbDropdownConfig,\n\tNgbDropdownItem,\n\tNgbDropdownButtonItem,\n\tNgbDropdownMenu,\n\tNgbDropdownModule,\n\tNgbDropdownToggle,\n} from './dropdown/dropdown.module';\nexport {\n\tModalDismissReasons,\n\tNgbActiveModal,\n\tNgbModal,\n\tNgbModalConfig,\n\tNgbModalModule,\n\tNgbModalOptions,\n\tNgbModalUpdatableOptions,\n\tNgbModalRef,\n} from './modal/modal.module';\nexport {\n\tNgbNavChangeEvent,\n\tNgbNavConfig,\n\tNgbNav,\n\tNgbNavContent,\n\tNgbNavContentContext,\n\tNgbNavItem,\n\tNgbNavItemRole,\n\tNgbNavLink,\n\tNgbNavLinkButton,\n\tNgbNavLinkBase,\n\tNgbNavModule,\n\tNgbNavOutlet,\n\tNgbNavPane,\n} from './nav/nav.module';\nexport {\n\tOffcanvasDismissReasons,\n\tNgbActiveOffcanvas,\n\tNgbOffcanvas,\n\tNgbOffcanvasConfig,\n\tNgbOffcanvasModule,\n\tNgbOffcanvasOptions,\n\tNgbOffcanvasRef,\n} from './offcanvas/offcanvas.module';\nexport {\n\tNgbPagination,\n\tNgbPaginationConfig,\n\tNgbPaginationEllipsis,\n\tNgbPaginationFirst,\n\tNgbPaginationLast,\n\tNgbPaginationModule,\n\tNgbPaginationNext,\n\tNgbPaginationNumber,\n\tNgbPaginationPrevious,\n\tNgbPaginationPages,\n} from './pagination/pagination.module';\nexport { NgbPopover, NgbPopoverConfig, NgbPopoverModule } from './popover/popover.module';\nexport {\n\tNgbProgressbar,\n\tNgbProgressbarConfig,\n\tNgbProgressbarModule,\n\tNgbProgressbarStacked,\n} from './progressbar/progressbar.module';\nexport { NgbRating, NgbRatingConfig, NgbRatingModule } from './rating/rating.module';\nexport {\n\tNgbScrollSpy,\n\tNgbScrollSpyConfig,\n\tNgbScrollSpyFragment,\n\tNgbScrollSpyItem,\n\tNgbScrollSpyMenu,\n\tNgbScrollSpyModule,\n\tNgbScrollSpyProcessChanges,\n\tNgbScrollSpyService,\n} from './scrollspy/scrollspy.module';\nexport {\n\tNgbTimeAdapter,\n\tNgbTimepickerI18n,\n\tNgbTimepicker,\n\tNgbTimepickerConfig,\n\tNgbTimepickerModule,\n\tNgbTimeStruct,\n} from './timepicker/timepicker.module';\nexport { NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule } from './toast/toast.module';\nexport { NgbTooltip, NgbTooltipConfig, NgbTooltipModule } from './tooltip/tooltip.module';\nexport {\n\tNgbHighlight,\n\tNgbTypeahead,\n\tNgbTypeaheadConfig,\n\tNgbTypeaheadModule,\n\tNgbTypeaheadSelectItemEvent,\n} from './typeahead/typeahead.module';\nexport { Placement } from './util/positioning';\n\nexport { NgbConfig } from './ngb-config';\n\nconst NGB_MODULES = [\n\tNgbAccordionModule,\n\tNgbAlertModule,\n\tNgbCarouselModule,\n\tNgbCollapseModule,\n\tNgbDatepickerModule,\n\tNgbDropdownModule,\n\tNgbModalModule,\n\tNgbNavModule,\n\tNgbOffcanvasModule,\n\tNgbPaginationModule,\n\tNgbPopoverModule,\n\tNgbProgressbarModule,\n\tNgbRatingModule,\n\tNgbScrollSpyModule,\n\tNgbTimepickerModule,\n\tNgbToastModule,\n\tNgbTooltipModule,\n\tNgbTypeaheadModule,\n];\n\n@NgModule({ imports: NGB_MODULES, exports: NGB_MODULES })\nexport class NgbModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["nextId","i1.NgbCollapse","offset","offsetModifier","isGregorianLeapYear","mod","GREGORIAN_EPOCH","toGregorian","julianToGregorian","fromGregorian","gregorianToJulian","getDaysPerMonth","WEEKDAYS","MONTHS","i1.NgbTimepickerConfig","i2.NgbTimeAdapter","i3.NgbTimepickerI18n"],"mappings":"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cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;;IAEd,cAAc;CACd;AAED,SAAS,WAAW,CAAC,KAAW,EAAE,KAAW,EAAA;;IAE5C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IAC9E,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;AAClC;AAGM,MAAO,0BAA2B,SAAQ,uBAAuB,CAAA;AACtE;;;AAGG;AACH,IAAA,aAAa,CAAC,KAAW,EAAA;QACxB,IAAI,IAAI,GAAG,CAAC,EACX,MAAM,GAAG,CAAC,EACV,KAAK,GAAG,IAAI;QACb,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,oBAAoB,CAAC;QACvD,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;YAClH,IAAI,IAAI,GAAG,IAAI;AACf,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE;AACrD,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC5B,oBAAA,IAAI,SAAS,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACxC,oBAAA,IAAI,QAAQ,IAAI,SAAS,EAAE;AAC1B,wBAAA,IAAI,GAAG,QAAQ,GAAG,CAAC;AACnB,wBAAA,IAAI,IAAI,GAAG,SAAS,EAAE;4BACrB,IAAI,GAAG,CAAC;AACR,4BAAA,CAAC,EAAE;;AAEJ,wBAAA,IAAI,CAAC,GAAG,EAAE,EAAE;4BACX,CAAC,GAAG,CAAC;AACL,4BAAA,IAAI,EAAE;;wBAEP,MAAM,GAAG,CAAC;wBACV,KAAK,GAAG,IAAI;wBACZ,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;;AAE5C,oBAAA,QAAQ,GAAG,QAAQ,GAAG,SAAS;;;AAGjC,YAAA,OAAO,IAAW;;aACZ;AACN,YAAA,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;;;AAGnC;;AAEG;AACH,IAAA,WAAW,CAAC,KAAc,EAAA;AACzB,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI;AACxB,QAAA,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC;AAC9B,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG;AACtB,QAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC;AAC1C,QAAA,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC;QACtB,IAAI,KAAK,IAAI,WAAW,IAAI,KAAK,IAAI,SAAS,EAAE;AAC/C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AAC7C,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;;;AAGrC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,gBAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;;YAEtD,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC;;aACjD;AACN,YAAA,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC;;AAEjC,QAAA,OAAO,KAAK;;AAEb;;;;AAIG;IACH,eAAe,CAAC,MAAc,EAAE,KAAa,EAAA;QAC5C,IAAI,KAAK,IAAI,WAAW,IAAI,KAAK,IAAI,SAAS,EAAE;AAC/C,YAAA,MAAM,GAAG,GAAG,KAAK,GAAG,WAAW;AAC/B,YAAA,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;;QAE3C,OAAO,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC;;8GAvEhC,0BAA0B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAA1B,0BAA0B,EAAA,CAAA,CAAA;;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBADtC;;;ACpYD;;;AAGG;AACG,SAAUG,aAAW,CAAC,UAAmB,EAAA;AAC9C,IAAA,IAAI,GAAG,GAAG,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC;AAC3E,IAAA,IAAI,IAAI,GAAGC,mBAAiB,CAAC,GAAG,CAAC;IACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;AAC5B,IAAA,OAAO,IAAI;AACZ;AAEA;;;;AAIG;AACG,SAAUC,eAAa,CAAC,KAAW,EAAA;IACxC,IAAI,GAAG,GAAGC,mBAAiB,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AACvF,IAAA,OAAO,cAAc,CAAC,GAAG,CAAC;AAC3B;AAEgB,SAAA,aAAa,CAAC,IAAa,EAAE,SAAiB,EAAA;AAC7D,IAAA,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS;AACtB,IAAA,OAAO,IAAI;AACZ;AAEgB,SAAA,cAAc,CAAC,IAAa,EAAE,KAAa,EAAA;IAC1D,KAAK,GAAG,CAAC,KAAK;AACd,IAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;IACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC;AAC3D,IAAA,OAAO,IAAI;AACZ;AAEgB,SAAA,YAAY,CAAC,IAAa,EAAE,GAAW,EAAA;AACtD,IAAA,IAAI,KAAK,GAAGC,iBAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;AAClD,IAAA,IAAI,GAAG,IAAI,CAAC,EAAE;AACb,QAAA,OAAO,GAAG,IAAI,CAAC,EAAE;YAChB,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC3C,KAAK,GAAGA,iBAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;YAC9C,GAAG,IAAI,KAAK;;;AAEP,SAAA,IAAI,GAAG,GAAG,KAAK,EAAE;AACvB,QAAA,OAAO,GAAG,GAAG,KAAK,EAAE;YACnB,GAAG,IAAI,KAAK;YACZ,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC3C,KAAK,GAAGA,iBAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;;;AAGhD,IAAA,IAAI,CAAC,GAAG,GAAG,GAAG;AACd,IAAA,OAAO,IAAI;AACZ;AAEA,SAAS,GAAG,CAAC,CAAS,EAAE,CAAS,EAAA;AAChC,IAAA,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC;AAEA,SAAS,GAAG,CAAC,CAAS,EAAE,CAAS,EAAA;IAChC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB;AAEA;;;;;;;;;;;;AAYG;AACH,SAAS,MAAM,CAAC,UAAkB,EAAA;;AAEjC,IAAA,IAAI,MAAM,GAAG;AACZ,QAAA,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;KAC3G;AACD,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM;AAClC,IAAA,MAAM,KAAK,GAAG,UAAU,GAAG,GAAG;AAC9B,IAAA,IAAI,KAAK,GAAG,CAAC,EAAE;AACf,IAAA,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;AAElB,IAAA,IAAI,UAAU,GAAG,EAAE,IAAI,UAAU,IAAI,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE;AAC9D,QAAA,MAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,UAAU,CAAC;;;AAIrD,IAAA,IAAI,IAAI;AACR,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE;AACzC,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;AACpB,QAAA,IAAI,GAAG,EAAE,GAAG,EAAE;AACd,QAAA,IAAI,UAAU,GAAG,EAAE,EAAE;YACpB;;QAED,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACzD,EAAE,GAAG,EAAE;;AAER,IAAA,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE;;;IAIvB,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACvD,IAAA,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1C,KAAK,IAAI,CAAC;;;AAIX,IAAA,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;;AAGrE,IAAA,MAAM,KAAK,GAAG,EAAE,GAAG,KAAK,GAAG,KAAK;;AAGhC,IAAA,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;AACjB,QAAA,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE;;AAEtC,IAAA,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACrC,IAAA,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,GAAG,CAAC;;AAGT,IAAA,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAC/C;AAEA;;;;;;;;;AASG;AACH,SAASH,mBAAiB,CAAC,eAAuB,EAAA;AACjD,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,SAAS;IACvC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI;AAC3E,IAAA,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;AACxC,IAAA,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;AACpC,IAAA,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AACvC,IAAA,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;IAExD,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;AACzC;AAEA;;;;;;AAMG;AACH,SAASE,mBAAiB,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;IAC5D,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,QAAQ;AACzG,IAAA,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;AAChE,IAAA,OAAO,CAAC;AACT;AAEA;;;;;;;AAOG;AACH,SAAS,cAAc,CAAC,eAAuB,EAAA;IAC9C,IAAI,EAAE,GAAGF,mBAAiB,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE;AACxD,IAAA,UAAU,GAAG,EAAE,GAAG,GAAG,EACrB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,EACtB,YAAY,GAAGE,mBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAChD,SAAS,EACT,WAAW,EACX,YAAY;;AAGb,IAAA,YAAY,GAAG,eAAe,GAAG,YAAY;AAC7C,IAAA,IAAI,YAAY,IAAI,CAAC,EAAE;AACtB,QAAA,IAAI,YAAY,IAAI,GAAG,EAAE;;YAExB,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC;YACvC,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,CAAC;YACrC,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;;aAChD;;YAEN,YAAY,IAAI,GAAG;;;SAEd;;QAEN,UAAU,IAAI,CAAC;QACf,YAAY,IAAI,GAAG;AACnB,QAAA,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE;YACjB,YAAY,IAAI,CAAC;;;IAGnB,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC;IACvC,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,CAAC;IAErC,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;AACvD;AAEA;;;;;;AAMG;AACH,SAAS,cAAc,CAAC,KAAa,EAAE,MAAc,EAAE,IAAY,EAAA;AAClE,IAAA,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;AACrB,IAAA,OAAOA,mBAAiB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;AAC1G;AAEA;;AAEG;AACH,SAASC,iBAAe,CAAC,KAAa,EAAE,IAAY,EAAA;AACnD,IAAA,IAAI,KAAK,IAAI,CAAC,EAAE;AACf,QAAA,OAAO,EAAE;;AAEV,IAAA,IAAI,KAAK,IAAI,EAAE,EAAE;AAChB,QAAA,OAAO,EAAE;;IAEV,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE;AAC5B,QAAA,OAAO,EAAE;;AAEV,IAAA,OAAO,EAAE;AACV;;AC9NM,MAAO,kBAAmB,SAAQ,WAAW,CAAA;IAClD,cAAc,GAAA;AACb,QAAA,OAAO,CAAC;;IAGT,SAAS,GAAA;QACR,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;IAG/C,gBAAgB,GAAA;AACf,QAAA,OAAO,CAAC;;IAGT,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;AACzD,QAAA,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;QAEnD,QAAQ,MAAM;AACb,YAAA,KAAK,GAAG;gBACP,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AAC9C,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AACd,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;gBACP,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;AAChD,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;gBACP,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;AAC7C,YAAA;AACC,gBAAA,OAAO,IAAI;;;IAId,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;;AAG3C,IAAA,UAAU,CAAC,IAAa,EAAA;QACvB,MAAM,GAAG,GAAGJ,aAAW,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;;QAEtC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;;IAG3B,aAAa,CAAC,IAAwB,EAAE,cAAsB,EAAA;;AAE7D,QAAA,IAAI,cAAc,KAAK,CAAC,EAAE;YACzB,cAAc,GAAG,CAAC;;QAGnB,MAAM,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,IAAI,CAAC;AAClD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;AAEhC,QAAA,MAAM,MAAM,GAAGA,aAAW,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE;AAC7B,QAAA,MAAM,SAAS,GAAGA,aAAW,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;;IAG/E,QAAQ,GAAA;AACP,QAAA,OAAOE,eAAa,CAAC,IAAI,IAAI,EAAE,CAAC;;AAGjC,IAAA,OAAO,CAAC,IAAqB,EAAA;QAC5B,QACC,IAAI,IAAI,IAAI;AACZ,YAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AACpB,YAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACrB,YAAA,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YACnB,CAAC,KAAK,CAACF,aAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;;8GArEzB,kBAAkB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAlB,kBAAkB,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B;;;ACJD,MAAM,cAAc,GAAG,IAAI;AAC3B,MAAM,aAAa,GAAG,EAAE,GAAG,cAAc;AACzC,MAAM,sBAAsB,GAAG,EAAE,GAAG,cAAc,GAAG,GAAG;AACxD,MAAM,eAAe,GAAG,EAAE,GAAG,aAAa,GAAG,sBAAsB;AACnE,MAAM,OAAO,GAAG,EAAE,GAAG,cAAc,GAAG,GAAG;AACzC,MAAM,wBAAwB,GAAG,OAAO;AACxC,MAAM,eAAe,GAAG,SAAS;AAEjC,SAAS,mBAAmB,CAAC,IAAY,EAAA;AACxC,IAAA,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;AAChE;AAEA,SAAS,sBAAsB,CAAC,IAAY,EAAA;AAC3C,IAAA,IAAI,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC;AAC1D,IAAA,IAAI,0BAA0B,GAAG,gBAAgB,GAAG,sBAAsB,GAAG,OAAO;AACpF,IAAA,IAAI,SAAS,GAAG,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,0BAA0B,GAAG,aAAa,CAAC;AAC9F,IAAA,IAAI,SAAS,GAAG,0BAA0B,GAAG,aAAa;AAE1D,IAAA,IAAI,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;AAE9B,IAAA,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;AAC1D,QAAA,SAAS,EAAE;AACX,QAAA,SAAS,GAAG,SAAS,GAAG,CAAC;;AAE1B,IAAA,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,GAAG,EAAE,GAAG,cAAc,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;QACxF,SAAS,IAAI,CAAC;;AACR,SAAA,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,GAAG,EAAE,GAAG,cAAc,GAAG,GAAG,IAAI,gBAAgB,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE;AAClG,QAAA,SAAS,EAAE;;AAEZ,IAAA,OAAO,SAAS;AACjB;AAEA,SAAS,uBAAuB,CAAC,KAAa,EAAE,IAAY,EAAA;IAC3D,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC3D,IAAA,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;AAC9B,QAAA,IAAI,CAAC,CAAC,CAAC,EAAE;;AAEV,IAAA,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACvB;AAEA,SAAS,eAAe,CAAC,IAAY,EAAA;AACpC,IAAA,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;AACxC;AAEA;;;AAGG;AACH,SAAS,mBAAmB,CAAC,IAAY,EAAA;IACxC,OAAO,sBAAsB,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC;AACvE;AAEM,SAAU,gBAAgB,CAAC,IAAa,EAAA;AAC7C,IAAA,IAAI,IAAI,IAAI,IAAI,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC7B,QAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;;AAE9B,IAAA,OAAO,KAAK;AACb;AAEA;;;;AAIG;AACa,SAAA,oBAAoB,CAAC,KAAa,EAAE,IAAY,EAAA;AAC/D,IAAA,IAAI,UAAU,GAAG,sBAAsB,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC;AAChF,IAAA,IAAI,QAAQ,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,UAAU,GAAG,UAAU,GAAG,EAAE,IAAI,GAAG;AACvE,IAAA,IAAI,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC;IACrC,IAAI,WAAW,GAAG;UACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;UACnD,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnD,IAAA,IAAI,QAAQ,GAAG,CAAC,EAAE;AACjB,QAAA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;;AAElB,IAAA,IAAI,QAAQ,GAAG,CAAC,EAAE;AACjB,QAAA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;;AAElB,IAAA,OAAO,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;AAC9B;AAEM,SAAU,wBAAwB,CAAC,IAAa,EAAA;IACrD,IAAI,WAAW,GAAG,CAAC;AACnB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACpC,WAAW,IAAI,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;;AAElD,IAAA,OAAO,WAAW,GAAG,IAAI,CAAC,GAAG;AAC9B;AAEgB,SAAA,cAAc,CAAC,IAAa,EAAE,GAAW,EAAA;AACxD,IAAA,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,KAAK,EAAE;QACX,GAAG,GAAG,CAAC,GAAG;;AAEX,IAAA,OAAO,GAAG,GAAG,CAAC,EAAE;QACf,IAAI,KAAK,EAAE;AACV,YAAA,IAAI,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;AAClD,gBAAA,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;gBAClD,IAAI,CAAC,IAAI,EAAE;AACX,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC;;iBACR;AACN,gBAAA,IAAI,CAAC,KAAK,IAAI,GAAG;gBACjB,GAAG,GAAG,CAAC;;;aAEF;AACN,YAAA,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,IAAI,EAAE;AACX,gBAAA,GAAG,IAAI,IAAI,CAAC,KAAK;gBACjB,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;;iBACjC;AACN,gBAAA,IAAI,CAAC,KAAK,IAAI,GAAG;gBACjB,GAAG,GAAG,CAAC;;;;AAIV,IAAA,OAAO,IAAI;AACZ;AAEgB,SAAA,YAAY,CAAC,IAAa,EAAE,GAAW,EAAA;AACtD,IAAA,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,KAAK,EAAE;QACX,GAAG,GAAG,CAAC,GAAG;;AAEX,IAAA,OAAO,GAAG,GAAG,CAAC,EAAE;QACf,IAAI,KAAK,EAAE;AACV,YAAA,IAAI,GAAG,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,wBAAwB,CAAC,IAAI,CAAC,EAAE;AAC1E,gBAAA,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC1E,IAAI,CAAC,IAAI,EAAE;AACX,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AACd,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;;AACN,iBAAA,IAAI,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;AACxE,gBAAA,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;gBACjE,IAAI,CAAC,KAAK,EAAE;AACZ,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;;iBACN;AACN,gBAAA,IAAI,CAAC,GAAG,IAAI,GAAG;gBACf,GAAG,GAAG,CAAC;;;aAEF;AACN,YAAA,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE;AACpB,gBAAA,GAAG,IAAI,IAAI,CAAC,GAAG;gBACf,IAAI,CAAC,KAAK,EAAE;AACZ,gBAAA,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBACrB,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;;AAExC,gBAAA,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;;iBAChD;AACN,gBAAA,IAAI,CAAC,GAAG,IAAI,GAAG;gBACf,GAAG,GAAG,CAAC;;;;AAIV,IAAA,OAAO,IAAI;AACZ;AAEA;;;AAGG;AACG,SAAUE,eAAa,CAAC,KAAW,EAAA;AACxC,IAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC;IAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,EAC/B,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,EACxB,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;IACtB,IAAI,SAAS,GACZ,eAAe;QACf,CAAC;AACD,QAAA,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAClH,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;AACvC,IAAA,IAAI,iBAAiB,GAAG,SAAS,GAAG,MAAM;AAC1C,IAAA,IAAI,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,iBAAiB,GAAG,aAAa,IAAI,eAAe,CAAC;AAC3F,IAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,mBAAmB,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AAClE,IAAA,IAAI,kBAAkB,GAAG,sBAAsB,CAAC,KAAK,CAAC;AACtD,IAAA,IAAI,SAAS,GAAG,iBAAiB,GAAG,kBAAkB;AACtD,IAAA,OAAO,SAAS,GAAG,CAAC,EAAE;AACrB,QAAA,KAAK,EAAE;AACP,QAAA,kBAAkB,GAAG,sBAAsB,CAAC,KAAK,CAAC;AAClD,QAAA,SAAS,GAAG,iBAAiB,GAAG,kBAAkB;;IAEnD,IAAI,MAAM,GAAG,CAAC;IACd,IAAI,IAAI,GAAG,SAAS;IACpB,OAAO,IAAI,GAAG,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AAClD,QAAA,IAAI,IAAI,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC;AAC3C,QAAA,MAAM,EAAE;;IAET,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC;AACxC;AAEA;;;AAGG;AACG,SAAUF,aAAW,CAAC,UAAmC,EAAA;AAC9D,IAAA,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI;AAC7B,IAAA,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK;AAC/B,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG;AAC3B,IAAA,IAAI,IAAI,GAAG,sBAAsB,CAAC,KAAK,CAAC;AACxC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,QAAA,IAAI,IAAI,oBAAoB,CAAC,CAAC,EAAE,KAAK,CAAC;;IAEvC,IAAI,IAAI,IAAI;AACZ,IAAA,IAAI,QAAQ,GAAG,IAAI,GAAG,wBAAwB;AAC9C,IAAA,IAAI,KAAK,GAAG,QAAQ,IAAI,CAAC;IACzB,IAAI,CAAC,KAAK,EAAE;QACX,QAAQ,GAAG,CAAC,QAAQ;;IAErB,IAAI,KAAK,GAAG,IAAI;IAChB,IAAI,MAAM,GAAG,CAAC;IACd,IAAI,IAAI,GAAG,CAAC;AACZ,IAAA,OAAO,QAAQ,GAAG,CAAC,EAAE;QACpB,IAAI,KAAK,EAAE;AACV,YAAA,IAAI,QAAQ,KAAK,mBAAmB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AACzD,gBAAA,QAAQ,IAAI,mBAAmB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;AAClD,gBAAA,KAAK,EAAE;;iBACD,IAAI,QAAQ,IAAI,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AAC9D,gBAAA,QAAQ,IAAI,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC;AAClD,gBAAA,MAAM,EAAE;;iBACF;gBACN,IAAI,IAAI,QAAQ;gBAChB,QAAQ,GAAG,CAAC;;;aAEP;AACN,YAAA,IAAI,QAAQ,KAAK,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AAC7D,gBAAA,QAAQ,IAAI,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtD,gBAAA,KAAK,EAAE;;iBACD;AACN,gBAAA,IAAI,MAAM,GAAG,CAAC,EAAE;AACf,oBAAA,MAAM,EAAE;;qBACF;oBACN,MAAM,GAAG,EAAE;AACX,oBAAA,KAAK,EAAE;;gBAER,IAAI,QAAQ,IAAI,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AACvD,oBAAA,QAAQ,IAAI,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC;;qBAC5C;oBACN,IAAI,GAAG,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,QAAQ,GAAG,CAAC;oBAC5D,QAAQ,GAAG,CAAC;;;;;IAKhB,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;AACzC;AAEM,SAAU,cAAc,CAAC,QAAgB,EAAA;IAC9C,IAAI,CAAC,QAAQ,EAAE;AACd,QAAA,OAAO,EAAE;;IAEV,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAChH,IAAA,MAAM,WAAW,GAAG;QACnB,QAAQ;QACR,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;KACd;IACD,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC5G,IAAA,MAAM,aAAa,GAAG;QACrB,EAAE;QACF,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,oBAAoB;KACpB;AACD,IAAA,MAAM,eAAe,GAAG;QACvB,EAAE;QACF,QAAQ;QACR,QAAQ;QACR,cAAc;QACd,cAAc;QACd,QAAQ;QACR,cAAc;QACd,cAAc;QACd,oBAAoB;QACpB,oBAAoB;KACpB;AACD,IAAA,MAAM,MAAM,GAAG,QAAQ,EACtB,QAAQ,GAAG,QAAQ;IACpB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,MAAM,GAAa,EAAE;IACzB,IAAI,IAAI,GAAG,CAAC;AACZ,IAAA,OAAO,QAAQ,GAAG,CAAC,EAAE;AACpB,QAAA,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAE;AACrB,QAAA,IAAI,IAAI,KAAK,CAAC,EAAE;YACf,GAAG,GAAG,CAAC;;AACD,aAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACtB,YAAA,IAAI,CAAC,KAAK,CAAC,EAAE;AACZ,gBAAA,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;;iBACxC;gBACN,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;;AAE3B,aAAA,IAAI,IAAI,KAAK,CAAC,EAAE;YACtB,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;aAC1B;AACN,YAAA,IAAI,CAAC,KAAK,CAAC,EAAE;AACZ,gBAAA,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC;;YAEhD;;QAED,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpC,IAAI,IAAI,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YACjC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;AAE7B,QAAA,IAAI,EAAE;;AAEP,IAAA,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;AAClC,IAAA,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,QAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;;AACb,SAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,QAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;;AAE9C,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AACvB;;AC5TA;;AAEG;AAEG,MAAO,iBAAkB,SAAQ,WAAW,CAAA;IACjD,cAAc,GAAA;AACb,QAAA,OAAO,CAAC;;AAGT,IAAA,SAAS,CAAC,IAAa,EAAA;AACtB,QAAA,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;YACnC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;aAC5C;YACN,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;;IAIhD,gBAAgB,GAAA;AACf,QAAA,OAAO,CAAC;;AAGT,IAAA,OAAO,CAAC,IAAqB,EAAA;AAC5B,QAAA,IAAI,IAAI,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACzE,YAAA,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;YAChF,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;AAChF,YAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAACA,aAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;;AAGhD,QAAA,OAAO,KAAK;;IAGb,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;AACzD,QAAA,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;QAEnD,QAAQ,MAAM;AACb,YAAA,KAAK,GAAG;AACP,gBAAA,IAAI,CAAC,IAAI,IAAI,MAAM;AACnB,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AACd,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;AACP,gBAAA,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;AACnC,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;AACP,gBAAA,OAAO,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC;AAClC,YAAA;AACC,gBAAA,OAAO,IAAI;;;IAId,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;;AAG3C,IAAA,UAAU,CAAC,IAAa,EAAA;QACvB,MAAM,GAAG,GAAGA,aAAW,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;;QAEtC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;;IAG3B,aAAa,CAAC,IAAwB,EAAE,cAAsB,EAAA;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;IAGrD,QAAQ,GAAA;AACP,QAAA,OAAOE,eAAa,CAAC,IAAI,IAAI,EAAE,CAAC;;AAGjC;;AAEG;AACH,IAAA,WAAW,CAAC,IAAa,EAAA;AACxB,QAAA,OAAO,UAAU,CAACF,aAAW,CAAC,IAAI,CAAC,CAAC;;AAGrC;;AAEG;AACH,IAAA,aAAa,CAAC,IAAa,EAAA;AAC1B,QAAA,OAAOE,eAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;8GA9EzB,iBAAiB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B;;;ACZD,MAAMG,UAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;AAC3E,MAAMC,QAAM,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC;AAC1G,MAAM,WAAW,GAAG;IACnB,MAAM;IACN,MAAM;IACN,MAAM;IACN,KAAK;IACL,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,IAAI;IACJ,MAAM;CACN;AAED;;AAEG;AAEG,MAAO,uBAAwB,SAAQ,iBAAiB,CAAA;IAC7D,iBAAiB,CAAC,KAAa,EAAE,IAAa,EAAA;QAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;;IAG1C,gBAAgB,CAAC,KAAa,EAAE,IAAa,EAAA;QAC5C,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,GAAGA,QAAM,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE;;IAGvF,eAAe,CAAC,OAAe,EAAE,KAA6C,EAAA;QAC7E,OAAOD,UAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,EAAE;;AAGnC,IAAA,eAAe,CAAC,IAAmB,EAAA;AAClC,QAAA,OAAO,CAAG,EAAA,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAI,CAAA,EAAA,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE;;AAGlH,IAAA,cAAc,CAAC,IAAmB,EAAA;AACjC,QAAA,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;;AAGhC,IAAA,eAAe,CAAC,UAAkB,EAAA;AACjC,QAAA,OAAO,cAAc,CAAC,UAAU,CAAC;;AAGlC,IAAA,eAAe,CAAC,IAAY,EAAA;AAC3B,QAAA,OAAO,cAAc,CAAC,IAAI,CAAC;;8GA1BhB,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAvB,uBAAuB,EAAA,CAAA,CAAA;;2FAAvB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBADnC;;;ACxBD;;;AAGG;AACG,SAAUL,aAAW,CAAC,IAAa,EAAA;AACxC,IAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;AAC3D;AAEA;;;;AAIG;AACG,SAAUE,eAAa,CAAC,KAAW,EAAA;IACxC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AACrF;;ACXA;;AAEG;AAEG,MAAO,mBAAoB,SAAQ,oBAAoB,CAAA;IAC5D,QAAQ,GAAA;AACP,QAAA,OAAOA,eAAa,CAAC,IAAI,IAAI,EAAE,CAAC;;IAGjC,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;AACzD,QAAA,IAAI,MAAM,GAAGF,aAAW,CAAC,IAAI,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI;AACrB,QAAA,IAAI,aAAa,GAAG,MAAM,CAAC,QAAQ,EAAE;QAErC,QAAQ,MAAM;AACb,YAAA,KAAK,GAAG;gBACP,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;gBACjD;AACD,YAAA,KAAK,GAAG;gBACP,aAAa,IAAI,MAAM;AACvB,gBAAA,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC9B,gBAAA,aAAa,GAAG,aAAa,GAAG,EAAE;AAClC,gBAAA,IAAI,aAAa,GAAG,CAAC,EAAE;AACtB,oBAAA,aAAa,GAAG,aAAa,GAAG,EAAE;;gBAEnC;AACD,YAAA,KAAK,GAAG;gBACP,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC;gBACzC,UAAU,GAAG,KAAK;gBAClB;AACD,YAAA;AACC,gBAAA,OAAO,IAAI;;QAGb,IAAI,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,aAAa,EAAE;;;AAGtD,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;;AAGlB,QAAA,OAAOE,eAAa,CAAC,MAAM,CAAC;;IAG7B,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;;AAG3C,IAAA,UAAU,CAAC,IAAa,EAAA;AACvB,QAAA,IAAI,MAAM,GAAGF,aAAW,CAAC,IAAI,CAAC;AAC9B,QAAA,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE;;QAEzB,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;;IAG3B,aAAa,CAAC,IAAwB,EAAE,cAAsB,EAAA;;AAE7D,QAAA,IAAI,cAAc,KAAK,CAAC,EAAE;YACzB,cAAc,GAAG,CAAC;;QAGnB,MAAM,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,IAAI,CAAC;AAClD,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;AAE9B,QAAA,MAAM,MAAM,GAAGA,aAAW,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE;AAC7B,QAAA,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnB,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;;AAG5E,IAAA,OAAO,CAAC,IAAqB,EAAA;QAC5B,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACrF,YAAA,OAAO,KAAK;;;AAIb,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;AACpB,YAAA,OAAO,KAAK;;AAGb,QAAA,MAAM,MAAM,GAAGA,aAAW,CAAC,IAAI,CAAC;QAEhC,QACC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACxB,MAAM,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG;YACxC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK;YACpC,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,GAAG;;8GAnFnB,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAnB,mBAAmB,EAAA,CAAA,CAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B;;;ACPD,MAAM,QAAQ,GAAG,SAAS;AAC1B,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAExE;;;;AAIK;AAEC,SAAU,mBAAmB,CAAC,IAAY,EAAA;AAC/C,IAAA,IAAI,IAAI,IAAI,IAAI,EAAE;AACjB,QAAA,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEvC,IAAA,OAAO,KAAK;AACb;AAEA;;;;;AAKK;AAEW,SAAA,gBAAgB,CAAC,IAAa,EAAE,SAAiB,EAAA;AAChE,IAAA,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS;AACtB,IAAA,OAAO,IAAI;AACZ;AAEA;;;;;AAKK;AACW,SAAA,iBAAiB,CAAC,IAAa,EAAE,GAAW,EAAA;IAC3D,GAAG,GAAG,CAAC,GAAG;AACV,IAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC;AACzD,IAAA,OAAO,IAAI;AACZ;AAEA;;;;;AAKK;AACW,SAAA,eAAe,CAAC,IAAa,EAAE,GAAW,EAAA;AACzD,IAAA,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;AAClD,IAAA,IAAI,GAAG,IAAI,CAAC,EAAE;AACb,QAAA,OAAO,GAAG,IAAI,CAAC,EAAE;YAChB,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC9C,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;YAC9C,GAAG,IAAI,KAAK;;;AAEP,SAAA,IAAI,GAAG,GAAG,KAAK,EAAE;AACvB,QAAA,OAAO,GAAG,GAAG,KAAK,EAAE;YACnB,GAAG,IAAI,KAAK;YACZ,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC9C,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;;;AAGhD,IAAA,IAAI,CAAC,GAAG,GAAG,GAAG;AACd,IAAA,OAAO,IAAI;AACZ;AAEA,SAAS,eAAe,CAAC,KAAa,EAAE,IAAY,EAAA;AACnD,IAAA,IAAI,QAAQ,GAAG,mBAAmB,CAAC,IAAI,CAAC;IACxC,OAAO,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AACpE;AAEM,SAAU,WAAW,CAAC,aAAsB,EAAA;AACjD,IAAA,IAAI,GAAG,GAAG,iBAAiB,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,GAAG,CAAC;AACvF,IAAA,IAAI,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC;IACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;AAC5B,IAAA,OAAO,IAAI;AACZ;AAEM,SAAU,aAAa,CAAC,KAAW,EAAA;IACxC,IAAI,GAAG,GAAG,iBAAiB,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AACvF,IAAA,OAAO,iBAAiB,CAAC,GAAG,CAAC;AAC9B;SAEgB,iBAAiB,CAAC,IAAY,EAAE,KAAa,EAAE,GAAW,EAAA;AACzE,IAAA,IAAI,IAAI,GAAG,CAAC,EAAE;AACb,QAAA,IAAI,EAAE;AACP,KAAC;AACD,IAAA,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC;AACvF;AAEA,SAAS,iBAAiB,CAAC,EAAU,EAAA;AACpC,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,QAAQ;IACvC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC;AACnE,IAAA,IAAI,IAAI,IAAI,CAAC,EAAE;AACd,QAAA,IAAI,EAAE;AACP,KAAC;AACD,IAAA,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,iBAAiB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACxD,IAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;AAClC,IAAA,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;IAClC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AACrC;AAEA,SAAS,iBAAiB,CAAC,EAAU,EAAA;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC;AAC5B,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,IAAI,QAAQ,CAAC;AAC/C,IAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;AAChB,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,MAAM,CAAC;IACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC;AACrC,IAAA,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;AACzC,IAAA,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;AACnC,IAAA,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;AAC1C,IAAA,IAAI,IAAI,IAAI,CAAC,EAAE;AACd,QAAA,IAAI,EAAE;AACP,KAAC;IACD,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AAClC;SAEgB,iBAAiB,CAAC,IAAY,EAAE,KAAa,EAAE,GAAW,EAAA;AACzE,IAAA,IAAI,IAAI,GAAG,CAAC,EAAE;AACb,QAAA,IAAI,EAAE;AACP,KAAC;;AAED,IAAA,IAAI,KAAK,GAAG,CAAC,EAAE;QACd,KAAK,IAAI,EAAE;AACX,QAAA,IAAI,EAAE;;IAEP,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;AAC9B,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM;AACjG;;ACxHA;;AAEG;AAEG,MAAO,oBAAqB,SAAQ,WAAW,CAAA;IACpD,cAAc,GAAA;AACb,QAAA,OAAO,CAAC;;AAGT,IAAA,SAAS,CAAC,IAAyB,EAAA;QAClC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;IAGnD,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;AACzD,QAAA,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;QACnD,QAAQ,MAAM;AACb,YAAA,KAAK,GAAG;gBACP,IAAI,GAAG,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACjD,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AACd,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;gBACP,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;AACnD,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ,gBAAA,OAAO,IAAI;AACZ,YAAA,KAAK,GAAG;gBACP,OAAO,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;AAChD,YAAA;AACC,gBAAA,OAAO,IAAI;;;IAGd,OAAO,CAAC,IAAa,EAAE,MAAA,GAAoB,GAAG,EAAE,MAAM,GAAG,CAAC,EAAA;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;;AAG3C,IAAA,UAAU,CAAC,IAAa,EAAA;QACvB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACjF,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;;IAGzB,aAAa,CAAC,IAAwB,EAAE,cAAsB,EAAA;AAC7D,QAAA,IAAI,cAAc,KAAK,CAAC,EAAE;YACzB,cAAc,GAAG,CAAC;;QAGnB,MAAM,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,IAAI,CAAC;AAClD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;AAChC,QAAA,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE;AAC7B,QAAA,MAAM,SAAS,GAAG,WAAW,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;;IAG/E,gBAAgB,GAAA;AACf,QAAA,OAAO,CAAC;;IAGT,QAAQ,GAAA;AACP,QAAA,OAAO,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC;;AAGjC,IAAA,OAAO,CAAC,IAAa,EAAA;AACpB,QAAA,QACC,IAAI;AACJ,YAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AACpB,YAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACrB,YAAA,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YACnB,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;;8GAhEzB,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC;;;ACZD,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAClE,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAEhH;;AAEG;AAEG,MAAO,wBAAyB,SAAQ,iBAAiB,CAAA;IAC9D,iBAAiB,CAAC,KAAa,EAAE,IAAyB,EAAA;QACzD,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;;IAG1C,gBAAgB,CAAC,KAAa,EAAE,IAAyB,EAAA;AACxD,QAAA,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;;IAGzB,eAAe,CAAC,OAAe,EAAE,KAA6C,EAAA;AAC7E,QAAA,OAAO,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;;AAG7B,IAAA,eAAe,CAAC,IAAmB,EAAA;QAClC,OAAO,CAAA,EAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAA,CAAE;;8GAdtE,wBAAwB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAxB,wBAAwB,EAAA,CAAA,CAAA;;2FAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC;;;ACLD;;;AAGG;AAEG,MAAO,oBAAqB,SAAQ,cAAoB,CAAA;AAC7D;;AAEG;AACH,IAAA,SAAS,CAAC,IAAiB,EAAA;QAC1B,OAAO,IAAI,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI;;AAG1F;;AAEG;AACH,IAAA,OAAO,CAAC,IAA0B,EAAA;QACjC,OAAO,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG;AACjF,cAAE,IAAI,CAAC,aAAa,CAAC,IAAI;cACvB,IAAI;;AAGE,IAAA,eAAe,CAAC,IAAU,EAAA;QACnC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE;;AAG3E,IAAA,aAAa,CAAC,IAAmB,EAAA;QAC1C,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;;AAEhE,QAAA,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B,QAAA,OAAO,MAAM;;8GAzBF,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC;;;ACLD;;;;AAIG;AAEG,MAAO,uBAAwB,SAAQ,oBAAoB,CAAA;AACtD,IAAA,eAAe,CAAC,IAAU,EAAA;QACnC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE;;AAGpF,IAAA,aAAa,CAAC,IAAmB,EAAA;QAC1C,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEtE,QAAA,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AAChC,QAAA,OAAO,MAAM;;8GATF,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAvB,uBAAuB,EAAA,CAAA,CAAA;;2FAAvB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBADnC;;;ACsBD,MAAM,yBAAyB,GAAG,CAAC,aAAa,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;MAMlG,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EANG,OAAA,EAAA,CAAA,aAAa,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAA3E,aAAa,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,kBAAkB,CAAA,EAAA,CAAA,CAAA;+GAMjG,mBAAmB,EAAA,CAAA,CAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,yBAAyB;AAClC,oBAAA,OAAO,EAAE,yBAAyB;AAClC,iBAAA;;;AChCD;;;;;AAKG;MAEU,iBAAiB,CAAA;AAD9B,IAAA,WAAA,GAAA;QAEC,IAAS,CAAA,SAAA,GAAmC,IAAI;QAChD,IAAS,CAAA,SAAA,GAAmB,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,CAAC;AAClF,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAyB,KAAK,OAAO;QACtD,IAAS,CAAA,SAAA,GAAkB,IAAI;AAC/B;8GALY,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cADJ,MAAM,EAAA,CAAA,CAAA;;2FACnB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACyBlC;;;;;AAKG;MAUU,eAAe,CAAA;AAT5B,IAAA,WAAA,GAAA;QAYS,IAAS,CAAA,SAAA,GAAG,KAAK;AAEzB,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;QAEtD,IAAQ,CAAA,QAAA,GAAoB,CAAC;AAUtC;IARA,IACI,QAAQ,CAAC,KAAc,EAAA;AAC1B,QAAA,IAAI,CAAC,SAAS,GAAQ,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,CAAC;;AAGtD,IAAA,IAAI,QAAQ,GAAA;QACX,OAAO,IAAI,CAAC,SAAS;;8GAfV,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAf,eAAe,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,0BAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAT3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,eAAe;AACtB,wBAAA,kBAAkB,EAAE,UAAU;AAC9B,wBAAA,YAAY,EAAE,0BAA0B;AACxC,qBAAA;AACD,iBAAA;8BAQS,QAAQ,EAAA,CAAA;sBAAhB;gBAGG,QAAQ,EAAA,CAAA;sBADX;;AAUF;;;AAGG;MAMU,qBAAqB,CAAA;AALlC,IAAA,WAAA,GAAA;AAMC,QAAA,IAAA,CAAA,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC;AAC9B;8GAFY,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAArB,qBAAqB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,eAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE,EAAE,YAAY,EAAE,eAAe,EAAE;AACvC,iBAAA;;AAKD;;AAEG;MAiBU,eAAe,CAAA;AAhB5B,IAAA,WAAA,GAAA;AAiBC,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC;AAC9B,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAG/D;8GALY,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAe,ilBAIV,eAAe,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAJpB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAhB3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,eAAe;AACtB,wBAAA,cAAc,EAAE,mBAAmB;AACnC,wBAAA,mBAAmB,EAAE,4BAA4B;AACjD,wBAAA,qBAAqB,EAAE,4BAA4B;AACnD,wBAAA,gBAAgB,EAAE,4BAA4B;AAC9C,wBAAA,eAAe,EAAE,4BAA4B;AAC7C,wBAAA,iBAAiB,EAAE,4BAA4B;AAC/C,wBAAA,iBAAiB,EAAE,4BAA4B;AAC/C,wBAAA,eAAe,EAAE,4BAA4B;AAC7C,wBAAA,qBAAqB,EAAE,4BAA4B;AACnD,qBAAA;AACD,iBAAA;8BAKkC,SAAS,EAAA,CAAA;sBAA1C,eAAe;uBAAC,eAAe;;AAGjC;;;;;;;;AAQG;MAUU,iBAAiB,CAAA;AAT9B,IAAA,WAAA,GAAA;AAUC,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC;AAC9B,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAC/D;8GAHY,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAjB,iBAAiB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAT7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,iBAAiB;AACxB,wBAAA,cAAc,EAAE,mBAAmB;AACnC,wBAAA,sBAAsB,EAAE,mBAAmB;AAC3C,qBAAA;AACD,iBAAA;;AAMD;;;;AAIG;AAkBG,MAAO,iBAAkB,SAAQ,iBAAiB,CAAA;8GAA3C,iBAAiB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,yhBAFlB,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC,EAAE,CAAC,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAEjF,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAjB7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,iBAAiB;AACxB,wBAAA,cAAc,EAAE,mBAAmB;AACnC,wBAAA,sBAAsB,EAAE,mBAAmB;AAC3C,wBAAA,SAAS,EAAE,mBAAmB;AAC9B,wBAAA,mBAAmB,EAAE,4BAA4B;AACjD,wBAAA,qBAAqB,EAAE,4BAA4B;AACnD,wBAAA,gBAAgB,EAAE,4BAA4B;AAC9C,wBAAA,eAAe,EAAE,4BAA4B;AAC7C,wBAAA,eAAe,EAAE,4BAA4B;AAC7C,wBAAA,qBAAqB,EAAE,4BAA4B;AACnD,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAuB,iBAAA,CAAC,EAAE,CAAC;AAC7F,iBAAA;;AAGD;;AAEG;MAOU,WAAW,CAAA;AANxB,IAAA,WAAA,GAAA;AAUS,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC3C,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAAC;AACnC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAEhE,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,OAAO,EAAQ;QAE5C,IAAc,CAAA,cAAA,GAAuB,IAAI;QAEzC,IAAY,CAAA,YAAA,GAAG,cAAc,EAAE;AAKvC;;;;;;;AAOG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAc3C;;AAEG;QACY,IAAK,CAAA,KAAA,GAAG,KAAK;AAE5B;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;AAKG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;;;;AAKG;AACM,QAAA,IAAA,CAAA,SAAS,GAAkB,IAAI,CAAC,OAAO,CAAC,SAAS;AAY1D;;;;;;AAMG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAW;AA8UlD;IA5UA,QAAQ,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,SAAS;;;IAI9E,kBAAkB,GAAA;AACjB,QAAA,eAAe,CACd;YACC,KAAK,EAAE,MAAK;gBACX,IAAI,CAAC,sBAAsB,EAAE;AAC7B,gBAAA,IAAI,IAAI,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,iBAAiB,EAAE;;aAEzB;SACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;;AAGF,IAAA,WAAW,CAAC,OAAsB,EAAA;QACjC,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,EAAE;AACpC,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;;QAGrC,IAAI,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;AACxD,YAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;AAC5B,gBAAA,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;gBACvC,aAAa,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;gBAC9D,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,aAAA,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE;;AAG9B,QAAA,IAAI,OAAO,CAAC,aAAa,EAAE;YAC1B,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,aAAa;AAC7D,YAAA,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,aAAa,CAAC;;QAG5D,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,YAAY;YAC/C,IAAI,CAAC,iBAAiB,EAAE;;;AAI1B;;AAEG;IACH,MAAM,GAAA;QACL,OAAO,IAAI,CAAC,KAAK;;AAGlB;;AAEG;IACH,IAAI,GAAA;AACH,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI;AACjB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;AACpC,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,iBAAiB,EAAE;AACxB,YAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AACjB,gBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;AAClC,gBAAA,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;AAC/B,oBAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;AACnC,wBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;AAC9B,4BAAA,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;4BACvC,aAAa,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;4BAC9D,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,mBAAmB,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACtF,yBAAA,CAAC;wBACF,IAAI,CAAC,sBAAsB,EAAE;AAC7B,wBAAA,IAAI,CAAC,eAAe,GAAG,WAAW,CACjC;4BACC,KAAK,EAAE,MAAK;gCACX,IAAI,CAAC,aAAa,EAAE;6BACpB;yBACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;AACF,qBAAC,CAAC;;;;;IAME,iBAAiB,GAAA;AACxB,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;AAEnC,QAAA,YAAY,CACX,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,CAAC,MAAc,KAAI;YAClB,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,MAAM,KAAkB,CAAA,sBAAE;AAC7B,gBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;;AAEpC,SAAC,EACD,IAAI,CAAC,sBAAsB,EAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,EAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,EAChD,kCAAkC,CAClC;;AAGF;;AAEG;IACH,KAAK,GAAA;AACJ,QAAA,IAAI,IAAI,CAAC,KAAK,EAAE;AACf,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK;YAClB,IAAI,CAAC,eAAe,EAAE;AACtB,YAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,YAAA,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE;AAC/B,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE;AAClC,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3B,YAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;;AAIrC;;AAEG;IACH,MAAM,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE;;aACN;YACN,IAAI,CAAC,IAAI,EAAE;;;IAIb,WAAW,GAAA;QACV,IAAI,CAAC,KAAK,EAAE;;AAGb,IAAA,SAAS,CAAC,KAAoB,EAAA;AAC7B,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK;AACrB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE;AAE5C,QAAA,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,WAAW,GAAuB,IAAI;QAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;AAExD,QAAA,IAAI,CAAC,iBAAiB,IAAI,YAAY,CAAC,MAAM,EAAE;YAC9C,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;gBACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAC,EAAE;oBAC/C,WAAW,GAAG,IAAI;;gBAEnB,IAAI,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC9C,QAAQ,GAAG,KAAK;;AAElB,aAAC,CAAC;;;QAIH,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,OAAO,EAAE;AACnC,YAAA,IAAI,WAAW,KAAK,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,EAAE;;;;AAI5E,gBAAA,SAAS,CAAC,WAAW,EAAE,OAAO;AAC5B,qBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;qBACZ,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;;YAEhC;;AAGD,QAAA,IAAI,GAAG,KAAK,KAAK,EAAE;AAClB,YAAA,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;gBACpD,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,KAAK,CAAC,MAAM,EAAE;oBAChD,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACjD;;;;AAI2F;wBAC3F,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;AACtD,wBAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;wBAChC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC;;AAC9C,yBAAA,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAC1B,IAAI,CAAC,KAAK,EAAE;;oBAEb;;AACM,qBAAA,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;AACrC,oBAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,2BAA2B,CAAC;AAChG,oBAAA,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,iBAAiB,CAAC,CAAC,CAAC,EAAE;AAC5D,wBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;wBAClC,KAAK,CAAC,cAAc,EAAE;;AAChB,yBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AAC/F,wBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;wBAClC,IAAI,CAAC,KAAK,EAAE;;;qBAEP;AACN,oBAAA,SAAS,CAAa,KAAK,CAAC,MAAqB,EAAE,UAAU;AAC3D,yBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACZ,yBAAA,SAAS,CAAC,CAAC,EAAE,aAAa,EAAE,KAAI;wBAChC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAA4B,CAAC,EAAE;4BAChE,IAAI,CAAC,KAAK,EAAE;;AAEd,qBAAC,CAAC;;;YAGL;;;AAID,QAAA,IAAI,iBAAiB,IAAI,WAAW,EAAE;YACrC,IAAI,CAAC,IAAI,EAAE;AAEX,YAAA,IAAI,YAAY,CAAC,MAAM,EAAE;gBACxB,QAAQ,GAAG;AACV,oBAAA,KAAK,WAAW;AACf,wBAAA,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC1D;AACD,oBAAA,KAAK,SAAS;wBACb,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;AACxC,4BAAA,QAAQ,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC;4BAClC;;wBAED,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;wBACpC;AACD,oBAAA,KAAK,MAAM;wBACV,QAAQ,GAAG,CAAC;wBACZ;AACD,oBAAA,KAAK,KAAK;AACT,wBAAA,QAAQ,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC;wBAClC;;AAEF,gBAAA,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE;;YAE/B,KAAK,CAAC,cAAc,EAAE;;;IAIhB,SAAS,GAAA;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC;;AAGhD,IAAA,kBAAkB,CAAC,KAAoB,EAAA;AAC9C,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAC;;IAGhE,gBAAgB,GAAA;QACvB,OAAO,IAAI,CAAC;AACX,cAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,EAAE,KAAK,aAAa;cACjG,EAAE;;IAGE,aAAa,GAAA;AACpB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK;AACvB,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE;AAC1B,YAAA,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;AAC/B,gBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,sBAAsB,EAAE;;iBACvB;AACN,gBAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;;AAK/D,IAAA,kBAAkB,CAAC,SAAyB,EAAA;QACnD,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAI,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAe;;IAGhF,eAAe,GAAA;AACtB,QAAA,IAAI,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;;AAE1D,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC;AACpD,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI;;;IAIpB,eAAe,CAAC,YAA2B,IAAI,EAAA;QACtD,IAAI,CAAC,eAAe,EAAE;AACtB,QAAA,IAAI,SAAS,KAAK,MAAM,EAAE;AACzB,YAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa;YACpD,MAAM,aAAa,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;AAGxG,YAAA,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU;AACzC,YAAA,mBAAmB,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ;AAC7C,YAAA,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;AAEnC,YAAA,aAAa,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;;AAG/C,QAAA,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC;;IAG3C,yBAAyB,CAAC,QAAgB,EAAE,QAAiB,EAAA;AACpE,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,KAAK,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;QAC3F,IAAI,aAAa,EAAE;YAClB,IAAI,QAAQ,EAAE;AACb,gBAAA,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;;YAEzC,IAAI,QAAQ,EAAE;AACb,gBAAA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;;;;AAKhC,IAAA,sBAAsB,CAAC,SAA4B,EAAA;AAC1D,QAAA,IAAI,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,SAAS,EAAE;gBACf,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;;;YAIpD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;AAC1D,YAAA,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,gBAAgB,EAAE,QAAQ,CAAC;;iBAC3D;gBACN,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC;;AAG3D;;;AAGG;AACH,YAAA,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU;YAC7E,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;AAEhD,YAAA,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;gBAC1D,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;;;;8GAnavC,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAX,WAAW,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAiBT,eAAe,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACf,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAlBnB,WAAW,EAAA,UAAA,EAAA,CAAA;kBANvB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE,EAAE,cAAc,EAAE,UAAU,EAAE;AACpC,iBAAA;8BAkB0D,KAAK,EAAA,CAAA;sBAA9D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACY,OAAO,EAAA,CAAA;sBAAlE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBAUzC,SAAS,EAAA,CAAA;sBAAjB;gBAYQ,aAAa,EAAA,CAAA;sBAArB;gBAKc,KAAK,EAAA,CAAA;sBAAnB,KAAK;uBAAC,MAAM;gBASJ,SAAS,EAAA,CAAA;sBAAjB;gBAQQ,aAAa,EAAA,CAAA;sBAArB;gBAQQ,SAAS,EAAA,CAAA;sBAAjB;gBAUQ,OAAO,EAAA,CAAA;sBAAf;gBASS,UAAU,EAAA,CAAA;sBAAnB;;;ACzOF,MAAM,uBAAuB,GAAG;IAC/B,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,qBAAqB;CACrB;MAMY,iBAAiB,CAAA;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAZ7B,WAAW;YACX,iBAAiB;YACjB,iBAAiB;YACjB,eAAe;YACf,eAAe;AACf,YAAA,qBAAqB,aALrB,WAAW;YACX,iBAAiB;YACjB,iBAAiB;YACjB,eAAe;YACf,eAAe;YACf,qBAAqB,CAAA,EAAA,CAAA,CAAA;+GAOT,iBAAiB,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,uBAAuB;AAChC,oBAAA,OAAO,EAAE,uBAAuB;AAChC,iBAAA;;;ACqHD;;;;;;;AAOG;MAEU,cAAc,CAAA;AAD3B,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAKtC,IAAQ,CAAA,QAAA,GAAuB,IAAI;QAInC,IAAU,CAAA,UAAA,GAAyD,KAAK;QAExE,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAI,CAAA,IAAA,GAA6B,QAAQ;AAazC;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GAxBhB,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cADD,MAAM,EAAA,CAAA,CAAA;;2FACnB,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MC1IrB,UAAU,CAAA;AACtB,IAAA,WAAA,CACQ,KAAe,EACf,OAAiB,EACjB,YAAgC,EAAA;QAFhC,IAAK,CAAA,KAAA,GAAL,KAAK;QACL,IAAO,CAAA,OAAA,GAAP,OAAO;QACP,IAAY,CAAA,YAAA,GAAZ,YAAY;;AAEpB;MAEY,YAAY,CAAA;AAUxB,IAAA,WAAA,CAAoB,cAAuB,EAAA;QAAvB,IAAc,CAAA,cAAA,GAAd,cAAc;QAT1B,IAAU,CAAA,UAAA,GAA2B,IAAI;QACzC,IAAW,CAAA,WAAA,GAAsB,IAAI;AAErC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AACxC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,iBAAiB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAC5C,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;;AAIhC,IAAA,IAAI,CACH,OAAmC,EACnC,eAAqB,EACrB,SAAS,GAAG,KAAK,EAAA;AAEjB,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,eAAe,CAAC;AAChE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE;gBAC7E,QAAQ,EAAE,IAAI,CAAC,SAAS;AACxB,gBAAA,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;AACxC,aAAA,CAAC;;QAGH,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ;AAElD,QAAA,MAAM,iBAAiB,GAAG,IAAI,OAAO,EAAQ;AAC7C,QAAA,eAAe,CACd;YACC,cAAc,EAAE,MAAK;gBACpB,iBAAiB,CAAC,IAAI,EAAE;gBACxB,iBAAiB,CAAC,QAAQ,EAAE;aAC5B;SACD,EACD;YACC,QAAQ,EAAE,IAAI,CAAC,SAAS;AACxB,SAAA,CACD;AACD,QAAA,MAAM,WAAW,GAAG,iBAAiB,CAAC,IAAI,CACzC,QAAQ,CAAC,MACR,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACvF,SAAS;AACT,YAAA,iBAAiB,EAAE,UAAU;SAC7B,CAAC,CACF,CACD;QAED,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE;;IAGnD,KAAK,CAAC,SAAS,GAAG,KAAK,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACrB,YAAA,OAAO,EAAE,CAAC,SAAS,CAAC;;AAGrB,QAAA,OAAO,gBAAgB,CACtB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EACtC,CAAC,EAAE,SAAS,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAC3C,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE,CACxC,CAAC,IAAI,CACL,GAAG,CAAC,MAAK;AACR,YAAA,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE;AAC1B,YAAA,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;AACpC,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI;AACtB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI;SACvB,CAAC,CACF;;IAGM,cAAc,CAAC,OAAmC,EAAE,eAAqB,EAAA;QAChF,IAAI,CAAC,OAAO,EAAE;AACb,YAAA,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC;;AACnB,aAAA,IAAI,OAAO,YAAY,WAAW,EAAE;YAC1C,MAAM,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,eAAe,CAAC;AAC3D,YAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC;YACxC,OAAO,IAAI,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;;aAC7C;AACN,YAAA,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,OAAO,CAAA,CAAE,CAAC,CAAC,CAAC,CAAC;;;AAGxE;;ACvGD;;;;;AAKG;MAEU,SAAS,CAAA;AADtB,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AA2BpC;AAzBA;;;;;;;AAOG;IACH,IAAI,GAAA;AACH,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC;AAC/F,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;AAChC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK;AAC5B,QAAA,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,SAAS;AAC5C,QAAA,IAAI,cAAc,GAAG,CAAC,EAAE;AACvB,YAAA,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;YAC5E,SAAS,CAAC,YAAY,GAAG,CAAA,EAAG,aAAa,GAAG,cAAc,IAAI;;AAE/D,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ;AAC7B,QAAA,OAAO,MAAK;AACX,YAAA,IAAI,cAAc,GAAG,CAAC,EAAE;AACvB,gBAAA,SAAS,CAAC,YAAY,GAAG,YAAY;;AAEtC,YAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ;AAC9B,SAAC;;8GA1BU,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAT,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,cADI,MAAM,EAAA,CAAA,CAAA;;2FACnB,SAAS,EAAA,UAAA,EAAA,CAAA;kBADrB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCiBrB,gBAAgB,CAAA;AAZ7B,IAAA,WAAA,GAAA;AAaS,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAChE,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AA+BpC;IA1BA,QAAQ,GAAA;AACP,QAAA,eAAe,CACd;AACC,YAAA,cAAc,EAAE,MACf,gBAAgB,CACf,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,cAAc,EACnB,CAAC,OAAoB,EAAE,SAAkB,KAAI;gBAC5C,IAAI,SAAS,EAAE;oBACd,MAAM,CAAC,OAAO,CAAC;;AAEhB,gBAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9B,aAAC,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAC5D;SACF,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;;IAGF,IAAI,GAAA;QACH,OAAO,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACrG,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,iBAAiB,EAAE,MAAM;AACzB,SAAA,CAAC;;8GAhCS,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,oVARlB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAQA,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAZ5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,UAAU,EAAE,IAAI;oBAChB,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,IAAI,EAAE;AACL,wBAAA,SAAS,EAAE,+DAA+D;AAC1E,wBAAA,cAAc,EAAE,YAAY;AAC5B,wBAAA,cAAc,EAAE,WAAW;AAC3B,wBAAA,KAAK,EAAE,eAAe;AACtB,qBAAA;AACD,iBAAA;8BAMS,SAAS,EAAA,CAAA;sBAAjB;gBACQ,aAAa,EAAA,CAAA;sBAArB;;;ACtBF;;;;;AAKG;MACU,cAAc,CAAA;AAC1B;;;;AAIG;IACH,MAAM,CAAC,OAAiC,EAAA;AACxC;;;;AAIG;IACH,KAAK,CAAC,MAAY,EAAA;AAElB;;;;AAIG;IACH,OAAO,CAAC,MAAY,EAAA;AACpB;AAED,MAAM,iBAAiB,GAAa;IACnC,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,UAAU;IACV,UAAU;IACV,YAAY;IACZ,UAAU;IACV,MAAM;IACN,YAAY;IACZ,MAAM;IACN,aAAa;IACb,kBAAkB;CAClB;AACD,MAAM,mBAAmB,GAAa,CAAC,WAAW,EAAE,eAAe,CAAC;AAEpE;;AAEG;MACU,WAAW,CAAA;IAOf,mBAAmB,CAAC,cAA8B,EAAE,OAAwB,EAAA;AACnF,QAAA,iBAAiB,CAAC,OAAO,CAAC,CAAC,UAAkB,KAAI;YAChD,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;gBACnC,cAAc,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;;AAElD,SAAC,CAAC;;IAGK,qBAAqB,CAAC,gBAAkC,EAAE,OAAwB,EAAA;AACzF,QAAA,mBAAmB,CAAC,OAAO,CAAC,CAAC,UAAkB,KAAI;YAClD,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;gBACnC,gBAAgB,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;;AAEpD,SAAC,CAAC;;AAGH;;;;AAIG;AACH,IAAA,MAAM,CAAC,OAAiC,EAAA;QACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC/D,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC5D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC;;;AAIrE;;;;AAIG;AACH,IAAA,IAAI,iBAAiB,GAAA;QACpB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;AACtD,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ;;;AAS/C;;;;;;AAMG;AACH,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAGjE;;;;;;;AAOG;AACH,IAAA,IAAI,SAAS,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAGpE;;;;;;;AAOG;AACH,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;;AAGnC;;;;;;;;AAQG;AACH,IAAA,IAAI,KAAK,GAAA;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE;;AAGzD,IAAA,WAAA,CACS,cAA4C,EAC5C,WAAuB,EACvB,gBAAiD,EACjD,cAAiD,EAAA;QAHjD,IAAc,CAAA,cAAA,GAAd,cAAc;QACd,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAc,CAAA,cAAA,GAAd,cAAc;AAtGf,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAO;AAC5B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAO;AAC/B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ;QAsGpC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAW,KAAI;AAC9D,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACrB,SAAC,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AAC7C,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO;AACvB,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM;AACtB,SAAC,CAAC;AACF,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAK,GAAG,CAAC;;AAGjC;;;;AAIG;AACH,IAAA,KAAK,CAAC,MAAY,EAAA;AACjB,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACzB,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrB,IAAI,CAAC,oBAAoB,EAAE;;;AAIrB,IAAA,QAAQ,CAAC,MAAY,EAAA;AAC5B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5B,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;;;AAIG;AACH,IAAA,OAAO,CAAC,MAAY,EAAA;AACnB,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACzB,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;iBACf;AACN,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE;AACrC,gBAAA,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;AACvB,oBAAA,OAAO,CAAC,IAAI,CACX,CAAC,MAAM,KAAI;AACV,wBAAA,IAAI,MAAM,KAAK,KAAK,EAAE;AACrB,4BAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;AAEvB,qBAAC,EACD,MAAO,GAAC,CACR;;AACK,qBAAA,IAAI,OAAO,KAAK,KAAK,EAAE;AAC7B,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;;;;IAMjB,oBAAoB,GAAA;QAC3B,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE;QAC7D,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;;AAGzG,QAAA,iBAAiB,CAAC,SAAS,CAAC,MAAK;YAChC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;AACtD,YAAA,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;AACnD,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;AAC7B,YAAA,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;AAEpC,YAAA,IAAI,CAAC,cAAc,GAAQ,IAAI;AAC/B,YAAA,IAAI,CAAC,WAAW,GAAQ,IAAI;AAC7B,SAAC,CAAC;;AAGF,QAAA,mBAAmB,CAAC,SAAS,CAAC,MAAK;AAClC,YAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ;AACxD,gBAAA,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;AACnD,gBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;AAC/B,gBAAA,IAAI,CAAC,gBAAgB,GAAQ,IAAI;;AAEnC,SAAC,CAAC;;QAGF,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC,SAAS,CAAC,MAAK;AAC1D,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACxB,SAAC,CAAC;;AAEH;;IC7PW;AAAZ,CAAA,UAAY,mBAAmB,EAAA;AAC9B,IAAA,mBAAA,CAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAc;AACd,IAAA,mBAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAG;AACJ,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,GAG9B,EAAA,CAAA,CAAA;;MCqDY,cAAc,CAAA;AA/B3B,IAAA,WAAA,GAAA;AAgCS,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,EAAC,UAAuB,EAAC;AACxC,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE5B,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ;AAC9B,QAAA,IAAA,CAAA,YAAY,GAAmB,IAAI,CAAC;QAOnC,IAAQ,CAAA,QAAA,GAAqB,IAAI;QAGjC,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAI,CAAA,IAAA,GAAW,QAAQ;AAMb,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE;AAEpD,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,OAAO,EAAQ;AAC3B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,OAAO,EAAQ;AA0K5B;AAxKA,IAAA,IAAI,eAAe,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK;AAC1B,cAAE;AACF,cAAE,QAAQ,CAAC,IAAI,CAAC,UAAU;AACxB,kBAAE,CAAA,kBAAA,EAAqB,IAAI,CAAC,UAAU,CAAO,KAAA;kBAC3C,EAAE;;AAGR,IAAA,OAAO,CAAC,MAAM,EAAA;AACb,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;;IAG/B,QAAQ,GAAA;QACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa;QAChD,eAAe,CAAC,EAAE,cAAc,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;;IAGtF,WAAW,GAAA;QACV,IAAI,CAAC,qBAAqB,EAAE;;IAG7B,IAAI,GAAA;AACH,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;AACrC,QAAA,MAAM,OAAO,GAA8B,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE;QAEnG,MAAM,iBAAiB,GAAG,gBAAgB,CACzC,IAAI,CAAC,KAAK,EACV,aAAa,EACb,MAAM,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAC5C,OAAO,CACP;QACD,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,SAAQ,EAAE,OAAO,CAAC;QAEvG,MAAM,YAAY,GAAG,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;AAC9D,QAAA,YAAY,CAAC,SAAS,CAAC,MAAK;AAC3B,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAClB,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvB,SAAC,CAAC;QAEF,IAAI,CAAC,qBAAqB,EAAE;QAC5B,IAAI,CAAC,aAAa,EAAE;AAEpB,QAAA,OAAO,YAAY;;IAGZ,KAAK,GAAA;AACZ,QAAA,MAAM,OAAO,GAA8B,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE;AAEvG,QAAA,MAAM,iBAAiB,GAAG,gBAAgB,CACzC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,CAAC,OAAoB,EAAE,SAAkB,KAAI;YAC5C,IAAI,SAAS,EAAE;gBACd,MAAM,CAAC,OAAO,CAAC;;AAEhB,YAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;SAC7B,EACD,OAAO,CACP;QACD,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,SAAQ,EAAE,OAAO,CAAC;QAEvG,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC,SAAS,CAAC,MAAK;AACxD,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AACjB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACtB,SAAC,CAAC;QAEF,IAAI,CAAC,oBAAoB,EAAE;QAC3B,IAAI,CAAC,SAAS,EAAE;;IAGT,oBAAoB,GAAA;AAC3B,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;AACrC,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAK;AACjC,YAAA,SAAS,CAAgB,aAAa,EAAE,SAAS;iBAC/C,IAAI,CACJ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC;AAEjC,iBAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACpB,gBAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAClB,qBAAqB,CAAC,MAAK;AAC1B,wBAAA,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;AAC5B,4BAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;;AAE7D,qBAAC,CAAC;;AACI,qBAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACtC,IAAI,CAAC,aAAa,EAAE;;AAEtB,aAAC,CAAC;;;YAIH,IAAI,YAAY,GAAG,KAAK;YACxB,SAAS,CAAa,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW;AAC7D,iBAAA,IAAI,CACJ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,GAAG,CAAC,OAAO,YAAY,GAAG,KAAK,CAAC,CAAC,EACjC,SAAS,CAAC,MAAM,SAAS,CAAa,aAAa,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACxG,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,aAAa,KAAK,MAAM,CAAC;iBAEhD,SAAS,CAAC,MAAK;gBACf,YAAY,GAAG,IAAI;AACpB,aAAC,CAAC;;;;;AAMH,YAAA,SAAS,CAAa,aAAa,EAAE,OAAO;AAC1C,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC7B,iBAAA,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,KAAI;AACzB,gBAAA,IAAI,aAAa,KAAK,MAAM,EAAE;AAC7B,oBAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;wBAC/B,IAAI,CAAC,aAAa,EAAE;;yBACd,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE;AACnD,wBAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;;;gBAIxE,YAAY,GAAG,KAAK;AACrB,aAAC,CAAC;AACJ,SAAC,CAAC;;IAGK,qBAAqB,GAAA;AAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;;IAGb,SAAS,GAAA;AAChB,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;QACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YACpD,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,CAAA,cAAA,CAAgB,CAAgB;YAClF,MAAM,cAAc,GAAG,4BAA4B,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErE,YAAA,MAAM,cAAc,GAAG,aAAa,IAAI,cAAc,IAAI,aAAa;YACvE,cAAc,CAAC,KAAK,EAAE;;;IAIhB,aAAa,GAAA;AACpB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;AAChC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY;AAErC,QAAA,IAAI,cAAc;AAClB,QAAA,IAAI,WAAW,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACtE,cAAc,GAAG,WAAW;;aACtB;YACN,cAAc,GAAG,IAAI;;AAEtB,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAK;YACjC,UAAU,CAAC,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;AACxC,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI;AACzB,SAAC,CAAC;;IAGK,aAAa,GAAA;AACpB,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAC/B,YAAA,gBAAgB,CACf,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,CAAC,EAAE,SAAS,EAAE,KAAI;AACjB,gBAAA,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;gBAC7B,OAAO,MAAM,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC;AAC9C,aAAC,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAC5D;;;8GAlMS,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,EAnBhB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,gEAAA,EAAA,YAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,uBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;AAeT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,mGAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAIW,cAAc,EAAA,UAAA,EAAA,CAAA;kBA/B1B,SAAS;+BACC,kBAAkB,EAAA,UAAA,EAChB,IAAI,EACV,IAAA,EAAA;AACL,wBAAA,SAAS,EAAE,0DAA0D;AACrE,wBAAA,cAAc,EAAE,WAAW;AAC3B,wBAAA,QAAQ,EAAE,IAAI;AACd,wBAAA,mBAAmB,EAAE,MAAM;AAC3B,wBAAA,wBAAwB,EAAE,gBAAgB;AAC1C,wBAAA,yBAAyB,EAAE,iBAAiB;AAC5C,wBAAA,aAAa,EAAE,MAAM;qBACrB,EACS,QAAA,EAAA;;;;;;;;;;;;;;;EAeT,EACc,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,MAAA,EAAA,CAAA,mGAAA,CAAA,EAAA;8BAYU,SAAS,EAAA,CAAA;sBAAvD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gBAE5B,SAAS,EAAA,CAAA;sBAAjB;gBACQ,cAAc,EAAA,CAAA;sBAAtB;gBACQ,eAAe,EAAA,CAAA;sBAAvB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBACQ,UAAU,EAAA,CAAA;sBAAlB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBACQ,IAAI,EAAA,CAAA;sBAAZ;gBACQ,UAAU,EAAA,CAAA;sBAAlB;gBACQ,IAAI,EAAA,CAAA;sBAAZ;gBACQ,WAAW,EAAA,CAAA;sBAAnB;gBACQ,gBAAgB,EAAA,CAAA;sBAAxB;gBAEkB,YAAY,EAAA,CAAA;sBAA9B,MAAM;uBAAC,SAAS;;;MCrDL,aAAa,CAAA;AAczB,IAAA,WAAA,GAAA;AAbQ,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AACxC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,oBAAoB,GAAG,MAAM,CAAC,mBAAmB,CAAC;AAClD,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;AAE9B,QAAA,IAAA,CAAA,2BAA2B,GAAG,IAAI,OAAO,EAAQ;AACjD,QAAA,IAAA,CAAA,iBAAiB,GAAgC,IAAI,GAAG,EAAE;QAC1D,IAAmB,CAAA,mBAAA,GAAwB,IAAI;QAC/C,IAAU,CAAA,UAAA,GAAkB,EAAE;QAC9B,IAAY,CAAA,YAAA,GAAmC,EAAE;AACjD,QAAA,IAAA,CAAA,gBAAgB,GAAgC,IAAI,YAAY,EAAE;AAGzE,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;AAG7B,QAAA,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,MAAK;AAC/C,YAAA,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AAC7B,gBAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AACxE,gBAAA,YAAY,CAAC,MAAM,EAAE,gBAAgB,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,2BAA2B,CAAC;gBAC/F,IAAI,CAAC,iBAAiB,EAAE;gBACxB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC;;AAE9D,SAAC,CAAC;;IAGK,iBAAiB,GAAA;AACxB,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB;QACnD,IAAI,kBAAkB,EAAE;AACvB,YAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI;AAC/B,YAAA,kBAAkB,EAAE;;;IAId,cAAc,GAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;;;AAInD,IAAA,IAAI,CAAC,eAAyB,EAAE,OAAY,EAAE,OAAwB,EAAA;AACrE,QAAA,MAAM,WAAW,GAChB,OAAO,CAAC,SAAS,YAAY;cAC1B,OAAO,CAAC;AACV,cAAE,SAAS,CAAC,OAAO,CAAC,SAAS;kBACzB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,SAAU;AACjD,kBAAE,IAAI,CAAC,SAAS,CAAC,IAAI;QAEzB,IAAI,CAAC,WAAW,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,CAAkC,+BAAA,EAAA,OAAO,CAAC,SAAS,IAAI,MAAM,CAA6B,2BAAA,CAAA,CAAC;;QAG5G,IAAI,CAAC,cAAc,EAAE;AAErB,QAAA,MAAM,WAAW,GAAG,IAAI,cAAc,EAAE;AAExC,QAAA,eAAe,GAAG,OAAO,CAAC,QAAQ,IAAI,eAAe;AACrD,QAAA,MAAM,mBAAmB,GAAG,eAAe,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,oBAAoB;AACvG,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,mBAAmB,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC;QAE3G,IAAI,eAAe,GAClB,OAAO,CAAC,QAAQ,KAAK,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,SAAS;AAC3E,QAAA,IAAI,aAAa,GAAiC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC;AAC5G,QAAA,IAAI,WAAW,GAAgB,IAAI,WAAW,CAAC,aAAa,EAAE,UAAU,EAAE,eAAe,EAAE,OAAO,CAAC,aAAa,CAAC;AAEjH,QAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;AACnC,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;;;;QAKvC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAC1C,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAK;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;gBAClD,IAAI,CAAC,iBAAiB,EAAE;gBACxB,IAAI,CAAC,iBAAiB,EAAE;;SAEzB,CAAC,CACF;AAED,QAAA,WAAW,CAAC,KAAK,GAAG,CAAC,MAAW,KAAI;AACnC,YAAA,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;AAC1B,SAAC;AACD,QAAA,WAAW,CAAC,OAAO,GAAG,CAAC,MAAW,KAAI;AACrC,YAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;AAC5B,SAAC;AAED,QAAA,WAAW,CAAC,MAAM,GAAG,CAAC,OAAiC,KAAI;AAC1D,YAAA,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC;AAC5B,SAAC;AAED,QAAA,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC;QAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;;AAGhD,QAAA,IAAI,eAAe,IAAI,eAAe,CAAC,QAAQ,EAAE;AAChD,YAAA,eAAe,CAAC,iBAAiB,CAAC,aAAa,EAAE;;AAElD,QAAA,aAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE;AAC/C,QAAA,OAAO,WAAW;;AAGnB,IAAA,IAAI,eAAe,GAAA;QAClB,OAAO,IAAI,CAAC,gBAAgB;;AAG7B,IAAA,UAAU,CAAC,MAAY,EAAA;AACtB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;IAGtE,aAAa,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;;AAG1B,IAAA,eAAe,CAAC,WAAoB,EAAA;AAC3C,QAAA,IAAI,eAAe,GAAG,eAAe,CAAC,gBAAgB,EAAE;AACvD,YAAA,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;YAClD,eAAe,EAAE,IAAI,CAAC,SAAS;AAC/B,SAAA,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,CAAC;QACzD,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC/D,QAAA,OAAO,eAAe;;IAGf,sBAAsB,CAAC,WAAoB,EAAE,gBAA0B,EAAA;AAC9E,QAAA,IAAI,aAAa,GAAG,eAAe,CAAC,cAAc,EAAE;AACnD,YAAA,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;YAClD,eAAe,EAAE,IAAI,CAAC,SAAS;YAC/B,gBAAgB;AAChB,SAAA,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC;QACvD,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC7D,QAAA,OAAO,aAAa;;IAGb,cAAc,CACrB,eAAyB,EACzB,mBAAwC,EACxC,OAA8C,EAC9C,WAA2B,EAC3B,OAAwB,EAAA;QAExB,IAAI,CAAC,OAAO,EAAE;AACb,YAAA,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC;;AACnB,aAAA,IAAI,OAAO,YAAY,WAAW,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,WAAW,CAAC;;AAClD,aAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;;aAChC;AACN,YAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,mBAAmB,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC;;;IAI/F,sBAAsB,CAAC,WAA6B,EAAE,WAA2B,EAAA;AACxF,QAAA,MAAM,OAAO,GAAG;AACf,YAAA,SAAS,EAAE,WAAW;AACtB,YAAA,KAAK,CAAC,MAAM,EAAA;AACX,gBAAA,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;aACzB;AACD,YAAA,OAAO,CAAC,MAAM,EAAA;AACb,gBAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;aAC3B;SACD;QACD,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC;AACvD,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,OAAO,IAAI,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;;AAG5C,IAAA,iBAAiB,CAAC,OAAe,EAAA;AACxC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAG,EAAA,OAAO,CAAE,CAAA,CAAC;QAC7D,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;;IAG7B,oBAAoB,CAC3B,eAAyB,EACzB,mBAAwC,EACxC,aAAwB,EACxB,OAAuB,EACvB,OAAwB,EAAA;AAExB,QAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC;YACvC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;AAC3D,YAAA,MAAM,EAAE,eAAe;AACvB,SAAA,CAAC;AACF,QAAA,MAAM,YAAY,GAAG,eAAe,CAAC,aAAa,EAAE;YACnD,mBAAmB;YACnB,eAAe;AACf,SAAA,CAAC;AACF,QAAA,MAAM,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC,aAAa;AAC7D,QAAA,IAAI,OAAO,CAAC,UAAU,EAAE;AACtB,YAAA,iBAAiC,CAAC,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC;;QAE9E,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC;;;AAGtD,QAAA,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;;AAG1E,IAAA,cAAc,CAAC,OAAgB,EAAA;AACtC,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa;QACpC,IAAI,MAAM,IAAI,OAAO,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;AAC9C,YAAA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,KAAI;gBAC/C,IAAI,OAAO,KAAK,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACzD,oBAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACxE,oBAAA,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;;AAE7C,aAAC,CAAC;AAEF,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;;;IAIrB,iBAAiB,GAAA;QACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,OAAO,KAAI;YACjD,IAAI,KAAK,EAAE;AACV,gBAAA,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;;iBACpC;AACN,gBAAA,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC;;AAExC,SAAC,CAAC;AACF,QAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;;AAGvB,IAAA,iBAAiB,CAAC,WAAwB,EAAA;QACjD,MAAM,kBAAkB,GAAG,MAAK;YAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC;AAClD,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;;AAE7C,SAAC;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3C,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;;AAGxD,IAAA,mBAAmB,CAAC,aAA2C,EAAA;AACtE,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC;AACrC,QAAA,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE;AAEvC,QAAA,aAAa,CAAC,SAAS,CAAC,MAAK;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;AACtD,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,gBAAA,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE;;AAEzC,SAAC,CAAC;;8GA1PS,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cADA,MAAM,EAAA,CAAA,CAAA;;2FACnB,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACpBlC;;;;;AAKG;MAEU,QAAQ,CAAA;AADrB,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC;AACnC,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC;AAwCxC;AAtCA;;;;;;;;AAQG;AACH,IAAA,IAAI,CAAC,OAAY,EAAE,OAAA,GAA2B,EAAE,EAAA;AAC/C,QAAA,MAAM,eAAe,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,EAAE;AAC1F,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,eAAe,CAAC;;AAGvE;;AAEG;AACH,IAAA,IAAI,eAAe,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe;;AAGxC;;;;AAIG;AACH,IAAA,UAAU,CAAC,MAAY,EAAA;AACtB,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;;AAGpC;;;;AAIG;IACH,aAAa,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;;8GAzC5B,QAAQ,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAR,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAQ,cADK,MAAM,EAAA,CAAA,CAAA;;2FACnB,QAAQ,EAAA,UAAA,EAAA,CAAA;kBADpB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCFrB,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,SAAA,EADJ,CAAC,QAAQ,CAAC,EAAA,CAAA,CAAA;;2FACpB,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAE;;;ACNnC;;;;;;;AAOG;MAEU,YAAY,CAAA;AADzB,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAGtC,IAAa,CAAA,aAAA,GAAG,IAAI;QACpB,IAAW,CAAA,WAAA,GAA8B,YAAY;QACrD,IAAK,CAAA,KAAA,GAAsB,SAAS;QACpC,IAAQ,CAAA,QAAA,GAAiC,IAAI;AAQ7C;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GAbhB,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cADC,MAAM,EAAA,CAAA,CAAA;;2FACnB,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACiBlC,MAAM,YAAY,GAAG,CAAC,EAAO,KAAK,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE;AAE5D,IAAI,UAAU,GAAG,CAAC;AAgBlB;;;;AAIG;MAEU,aAAa,CAAA;AAD1B,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACjC;8GAFY,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAb,aAAa,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,4BAA4B,EAAE,UAAU,EAAE,IAAI,EAAE;;AAKvE;;;;AAIG;MAQU,cAAc,CAAA;AAG1B,IAAA,WAAA,CAAsC,IAAY,EAAA;QAAZ,IAAI,CAAA,IAAA,GAAJ,IAAI;AAF1C,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;;AADR,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,kBAGH,MAAM,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAHjB,cAAc,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,WAAA,EAAA,sDAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAP1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,gCAAgC;AAC1C,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,aAAa,EAAE,CAAsD,oDAAA,CAAA;AACrE,qBAAA;AACD,iBAAA;;0BAIa,SAAS;2BAAC,MAAM;;AAG9B;;;;AAIG;MASU,UAAU,CAAA;AARvB,IAAA,WAAA,GAAA;AASS,QAAA,IAAA,CAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;AACrB,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAQxE;;;;AAIG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK;AAmBzB;;;;AAIG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAQ;AAE1C;;;;AAIG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAQ;AAgC3C;IA5BA,QAAQ,GAAA;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC3B,YAAA,IAAI,CAAC,KAAK,GAAG,WAAW,UAAU,EAAE,EAAE;;;AAIxC,IAAA,IAAI,MAAM,GAAA;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAE;;AAGtC,IAAA,IAAI,EAAE,GAAA;AACL,QAAA,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK;;AAGtD,IAAA,IAAI,UAAU,GAAA;AACb,QAAA,OAAO,CAAG,EAAA,IAAI,CAAC,KAAK,QAAQ;;IAG7B,YAAY,GAAA;AACX,QAAA,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,MAAM;;AAGvG;;AAEG;IACH,aAAa,GAAA;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY;;8GA5E9C,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAV,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAU,mTAgDR,aAAa,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAhDf,UAAU,EAAA,UAAA,EAAA,CAAA;kBARtB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,UAAU;AACjB,qBAAA;AACD,iBAAA;8BASS,aAAa,EAAA,CAAA;sBAArB;gBAOQ,QAAQ,EAAA,CAAA;sBAAhB;gBAQQ,KAAK,EAAA,CAAA;sBAAb;gBASoB,GAAG,EAAA,CAAA;sBAAvB,KAAK;uBAAC,YAAY;gBAOT,KAAK,EAAA,CAAA;sBAAd;gBAOS,MAAM,EAAA,CAAA;sBAAf;gBAEoD,UAAU,EAAA,CAAA;sBAA9D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,aAAa,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;;AAgCpD;;;;AAIG;MAmBU,MAAM,CAAA;AA2FlB,IAAA,WAAA,CAAsC,IAAY,EAAA;QAAZ,IAAI,CAAA,IAAA,GAAJ,IAAI;AAvFlC,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC;AAC9B,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC/B,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAExE,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAE/B,IAAuB,CAAA,uBAAA,GAAG,KAAK;AAS/B;;;;;AAKG;AACO,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAO;AAElD;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;AAGG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;;;AAIG;AACM,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;AAE/C;;;;AAIG;AACM,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;AAEnC;;;;;;;;;;AAUG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;;;AAMG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAO;AAEzC;;;;;;AAMG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO;AAK1C,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,OAAO,EAAqB;AAIjD;;;;;;AAMG;AACO,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAqB;;AAE3D,IAAA,KAAK,CAAC,IAAgB,EAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACnB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;;;IAI/B,UAAU,CAAC,EAAE,aAAa,EAAc,EAAA;QACvC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAA4B,CAAC,EAAE;AAChE,YAAA,IAAI,CAAC,uBAAuB,GAAG,KAAK;;;AAItC,IAAA,SAAS,CAAC,KAAoB,EAAA;QAC7B,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/C;;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AACxE,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,YAAY;AAE/B,QAAA,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;YACpC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;gBACxD,QAAQ,GAAG,KAAK;;AAElB,SAAC,CAAC;QAEF,IAAI,MAAM,EAAE;AACX,YAAA,QAAQ,KAAK,CAAC,GAAG;AAChB,gBAAA,KAAK,SAAS;AACd,gBAAA,KAAK,WAAW;oBACf,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,MAAM,IAAI,MAAM;oBAC3C;AACD,gBAAA,KAAK,YAAY;AACjB,gBAAA,KAAK,WAAW;oBACf,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM;oBAClC;AACD,gBAAA,KAAK,MAAM;oBACV,QAAQ,GAAG,CAAC;oBACZ;AACD,gBAAA,KAAK,KAAK;AACT,oBAAA,QAAQ,GAAG,MAAM,GAAG,CAAC;oBACrB;;AAEF,YAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,kBAAkB,EAAE;AACzC,gBAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;;YAE/C,YAAY,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE;AAC5C,YAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI;YAEnC,KAAK,CAAC,cAAc,EAAE;;;AAIxB;;;AAGG;AACH,IAAA,MAAM,CAAC,EAAO,EAAA;AACb,QAAA,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC;;IAGhC,kBAAkB,GAAA;QACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;AAC5D,YAAA,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;AACzB,gBAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC;AACnC,gBAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;;;QAI1B,IAAI,CAAC,KAAK,CAAC;AACT,aAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC;AACxC,aAAA,SAAS,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAG1D,WAAW,CAAC,EAAE,QAAQ,EAAiB,EAAA;AACtC,QAAA,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AACtC,YAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC;;;AAIxC,IAAA,eAAe,CAAC,MAAW,EAAE,aAAa,GAAG,IAAI,EAAA;AACxD,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAE;YAC7B,IAAI,gBAAgB,GAAG,KAAK;YAE5B,IAAI,aAAa,EAAE;AAClB,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,MAAM;oBACN,cAAc,EAAE,MAAK;wBACpB,gBAAgB,GAAG,IAAI;qBACvB;AACD,iBAAA,CAAC;;YAGH,IAAI,CAAC,gBAAgB,EAAE;AACtB,gBAAA,IAAI,CAAC,QAAQ,GAAG,MAAM;AACtB,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;AAChC,gBAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;;;;AAK1B,IAAA,kBAAkB,CAAC,UAAe,EAAA;AACzC,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;;AAGhD,IAAA,YAAY,CAAC,MAAW,EAAA;QAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,KAAK,IAAI;;AAnNjE,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAM,kBA2FK,MAAM,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGA3FjB,MAAM,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,mBAAA,EAAA,4BAAA,EAAA,uBAAA,EAAA,4EAAA,EAAA,WAAA,EAAA,6CAAA,EAAA,EAAA,cAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAsFD,UAAU,EAAA,EAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,CAAA,UAAA,CAAA,MACO,cAAc,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAvFpC,MAAM,EAAA,UAAA,EAAA,CAAA;kBAlBlB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,QAAQ,EAAE,QAAQ;AAClB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,qBAAqB,EAAE,CAA4B,0BAAA,CAAA;AACnD,wBAAA,yBAAyB,EAAE,CAA4E,0EAAA,CAAA;AACvG,wBAAA,aAAa,EAAE,CAA6C,2CAAA,CAAA;AAC5D,wBAAA,qBAAqB,EAAE,mBAAmB;AAC1C,wBAAA,sBAAsB,EAAE,mBAAmB;AAC3C,wBAAA,qBAAqB,EAAE,mBAAmB;AAC1C,wBAAA,mBAAmB,EAAE,mBAAmB;AACxC,wBAAA,gBAAgB,EAAE,mBAAmB;AACrC,wBAAA,eAAe,EAAE,mBAAmB;AACpC,wBAAA,YAAY,EAAE,oBAAoB;AAClC,qBAAA;AACD,iBAAA;;0BA4Fa,SAAS;2BAAC,MAAM;yCAzEpB,QAAQ,EAAA,CAAA;sBAAhB;gBAQS,cAAc,EAAA,CAAA;sBAAvB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAMQ,aAAa,EAAA,CAAA;sBAArB;gBAOQ,WAAW,EAAA,CAAA;sBAAnB;gBAOQ,KAAK,EAAA,CAAA;sBAAb;gBAaQ,QAAQ,EAAA,CAAA;sBAAhB;gBASS,KAAK,EAAA,CAAA;sBAAd;gBASS,MAAM,EAAA,CAAA;sBAAf;gBAE4B,KAAK,EAAA,CAAA;sBAAjC,eAAe;uBAAC,UAAU;gBAC+C,KAAK,EAAA,CAAA;sBAA9E,eAAe;uBAAC,UAAU,CAAC,MAAM,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;gBAa9D,SAAS,EAAA,CAAA;sBAAlB;;MAmIW,cAAc,CAAA;AAK1B,IAAA,WAAA,CAAsC,IAAY,EAAA;QAAZ,IAAI,CAAA,IAAA,GAAJ,IAAI;AAJ1C,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;AAC5B,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;AACpB,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;;AAI/D,IAAA,IAAI,QAAQ,GAAA;QACX,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,KAAK,KAAK,EAAE;AAChC,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,SAAS;;AAE9C,QAAA,IAAI,IAAI,CAAC,GAAG,CAAC,uBAAuB,EAAE;YACrC,OAAO,CAAC,CAAC;;QAEV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;;AAd1D,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,kBAKH,MAAM,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGALjB,cAAc,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,yBAAA,EAAA,WAAA,EAAA,6CAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,eAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,oDAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,EAAA,cAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAhB1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,MAAM,EAAE,eAAe;AACvB,wBAAA,KAAK,EAAE,UAAU;AACjB,wBAAA,kBAAkB,EAAE,yBAAyB;AAC7C,wBAAA,aAAa,EAAE,CAA6C,2CAAA,CAAA;AAC5D,wBAAA,gBAAgB,EAAE,gBAAgB;AAClC,wBAAA,kBAAkB,EAAE,kBAAkB;AACtC,wBAAA,iBAAiB,EAAE,UAAU;AAC7B,wBAAA,sBAAsB,EAAE,oDAAoD;AAC5E,wBAAA,sBAAsB,EAAE,gBAAgB;AACxC,wBAAA,sBAAsB,EAAE,kBAAkB;AAC1C,qBAAA;AACD,iBAAA;;0BAMa,SAAS;2BAAC,MAAM;;AAa9B;;AAEG;AAUG,MAAO,gBAAiB,SAAQ,cAAc,CAAA;8GAAvC,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAhB,gBAAgB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAT5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,YAAY,EAAE,kBAAkB;AAChC,wBAAA,SAAS,EAAE,oBAAoB;AAC/B,qBAAA;AACD,iBAAA;;AAGD;;;;AAIG;AASG,MAAO,UAAW,SAAQ,cAAc,CAAA;8GAAjC,UAAU,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAV,UAAU,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,eAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,6CAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAV,UAAU,EAAA,UAAA,EAAA,CAAA;kBARtB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,IAAI,EAAE,EAAE;AACR,wBAAA,SAAS,EAAE,6CAA6C;AACxD,qBAAA;AACD,iBAAA;;;AC9cM,MAAM,uBAAuB,GAAyB,CAAC,EAAE,SAAS,EAAE,KAAI;AAC9E,IAAA,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;IACxB,OAAO,MAAM,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;AACxC,CAAC;AAEM,MAAM,sBAAsB,GAAyB,CAAC,OAAoB,EAAE,SAAkB,KAAI;IACxG,IAAI,SAAS,EAAE;QACd,MAAM,CAAC,OAAO,CAAC;;AAEhB,IAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9B,CAAC;;MCoBY,UAAU,CAAA;AAXvB,IAAA,WAAA,GAAA;AAYC,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAK/D;8GANY,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAV,UAAU,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,eAAA,EAAA,WAAA,EAAA,oDAAA,EAAA,sBAAA,EAAA,YAAA,EAAA,EAAA,cAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAV,UAAU,EAAA,UAAA,EAAA,CAAA;kBAXtB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,MAAM,EAAE,iBAAiB;AACzB,wBAAA,KAAK,EAAE,UAAU;AACjB,wBAAA,cAAc,EAAE,eAAe;AAC/B,wBAAA,aAAa,EAAE,kDAAkD;AACjE,wBAAA,wBAAwB,EAAE,YAAY;AACtC,qBAAA;AACD,iBAAA;8BAIS,IAAI,EAAA,CAAA;sBAAZ;gBACQ,GAAG,EAAA,CAAA;sBAAX;gBACQ,IAAI,EAAA,CAAA;sBAAZ;;AAGF;;;;AAIG;MAsBU,YAAY,CAAA;AArBzB,IAAA,WAAA,GAAA;AAsBS,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC/B,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QAExB,IAAW,CAAA,WAAA,GAAsB,IAAI;AA0F7C;AA5EA,IAAA,oBAAoB,CAAC,IAAgB,EAAA;AACpC,QAAA,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,KAAK,IAAI;;IAGvC,eAAe,GAAA;;QAEd,IAAI,CAAC,iBAAiB,EAAE;;QAGxB,IAAI,CAAC,GAAG,CAAC;AACP,aAAA,IAAI,CACJ,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EACvC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,IAAI,CAAC,EACzC,oBAAoB,EAAE,EACtB,IAAI,CAAC,CAAC,CAAC;AAEP,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACvB,YAAA,MAAM,OAAO,GAAoC,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE;;;AAI7G,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;;AAGxB,YAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AACrB,gBAAA,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,uBAAuB,EAAE,OAAO,CAAC,CAAC,SAAS,CACzG,MAAK;AACJ,oBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI;oBACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;;;AAIjD,oBAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;;AAGvB,oBAAA,IAAI,IAAI,CAAC,WAAW,EAAE;;;wBAGrB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;AACtD,wBAAA,gBAAgB,CACf,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,CAAC,aAAa,EAC9B,sBAAsB,EACtB,OAAO,CACP,CAAC,SAAS,CAAC,MAAK;4BAChB,IAAI,QAAQ,EAAE;AACb,gCAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;gCACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;;AAElC,yBAAC,CAAC;;oBAGH,IAAI,UAAU,EAAE;AACf,wBAAA,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;wBACxB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;;AAErC,iBAAC,CACD;;iBACK;gBACN,IAAI,CAAC,iBAAiB,EAAE;;AAE1B,SAAC,CAAC;;IAGI,iBAAiB,GAAA;AACxB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;AACxC,QAAA,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC;;AAGxD,IAAA,eAAe,CAAC,IAAuB,EAAA;QAC9C,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI;;IAGvE,cAAc,GAAA;QACrB,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI;;8GA5FjE,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAZ,YAAY,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,CAAA,cAAA,EAAA,KAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,aAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,SAAA,EAMV,UAAU,EAnBd,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;EAWT,EAhCW,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,UAAU,0FAeA,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAmB1B,YAAY,EAAA,UAAA,EAAA,CAAA;kBArBxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,OAAO,EAAE,CAAC,UAAU,EAAE,gBAAgB,CAAC;AACvC,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,aAAa;AACpB,qBAAA;oBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,QAAQ,EAAE;;;;;;;;;;;AAWT,CAAA,CAAA;AACD,iBAAA;8BAOkC,MAAM,EAAA,CAAA;sBAAvC,YAAY;uBAAC,UAAU;gBAKf,QAAQ,EAAA,CAAA;sBAAhB;gBAKsB,GAAG,EAAA,CAAA;sBAAzB,KAAK;uBAAC,cAAc;;;AC/DtB,MAAM,kBAAkB,GAAG;IAC1B,aAAa;IACb,MAAM;IACN,UAAU;IACV,cAAc;IACd,UAAU;IACV,gBAAgB;IAChB,cAAc;IACd,YAAY;IACZ,UAAU;CACV;MAMY,YAAY,CAAA;8GAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,YAfxB,aAAa;YACb,MAAM;YACN,UAAU;YACV,cAAc;YACd,UAAU;YACV,gBAAgB;YAChB,cAAc;YACd,YAAY;AACZ,YAAA,UAAU,aARV,aAAa;YACb,MAAM;YACN,UAAU;YACV,cAAc;YACd,UAAU;YACV,gBAAgB;YAChB,cAAc;YACd,YAAY;YACZ,UAAU,CAAA,EAAA,CAAA,CAAA;+GAOE,YAAY,EAAA,CAAA,CAAA;;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,kBAAkB;AAC3B,oBAAA,OAAO,EAAE,kBAAkB;AAC3B,iBAAA;;;ACjCD;;;;;AAKG;MAEU,mBAAmB,CAAA;AADhC,IAAA,WAAA,GAAA;QAEC,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAa,CAAA,aAAA,GAAG,KAAK;QACrB,IAAc,CAAA,cAAA,GAAG,IAAI;QACrB,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAO,CAAA,OAAA,GAAG,CAAC;QACX,IAAQ,CAAA,QAAA,GAAG,EAAE;QACb,IAAM,CAAA,MAAA,GAAG,KAAK;AAEd;8GATY,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cADN,MAAM,EAAA,CAAA,CAAA;;2FACnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACuElC;;;;AAIG;MAEU,qBAAqB,CAAA;AADlC,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAqC,EAAC;AAC3D;8GAFY,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAArB,qBAAqB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,oCAAoC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK/E;;;;AAIG;MAEU,kBAAkB,CAAA;AAD/B,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAqC,EAAC;AAC3D;8GAFY,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAlB,kBAAkB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,iCAAiC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK5E;;;;AAIG;MAEU,iBAAiB,CAAA;AAD9B,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAqC,EAAC;AAC3D;8GAFY,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAjB,iBAAiB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,gCAAgC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK3E;;;;AAIG;MAEU,iBAAiB,CAAA;AAD9B,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAqC,EAAC;AAC3D;8GAFY,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAjB,iBAAiB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,gCAAgC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK3E;;;;AAIG;MAEU,mBAAmB,CAAA;AADhC,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAuC,EAAC;AAC7D;8GAFY,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAnB,mBAAmB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,kCAAkC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK7E;;;;AAIG;MAEU,qBAAqB,CAAA;AADlC,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAqC,EAAC;AAC3D;8GAFY,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAArB,qBAAqB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,oCAAoC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK/E;;;;AAIG;MAEU,kBAAkB,CAAA;AAD/B,IAAA,WAAA,GAAA;AAEC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,EAAC,WAAsC,EAAC;AAC5D;8GAFY,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAlB,kBAAkB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,iCAAiC,EAAE,UAAU,EAAE,IAAI,EAAE;;AAK5E;;AAEG;MA+HU,aAAa,CAAA;AA9H1B,IAAA,WAAA,GAAA;AA+HS,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,mBAAmB,CAAC;QAE7C,IAAS,CAAA,SAAA,GAAG,CAAC;QACb,IAAK,CAAA,KAAA,GAAa,EAAE;AAUpB;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;AAEG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;AAEG;AACM,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;AAErD;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;AAIG;AACM,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;AAWrC;;AAEG;AACM,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;AAEvC;;;;AAIG;QACM,IAAI,CAAA,IAAA,GAAG,CAAC;AAEjB;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;;;AAMG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,CAAS,IAAI,CAAC;AAErD;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;AAiJjC;IA/IA,WAAW,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC;;IAGrB,OAAO,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS;;IAGlC,YAAY,GAAA;QACX,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,QAAQ;;IAGxC,gBAAgB,GAAA;QACf,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,QAAQ;;AAG5C,IAAA,UAAU,CAAC,UAAkB,EAAA;AAC5B,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;;AAG9B,IAAA,WAAW,CAAC,OAAsB,EAAA;AACjC,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG7B,IAAA,UAAU,CAAC,UAAU,EAAA;AACpB,QAAA,OAAO,UAAU,KAAK,CAAC,CAAC;;AAGzB;;AAEG;IACK,cAAc,CAAC,KAAa,EAAE,GAAW,EAAA;AAChD,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,KAAK,GAAG,CAAC,EAAE;;;;;AAKd,gBAAA,IAAI,KAAK,GAAG,CAAC,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAChB,qBAAA,IAAI,KAAK,KAAK,CAAC,EAAE;AACvB,oBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;AAEtB,gBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;AAEtB,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE;;;;;gBAKzB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;qBACb,IAAI,GAAG,KAAK,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;;gBAEpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;;;;AAKlC;;;;;;;AAOG;IACK,cAAc,GAAA;QACrB,IAAI,KAAK,GAAG,CAAC;AACb,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS;AACxB,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAC7C,QAAA,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,UAAU;AAEtE,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,UAAU,EAAE;;AAE5B,YAAA,GAAG,GAAG,IAAI,CAAC,OAAO;;aACZ,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE;;YAEnD,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO;;aAC/B;;YAEN,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,UAAU,GAAG,CAAC;AAClC,YAAA,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW;;AAG9B,QAAA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;;AAGpB;;AAEG;IACK,gBAAgB,GAAA;AACvB,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAClD,QAAA,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO;AAC/B,QAAA,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO;AAE9B,QAAA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;;AAGZ,IAAA,eAAe,CAAC,SAAS,EAAA;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI;AAC5B,QAAA,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AAEzD,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;;AAIzB,IAAA,YAAY,CAAC,OAAe,EAAA;AACnC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC;;;AAInB,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AACrB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;AACzC,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;;AAInB,QAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;;AAG7B,QAAA,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE;YACtD,IAAI,KAAK,GAAG,CAAC;AACb,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS;;AAGxB,YAAA,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE;;iBAC9B;gBACN,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE;;AAGvC,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;;AAGzC,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC;;;8GAjOrB,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,EAMX,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,YAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,qBAAqB,EACrB,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,kBAAkB,0EAClB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACjB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACjB,mBAAmB,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACnB,qBAAqB,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACrB,kBAAkB,EAnItB,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EA1HS,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FA4Hd,aAAa,EAAA,UAAA,EAAA,CAAA;kBA9HzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,gBAAgB;oBAC1B,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,IAAI,EAAE;AACL,wBAAA,IAAI,EAAE,YAAY;AAClB,qBAAA;AACD,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHT,CAAA,CAAA;AACD,iBAAA;8BAOwD,WAAW,EAAA,CAAA;sBAAlE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,qBAAqB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACD,QAAQ,EAAA,CAAA;sBAA5D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,kBAAkB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACC,OAAO,EAAA,CAAA;sBAA1D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACE,OAAO,EAAA,CAAA;sBAA1D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACI,SAAS,EAAA,CAAA;sBAA9D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACI,WAAW,EAAA,CAAA;sBAAlE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,qBAAqB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBACD,QAAQ,EAAA,CAAA;sBAA5D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,kBAAkB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBAK1C,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,aAAa,EAAA,CAAA;sBAArB;gBAKQ,cAAc,EAAA,CAAA;sBAAtB;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAOQ,MAAM,EAAA,CAAA;sBAAd;gBAS0B,cAAc,EAAA,CAAA;sBAAxC,KAAK;uBAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAKhB,OAAO,EAAA,CAAA;sBAAf;gBAOQ,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBASS,UAAU,EAAA,CAAA;sBAAnB;gBASQ,IAAI,EAAA,CAAA;sBAAZ;;;AChVF,MAAM,yBAAyB,GAAG;IACjC,aAAa;IACb,qBAAqB;IACrB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,qBAAqB;IACrB,kBAAkB;CAClB;MAMY,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAd/B,aAAa;YACb,qBAAqB;YACrB,kBAAkB;YAClB,iBAAiB;YACjB,iBAAiB;YACjB,mBAAmB;YACnB,qBAAqB;AACrB,YAAA,kBAAkB,aAPlB,aAAa;YACb,qBAAqB;YACrB,kBAAkB;YAClB,iBAAiB;YACjB,iBAAiB;YACjB,mBAAmB;YACnB,qBAAqB;YACrB,kBAAkB,CAAA,EAAA,CAAA,CAAA;+GAON,mBAAmB,EAAA,CAAA,CAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,yBAAyB;AAClC,oBAAA,OAAO,EAAE,yBAAyB;AAClC,iBAAA;;;ACvCD,MAAM,OAAO,GAAG;AACf,IAAA,KAAK,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACnC,IAAA,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;CAC9B;AAEK,SAAU,aAAa,CAAC,QAAgB,EAAA;IAC7C,MAAM,eAAe,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE,IAAI,EAAE;AAE/C,IAAA,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAA,OAAO,EAAE;;IAGV,MAAM,cAAc,GAAG;SACrB,KAAK,CAAC,KAAK;AACX,SAAA,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACnC,SAAA,GAAG,CAAC,CAAC,WAAW,MAAM,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAsB,CAAC;AAErF,IAAA,MAAM,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAE7F,IAAA,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,QAAA,MAAM,0DAA0D;;AAGjE,IAAA,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7D,QAAA,MAAM,yEAAyE;;IAGhF,OAAO,cAAc,CAAC,MAAM,GAAG,EAAE,GAAG,cAAc;AACnD;SAEgB,gBAAgB,CAC/B,OAAoB,EACpB,QAAgB,EAChB,UAAyB,EACzB,MAAkB,EAClB,OAAmB,EACnB,WAAW,GAAG,CAAC,EACf,YAAY,GAAG,CAAC,EAAA;AAEhB,IAAA,MAAM,cAAc,GAAG,aAAa,CAAC,QAAQ,CAAC;AAE9C,IAAA,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,QAAA,OAAO,MAAO,GAAC;;AAGhB,IAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAU;IAC5C,MAAM,UAAU,GAAmB,EAAE;AACrC,IAAA,IAAI,OAAY;AAEhB,IAAA,SAAS,gBAAgB,CAAC,IAAY,EAAE,QAAoB,EAAA;AAC3D,QAAA,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC;AACxC,QAAA,UAAU,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAGnE,IAAA,SAAS,SAAS,CAAC,EAAc,EAAE,OAAe,EAAA;QACjD,YAAY,CAAC,OAAO,CAAC;AACrB,QAAA,IAAI,OAAO,GAAG,CAAC,EAAE;AAChB,YAAA,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC;;aAC3B;AACN,YAAA,EAAE,EAAE;;;IAIN,KAAK,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,IAAI,cAAc,EAAE;QACzD,IAAI,CAAC,YAAY,EAAE;YAClB,gBAAgB,CAAC,WAAW,EAAE,MAC7B,UAAU,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAChF;;aACK;AACN,YAAA,gBAAgB,CAAC,WAAW,EAAE,MAAK;AAClC,gBAAA,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC;AACnC,gBAAA,SAAS,CAAC,MAAM,kBAAkB,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,EAAE,EAAE,WAAW,CAAC;AACtE,aAAC,CAAC;AACF,YAAA,gBAAgB,CAAC,YAAY,EAAE,MAAK;AACnC,gBAAA,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC;AACtC,gBAAA,SAAS,CAAC,MAAM,kBAAkB,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,EAAE,EAAE,YAAY,CAAC;AAC1E,aAAC,CAAC;;;AAIJ,IAAA,OAAO,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;AAC5D;;AC5EA;;;;;AAKG;MAEU,gBAAgB,CAAA;AAD7B,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAGtC,IAAS,CAAA,SAAA,GAAmC,IAAI;QAChD,IAAS,CAAA,SAAA,GAAmB,MAAM;AAClC,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAyB,KAAK,OAAO;QACtD,IAAQ,CAAA,QAAA,GAAG,OAAO;QAElB,IAAc,CAAA,cAAA,GAAG,KAAK;QAEtB,IAAS,CAAA,SAAA,GAAG,CAAC;QACb,IAAU,CAAA,UAAA,GAAG,CAAC;AAQd;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GAlBhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cADH,MAAM,EAAA,CAAA,CAAA;;2FACnB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACuBlC,IAAIP,QAAM,GAAG,CAAC;MA8BD,gBAAgB,CAAA;IAO5B,eAAe,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,KAAK,YAAY,WAAW;;8GAR7B,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,EAhBlB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,4DAAA,EAAA,YAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;AAcT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAxBS,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FA0Bd,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBA5B5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,oBAAoB;oBAC9B,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,SAAS,EAAE,sDAAsD;AACjE,wBAAA,cAAc,EAAE,WAAW;AAC3B,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,MAAM,EAAE,IAAI;AACZ,wBAAA,KAAK,EAAE,qBAAqB;AAC5B,qBAAA;AACD,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;AAcT,CAAA,CAAA;AACD,iBAAA;8BAES,SAAS,EAAA,CAAA;sBAAjB;gBACQ,KAAK,EAAA,CAAA;sBAAb;gBACQ,EAAE,EAAA,CAAA;sBAAV;gBACQ,YAAY,EAAA,CAAA;sBAApB;gBACQ,OAAO,EAAA,CAAA;sBAAf;;AAOF;;AAEG;MAEU,UAAU,CAAA;AADvB,IAAA,WAAA,GAAA;AAIS,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAE1C;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;;;;;;AAUG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAgB3C;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;AAKG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;;;;AAKG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAUzC;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;AAIG;AACM,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;AAErD;;;;AAIG;AACM,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;AASjD;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;AAIG;AACM,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;AAE7C;;AAEG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAQ;AAE1C;;;;AAIG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAQ;AAEnC,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAChE,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC3C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE5B,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAA,YAAA,EAAeA,QAAM,EAAE,EAAE;AAC/C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC;QAClD,IAAU,CAAA,UAAA,GAA0C,IAAI;QAExD,IAAY,CAAA,YAAA,GAAG,cAAc,EAAE;AAuJvC;AApJA;;;;;AAKG;AACH,IAAA,IAAI,CAAC,OAAa,EAAA;QACjB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;;YAE5C,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACzD,IAAI,CAAC,UAAuC,EAC5C,OAAO,IAAI,IAAI,CAAC,cAAc,EAC9B,IAAI,CAAC,SAAS,CACd;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,SAAS;YAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC;AACpD,YAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC;YACnE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC;AAExD,YAAA,IAAI,CAAC,yBAAyB,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC;AAE3F,YAAA,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;AAC9B,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC;;;;;AAMxE,YAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,EAAE;;;;;;AAOjD,YAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,YAAY,EAAE;;AAGhD,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;AACnC,gBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;AAC9B,oBAAA,WAAW,EAAE,IAAI,CAAC,yBAAyB,EAAE;AAC7C,oBAAA,aAAa,EAAE,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,aAAa;oBACtD,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,oBAAA,SAAS,EAAE,YAAY;oBACvB,mBAAmB,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACtF,iBAAA,CAAC;AAEF,gBAAA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAK;;AAE3B,oBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AAC3B,iBAAC,CAAC;AACF,gBAAA,IAAI,CAAC,eAAe,GAAG,WAAW,CACjC;oBACC,cAAc,EAAE,MAAK;AACpB,wBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;qBAC1B;iBACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;AACF,aAAC,CAAC;YAEF,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE;AAC3F,gBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa;AACtC,aAAA,CAAC;AAEF,YAAA,WAAW,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;;;AAIhD;;;;AAIG;AACH,IAAA,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAA;AAC/B,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,yBAAyB,EAAE,CAAC,eAAe,CAAC,kBAAkB,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAK;AAClD,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI;AACtB,gBAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,gBAAA,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE;AAC/B,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;AACpC,aAAC,CAAC;;;AAIJ;;;;AAIG;IACH,MAAM,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,KAAK,EAAE;;aACN;YACN,IAAI,CAAC,IAAI,EAAE;;;AAIb;;AAEG;IACH,MAAM,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI;;IAG/B,QAAQ,GAAA;QACP,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAC7C,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EACrB,CAAC,IAAI,CAAC,SAAS,EACf,CAAC,IAAI,CAAC,UAAU,CAChB;;IAGF,WAAW,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,YAAY,EAAiB,EAAA;AACpF,QAAA,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAClC,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,CAAC,YAAY,CAAC;;;AAGrE,QAAA,IAAI,CAAC,UAAU,IAAI,YAAY,IAAI,cAAc,KAAK,IAAI,CAAC,WAAW,EAAE,EAAE;YACzE,IAAI,CAAC,KAAK,EAAE;;;IAId,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;;AAGjB,QAAA,IAAI,CAAC,sBAAsB,IAAI;;IAGxB,WAAW,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY;;IAGnE,yBAAyB,GAAA;QAChC,QACC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc;YACxG,IAAI,CAAC,cAAc;;8GA5RT,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAV,UAAU,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAV,UAAU,EAAA,UAAA,EAAA,CAAA;kBADtB,SAAS;mBAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,IAAI,EAAE;8BAWvE,SAAS,EAAA,CAAA;sBAAjB;gBAaQ,SAAS,EAAA,CAAA;sBAAjB;gBAOQ,UAAU,EAAA,CAAA;sBAAlB;gBAOQ,YAAY,EAAA,CAAA;sBAApB;gBASQ,SAAS,EAAA,CAAA;sBAAjB;gBAQQ,aAAa,EAAA,CAAA;sBAArB;gBAQQ,QAAQ,EAAA,CAAA;sBAAhB;gBAQQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAOQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,YAAY,EAAA,CAAA;sBAApB;gBAOQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAOQ,UAAU,EAAA,CAAA;sBAAlB;gBAKS,KAAK,EAAA,CAAA;sBAAd;gBAOS,MAAM,EAAA,CAAA;sBAAf;;;MChMW,gBAAgB,CAAA;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,OAAA,EAAA,CAHlB,UAAU,CAAA,EAAA,OAAA,EAAA,CACV,UAAU,CAAA,EAAA,CAAA,CAAA;+GAER,gBAAgB,EAAA,CAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,UAAU,CAAC;oBACrB,OAAO,EAAE,CAAC,UAAU,CAAC;AACrB,iBAAA;;;ACTD;;;;;AAKG;MAEU,oBAAoB,CAAA;AADjC,IAAA,WAAA,GAAA;QAEC,IAAG,CAAA,GAAA,GAAG,GAAG;QACT,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAS,CAAA,SAAA,GAAG,cAAc;QAC1B,IAAO,CAAA,OAAA,GAAG,KAAK;QAGf,IAAS,CAAA,SAAA,GAAG,KAAK;AAEjB;8GATY,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cADP,MAAM,EAAA,CAAA,CAAA;;2FACnB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACHlC;;AAEG;MAgCU,cAAc,CAAA;AAK1B;;;;AAIG;IACH,IACI,GAAG,CAAC,GAAW,EAAA;QAClB,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;;AAGnD,IAAA,IAAI,GAAG,GAAA;QACN,OAAO,IAAI,CAAC,IAAI;;AA2DjB,IAAA,WAAA,GAAA;AA1EQ,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC;QACvC,IAAO,CAAA,OAAA,GAAG,MAAM,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAiBlE;;;;AAIG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;AAEG;AACM,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;AAEvC;;AAEG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;;;AAOG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;;AAKG;AACM,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;AAEjC;;;;AAIG;QACwB,IAAK,CAAA,KAAA,GAAG,CAAC;AAEpC;;;;AAIG;AACM,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;QAGpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG;;IAG5B,QAAQ,GAAA;QACP,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;;IAG7C,eAAe,GAAA;AACd,QAAA,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,GAAG;;8GApF9B,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,EAhBhB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,eAAA,EAAA,oCAAA,EAAA,cAAA,EAAA,QAAA,EAAA,EAAA,cAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;AAcT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EA3BS,WAAW,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FA6BT,cAAc,EAAA,UAAA,EAAA,CAAA;kBA/B1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,iBAAiB;oBAC3B,OAAO,EAAE,CAAC,WAAW,CAAC;oBACtB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,UAAU;AACjB,wBAAA,IAAI,EAAE,aAAa;AACnB,wBAAA,sBAAsB,EAAE,YAAY;AACpC,wBAAA,eAAe,EAAE,GAAG;AACpB,wBAAA,sBAAsB,EAAE,KAAK;AAC7B,wBAAA,mBAAmB,EAAE,WAAW;AAChC,wBAAA,iBAAiB,EAAE,oCAAoC;AACvD,wBAAA,gBAAgB,EAAE,QAAQ;AAC1B,qBAAA;AACD,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;AAcT,CAAA,CAAA;AACD,iBAAA;wDAYI,GAAG,EAAA,CAAA;sBADN;gBAcQ,QAAQ,EAAA,CAAA;sBAAhB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAKQ,OAAO,EAAA,CAAA;sBAAf;gBAKQ,SAAS,EAAA,CAAA;sBAAjB;gBAUQ,QAAQ,EAAA,CAAA;sBAAhB;gBAQQ,IAAI,EAAA,CAAA;sBAAZ;gBAO0B,KAAK,EAAA,CAAA;sBAA/B,KAAK;uBAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAOhB,MAAM,EAAA,CAAA;sBAAd;;AAeF;;;;AAIG;MAWU,qBAAqB,CAAA;8GAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,iIAFvB,CAA2B,yBAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAEzB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAVjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,UAAU,EAAE,IAAI;oBAChB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,kBAAkB;AACzB,qBAAA;AACD,oBAAA,QAAQ,EAAE,CAA2B,yBAAA,CAAA;AACrC,iBAAA;;;MClIY,oBAAoB,CAAA;8GAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAHtB,cAAc,EAAE,qBAAqB,CACrC,EAAA,OAAA,EAAA,CAAA,cAAc,EAAE,qBAAqB,CAAA,EAAA,CAAA,CAAA;+GAEnC,oBAAoB,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,CAAC,cAAc,EAAE,qBAAqB,CAAC;AAChD,oBAAA,OAAO,EAAE,CAAC,cAAc,EAAE,qBAAqB,CAAC;AAChD,iBAAA;;;ACRD;;;;;AAKG;MAEU,eAAe,CAAA;AAD5B,IAAA,WAAA,GAAA;QAEC,IAAG,CAAA,GAAA,GAAG,EAAE;QACR,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAU,CAAA,UAAA,GAAG,KAAK;QAClB,IAAQ,CAAA,QAAA,GAAoB,CAAC;AAC7B;8GALY,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cADF,MAAM,EAAA,CAAA,CAAA;;2FACnB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;AC4BlC;;AAEG;MAsCU,SAAS,CAAA;AArCtB,IAAA,WAAA,GAAA;QAsCC,IAAQ,CAAA,QAAA,GAA0B,EAAE;AAG5B,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC;AACjC,QAAA,IAAA,CAAA,kBAAkB,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAEtD;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEzB;;AAEG;AACM,QAAA,IAAA,CAAA,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG;AAO/B;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;AAEG;AACM,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;AAU7C;;;;;AAKG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAWzC;;;;AAIG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAU;AAE5C;;;;AAIG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAU;AAE5C;;;;AAIG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,CAAS,IAAI,CAAC;AAErD,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,CAAM,KAAI,GAAG;AACzB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG;AAiHpB;AAhJA;;;;AAIG;IACM,aAAa,CAAC,OAAe,EAAE,GAAW,EAAA;AAClD,QAAA,OAAO,CAAG,EAAA,OAAO,CAAW,QAAA,EAAA,GAAG,EAAE;;IA2BlC,aAAa,GAAA;QACZ,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;;AAGxC,IAAA,KAAK,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACzB,YAAA,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;;AAEzB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;;IAGvB,UAAU,GAAA;QACT,IAAI,CAAC,SAAS,EAAE;;AAGjB,IAAA,WAAW,CAAC,KAAa,EAAA;AACxB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;;;AAIjE,IAAA,aAAa,CAAC,KAAoB,EAAA;AACjC,QAAA,QAAQ,KAAK,CAAC,GAAG;AAChB,YAAA,KAAK,WAAW;AAChB,YAAA,KAAK,WAAW;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC1B;AACD,YAAA,KAAK,SAAS;AACd,YAAA,KAAK,YAAY;gBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC1B;AACD,YAAA,KAAK,MAAM;AACV,gBAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd;AACD,YAAA,KAAK,KAAK;AACT,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACrB;AACD,YAAA;gBACC;;;QAIF,KAAK,CAAC,cAAc,EAAE;;AAGvB,IAAA,WAAW,CAAC,OAAsB,EAAA;AACjC,QAAA,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACpB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;;AAEvB,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YACnB,IAAI,CAAC,UAAU,EAAE;;;IAInB,QAAQ,GAAA;QACP,IAAI,CAAC,cAAc,EAAE;AACrB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG7B,IAAA,gBAAgB,CAAC,EAAuB,EAAA;AACvC,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE;;AAGnB,IAAA,iBAAiB,CAAC,EAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE;;IAGpB,KAAK,GAAA;QACJ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC9B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG7B,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU;;AAG3B,IAAA,MAAM,CAAC,KAAa,EAAE,cAAc,GAAG,IAAI,EAAA;AAC1C,QAAA,MAAM,OAAO,GAAG,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;AAClD,YAAA,IAAI,CAAC,IAAI,GAAG,OAAO;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;QAEhC,IAAI,cAAc,EAAE;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,EAAE;;AAEjB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG7B,IAAA,UAAU,CAAC,KAAK,EAAA;AACf,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC;AACzB,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;;AAG/B,IAAA,YAAY,CAAC,SAAiB,EAAA;AACrC,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CACpB,CAAC,OAAO,EAAE,KAAK,MAAM,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAC/F;;IAGM,UAAU,GAAA;AACjB,QAAA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,cAAc,EAAE;AACrB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;;;IAIhB,cAAc,GAAA;AACrB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;;8GA9LxE,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAT,SAAS,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,cAAA,EAAA,SAAA,EAAA,uBAAA,EAAA,YAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,0BAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,oBAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,8BAAA,EAAA,oBAAA,EAAA,qCAAA,EAAA,oBAAA,EAAA,wBAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,EAAA,SAAA,EAFV,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAwCpF,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,yBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAW,EAxDf,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;AAeT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAhCS,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAmCd,SAAS,EAAA,UAAA,EAAA,CAAA;kBArCrB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,YAAY;oBACtB,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,KAAK,EAAE,eAAe;AACtB,wBAAA,YAAY,EAAE,0BAA0B;AACxC,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,eAAe,EAAE,GAAG;AACpB,wBAAA,sBAAsB,EAAE,KAAK;AAC7B,wBAAA,sBAAsB,EAAE,UAAU;AAClC,wBAAA,uBAAuB,EAAE,8BAA8B;AACvD,wBAAA,sBAAsB,EAAE,qCAAqC;AAC7D,wBAAA,sBAAsB,EAAE,wBAAwB;AAChD,wBAAA,QAAQ,EAAE,cAAc;AACxB,wBAAA,WAAW,EAAE,uBAAuB;AACpC,wBAAA,cAAc,EAAE,SAAS;AACzB,qBAAA;AACD,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;;AAeT,CAAA,CAAA;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAClG,iBAAA;8BAWS,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,GAAG,EAAA,CAAA;sBAAX;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,UAAU,EAAA,CAAA;sBAAlB;gBAOQ,YAAY,EAAA,CAAA;sBAApB;gBAC6C,uBAAuB,EAAA,CAAA;sBAApE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBAQnC,QAAQ,EAAA,CAAA;sBAAhB;gBAOQ,aAAa,EAAA,CAAA;sBAArB;gBASS,KAAK,EAAA,CAAA;sBAAd;gBAOS,KAAK,EAAA,CAAA;sBAAd;gBAOS,UAAU,EAAA,CAAA;sBAAnB;;;MC7IW,eAAe,CAAA;8GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAf,eAAe,EAAA,OAAA,EAAA,CAHjB,SAAS,CAAA,EAAA,OAAA,EAAA,CACT,SAAS,CAAA,EAAA,CAAA,CAAA;+GAEP,eAAe,EAAA,CAAA,CAAA;;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,SAAS,CAAC;oBACpB,OAAO,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;;;ACPe,SAAA,iBAAiB,CAAC,SAAyB,EAAE,EAAgC,EAAA;AAC5F,IAAA,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,EAAE;AAC7B,QAAA,OAAO,IAAI;;IAEZ,OAAO,QAAQ,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAA,CAAA,EAAI,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA,CAAE,CAAC,GAAG,EAAE;AACzE;AAEA,SAAS,mBAAmB,CAAC,SAAkB,EAAE,SAAuB,EAAA;AACvE,IAAA,MAAM,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAA,CAAA,EAAI,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAE,CAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/E,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACxD;AAEO,MAAM,qBAAqB,GAA+B,CAChE,KAMC,EACD,YAAsC,EACtC,GAIC,KACE;AACH,IAAA,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,KAAK;IACrE,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,WAAW,EAAE,SAAS,CAAC;AAEpE,IAAA,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;AACrB,QAAA,GAAG,CAAC,WAAW,GAAG,IAAI;AACtB,QAAA,GAAG,CAAC,WAAW,GAAG,IAAI;AACtB,QAAA,GAAG,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAW;;QAGzC,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,WAAW,EAAE,OAAO,EAAE,eAAe,CAAC;QACpF,IAAI,mBAAmB,EAAE;AACxB,YAAA,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC;YACvC;;;AAIF,IAAA,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;QAC5B,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK;;QAGlD,IAAI,cAAc,EAAE;;AAEnB,YAAA,IAAI,GAAG,CAAC,WAAW,EAAE;gBACpB,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC;AAC5C,gBAAA,GAAG,CAAC,WAAW,GAAG,IAAI;;AAGvB,YAAA,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC;;;aAI9B;AACJ,YAAA,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC;;AAGrC,YAAA,IAAI,GAAG,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;;AAE/D,gBAAA,IAAI,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,KAAK,CAAC,UAAW,CAAC,GAAG,EAAE;AACzD,oBAAA,GAAG,CAAC,WAAW,GAAG,QAAQ;oBAC1B,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;;;qBAGrC;;AAEJ,oBAAA,IAAI,QAAQ,KAAK,gBAAgB,CAAC,CAAC,CAAC,EAAE;AACrC,wBAAA,GAAG,CAAC,WAAW,GAAG,IAAI;AACtB,wBAAA,GAAG,CAAC,gBAAgB,CAAC,KAAK,EAAE;wBAC5B,YAAY,CAAC,EAAE,CAAC;wBAChB;;;yBAII;wBACJ,MAAM,aAAa,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC;wBACxD,GAAG,CAAC,WAAW,GAAG,gBAAgB,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,IAAI;AAC7D,wBAAA,IAAI,GAAG,CAAC,WAAW,EAAE;4BACpB,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;;;;;;;;AAS/C,IAAA,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE;QACxC,IAAI,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACvC,YAAA,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzB;;;AAGH,CAAC;;ACjGD;;;;;;;AAOG;MAEU,kBAAkB,CAAA;AAD/B,IAAA,WAAA,GAAA;QAEC,IAAc,CAAA,cAAA,GAAsB,QAAQ;QAC5C,IAAc,CAAA,cAAA,GAA+B,qBAAqB;AAClE;8GAHY,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cADL,MAAM,EAAA,CAAA,CAAA;;2FACnB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACHlC,MAAM,eAAe,GAAG,CAAC;AAyFzB;;;;;;AAMG;MAIU,mBAAmB,CAAA;AAmB/B,IAAA,WAAA,GAAA;QAlBQ,IAAS,CAAA,SAAA,GAAgC,IAAI;QAE7C,IAAiB,CAAA,iBAAA,GAAuB,IAAI;AAC5C,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAW;AAC/B,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,GAAG,EAAwB;AAEzD,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAU;QAChC,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAO,CAAA,OAAA,GAAG,EAAE;AAEZ,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,kBAAkB,CAAC;AACpC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACjC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;QAC7C,IAAoB,CAAA,oBAAA,GAAG,MAAM,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AACpE,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,oBAAoB;AAC9C,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AAG7B,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;AACrE,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM;AACrB,YAAA,IAAI,CAAC,kBAAkB,EAAE,YAAY,EAAE;AACxC,SAAC,CAAC;;AAGH;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;QACT,OAAO,IAAI,CAAC,OAAO;;AAGpB;;AAEG;AACH,IAAA,IAAI,OAAO,GAAA;QACV,OAAO,IAAI,CAAC,gBAAgB;;AAG7B;;;;;AAKG;AACH,IAAA,KAAK,CAAC,OAA6B,EAAA;AAClC,QAAA,IAAI,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACxC,IAAI,CAAC,QAAQ,EAAE;AAEf,YAAA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,cAAc,EAAE,GAAG;AACrG,gBAAA,GAAG,OAAO;aACV;YACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe;YAC/D,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,IAAI,IAAI,CAAC,oBAAoB;YACxE,IAAI,CAAC,eAAe,GAAG,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc;YACpE,MAAM,gBAAgB,GAAG,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc;YAEtE,MAAM,OAAO,GAAG,EAAE;AAClB,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,oBAAoB,CACxC,CAAC,OAAO,KACP,gBAAgB,CACf;gBACC,OAAO;gBACP,WAAW,EAAE,IAAI,CAAC,iBAAkB;gBACpC,SAAS,EAAE,IAAI,CAAC,UAAU;AAC1B,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE;AACvB,aAAA,EACD,CAAC,MAAc,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAC9C,OAAO,CACP,EACF;AACC,gBAAA,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS;AAC5B,gBAAA,IAAI,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;AACjC,gBAAA,IAAI,SAAS,IAAI,EAAE,SAAS,EAAE,CAAC;AAC/B,aAAA,CACD;;AAGD,YAAA,KAAK,MAAM,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,IAAI,SAAS,IAAI,EAAE,CAAC,CAAC,EAAE;AAC9E,gBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;AAGtB,YAAA,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE;;;AAItC;;AAEG;IACH,IAAI,GAAA;QACH,IAAI,CAAC,QAAQ,EAAE;AACf,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;;AAGvB;;;;;AAKG;IACH,QAAQ,CAAC,QAA8B,EAAE,OAA4B,EAAA;AACpE,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,OAAO,EAAE;AAEnE,QAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC3B,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC;YAE3E,IAAI,eAAe,EAAE;gBACpB,MAAM,QAAQ,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS;AAE7E,gBAAA,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;AAE5D,gBAAA,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS;gBACjD,IAAI,YAAY,GAAG,CAAC;;;AAIpB,gBAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB;AAC/C,gBAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAK;oBACjC,MAAM,mCAAmC,GAAG,MAAK;AAChD,wBAAA,MAAM,oBAAoB,GAAG,UAAU,KAAK,gBAAgB,CAAC,SAAS;wBAEtE,IAAI,oBAAoB,EAAE;AACzB,4BAAA,YAAY,EAAE;;6BACR;4BACN,YAAY,GAAG,CAAC;;wBAGjB,IAAI,CAAC,oBAAoB,KAAK,oBAAoB,IAAI,YAAY,GAAG,eAAe,CAAC,EAAE;AACtF,4BAAA,UAAU,GAAG,gBAAgB,CAAC,SAAS;4BAEvC,qBAAqB,CAAC,mCAAmC,CAAC;;6BACpD;AACN,4BAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;;AAE9D,qBAAC;oBACD,qBAAqB,CAAC,mCAAmC,CAAC;AAC3D,iBAAC,CAAC;;;;AAKL;;;AAGG;AACH,IAAA,OAAO,CAAC,QAA8B,EAAA;AACrC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACpB,YAAA,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC1C;;QAGD,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC;AAE3E,QAAA,IAAI,eAAe,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AAC7D,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC;AACpC,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC;;;AAIzC;;;AAGG;AACH,IAAA,SAAS,CAAC,QAA8B,EAAA;AACvC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACpB,YAAA,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC7C;;QAGD,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC;QAE3E,IAAI,eAAe,EAAE;AACpB,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC;;AAGvC,YAAA,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;AAE3B,YAAA,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AACvC,gBAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;;;;IAKnC,WAAW,GAAA;QACV,IAAI,CAAC,QAAQ,EAAE;;IAGR,QAAQ,GAAA;AACf,QAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;AACvB,QAAA,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE;AAC5B,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB;QACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;AAClD,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI;;8GAnMlB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFnB,MAAM,EAAA,CAAA,CAAA;;2FAEN,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACX,oBAAA,UAAU,EAAE,MAAM;AAClB,iBAAA;;;AC9ED;;;;;;AAMG;MAUU,gBAAgB,CAAA;AAT7B,IAAA,WAAA,GAAA;AAUS,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAC3C,IAAc,CAAA,cAAA,GAAG,MAAM,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QAC7D,IAAa,CAAA,aAAA,GAAoB,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC,mBAAmB,CAAC;AACnF,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QAEhC,IAAS,CAAA,SAAA,GAAG,KAAK;AAkFzB;AAhFA;;;;;;;;;;AAUG;IACH,IAA+B,IAAI,CAAC,IAA6D,EAAA;AAChG,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACxB,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;AACvB,YAAA,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;;AACjB,aAAA,IAAI,IAAI,YAAY,YAAY,EAAE;AACxC,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI;;AACnB,aAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC1B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;;;IActB,QAAQ,GAAA;;AAEP,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAc,KAAI;AAClG,gBAAA,IAAI,MAAM,KAAK,IAAI,CAAC,QAAQ,EAAE;oBAC7B,IAAI,CAAC,SAAS,EAAE;;qBACV;oBACN,IAAI,CAAC,WAAW,EAAE;;AAEnB,gBAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;AACpC,aAAC,CAAC;;;AAIJ;;AAEG;IACH,SAAS,GAAA;AACR,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,EAAE,SAAS,EAAE;;;AAI7D;;AAEG;IACH,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;AACtB,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE;;;AAI/D;;AAEG;IACH,QAAQ,GAAA;QACP,OAAO,IAAI,CAAC,SAAS;;AAGtB;;AAEG;AACH,IAAA,QAAQ,CAAC,OAA4B,EAAA;QACpC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;;8GAtFxC,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAhB,gBAAgB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA,EAAA,UAAA,EAAA,EAAA,cAAA,EAAA,YAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAT5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,IAAI,EAAE;AACL,wBAAA,gBAAgB,EAAE,YAAY;AAC9B,wBAAA,SAAS,EAAE,aAAa;AACxB,qBAAA;AACD,iBAAA;8BAoB+B,IAAI,EAAA,CAAA;sBAAlC,KAAK;uBAAC,kBAAkB;gBAehB,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,MAAM,EAAA,CAAA;sBAAd;;AAmDF;;;;;AAKG;MAKU,gBAAgB,CAAA;AAJ7B,IAAA,WAAA,GAAA;AAKS,QAAA,IAAA,CAAA,aAAa,GAAoB,MAAM,CAAC,mBAAmB,CAAC;AAC5D,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;AAChC,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,GAAG,EAA4B;QAC1C,IAAe,CAAA,eAAA,GAA4B,IAAI;AA0CvD;IAtCA,IAA+B,SAAS,CAAC,SAAuB,EAAA;AAC/D,QAAA,IAAI,CAAC,aAAa,GAAG,SAAS;;AAG/B,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM;;AAEjC,IAAA,IAAI,OAAO,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO;;IAElC,QAAQ,CAAC,QAAgB,EAAE,OAA4B,EAAA;QACtD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC;;AAG/C,IAAA,OAAO,CAAC,EAAU,EAAA;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;;IAGzB,eAAe,GAAA;QACd,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAClG,IAAI,CAAC,WAAW,EAAE;QAElB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,KAAI;AAC5F,YAAA,IAAI,CAAC,eAAe,EAAE,WAAW,EAAE;YACnC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;YACpC,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,SAAS,EAAE;AAChB,gBAAA,IAAI,CAAC,eAAe,GAAG,IAAI;;AAE7B,SAAC,CAAC;;IAGK,WAAW,GAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACjB,QAAA,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;;;8GA3CxB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,+JAMX,gBAAgB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FANrB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,UAAU,EAAE,IAAI;AAChB,iBAAA;8BAOkE,MAAM,EAAA,CAAA;sBAAvE,eAAe;AAAC,gBAAA,IAAA,EAAA,CAAA,gBAAgB,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;gBAEzB,SAAS,EAAA,CAAA;sBAAvC,KAAK;uBAAC,kBAAkB;;AAwC1B;;;;;;AAMG;MAWU,YAAY,CAAA;AAVzB,IAAA,WAAA,GAAA;QAaS,IAAgB,CAAA,gBAAA,GAAkB,IAAI;AACtC,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC;AACtC,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAA0B,UAAU,CAAC,CAAC,aAAa;AA6BlF;;;;AAIG;AACO,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO;AAkD9C;IA5DA,IAAa,MAAM,CAAC,QAAgB,EAAA;AACnC,QAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ;AAChC,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;;AAUxB;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM;;AAG5B;;AAEG;AACH,IAAA,IAAI,OAAO,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO;;IAG7B,eAAe,GAAA;AACd,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,IAAI,EAAE,IAAI,CAAC,cAAc;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxE,SAAA,CAAC;;AAGH;;AAEG;AACH,IAAA,iBAAiB,CAAC,QAA8B,EAAA;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;;AAGnC;;AAEG;AACH,IAAA,mBAAmB,CAAC,QAA8B,EAAA;QACjD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;;AAGrC;;;AAGG;IACH,QAAQ,CAAC,QAA8B,EAAE,OAA4B,EAAA;AACpE,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;AAChC,YAAA,IAAI,IAAI,CAAC,cAAc,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7D,YAAA,GAAG,OAAO;AACV,SAAA,CAAC;;8GAvFS,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAZ,YAAY,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,EAAA,SAAA,EAFb,CAAC,mBAAmB,CAAC,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAEpB,YAAY,EAAA,UAAA,EAAA,CAAA;kBAVxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,IAAI,EAAE;AACL,wBAAA,QAAQ,EAAE,GAAG;AACb,wBAAA,KAAK,EAAE,kBAAkB;AACzB,qBAAA;oBACD,SAAS,EAAE,CAAC,mBAAmB,CAAC;AAChC,iBAAA;8BAaS,cAAc,EAAA,CAAA;sBAAtB;gBAKQ,UAAU,EAAA,CAAA;sBAAlB;gBAKQ,cAAc,EAAA,CAAA;sBAAtB;gBAKQ,SAAS,EAAA,CAAA;sBAAjB;gBAEY,MAAM,EAAA,CAAA;sBAAlB;gBAUS,YAAY,EAAA,CAAA;sBAArB;;AAoDF;;;;AAIG;MAQU,oBAAoB,CAAA;AAPjC,IAAA,WAAA,GAAA;AAQS,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;AAChC,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC;AAYzC;IAJA,eAAe,GAAA;AACd,QAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC;AACvC,QAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;;8GAZhE,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAApB,oBAAoB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAPhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,MAAM,EAAE,IAAI;AACZ,qBAAA;AACD,iBAAA;8BAS+B,EAAE,EAAA,CAAA;sBAAhC,KAAK;uBAAC,sBAAsB;;;MCrTjB,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAHpB,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,gBAAgB,CAAA,EAAA,OAAA,EAAA,CACtE,YAAY,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,gBAAgB,CAAA,EAAA,CAAA,CAAA;+GAEpE,kBAAkB,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,gBAAgB,CAAC;oBACjF,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,gBAAgB,CAAC;AACjF,iBAAA;;;MCTY,OAAO,CAAA;AAKnB,IAAA,WAAA,CAAY,IAAa,EAAE,MAAe,EAAE,MAAe,EAAA;AAC1D,QAAA,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;AAC/B,QAAA,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;;IAGhC,UAAU,CAAC,IAAI,GAAG,CAAC,EAAA;QAClB,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;;AAG3D,IAAA,UAAU,CAAC,IAAY,EAAA;AACtB,QAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,IAAI,EAAE;;aACxC;AACN,YAAA,IAAI,CAAC,IAAI,GAAG,GAAG;;;IAIjB,YAAY,CAAC,IAAI,GAAG,CAAC,EAAA;QACpB,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;;AAGjE,IAAA,YAAY,CAAC,MAAc,EAAA;AAC1B,QAAA,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE;AAChE,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;;aAClC;AACN,YAAA,IAAI,CAAC,MAAM,GAAG,GAAG;;;IAInB,YAAY,CAAC,IAAI,GAAG,CAAC,EAAA;QACpB,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;;AAGjE,IAAA,YAAY,CAAC,MAAc,EAAA;AAC1B,QAAA,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE;AAC3D,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;;aACpC;AACN,YAAA,IAAI,CAAC,MAAM,GAAG,GAAG;;;IAInB,OAAO,CAAC,SAAS,GAAG,IAAI,EAAA;AACvB,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;;IAGlG,QAAQ,GAAA;AACP,QAAA,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;;AAEnE;;ACxDD;;;;;AAKG;MAEU,mBAAmB,CAAA;AADhC,IAAA,WAAA,GAAA;QAEC,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAO,CAAA,OAAA,GAAG,KAAK;QACf,IAAQ,CAAA,QAAA,GAAG,CAAC;QACZ,IAAU,CAAA,UAAA,GAAG,CAAC;QACd,IAAU,CAAA,UAAA,GAAG,CAAC;QACd,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAc,CAAA,cAAA,GAAG,KAAK;QACtB,IAAI,CAAA,IAAA,GAAiC,QAAQ;AAC7C;8GAVY,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cADN,MAAM,EAAA,CAAA,CAAA;;2FACnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;SCJlB,mCAAmC,GAAA;IAClD,OAAO,IAAI,oBAAoB,EAAE;AAClC;AAEA;;;;;;;;;;;;AAYG;MAEmB,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAd,cAAc,EAAA,UAAA,EADV,MAAM,EAAA,UAAA,EAAc,mCAAmC,EAAA,CAAA,CAAA;;2FAC3D,cAAc,EAAA,UAAA,EAAA,CAAA;kBADnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,mCAAmC,EAAE;;AAc7E,MAAO,oBAAqB,SAAQ,cAA6B,CAAA;AACtE;;AAEG;AACH,IAAA,SAAS,CAAC,IAA0B,EAAA;AACnC,QAAA,OAAO,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM;AAC3D,cAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,GAAQ,IAAI;cAChG,IAAI;;AAGR;;AAEG;AACH,IAAA,OAAO,CAAC,IAA0B,EAAA;AACjC,QAAA,OAAO,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM;AAC3D,cAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,GAAQ,IAAI;cAChG,IAAI;;8GAhBI,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC;;;AC/BD;;;;AAIG;MAKmB,iBAAiB,CAAA;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,UAAA,EAH1B,MAAM,EACN,UAAA,EAAA,MAAM,IAAI,wBAAwB,EAAE,EAAA,CAAA,CAAA;;2FAE3B,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJtC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACX,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,UAAU,EAAE,MAAM,IAAI,wBAAwB,EAAE;AAChD,iBAAA;;AAcK,MAAO,wBAAyB,SAAQ,iBAAiB,CAAA;AAD/D,IAAA,WAAA,GAAA;;AAES,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC;AAE3B,QAAA,IAAA,CAAA,QAAQ,GAAG;AAClB,YAAA,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AACvD,YAAA,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;SAC5D;AASD;IAPA,gBAAgB,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAGxB,kBAAkB,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;8GAbZ,wBAAwB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAxB,wBAAwB,EAAA,CAAA,CAAA;;2FAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC;;;ACPD,MAAM,YAAY,GAAG,SAAS;AAE9B;;AAEG;MAmMU,aAAa,CAAA;AAyBzB;;AAEG;IACH,IACI,QAAQ,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;;AAGhE,IAAA,IAAI,QAAQ,GAAA;QACX,OAAO,IAAI,CAAC,SAAS;;AAGtB;;AAEG;IACH,IACI,UAAU,CAAC,IAAY,EAAA;AAC1B,QAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;;AAGpE,IAAA,IAAI,UAAU,GAAA;QACb,OAAO,IAAI,CAAC,WAAW;;AAGxB;;AAEG;IACH,IACI,UAAU,CAAC,IAAY,EAAA;AAC1B,QAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;;AAGpE,IAAA,IAAI,UAAU,GAAA;QACb,OAAO,IAAI,CAAC,WAAW;;AAaxB,IAAA,WAAA,CACkB,OAA4B,EACrC,eAAoC,EACpC,GAAsB,EACvB,IAAuB,EAAA;QAHb,IAAO,CAAA,OAAA,GAAP,OAAO;QAChB,IAAe,CAAA,eAAA,GAAf,eAAe;QACf,IAAG,CAAA,GAAA,GAAH,GAAG;QACJ,IAAI,CAAA,IAAA,GAAJ,IAAI;AAaZ,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,CAAM,KAAI,GAAG;AACzB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG;AAZnB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AAChC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO;AAC9B,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AAChC,QAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU;AACpC,QAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU;AACpC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AAChC,QAAA,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc;AAC5C,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;;AAMzB,IAAA,UAAU,CAAC,KAAK,EAAA;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;AACzD,QAAA,IAAI,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE;AAChH,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE;AACrE,YAAA,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;;AAEtB,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;;AAGxB,IAAA,gBAAgB,CAAC,EAAuB,EAAA;AACvC,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE;;AAGnB,IAAA,iBAAiB,CAAC,EAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE;;AAGpB,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU;;AAG3B;;AAEG;AACH,IAAA,UAAU,CAAC,IAAY,EAAA;AACtB,QAAA,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;AAEG;AACH,IAAA,YAAY,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;AAEG;AACH,IAAA,YAAY,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;AAEG;AACH,IAAA,UAAU,CAAC,MAAc,EAAA;AACxB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK;AACvD,QAAA,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;QACrC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,WAAW,GAAG,EAAE,MAAM,CAAC,IAAI,IAAI,WAAW,KAAK,EAAE,CAAC,CAAC,EAAE;YACnF,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,GAAG,EAAE,CAAC;;aAClC;AACN,YAAA,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC;;QAEpC,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;AAEG;AACH,IAAA,YAAY,CAAC,MAAc,EAAA;QAC1B,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,oBAAoB,EAAE;;AAG5B;;AAEG;AACH,IAAA,YAAY,CAAC,MAAc,EAAA;QAC1B,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,oBAAoB,EAAE;;IAG5B,cAAc,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;;;AAIrB,IAAA,WAAW,CAAC,KAAuB,EAAA;AAClC,QAAA,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;;AAGpD,IAAA,UAAU,CAAC,KAAc,EAAA;AACxB,QAAA,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACpB,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClB,gBAAA,OAAO,SAAS,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;;iBAC9C;AACN,gBAAA,OAAO,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;;;aAEvB;AACN,YAAA,OAAO,SAAS,CAAC,GAAG,CAAC;;;AAIvB,IAAA,YAAY,CAAC,KAAc,EAAA;AAC1B,QAAA,OAAO,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;;IAGhD,UAAU,GAAA;QACT,IAAI,CAAC,SAAS,EAAE;;AAGjB,IAAA,IAAI,WAAW,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO;;AAG7B,IAAA,IAAI,WAAW,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO;;AAG7B,IAAA,WAAW,CAAC,OAAsB,EAAA;QACjC,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACtF,YAAA,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AACrB,YAAA,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;;;IAI1B,oBAAoB,CAAC,OAAO,GAAG,IAAI,EAAA;QAC1C,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,SAAS,EAAE;;QAEjB,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,QAAQ,CACZ,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAC7G;;aACK;AACN,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;;8GA5NvC,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAc,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAb,aAAa,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAFd,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EA1L5F,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,+lBAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAGW,aAAa,EAAA,UAAA,EAAA,CAAA;kBAlMzB,SAAS;+BACC,eAAe,EAAA,QAAA,EACf,gBAAgB,EACd,UAAA,EAAA,IAAI,iBACD,iBAAiB,CAAC,IAAI,EAE3B,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLT,CAAA,CAAA,EAAA,SAAA,EACU,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA,MAAA,EAAA,CAAA,+lBAAA,CAAA,EAAA;4KAe7F,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,OAAO,EAAA,CAAA;sBAAf;gBAMG,QAAQ,EAAA,CAAA;sBADX;gBAaG,UAAU,EAAA,CAAA;sBADb;gBAaG,UAAU,EAAA,CAAA;sBADb;gBAYQ,cAAc,EAAA,CAAA;sBAAtB;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;;;MC/QW,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAnB,mBAAmB,EAAA,OAAA,EAAA,CAHrB,aAAa,CAAA,EAAA,OAAA,EAAA,CACb,aAAa,CAAA,EAAA,CAAA,CAAA;+GAEX,mBAAmB,EAAA,CAAA,CAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,aAAa,CAAC;oBACxB,OAAO,EAAE,CAAC,aAAa,CAAC;AACxB,iBAAA;;;ACiBD;;;;;;AAMG;MAEU,cAAc,CAAA;AAD3B,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAGtC,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAK,CAAA,KAAA,GAAG,IAAI;QACZ,IAAQ,CAAA,QAAA,GAA2B,QAAQ;AAQ3C;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GAZhB,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cADD,MAAM,EAAA,CAAA,CAAA;;2FACnB,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;AClC3B,MAAM,wBAAwB,GAAyB,CAAC,OAAoB,EAAE,SAAe,KAAI;AACvG,IAAA,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO;IAE7B,IAAI,SAAS,EAAE;AACd,QAAA,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;;SACf;AACN,QAAA,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB;;IAGD,MAAM,CAAC,OAAO,CAAC;AACf,IAAA,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC;AAEhC,IAAA,OAAO,MAAK;AACX,QAAA,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;AAC5B,KAAC;AACF,CAAC;AAEM,MAAM,yBAAyB,GAAyB,CAAC,EAAE,SAAS,EAAe,KAAI;AAC7F,IAAA,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;AACxB,IAAA,OAAO,MAAK;AACX,QAAA,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AACpC,KAAC;AACF,CAAC;;ACCD;;;;;AAKG;MAEU,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAd,cAAc,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,kBAAkB,EAAE,UAAU,EAAE,IAAI,EAAE;;AAG7D;;;;;AAKG;MAoCU,QAAQ,CAAA;AA6DpB,IAAA,WAAA,CAA2C,QAAgB,EAAA;QAAhB,IAAQ,CAAA,QAAA,GAAR,QAAQ;AA5D3C,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC;AAChC,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;AAGrC;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;AAGG;AACM,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;AAEnC;;;AAGG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAQzC;;;AAGG;QACgE,IAAgB,CAAA,gBAAA,GAA4B,IAAI;AAEnH;;;;AAIG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAQ;AAE1C;;;;;;;;;;;AAWG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAQ;QAG1C,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ;;IAGxC,kBAAkB,GAAA;AACjB,QAAA,eAAe,CACd;YACC,cAAc,EAAE,MAAK;gBACpB,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,IAAI,EAAE;aACX;SACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;;AAGF,IAAA,WAAW,CAAC,OAAsB,EAAA;AACjC,QAAA,IAAI,UAAU,IAAI,OAAO,EAAE;YAC1B,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,KAAK,EAAE;;;AAId;;;;;;;;;AASG;IACH,IAAI,GAAA;QACH,IAAI,CAAC,aAAa,EAAE;AACpB,QAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,yBAAyB,EAAE;YACvG,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,iBAAiB,EAAE,MAAM;AACzB,SAAA,CAAC;AACF,QAAA,UAAU,CAAC,SAAS,CAAC,MAAK;AACzB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AACnB,SAAC,CAAC;AACF,QAAA,OAAO,UAAU;;AAGlB;;;;;;;;;AASG;IACH,IAAI,GAAA;AACH,QAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,wBAAwB,EAAE;YACtG,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,iBAAiB,EAAE,UAAU;AAC7B,SAAA,CAAC;AACF,QAAA,UAAU,CAAC,SAAS,CAAC,MAAK;AACzB,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AAClB,SAAC,CAAC;AACF,QAAA,OAAO,UAAU;;IAGV,KAAK,GAAA;QACZ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACtC,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;;;IAIrD,aAAa,GAAA;AACpB,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACpB,YAAA,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;AAC7B,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI;;;AAxIZ,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAQ,kBA6DG,WAAW,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA7DtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAQ,EAsCN,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAA,EAAA,cAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAc,EAAU,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAW,EA7DvC,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;AAoBT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,iGAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EA7BS,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAgCd,QAAQ,EAAA,UAAA,EAAA,CAAA;kBAnCpB,SAAS;+BACC,WAAW,EAAA,QAAA,EACX,UAAU,EAAA,OAAA,EACX,CAAC,gBAAgB,CAAC,EACZ,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAC/B,IAAA,EAAA;AACL,wBAAA,IAAI,EAAE,OAAO;AACb,wBAAA,kBAAkB,EAAE,UAAU;AAC9B,wBAAA,aAAa,EAAE,MAAM;AACrB,wBAAA,KAAK,EAAE,OAAO;AACd,wBAAA,cAAc,EAAE,WAAW;qBAC3B,EACS,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;AAoBT,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,iGAAA,CAAA,EAAA;;0BAgEY,SAAS;2BAAC,WAAW;yCA/CzB,SAAS,EAAA,CAAA;sBAAjB;gBAMQ,KAAK,EAAA,CAAA;sBAAb;gBAMQ,QAAQ,EAAA,CAAA;sBAAhB;gBAMQ,MAAM,EAAA,CAAA;sBAAd;gBAMkE,gBAAgB,EAAA,CAAA;sBAAlF,YAAY;uBAAC,cAAc,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE;gBAOvD,KAAK,EAAA,CAAA;sBAAd;gBAcS,MAAM,EAAA,CAAA;sBAAf;;;MC7HW,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAHhB,QAAQ,EAAE,cAAc,CACxB,EAAA,OAAA,EAAA,CAAA,QAAQ,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;+GAEtB,cAAc,EAAA,CAAA,CAAA;;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,CAAC,QAAQ,EAAE,cAAc,CAAC;AACnC,oBAAA,OAAO,EAAE,CAAC,QAAQ,EAAE,cAAc,CAAC;AACnC,iBAAA;;;ACLD;;;;;AAKG;MAEU,gBAAgB,CAAA;AAD7B,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAGtC,IAAS,CAAA,SAAA,GAAmC,IAAI;QAChD,IAAS,CAAA,SAAA,GAAmB,MAAM;AAClC,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAyB,KAAK,OAAO;QACtD,IAAQ,CAAA,QAAA,GAAG,aAAa;QAExB,IAAc,CAAA,cAAA,GAAG,KAAK;QAEtB,IAAS,CAAA,SAAA,GAAG,CAAC;QACb,IAAU,CAAA,UAAA,GAAG,CAAC;AAQd;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GAlBhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cADH,MAAM,EAAA,CAAA,CAAA;;2FACnB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACsBlC,IAAI,MAAM,GAAG,CAAC;MAqBD,gBAAgB,CAAA;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,EAPlB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,4DAAA,EAAA,YAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;AAKT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,8TAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAEW,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAnB5B,SAAS;+BACC,oBAAoB,EAAA,UAAA,EAClB,IAAI,EAAA,eAAA,EACC,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAC/B,IAAA,EAAA;AACL,wBAAA,SAAS,EAAE,sDAAsD;AACjE,wBAAA,cAAc,EAAE,WAAW;AAC3B,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,MAAM,EAAE,IAAI;qBACZ,EAES,QAAA,EAAA;;;;;AAKT,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,8TAAA,CAAA,EAAA;8BAGQ,SAAS,EAAA,CAAA;sBAAjB;gBACQ,EAAE,EAAA,CAAA;sBAAV;gBACQ,YAAY,EAAA,CAAA;sBAApB;;AAGF;;AAEG;MAEU,UAAU,CAAA;AADvB,IAAA,WAAA,GAAA;AAIS,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAE1C;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;;;;;;AAUG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;AAKG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;;;;AAKG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAUzC;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;AAIG;AACM,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;AAErD;;;;AAIG;AACM,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;AASjD;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;AAIG;AACM,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;AAE7C;;AAEG;AACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE;AAEpC;;AAEG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE;AAE7B,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAChE,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC3C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAG5B,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAA,YAAA,EAAe,MAAM,EAAE,EAAE;AAC/C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC;QAClD,IAAU,CAAA,UAAA,GAA0C,IAAI;QAExD,IAAY,CAAA,YAAA,GAAG,cAAc,EAAE;AAmKvC;AAhKA;;;;AAIG;IACH,IACI,UAAU,CAAC,KAAmD,EAAA;AACjE,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK;AACxB,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAC9B,IAAI,CAAC,KAAK,EAAE;;;AAId,IAAA,IAAI,UAAU,GAAA;QACb,OAAO,IAAI,CAAC,WAAW;;AAGxB;;;;;AAKG;AACH,IAAA,IAAI,CAAC,OAAa,EAAA;AACjB,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACjE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACzD,IAAI,CAAC,WAAW,EAChB,OAAO,IAAI,IAAI,CAAC,cAAc,EAC9B,IAAI,CAAC,SAAS,CACd;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,SAAS;YAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC;AAExD,YAAA,IAAI,CAAC,yBAAyB,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC;AAE3F,YAAA,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;AAC9B,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC;;;;;AAMxE,YAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,EAAE;;;;;;AAOjD,YAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,YAAY,EAAE;;AAGhD,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;AACnC,gBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;AAC9B,oBAAA,WAAW,EAAE,IAAI,CAAC,yBAAyB,EAAE;AAC7C,oBAAA,aAAa,EAAE,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,aAAa;oBACtD,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,oBAAA,SAAS,EAAE,YAAY;oBACvB,mBAAmB,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACtF,iBAAA,CAAC;AAEF,gBAAA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAK;;AAE3B,oBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AAC3B,iBAAC,CAAC;AACF,gBAAA,IAAI,CAAC,eAAe,GAAG,WAAW,CACjC;oBACC,cAAc,EAAE,MAAK;AACpB,wBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;qBAC1B;iBACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;AACF,aAAC,CAAC;AAEF,YAAA,YAAY,CACX,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,MAAM,IAAI,CAAC,KAAK,EAAE,EAClB,IAAI,CAAC,MAAM,EACX,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,EACxC,CAAC,IAAI,CAAC,cAAc,CAAC,CACrB;AAED,YAAA,WAAW,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;;;AAIhD;;;;AAIG;AACH,IAAA,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAA;AAC/B,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,yBAAyB,EAAE,CAAC,eAAe,CAAC,kBAAkB,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAK;AAClD,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI;AACtB,gBAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,gBAAA,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE;AAC/B,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;AACpC,aAAC,CAAC;;;AAIJ;;;;AAIG;IACH,MAAM,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,KAAK,EAAE;;aACN;YACN,IAAI,CAAC,IAAI,EAAE;;;AAIb;;AAEG;IACH,MAAM,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI;;IAG/B,QAAQ,GAAA;QACP,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAC7C,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EACrB,CAAC,IAAI,CAAC,SAAS,EACf,CAAC,IAAI,CAAC,UAAU,CAChB;;IAGF,WAAW,CAAC,EAAE,YAAY,EAAiB,EAAA;AAC1C,QAAA,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAClC,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,CAAC,YAAY,CAAC;;;IAItE,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;;AAGjB,QAAA,IAAI,CAAC,sBAAsB,IAAI;;IAGxB,yBAAyB,GAAA;QAChC,QACC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc;YACxG,IAAI,CAAC,cAAc;;8GAzRT,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAV,UAAU,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAV,UAAU,EAAA,UAAA,EAAA,CAAA;kBADtB,SAAS;mBAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE;8BAWvE,SAAS,EAAA,CAAA;sBAAjB;gBAaQ,SAAS,EAAA,CAAA;sBAAjB;gBASQ,SAAS,EAAA,CAAA;sBAAjB;gBAQQ,aAAa,EAAA,CAAA;sBAArB;gBAQQ,QAAQ,EAAA,CAAA;sBAAhB;gBAQQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAOQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,YAAY,EAAA,CAAA;sBAApB;gBAOQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAOQ,UAAU,EAAA,CAAA;sBAAlB;gBAKS,KAAK,EAAA,CAAA;sBAAd;gBAKS,MAAM,EAAA,CAAA;sBAAf;gBAsBG,UAAU,EAAA,CAAA;sBADb;;;MCrLW,gBAAgB,CAAA;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,OAAA,EAAA,CAHlB,UAAU,CAAA,EAAA,OAAA,EAAA,CACV,UAAU,CAAA,EAAA,CAAA,CAAA;+GAER,gBAAgB,EAAA,CAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,UAAU,CAAC;oBACrB,OAAO,EAAE,CAAC,UAAU,CAAC;AACrB,iBAAA;;;ACRD;;;;;;;AAOG;MAiBU,YAAY,CAAA;AAhBzB,IAAA,WAAA,GAAA;AAmBC;;AAEG;QACM,IAAc,CAAA,cAAA,GAAG,eAAe;AAgBzC;;;;;;;;;AASG;QACM,IAAe,CAAA,eAAA,GAAG,IAAI;AA2B/B;AAzBA,IAAA,WAAW,CAAC,OAAsB,EAAA;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;YACzD,OAAO,CAAC,IAAI,CACX,uFAAuF;gBACtF,2DAA2D;AAC3D,gBAAA,qGAAqG,CACtG;AACD,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI;;QAE5B,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAEpC,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAChE,MAAM,WAAW,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACjF,QAAA,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;AAC1G,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,GAAG,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;AAErE,QAAA,MAAM,KAAK,GAAG,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAA,CAAA,EAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AAE9G,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK;;aACZ;YACN,IAAI,MAAM,GAAG,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;;;8GAxDzE,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAY,EAXd,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;AAQT,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,mCAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAGW,YAAY,EAAA,UAAA,EAAA,CAAA;kBAhBxB,SAAS;+BACC,eAAe,EAAA,UAAA,EACb,IAAI,EAAA,eAAA,EACC,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAC3B,QAAA,EAAA;;;;;;;;AAQT,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,mCAAA,CAAA,EAAA;8BASQ,cAAc,EAAA,CAAA;sBAAtB;gBAQ0B,MAAM,EAAA,CAAA;sBAAhC,KAAK;uBAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAME,IAAI,EAAA,CAAA;sBAA9B,KAAK;uBAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAYhB,eAAe,EAAA,CAAA;sBAAvB;;;ACxDK,MAAM,eAAe,GAAG,IAAI,cAAc,CAAgB,sBAAsB,EAAE;AACxF,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,OAAO,EAAE,MAAM,GAAG;AAClB,CAAA,CAAC;AAEF,SAAS,cAAc,CAAC,QAAa,EAAE,UAAU,GAAG,KAAK,EAAA;IACxD,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAgB;AAErE,IAAA,IAAI,OAAO,IAAI,IAAI,IAAI,UAAU,EAAE;AAClC,QAAA,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAEvC,QAAA,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC;AACtC,QAAA,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC;AAC3C,QAAA,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;AAE3C,QAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC;AAExC,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;;AAGnC,IAAA,OAAO,OAAO;AACf;MAGa,IAAI,CAAA;AADjB,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC;AAwBxC;IAtBA,WAAW,GAAA;QACV,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,OAAO,EAAE;;AAEZ,YAAA,OAAO,CAAC,aAAc,CAAC,WAAW,CAAC,OAAO,CAAC;;;AAI7C,IAAA,GAAG,CAAC,OAAe,EAAA;QAClB,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC;AACpD,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;AAEzB,QAAA,IAAI,OAAO,IAAI,IAAI,EAAE;AACpB,YAAA,OAAO,CAAC,WAAW,GAAG,EAAE;AACxB,YAAA,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;AACrD,YAAA,IAAI,KAAK,KAAK,IAAI,EAAE;AACnB,gBAAA,OAAO,EAAE;;iBACH;AACN,gBAAA,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC;;;;8GAtBjB,IAAI,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAJ,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAI,cADS,MAAM,EAAA,CAAA,CAAA;;2FACnB,IAAI,EAAA,UAAA,EAAA,CAAA;kBADhB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACtBlC;;;;;AAKG;MAEU,kBAAkB,CAAA;AAD/B,IAAA,WAAA,GAAA;QAGC,IAAQ,CAAA,QAAA,GAAG,IAAI;QACf,IAAU,CAAA,UAAA,GAAG,IAAI;QACjB,IAAa,CAAA,aAAA,GAAG,KAAK;QACrB,IAAQ,CAAA,QAAA,GAAG,KAAK;QAChB,IAAS,CAAA,SAAA,GAAmB,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,CAAC;AAClF,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAyB,KAAK,OAAO;AACtD;8GARY,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cADL,MAAM,EAAA,CAAA,CAAA;;2FACnB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCiDrB,kBAAkB,CAAA;AAjC/B,IAAA,WAAA,GAAA;QAkCC,IAAS,CAAA,SAAA,GAAG,CAAC;AAQb;;AAEG;QACM,IAAU,CAAA,UAAA,GAAG,IAAI;AAY1B;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,QAAQ;AAc7B;;AAEG;AACe,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAE;AAE1B,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,YAAY,EAAE;AAmD9D;IAjDA,SAAS,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;IAGnE,SAAS,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;;AAGpC,IAAA,UAAU,CAAC,SAAiB,EAAA;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS;QAC1B,IAAI,CAAC,cAAc,EAAE;;IAGtB,IAAI,GAAA;AACH,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;aAC5E;YACN,IAAI,CAAC,SAAS,EAAE;;QAEjB,IAAI,CAAC,cAAc,EAAE;;IAGtB,IAAI,GAAA;AACH,QAAA,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;;AAClC,aAAA,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;aACzD;YACN,IAAI,CAAC,SAAS,EAAE;;QAEjB,IAAI,CAAC,cAAc,EAAE;;IAGtB,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE;;AAGtB,IAAA,MAAM,CAAC,IAAI,EAAA;AACV,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;IAG5B,QAAQ,GAAA;QACP,IAAI,CAAC,WAAW,EAAE;;IAGX,cAAc,GAAA;QACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;8GAhGlF,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,EAtBpB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,EAAA,WAAA,EAAA,yBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,mEAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;EAoBT,EA5BS,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,YAAY,2HAAE,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FA8B5B,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAjC9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;oBACzC,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,aAAa,EAAE,yBAAyB;AACxC,wBAAA,SAAS,EAAE,6DAA6D;AACxE,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,MAAM,EAAE,IAAI;AACZ,qBAAA;AACD,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;AAoBT,CAAA,CAAA;AACD,iBAAA;8BAQS,EAAE,EAAA,CAAA;sBAAV;gBAKQ,UAAU,EAAA,CAAA;sBAAlB;gBAKQ,OAAO,EAAA,CAAA;sBAAf;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;gBAMQ,SAAS,EAAA,CAAA;sBAAjB;gBAKQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,UAAU,EAAA,CAAA;sBAAlB;gBAKiB,WAAW,EAAA,CAAA;sBAA5B,MAAM;uBAAC,QAAQ;gBAEQ,iBAAiB,EAAA,CAAA;sBAAxC,MAAM;uBAAC,cAAc;;;ACxDvB,IAAI,YAAY,GAAG,CAAC;AAEpB;;AAEG;MAoBU,YAAY,CAAA;AAnBzB,IAAA,WAAA,GAAA;AAoBS,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAAiC;AACrE,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,kBAAkB,CAAC;AACpC,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;AACpB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC3C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE5B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC;QACpD,IAAY,CAAA,YAAA,GAAG,cAAc,EAAE;QAE/B,IAAa,CAAA,aAAA,GAAwB,IAAI;AACzC,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ;QAC9B,IAAiB,CAAA,iBAAA,GAAkB,IAAI;QACvC,IAA2B,CAAA,2BAAA,GAAkB,IAAI;QACjD,IAAc,CAAA,cAAA,GAAG,SAAS,CAAQ,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,IAAI,CAC3E,GAAG,CAAC,CAAC,MAAM,KAAM,MAAM,CAAC,MAA2B,CAAC,KAAK,CAAC,CAC1D;AACO,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC;QAClD,IAAU,CAAA,UAAA,GAA4C,IAAI;AAGlE;;;;;;AAMG;QACM,IAAY,CAAA,YAAA,GAAG,KAAK;AAE7B;;;;AAIG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;AAEG;AACM,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;AAyC7C;;;;AAIG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAEnD;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;AAEzC;;;;;;AAMG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAE3C;;;;;AAKG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;AAanD;;;;AAIG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAA+B;QAEtE,IAAgB,CAAA,gBAAA,GAAkB,IAAI;AACtC,QAAA,IAAA,CAAA,OAAO,GAAG,CAAA,cAAA,EAAiB,YAAY,EAAE,EAAE;AAEnC,QAAA,IAAA,CAAA,UAAU,GAAG,MAAK,GAAG;AACrB,QAAA,IAAA,CAAA,SAAS,GAAG,CAAC,CAAM,KAAI,GAAG;AA0PlC;IAxPA,QAAQ,GAAA;QACP,IAAI,CAAC,qBAAqB,EAAE;;IAG7B,WAAW,CAAC,EAAE,YAAY,EAAiB,EAAA;AAC1C,QAAA,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;YAC9C,IAAI,CAAC,yBAAyB,EAAE;YAChC,IAAI,CAAC,qBAAqB,EAAE;;;IAI9B,WAAW,GAAA;QACV,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,yBAAyB,EAAE;;AAGjC,IAAA,gBAAgB,CAAC,EAAuB,EAAA;AACvC,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE;;AAGpB,IAAA,iBAAiB,CAAC,EAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,UAAU,GAAG,EAAE;;AAGrB,IAAA,UAAU,CAAC,KAAK,EAAA;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACtD,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK;;;AAIhC,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AACnC,QAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,UAAU;;AAG1C;;AAEG;IACH,YAAY,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;AACvB,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AACrD,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC;;AAE9C,YAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;;AAIrC;;AAEG;IACH,WAAW,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI;;IAG/B,UAAU,GAAA;AACT,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,UAAU,EAAE;;AAGlB,IAAA,aAAa,CAAC,KAAoB,EAAA;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACxB;;AAGD,QAAA,QAAQ,KAAK,CAAC,GAAG;AAChB,YAAA,KAAK,WAAW;gBACf,KAAK,CAAC,cAAc,EAAE;AACtB,gBAAA,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,IAAI,EAAE;gBAChC,IAAI,CAAC,SAAS,EAAE;gBAChB;AACD,YAAA,KAAK,SAAS;gBACb,KAAK,CAAC,cAAc,EAAE;AACtB,gBAAA,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,IAAI,EAAE;gBAChC,IAAI,CAAC,SAAS,EAAE;gBAChB;AACD,YAAA,KAAK,OAAO;YACZ,KAAK,KAAK,EAAE;gBACX,MAAM,MAAM,GAAG,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;AACpD,gBAAA,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;oBACtB,KAAK,CAAC,cAAc,EAAE;oBACtB,KAAK,CAAC,eAAe,EAAE;AACvB,oBAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;gBAE3B,IAAI,CAAC,WAAW,EAAE;gBAClB;;;;IAKK,UAAU,GAAA;AACjB,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK;YAClD,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;AAC/C,YAAA,IAAI,CAAC,UAAU,GAAG,SAAS;YAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACrG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,QAAgB,MAAM,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC;AAE9G,YAAA,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;AAC7B,gBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAA6B,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;AAC7E,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC;;AAGxE,YAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;AAGnC,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;AACnC,gBAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACpB,oBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;wBAC9B,WAAW,EAAE,IAAI,CAAC,cAAc;AAChC,wBAAA,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa;wBACrD,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,mBAAmB,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACtF,qBAAA,CAAC;AAEF,oBAAA,IAAI,CAAC,eAAe,GAAG,WAAW,CACjC;wBACC,cAAc,EAAE,MAAK;AACpB,4BAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;yBAC1B;qBACD,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;;AAEH,aAAC,CAAC;YAEF,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE;AAC/F,gBAAA,IAAI,CAAC,cAAc;AACnB,gBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa;AACtC,aAAA,CAAC;;;IAII,WAAW,GAAA;QAClB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,MAAK;AACzC,YAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,YAAA,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE;AAC/B,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AACpB,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI;AACtB,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI;AAC7B,SAAC,CAAC;;AAGK,IAAA,aAAa,CAAC,MAAW,EAAA;QAChC,IAAI,gBAAgB,GAAG,KAAK;AAC5B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACpB,YAAA,IAAI,EAAE,MAAM;YACZ,cAAc,EAAE,MAAK;gBACpB,gBAAgB,GAAG,IAAI;aACvB;AACD,SAAA,CAAC;AACF,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;QAEtC,IAAI,CAAC,gBAAgB,EAAE;AACtB,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACvB,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;;AAIhB,IAAA,uBAAuB,CAAC,MAAW,EAAA;AAC1C,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE;;IAGX,SAAS,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,EAAE;YAC7F,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;AAC/D,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAEnF,YAAA,IAAI,kBAAkB,KAAK,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;AAClG,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBACrG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE;oBACnE,IAAI,CAAC,iBAAiB,CAAC,MAAM;AAC7B,oBAAA,YAAY,CAAC,MAAM;AACnB,iBAAA,CAAC;;iBACI;AACN,gBAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;;;;AAK9B,IAAA,mBAAmB,CAAC,IAAS,EAAA;QACpC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC;;AAGhF,IAAA,gBAAgB,CAAC,KAAa,EAAA;QACrC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;;IAGpC,qBAAqB,GAAA;AAC5B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CACxC,GAAG,CAAC,CAAC,KAAK,KAAI;AACb,YAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI;AACrD,YAAA,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI;AACpE,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACjD,CAAC,EACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CACpD;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,KAAI;YACtG,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrC,IAAI,CAAC,WAAW,EAAE;;iBACZ;;gBAEN,IACC,IAAI,CAAC,aAAa;oBAClB,OAAO,CAAC,MAAM,KAAK,CAAC;AACpB,oBAAA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,2BAA2B,EACxE;oBACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,WAAW,EAAE;;qBACZ;oBACN,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC;oBACxD,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC;AAC7C,oBAAA,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AAC5D,oBAAA,IAAI,IAAI,CAAC,eAAe,EAAE;wBACzB,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC;;AAE7D,oBAAA,IAAI,IAAI,CAAC,cAAc,EAAE;wBACxB,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC;;AAEjE,oBAAA,IAAI,CAAC,UAAW,CAAC,QAAQ,CAAC,WAAW,EAAE;;;;AAKvC,oBAAA,IAAI,CAAC,UAAW,CAAC,iBAAiB,CAAC,aAAa,EAAE;oBAElD,IAAI,CAAC,SAAS,EAAE;;;;AAKlB,YAAA,MAAM,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC;AAC1C,YAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,sBAAsB,GAAG,CAAG,EAAA,KAAK,CAAU,OAAA,EAAA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,CAAA,UAAA,CAAY,CAAC;AAC5G,SAAC,CAAC;;IAGK,yBAAyB,GAAA;AAChC,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACvB,YAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;;AAEjC,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI;;8GAnYd,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAZ,YAAY,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,aAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,cAAA,EAAA,SAAA,EAAA,uBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,eAAA,EAAA,cAAA,EAAA,cAAA,EAAA,wBAAA,EAAA,gCAAA,EAAA,4BAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,gCAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAFb,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAEzF,YAAY,EAAA,UAAA,EAAA,CAAA;kBAnBxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,QAAQ,EAAE,cAAc;AACxB,wBAAA,cAAc,EAAE,eAAe;AAC/B,wBAAA,WAAW,EAAE,uBAAuB;AACpC,wBAAA,gBAAgB,EAAE,cAAc;AAChC,wBAAA,cAAc,EAAE,KAAK;AACrB,wBAAA,WAAW,EAAE,KAAK;AAClB,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,0BAA0B,EAAE,4BAA4B;AACxD,wBAAA,8BAA8B,EAAE,kBAAkB;AAClD,wBAAA,kBAAkB,EAAE,gCAAgC;AACpD,wBAAA,sBAAsB,EAAE,eAAe;AACvC,qBAAA;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AACrG,iBAAA;8BA+BS,YAAY,EAAA,CAAA;sBAApB;gBAOQ,SAAS,EAAA,CAAA;sBAAjB;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,UAAU,EAAA,CAAA;sBAAlB;gBAQQ,cAAc,EAAA,CAAA;sBAAtB;gBAaQ,YAAY,EAAA,CAAA;sBAApB;gBASQ,eAAe,EAAA,CAAA;sBAAvB;gBASQ,cAAc,EAAA,CAAA;sBAAtB;gBAOQ,aAAa,EAAA,CAAA;sBAArB;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBASQ,SAAS,EAAA,CAAA;sBAAjB;gBAQQ,aAAa,EAAA,CAAA;sBAArB;gBAWQ,UAAU,EAAA,CAAA;sBAAlB;gBAOS,UAAU,EAAA,CAAA;sBAAnB;;;MCjMW,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAHpB,YAAY,EAAE,YAAY,CAC1B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;+GAExB,kBAAkB,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,iBAAA;;;ACuED;;;;;;;AAOG;MAEU,kBAAkB,CAAA;AAD/B,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;QAKtC,IAAQ,CAAA,QAAA,GAAuB,IAAI;QAKnC,IAAQ,CAAA,QAAA,GAAG,IAAI;QAEf,IAAQ,CAAA,QAAA,GAAuC,OAAO;QACtD,IAAM,CAAA,MAAA,GAAG,KAAK;AAQd;AANA,IAAA,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS;;IAEpD,IAAI,SAAS,CAAC,SAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;8GApBhB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cADL,MAAM,EAAA,CAAA,CAAA;;2FACnB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;AClFlC;;;;;;;AAOG;MACU,kBAAkB,CAAA;AAC9B;;;;AAIG;IACH,KAAK,CAAC,MAAY,EAAA;AAElB;;;;AAIG;IACH,OAAO,CAAC,MAAY,EAAA;AACpB;AAED;;;;AAIG;MACU,eAAe,CAAA;AAO3B;;;;AAIG;AACH,IAAA,IAAI,iBAAiB,GAAA;QACpB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;AACtD,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ;;;AAS/C;;;;AAIG;AACH,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAGjE;;;;;AAKG;AACH,IAAA,IAAI,SAAS,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAGpE;;;;;AAKG;AACH,IAAA,IAAI,MAAM,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;;AAGnC;;;;;;AAMG;AACH,IAAA,IAAI,KAAK,GAAA;QACR,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE;;AAGxD,IAAA,WAAA,CACS,aAA8C,EAC9C,WAAuB,EACvB,gBAAqD,EACrD,cAAiD,EAAA;QAHjD,IAAa,CAAA,aAAA,GAAb,aAAa;QACb,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAc,CAAA,cAAA,GAAd,cAAc;AAlEf,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAO;AAC5B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAO;AAC/B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ;QAkEpC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAW,KAAI;AAC7D,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACrB,SAAC,CAAC;QACF,IAAI,gBAAgB,EAAE;YACrB,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAW,KAAI;AAChE,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACrB,aAAC,CAAC;;QAEH,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AAC7C,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO;AACvB,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM;AACtB,SAAC,CAAC;AACF,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAK,GAAG,CAAC;;AAGjC;;;;AAIG;AACH,IAAA,KAAK,CAAC,MAAY,EAAA;AACjB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACvB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACzB,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrB,IAAI,CAAC,wBAAwB,EAAE;;;AAIzB,IAAA,QAAQ,CAAC,MAAY,EAAA;AAC5B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5B,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,wBAAwB,EAAE;;AAGhC;;;;AAIG;AACH,IAAA,OAAO,CAAC,MAAY,EAAA;AACnB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACzB,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;iBACf;AACN,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE;AACrC,gBAAA,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;AACvB,oBAAA,OAAO,CAAC,IAAI,CACX,CAAC,MAAM,KAAI;AACV,wBAAA,IAAI,MAAM,KAAK,KAAK,EAAE;AACrB,4BAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;AAEvB,qBAAC,EACD,MAAO,GAAC,CACR;;AACK,qBAAA,IAAI,OAAO,KAAK,KAAK,EAAE;AAC7B,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;;;;;IAMjB,wBAAwB,GAAA;QAC/B,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE;QAC3D,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;;AAGzG,QAAA,gBAAgB,CAAC,SAAS,CAAC,MAAK;YAC/B,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ;AACrD,YAAA,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;AACnD,YAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;AAC5B,YAAA,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;AAEpC,YAAA,IAAI,CAAC,aAAa,GAAQ,IAAI;AAC9B,YAAA,IAAI,CAAC,WAAW,GAAQ,IAAI;AAC7B,SAAC,CAAC;;AAGF,QAAA,mBAAmB,CAAC,SAAS,CAAC,MAAK;AAClC,YAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ;AACxD,gBAAA,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;AACnD,gBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;AAC/B,gBAAA,IAAI,CAAC,gBAAgB,GAAQ,IAAI;;AAEnC,SAAC,CAAC;;QAGF,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC,SAAS,CAAC,MAAK;AACzD,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACxB,SAAC,CAAC;;AAEH;;ICxMW;AAAZ,CAAA,UAAY,uBAAuB,EAAA;AAClC,IAAA,uBAAA,CAAA,uBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAc;AACd,IAAA,uBAAA,CAAA,uBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAG;AACJ,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,GAGlC,EAAA,CAAA,CAAA;;MC6BY,oBAAoB,CAAA;AAZjC,IAAA,WAAA,GAAA;AAaS,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAA4B;AAChE,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAMjB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE;AAkCpD;IAhCA,QAAQ,GAAA;AACP,QAAA,eAAe,CACd;AACC,YAAA,cAAc,EAAE,MACf,gBAAgB,CACf,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,cAAc,EACnB,CAAC,OAAoB,EAAE,SAAkB,KAAI;gBAC5C,IAAI,SAAS,EAAE;oBACd,MAAM,CAAC,OAAO,CAAC;;AAEhB,gBAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9B,aAAC,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAC5D;SACF,EACD,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC5B;;IAGF,IAAI,GAAA;QACH,OAAO,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACrG,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,iBAAiB,EAAE,MAAM;AACzB,SAAA,CAAC;;IAGH,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC;;;8GAxCpD,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,4ZARtB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAQA,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,UAAU,EAAE,IAAI;oBAChB,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,IAAI,EAAE;AACL,wBAAA,SAAS,EAAE,mEAAmE;AAC9E,wBAAA,cAAc,EAAE,YAAY;AAC5B,wBAAA,cAAc,EAAE,WAAW;AAC3B,wBAAA,aAAa,EAAE,WAAW;AAC1B,qBAAA;AACD,iBAAA;8BAMS,SAAS,EAAA,CAAA;sBAAjB;gBACQ,aAAa,EAAA,CAAA;sBAArB;gBACQ,MAAM,EAAA,CAAA;sBAAd;gBAEkB,YAAY,EAAA,CAAA;sBAA9B,MAAM;uBAAC,SAAS;;;MCHL,iBAAiB,CAAA;AAd9B,IAAA,WAAA,GAAA;AAeS,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,EAAC,UAAuB,EAAC;AACxC,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE5B,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ;AAC9B,QAAA,IAAA,CAAA,YAAY,GAAmB,IAAI,CAAC;QAKnC,IAAQ,CAAA,QAAA,GAAG,IAAI;QAEf,IAAQ,CAAA,QAAA,GAAuC,OAAO;AAE5C,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE;AAEpD,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,OAAO,EAAQ;AAC3B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,OAAO,EAAQ;AAmH5B;AAjHA,IAAA,OAAO,CAAC,MAAM,EAAA;AACb,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;;IAG/B,QAAQ,GAAA;QACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa;QAChD,eAAe,CAAC,EAAE,cAAc,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;;IAGtF,WAAW,GAAA;QACV,IAAI,CAAC,qBAAqB,EAAE;;IAG7B,IAAI,GAAA;AACH,QAAA,MAAM,OAAO,GAA8B,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE;AAEnG,QAAA,MAAM,oBAAoB,GAAG,gBAAgB,CAC5C,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,CAAC,OAAO,KAAI;AACX,YAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;AACnC,YAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC/B,YAAA,OAAO,MAAM,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;SACvD,EACD,OAAO,CACP;AAED,QAAA,oBAAoB,CAAC,SAAS,CAAC,MAAK;AACnC,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAClB,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvB,SAAC,CAAC;QAEF,IAAI,CAAC,qBAAqB,EAAE;QAC5B,IAAI,CAAC,aAAa,EAAE;AAEpB,QAAA,OAAO,oBAAoB;;IAGpB,KAAK,GAAA;AACZ,QAAA,MAAM,OAAO,GAA8B,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE;AAEvG,QAAA,MAAM,oBAAoB,GAAG,gBAAgB,CAC5C,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,CAAC,OAAoB,EAAE,SAAkB,KAAI;YAC5C,IAAI,SAAS,EAAE;gBACd,MAAM,CAAC,OAAO,CAAC;;YAEhB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC;YACxC,OAAO,MAAM,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;SAChD,EACD,OAAO,CACP;AAED,QAAA,oBAAoB,CAAC,SAAS,CAAC,MAAK;AACnC,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AACjB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACtB,SAAC,CAAC;QAEF,IAAI,CAAC,oBAAoB,EAAE;QAC3B,IAAI,CAAC,SAAS,EAAE;;IAGT,oBAAoB,GAAA;AAC3B,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;AACrC,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAK;AACjC,YAAA,SAAS,CAAgB,aAAa,EAAE,SAAS;iBAC/C,IAAI,CACJ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC;AAEjC,iBAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACpB,gBAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAClB,qBAAqB,CAAC,MAAK;AAC1B,wBAAA,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;AAC5B,4BAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;;AAEjE,qBAAC,CAAC;;AAEJ,aAAC,CAAC;AACJ,SAAC,CAAC;;IAGK,qBAAqB,GAAA;AAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;;IAGb,SAAS,GAAA;AAChB,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;QACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YACpD,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,CAAA,cAAA,CAAgB,CAAgB;YAClF,MAAM,cAAc,GAAG,4BAA4B,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErE,YAAA,MAAM,cAAc,GAAG,aAAa,IAAI,cAAc,IAAI,aAAa;YACvE,cAAc,CAAC,KAAK,EAAE;;;IAIhB,aAAa,GAAA;AACpB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;AAChC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY;AAErC,QAAA,IAAI,cAAc;AAClB,QAAA,IAAI,WAAW,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACtE,cAAc,GAAG,WAAW;;aACtB;YACN,cAAc,GAAG,IAAI;;AAEtB,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAK;YACjC,UAAU,CAAC,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;AACxC,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI;AACzB,SAAC,CAAC;;8GApIS,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,gkBAXnB,gBAAgB,EAAA,QAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAWd,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAd7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,gBAAgB;oBAC1B,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACL,wBAAA,SAAS,EAAE,2EAA2E;AACtF,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,QAAQ,EAAE,IAAI;AACd,wBAAA,mBAAmB,EAAE,MAAM;AAC3B,wBAAA,wBAAwB,EAAE,gBAAgB;AAC1C,wBAAA,yBAAyB,EAAE,iBAAiB;AAC5C,qBAAA;AACD,iBAAA;8BAUS,SAAS,EAAA,CAAA;sBAAjB;gBACQ,cAAc,EAAA,CAAA;sBAAtB;gBACQ,eAAe,EAAA,CAAA;sBAAvB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBACQ,UAAU,EAAA,CAAA;sBAAlB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBAEkB,YAAY,EAAA,CAAA;sBAA9B,MAAM;uBAAC,SAAS;;;MC5BL,iBAAiB,CAAA;AAc7B,IAAA,WAAA,GAAA;AAbQ,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AACxC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;AAE9B,QAAA,IAAA,CAAA,0BAA0B,GAAG,IAAI,OAAO,EAAQ;QAChD,IAAmB,CAAA,mBAAA,GAAwB,IAAI;AAC/C,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC;AAEpD,QAAA,IAAA,CAAA,gBAAgB,GAAG,CAAC,WAAW,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC;AAE3G,QAAA,IAAA,CAAA,eAAe,GAA8C,IAAI,YAAY,EAAE;AAGtF,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;AAE7B,QAAA,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,MAAK;AAC9C,YAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACpB,gBAAA,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,0BAA0B,CAAC;;AAE/F,SAAC,CAAC;;IAGK,iBAAiB,GAAA;AACxB,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB;QACnD,IAAI,kBAAkB,EAAE;AACvB,YAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI;AAC/B,YAAA,kBAAkB,EAAE;;;IAId,cAAc,GAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;;;AAInD,IAAA,IAAI,CAAC,eAAyB,EAAE,OAAY,EAAE,OAA4B,EAAA;AACzE,QAAA,MAAM,WAAW,GAChB,OAAO,CAAC,SAAS,YAAY;cAC1B,OAAO,CAAC;AACV,cAAE,SAAS,CAAC,OAAO,CAAC,SAAS;kBACzB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,SAAU;AACjD,kBAAE,IAAI,CAAC,SAAS,CAAC,IAAI;QACzB,IAAI,CAAC,WAAW,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,CAAsC,mCAAA,EAAA,OAAO,CAAC,SAAS,IAAI,MAAM,CAA6B,2BAAA,CAAA,CAAC;;AAGhH,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,cAAc,EAAE;;AAGtB,QAAA,MAAM,eAAe,GAAG,IAAI,kBAAkB,EAAE;AAChD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,IAAI,eAAe,EAAE,OAAO,EAAE,eAAe,CAAC;QAErG,IAAI,eAAe,GAClB,OAAO,CAAC,QAAQ,KAAK,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,SAAS;AAC3E,QAAA,IAAI,YAAY,GAAoC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC;AAC9G,QAAA,IAAI,eAAe,GAAoB,IAAI,eAAe,CACzD,YAAY,EACZ,UAAU,EACV,eAAe,EACf,OAAO,CAAC,aAAa,CACrB;AAED,QAAA,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC;AAC3C,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;AACrC,QAAA,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE;AACjF,QAAA,eAAe,CAAC,KAAK,GAAG,CAAC,MAAW,KAAI;AACvC,YAAA,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;AAC9B,SAAC;AACD,QAAA,eAAe,CAAC,OAAO,GAAG,CAAC,MAAW,KAAI;AACzC,YAAA,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;AAChC,SAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC;AAEvD,QAAA,IAAI,eAAe,IAAI,eAAe,CAAC,QAAQ,EAAE;YAChD,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC;AAC7D,YAAA,eAAe,CAAC,iBAAiB,CAAC,aAAa,EAAE;;AAElD,QAAA,YAAY,CAAC,iBAAiB,CAAC,aAAa,EAAE;AAC9C,QAAA,OAAO,eAAe;;AAGvB,IAAA,IAAI,cAAc,GAAA;QACjB,OAAO,IAAI,CAAC,eAAe;;AAG5B,IAAA,OAAO,CAAC,MAAY,EAAA;AACnB,QAAA,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC;;IAGpC,gBAAgB,GAAA;AACf,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa;;AAGpB,IAAA,eAAe,CAAC,WAAoB,EAAA;AAC3C,QAAA,IAAI,eAAe,GAAG,eAAe,CAAC,oBAAoB,EAAE;AAC3D,YAAA,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;YAClD,eAAe,EAAE,IAAI,CAAC,SAAS;AAC/B,SAAA,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,CAAC;QACzD,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC/D,QAAA,OAAO,eAAe;;IAGf,sBAAsB,CAAC,WAAoB,EAAE,gBAA0B,EAAA;AAC9E,QAAA,IAAI,YAAY,GAAG,eAAe,CAAC,iBAAiB,EAAE;AACrD,YAAA,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;YAClD,eAAe,EAAE,IAAI,CAAC,SAAS;YAC/B,gBAAgB;AAChB,SAAA,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC;QACtD,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC5D,QAAA,OAAO,YAAY;;IAGZ,kBAAkB,CAAC,cAAiC,EAAE,OAA4B,EAAA;QACzF,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,UAAkB,KAAI;YACpD,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;gBACnC,cAAc,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;;AAElD,SAAC,CAAC;;IAGK,qBAAqB,CAAC,gBAAsC,EAAE,OAA4B,EAAA;QACjG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,UAAkB,KAAI;YACvD,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;gBACnC,gBAAgB,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;;AAEpD,SAAC,CAAC;QACF,gBAAgB,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,KAAK,QAAQ;;AAGhD,IAAA,cAAc,CACrB,eAAyB,EACzB,OAA8C,EAC9C,eAAmC,EAAA;QAEnC,IAAI,CAAC,OAAO,EAAE;AACb,YAAA,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC;;AACnB,aAAA,IAAI,OAAO,YAAY,WAAW,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,eAAe,CAAC;;AACtD,aAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;;aAChC;YACN,OAAO,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,OAAO,EAAE,eAAe,CAAC;;;IAIrE,sBAAsB,CAAC,WAA6B,EAAE,eAAmC,EAAA;AAChG,QAAA,MAAM,OAAO,GAAG;AACf,YAAA,SAAS,EAAE,eAAe;AAC1B,YAAA,KAAK,CAAC,MAAM,EAAA;AACX,gBAAA,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;aAC7B;AACD,YAAA,OAAO,CAAC,MAAM,EAAA;AACb,gBAAA,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;aAC/B;SACD;QACD,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC;AACvD,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,OAAO,IAAI,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;;AAG5C,IAAA,iBAAiB,CAAC,OAAe,EAAA;AACxC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAG,EAAA,OAAO,CAAE,CAAA,CAAC;QAC7D,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;;AAG7B,IAAA,oBAAoB,CAC3B,eAAyB,EACzB,aAAwB,EACxB,OAA2B,EAAA;AAE3B,QAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC;YACvC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;AAC/D,YAAA,MAAM,EAAE,eAAe;AACvB,SAAA,CAAC;AACF,QAAA,MAAM,YAAY,GAAG,eAAe,CAAC,aAAa,EAAE;AACnD,YAAA,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;YAClD,eAAe;AACf,SAAA,CAAC;AACF,QAAA,MAAM,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC,aAAa;QAC7D,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC;AACtD,QAAA,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;;AAG1E,IAAA,qBAAqB,CAAC,eAAgC,EAAA;QAC7D,MAAM,sBAAsB,GAAG,MAAK;AACnC,YAAA,IAAI,CAAC,aAAa,GAAG,SAAS;YAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;AAC9C,SAAC;AACD,QAAA,IAAI,CAAC,aAAa,GAAG,eAAe;QACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC7C,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,sBAAsB,CAAC;;AAGpE,IAAA,kBAAkB,CAAC,YAA6C,EAAA;AACvE,QAAA,IAAI,CAAC,UAAU,GAAG,YAAY;AAC9B,QAAA,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE;AAEtC,QAAA,YAAY,CAAC,SAAS,CAAC,MAAK;AAC3B,YAAA,IAAI,CAAC,UAAU,GAAG,SAAS;AAC3B,YAAA,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE;AACvC,SAAC,CAAC;;8GA/MS,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cADJ,MAAM,EAAA,CAAA,CAAA;;2FACnB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACpBlC;;;;;;;AAOG;MAEU,YAAY,CAAA;AADzB,IAAA,WAAA,GAAA;AAES,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC5B,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC3C,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,kBAAkB,CAAC;AAqC5C;AAnCA;;;;;;;;;AASG;AACH,IAAA,IAAI,CAAC,OAAY,EAAE,OAAA,GAA+B,EAAE,EAAA;AACnD,QAAA,MAAM,eAAe,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,EAAE;AAC1F,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,eAAe,CAAC;;AAG3E;;AAEG;AACH,IAAA,IAAI,cAAc,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc;;AAG3C;;AAEG;AACH,IAAA,OAAO,CAAC,MAAY,EAAA;AACnB,QAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;;AAGrC;;AAEG;IACH,gBAAgB,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;;8GAtCnC,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cADC,MAAM,EAAA,CAAA,CAAA;;2FACnB,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCLrB,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAlB,kBAAkB,EAAA,CAAA,CAAA;+GAAlB,kBAAkB,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,QAAQ;mBAAC,EAAE;;;ACoKZ,MAAM,WAAW,GAAG;IACnB,kBAAkB;IAClB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,oBAAoB;IACpB,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,gBAAgB;IAChB,kBAAkB;CAClB;MAGY,SAAS,CAAA;8GAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAT,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,YArBrB,kBAAkB;YAClB,cAAc;YACd,iBAAiB;YACjB,iBAAiB;YACjB,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,YAAY;YACZ,kBAAkB;YAClB,mBAAmB;YACnB,gBAAgB;YAChB,oBAAoB;YACpB,eAAe;YACf,kBAAkB;YAClB,mBAAmB;YACnB,cAAc;YACd,gBAAgB;AAChB,YAAA,kBAAkB,aAjBlB,kBAAkB;YAClB,cAAc;YACd,iBAAiB;YACjB,iBAAiB;YACjB,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,YAAY;YACZ,kBAAkB;YAClB,mBAAmB;YACnB,gBAAgB;YAChB,oBAAoB;YACpB,eAAe;YACf,kBAAkB;YAClB,mBAAmB;YACnB,cAAc;YACd,gBAAgB;YAChB,kBAAkB,CAAA,EAAA,CAAA,CAAA;+GAIN,SAAS,EAAA,OAAA,EAAA,CADD,WAAW,EApB/B,kBAAkB;YAClB,cAAc;YACd,iBAAiB;YACjB,iBAAiB;YACjB,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,YAAY;YACZ,kBAAkB;YAClB,mBAAmB;YACnB,gBAAgB;YAChB,oBAAoB;YACpB,eAAe;YACf,kBAAkB;YAClB,mBAAmB;YACnB,cAAc;YACd,gBAAgB;YAChB,kBAAkB,CAAA,EAAA,CAAA,CAAA;;2FAIN,SAAS,EAAA,UAAA,EAAA,CAAA;kBADrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE;;;AChMxD;;AAEG;;;;"}