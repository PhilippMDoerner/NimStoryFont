import { Component, ViewChild, ViewEncapsulation } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class FormlyWrapperAddons extends FieldWrapper {
    constructor(hostContainerRef) {
        super();
        this.hostContainerRef = hostContainerRef;
    }
    set content(templateRef) {
        if (templateRef && this.hostContainerRef) {
            this.hostContainerRef.createEmbeddedView(templateRef);
        }
    }
    addonRightClick($event) {
        this.props.addonRight.onClick?.(this.field, $event);
    }
    addonLeftClick($event) {
        this.props.addonLeft.onClick?.(this.field, $event);
    }
}
FormlyWrapperAddons.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: FormlyWrapperAddons, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });
FormlyWrapperAddons.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: FormlyWrapperAddons, selector: "formly-wrapper-addons", viewQueries: [{ propertyName: "content", first: true, predicate: ["fieldTypeTemplate"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #fieldTypeTemplate>\n  <div class=\"input-group\" [class.has-validation]=\"showError\">\n    <div\n      class=\"input-group-text\"\n      *ngIf=\"props.addonLeft\"\n      [class.input-group-btn]=\"props.addonLeft.onClick\"\n      (click)=\"addonLeftClick($event)\"\n    >\n      <i [ngClass]=\"props.addonLeft.class\" *ngIf=\"props.addonLeft.class\"></i>\n      <span *ngIf=\"props.addonLeft.text\">{{ props.addonLeft.text }}</span>\n    </div>\n    <ng-container #fieldComponent></ng-container>\n    <div\n      class=\"input-group-text\"\n      *ngIf=\"props.addonRight\"\n      [class.input-group-btn]=\"props.addonRight.onClick\"\n      (click)=\"addonRightClick($event)\"\n    >\n      <i [ngClass]=\"props.addonRight.class\" *ngIf=\"props.addonRight.class\"></i>\n      <span *ngIf=\"props.addonRight.text\">{{ props.addonRight.text }}</span>\n    </div>\n  </div>\n</ng-template>\n", styles: ["formly-wrapper-form-field .input-group-btn{cursor:pointer}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: FormlyWrapperAddons, decorators: [{
            type: Component,
            args: [{ selector: 'formly-wrapper-addons', encapsulation: ViewEncapsulation.None, template: "<ng-template #fieldTypeTemplate>\n  <div class=\"input-group\" [class.has-validation]=\"showError\">\n    <div\n      class=\"input-group-text\"\n      *ngIf=\"props.addonLeft\"\n      [class.input-group-btn]=\"props.addonLeft.onClick\"\n      (click)=\"addonLeftClick($event)\"\n    >\n      <i [ngClass]=\"props.addonLeft.class\" *ngIf=\"props.addonLeft.class\"></i>\n      <span *ngIf=\"props.addonLeft.text\">{{ props.addonLeft.text }}</span>\n    </div>\n    <ng-container #fieldComponent></ng-container>\n    <div\n      class=\"input-group-text\"\n      *ngIf=\"props.addonRight\"\n      [class.input-group-btn]=\"props.addonRight.onClick\"\n      (click)=\"addonRightClick($event)\"\n    >\n      <i [ngClass]=\"props.addonRight.class\" *ngIf=\"props.addonRight.class\"></i>\n      <span *ngIf=\"props.addonRight.text\">{{ props.addonRight.text }}</span>\n    </div>\n  </div>\n</ng-template>\n", styles: ["formly-wrapper-form-field .input-group-btn{cursor:pointer}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { content: [{
                type: ViewChild,
                args: ['fieldTypeTemplate', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy91aS9ib290c3RyYXAvYWRkb25zL3NyYy9hZGRvbnMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL3VpL2Jvb3RzdHJhcC9hZGRvbnMvc3JjL2FkZG9ucy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFlLFNBQVMsRUFBb0IsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkcsT0FBTyxFQUFzQyxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBc0JwRixNQUFNLE9BQU8sbUJBQW9CLFNBQVEsWUFBMEM7SUFPakYsWUFBb0IsZ0JBQW1DO1FBQ3JELEtBQUssRUFBRSxDQUFDO1FBRFUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFtQjtJQUV2RCxDQUFDO0lBUkQsSUFBc0QsT0FBTyxDQUFDLFdBQTZCO1FBQ3pGLElBQUksV0FBVyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN4QyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDdkQ7SUFDSCxDQUFDO0lBTUQsZUFBZSxDQUFDLE1BQVc7UUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsY0FBYyxDQUFDLE1BQVc7UUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNyRCxDQUFDOztpSEFqQlUsbUJBQW1CO3FHQUFuQixtQkFBbUIsZ05DdkJoQyx3NEJBdUJBOzRGREFhLG1CQUFtQjtrQkFOL0IsU0FBUzsrQkFDRSx1QkFBdUIsaUJBR2xCLGlCQUFpQixDQUFDLElBQUk7dUdBR2lCLE9BQU87c0JBQTVELFNBQVM7dUJBQUMsbUJBQW1CLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybWx5RmllbGRDb25maWcsIEZpZWxkVHlwZUNvbmZpZywgRmllbGRXcmFwcGVyIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlGaWVsZFByb3BzIH0gZnJvbSAnQG5neC1mb3JtbHkvYm9vdHN0cmFwL2Zvcm0tZmllbGQnO1xuXG5pbnRlcmZhY2UgQWRkb25zUHJvcHMgZXh0ZW5kcyBGb3JtbHlGaWVsZFByb3BzIHtcbiAgYWRkb25SaWdodD86IHtcbiAgICBvbkNsaWNrPzogKGZpZWxkOiBGb3JtbHlGaWVsZENvbmZpZywgZXZlbnQ/OiBhbnkpID0+IHZvaWQ7XG4gICAgY2xhc3M/OiBzdHJpbmc7XG4gICAgdGV4dD86IHN0cmluZztcbiAgfTtcbiAgYWRkb25MZWZ0Pzoge1xuICAgIG9uQ2xpY2s/OiAoZmllbGQ6IEZvcm1seUZpZWxkQ29uZmlnLCBldmVudD86IGFueSkgPT4gdm9pZDtcbiAgICBjbGFzcz86IHN0cmluZztcbiAgICB0ZXh0Pzogc3RyaW5nO1xuICB9O1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtbHktd3JhcHBlci1hZGRvbnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vYWRkb25zLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vYWRkb25zLmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seVdyYXBwZXJBZGRvbnMgZXh0ZW5kcyBGaWVsZFdyYXBwZXI8RmllbGRUeXBlQ29uZmlnPEFkZG9uc1Byb3BzPj4ge1xuICBAVmlld0NoaWxkKCdmaWVsZFR5cGVUZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlIH0pIHNldCBjb250ZW50KHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgaWYgKHRlbXBsYXRlUmVmICYmIHRoaXMuaG9zdENvbnRhaW5lclJlZikge1xuICAgICAgdGhpcy5ob3N0Q29udGFpbmVyUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0ZW1wbGF0ZVJlZik7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0Q29udGFpbmVyUmVmPzogVmlld0NvbnRhaW5lclJlZikge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBhZGRvblJpZ2h0Q2xpY2soJGV2ZW50OiBhbnkpIHtcbiAgICB0aGlzLnByb3BzLmFkZG9uUmlnaHQub25DbGljaz8uKHRoaXMuZmllbGQsICRldmVudCk7XG4gIH1cblxuICBhZGRvbkxlZnRDbGljaygkZXZlbnQ6IGFueSkge1xuICAgIHRoaXMucHJvcHMuYWRkb25MZWZ0Lm9uQ2xpY2s/Lih0aGlzLmZpZWxkLCAkZXZlbnQpO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI2ZpZWxkVHlwZVRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIiBbY2xhc3MuaGFzLXZhbGlkYXRpb25dPVwic2hvd0Vycm9yXCI+XG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJpbnB1dC1ncm91cC10ZXh0XCJcbiAgICAgICpuZ0lmPVwicHJvcHMuYWRkb25MZWZ0XCJcbiAgICAgIFtjbGFzcy5pbnB1dC1ncm91cC1idG5dPVwicHJvcHMuYWRkb25MZWZ0Lm9uQ2xpY2tcIlxuICAgICAgKGNsaWNrKT1cImFkZG9uTGVmdENsaWNrKCRldmVudClcIlxuICAgID5cbiAgICAgIDxpIFtuZ0NsYXNzXT1cInByb3BzLmFkZG9uTGVmdC5jbGFzc1wiICpuZ0lmPVwicHJvcHMuYWRkb25MZWZ0LmNsYXNzXCI+PC9pPlxuICAgICAgPHNwYW4gKm5nSWY9XCJwcm9wcy5hZGRvbkxlZnQudGV4dFwiPnt7IHByb3BzLmFkZG9uTGVmdC50ZXh0IH19PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxuZy1jb250YWluZXIgI2ZpZWxkQ29tcG9uZW50PjwvbmctY29udGFpbmVyPlxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dFwiXG4gICAgICAqbmdJZj1cInByb3BzLmFkZG9uUmlnaHRcIlxuICAgICAgW2NsYXNzLmlucHV0LWdyb3VwLWJ0bl09XCJwcm9wcy5hZGRvblJpZ2h0Lm9uQ2xpY2tcIlxuICAgICAgKGNsaWNrKT1cImFkZG9uUmlnaHRDbGljaygkZXZlbnQpXCJcbiAgICA+XG4gICAgICA8aSBbbmdDbGFzc109XCJwcm9wcy5hZGRvblJpZ2h0LmNsYXNzXCIgKm5nSWY9XCJwcm9wcy5hZGRvblJpZ2h0LmNsYXNzXCI+PC9pPlxuICAgICAgPHNwYW4gKm5nSWY9XCJwcm9wcy5hZGRvblJpZ2h0LnRleHRcIj57eyBwcm9wcy5hZGRvblJpZ2h0LnRleHQgfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==