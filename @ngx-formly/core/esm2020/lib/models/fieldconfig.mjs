export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"fieldconfig.js","sourceRoot":"","sources":["../../../../../../src/core/src/lib/models/fieldconfig.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  FormGroup,\n  FormArray,\n  AbstractControl,\n  FormGroupDirective,\n  ValidatorFn,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { Subject, Observable } from 'rxjs';\nimport { FieldType } from '../templates/field.type';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { ValidationMessageOption } from '../models';\nimport { Type } from '@angular/core';\n\ntype FieldExpression<T = any> = string | ((field: FormlyFieldConfig) => T) | Observable<T>;\ntype FieldExpressions = { [property: string]: FieldExpression } & {\n  className?: FieldExpression<string>;\n  hide?: FieldExpression<boolean>;\n  'props.disabled'?: FieldExpression<boolean>;\n  'props.required'?: FieldExpression<boolean>;\n};\n\nexport interface FormlyFieldConfig<Props = FormlyFieldProps & { [additionalProperties: string]: any }> {\n  /**\n   * The key that relates to the model. This will link the field value to the model\n   */\n  key?: string | number | (string | number)[];\n\n  /**\n   * This should be a formly-field type added either by you or a plugin. More information over at Creating Formly Fields.\n   */\n  type?: string | Type<FieldType>;\n\n  /**\n   * Use `defaultValue` to initialize it the model. If this is provided and the value of the model at compile-time is undefined, then the value of the model will be assigned to `defaultValue`.\n   */\n  defaultValue?: any;\n\n  /**\n   * This allows you to specify the `id` of your field. Note, the `id` is generated if not set.\n   */\n  id?: string;\n\n  /**\n   * If you wish, you can specify a specific `name` for your field. This is useful if you're posting the form to a server using techniques of yester-year.\n   */\n  name?: string;\n\n  /**\n   * This is reserved for the templates. Any template-specific options go in here. Look at your specific template implementation to know the options required for this.\n   */\n  props?: Props;\n\n  /** @deprecated Use `props` instead. */\n  templateOptions?: FormlyTemplateOptions;\n\n  /**\n   * An object with a few useful properties\n   * - `validation.messages`: A map of message names that will be displayed when the field has errors.\n   * - `validation.show`: A boolean you as the developer can set to force displaying errors whatever the state of field. This is useful when you're trying to call the user's attention to some fields for some reason.\n   */\n  validation?: {\n    messages?: { [messageProperties: string]: ValidationMessageOption['message'] } & {\n      /** @deprecated use `minLength` */\n      minlength?: ValidationMessageOption['message'];\n\n      /** @deprecated use `maxLength` */\n      maxlength?: ValidationMessageOption['message'];\n    };\n    show?: boolean;\n    [additionalProperties: string]: any;\n  };\n\n  /**\n   * Used to set validation rules for a particular field.\n   * Should be an object of key - value pairs. The value can either be an expression to evaluate or a function to run.\n   * Each should return a boolean value, returning true when the field is valid. See Validation for more information.\n   */\n  validators?: FormlyValidation<ValidatorFn, boolean>;\n\n  /**\n   * Use this one for anything that needs to validate asynchronously.\n   * Pretty much exactly the same as the validators api, except it must be a function that returns a promise.\n   */\n  asyncValidators?: FormlyValidation<AsyncValidatorFn, Promise<boolean> | Observable<boolean>>;\n\n  /**\n   * Can be set instead of `type` to render custom html content.\n   */\n  template?: string;\n\n  /**\n   *  It is expected to be the name of the wrappers.\n   *  The formly field template will be wrapped by the first wrapper, then the second, then the third, etc.\n   *  You can also specify these as part of a type (which is the recommended approach).\n   */\n  wrappers?: (string | Type<FieldWrapper>)[];\n\n  /**\n   * Whether to hide the field. Defaults to false. If you wish this to be conditional use `expressions: { hide: ... }`\n   */\n  hide?: boolean;\n\n  /**\n   * Whether to reset the value on hide or not. Defaults to `true`.\n   */\n  resetOnHide?: boolean;\n\n  /**\n   * Conditionally hiding Field based on values from other Fields\n   * @deprecated use `expressions: { hide: ... }`\n   */\n  hideExpression?: boolean | string | ((model: any, formState: any, field?: FormlyFieldConfig) => boolean);\n\n  /**\n   * An object where the key is a property to be set on the main field config and the value is an expression used to assign that property.\n   * @deprecated use `expressions`\n   */\n  expressionProperties?: {\n    [property: string]: string | ((model: any, formState: any, field?: FormlyFieldConfig) => any) | Observable<any>;\n  };\n\n  /**\n   * An object where the key is a property to be set on the main field config and the value is an expression used to assign that property.\n   */\n  expressions?: FieldExpressions;\n\n  /**\n   * You can specify your own class that will be applied to the `formly-field` component.\n   */\n  className?: string;\n\n  /**\n   * Specify your own class that will be applied to the `formly-group` component.\n   */\n  fieldGroupClassName?: string;\n\n  /**\n   * A field group is a way to group fields together, making advanced layout very simple.\n   * It can also be used to group fields that are associated with the same model (useful if it's different than the model for the rest of the fields).\n   */\n  fieldGroup?: FormlyFieldConfig[];\n\n  fieldArray?: FormlyFieldConfig | ((field: FormlyFieldConfig) => FormlyFieldConfig);\n\n  /**\n   * Whether to focus or blur the element field. Defaults to false. If you wish this to be conditional use `expressions`\n   */\n  focus?: boolean;\n\n  /**\n   * An object with a few useful properties to control the model changes\n   * - `debounce`: integer value which contains the debounce model update value in milliseconds. A value of 0 triggers an immediate update.\n   * - `updateOn`: string event value that instructs when the control should be updated\n   */\n  modelOptions?: {\n    debounce?: {\n      default: number;\n    };\n    // @see https://angular.io/api/forms/AbstractControl#updateOn\n    updateOn?: 'change' | 'blur' | 'submit';\n  };\n\n  hooks?: FormlyHookConfig;\n\n  /**\n   * Array of functions to execute, as a pipeline, whenever the model updates, usually via user input.\n   */\n  parsers?: ((value: any) => any)[];\n\n  /**\n   * Returns child field by key name\n   */\n  get?: (key: FormlyFieldConfig['key']) => FormlyFieldConfig;\n\n  /**\n   * The model that stores all the data, where the model[key] is the value of the field\n   */\n  readonly model?: any;\n\n  /**\n   * The parent field.\n   */\n  readonly parent?: FormlyFieldConfig;\n\n  /**\n   * The form options.\n   */\n  readonly options?: FormlyFormOptions;\n\n  /**\n   * The parent form.\n   */\n  readonly form?: FormGroup | FormArray;\n\n  /**\n   * This is the [FormControl](https://angular.io/api/forms/FormControl) for the field.\n   * It provides you more control like running validators, calculating status, and resetting state.\n   */\n  readonly formControl?: AbstractControl;\n\n  /** @deprecated */\n  optionsTypes?: string[];\n}\n\nexport type FormlyAttributeEvent = (field: FormlyFieldConfig, event?: any) => void;\n\n/**  @deprecated */\nexport interface FormlyTemplateOptions extends FormlyFieldProps {\n  [additionalProperties: string]: any;\n}\n\nexport interface FormlyFieldProps {\n  type?: string;\n  label?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  options?: any[] | Observable<any[]>;\n  rows?: number;\n  cols?: number;\n  description?: string;\n  hidden?: boolean;\n  max?: number;\n  min?: number;\n\n  minLength?: number;\n  /** @deprecated use `minLength` */\n  minlength?: number;\n\n  maxLength?: number;\n  /** @deprecated use `maxLength` */\n  maxlength?: number;\n\n  pattern?: string | RegExp;\n  required?: boolean;\n  tabindex?: number;\n  readonly?: boolean;\n  attributes?: { [key: string]: string | number };\n  step?: number;\n  focus?: FormlyAttributeEvent;\n  blur?: FormlyAttributeEvent;\n  keyup?: FormlyAttributeEvent;\n  keydown?: FormlyAttributeEvent;\n  click?: FormlyAttributeEvent;\n  change?: FormlyAttributeEvent;\n  keypress?: FormlyAttributeEvent;\n}\n\nexport type FormlyHookFn = (field: FormlyFieldConfig) => void;\n\nexport interface FormlyHookConfig {\n  onInit?: FormlyHookFn | ((field: FormlyFieldConfig) => Observable<any>);\n  onChanges?: FormlyHookFn;\n  afterContentInit?: FormlyHookFn;\n  afterViewInit?: FormlyHookFn;\n  onDestroy?: FormlyHookFn;\n}\n\nexport interface FormlyFormOptions {\n  updateInitialValue?: (model?: any) => void;\n  resetModel?: (model?: any) => void;\n  formState?: any;\n  fieldChanges?: Subject<FormlyValueChangeEvent>;\n  showError?: (field: FieldType) => boolean;\n  build?: (field?: FormlyFieldConfig) => FormlyFieldConfig;\n  checkExpressions?: (field: FormlyFieldConfig) => void;\n  detectChanges?: (field: FormlyFieldConfig) => void;\n  parentForm?: FormGroupDirective | null;\n}\n\nexport interface FormlyValueChangeEvent {\n  field: FormlyFieldConfig;\n  type: string;\n  value: any;\n  [meta: string]: any;\n}\n\ninterface FormlyValidation<T, R> {\n  validation?: (string | T)[] | any;\n  [key: string]: FormlyValidatorFn<R> | FormlyValidatorExpressionFn<R> | any;\n}\ntype FormlyValidatorFn<T> = (control: AbstractControl, field: FormlyFieldConfig) => T;\n\ninterface FormlyValidatorExpressionFn<T> {\n  expression: FormlyValidatorFn<T>;\n  message: string | ((error: any, field: FormlyFieldConfig) => string | Observable<string>);\n}\n"]}