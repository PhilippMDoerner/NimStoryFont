{"version":3,"file":"ngx-formly-core-preset.mjs","sources":["../../../../src/core/preset/src/preset-substitution.extension.ts","../../../../src/core/preset/src/preset.module.ts","../../../../src/core/preset/src/ngx-formly-core-preset.ts"],"sourcesContent":["import { FormlyConfig, FormlyExtension, FormlyFieldConfig, ɵreverseDeepMerge } from '@ngx-formly/core';\nexport class PresetSubstitutionExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  prePopulate(field: FormlyFieldConfig): void {\n    if (!(typeof field.type === 'string') || field.type[0] !== '#') {\n      return;\n    }\n    const configId = new RegExp(/^#(.+)$/).exec(field.type)?.[1];\n    const preset = this.formlyConfig.presets[configId];\n\n    const { type: _, ...fieldConfigWithoutType } = field;\n    if (preset) {\n      const merged = ɵreverseDeepMerge(\n        fieldConfigWithoutType,\n        'getConfiguration' in preset ? preset.getConfiguration() : preset,\n      );\n      Object.assign(field, merged);\n    }\n  }\n}\n\nexport function registerLibraryConfigReplacementExtension(formlyConfig: FormlyConfig) {\n  return {\n    extensions: [\n      {\n        name: 'libraryConfigReplacement',\n        extension: new PresetSubstitutionExtension(formlyConfig),\n        priority: -300,\n      },\n    ],\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { FormlyConfig, FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { registerLibraryConfigReplacementExtension } from './preset-substitution.extension';\n\n@NgModule({\n  imports: [FormlyModule.forChild({})],\n  providers: [\n    {\n      provide: FORMLY_CONFIG,\n      useFactory: registerLibraryConfigReplacementExtension,\n      deps: [FormlyConfig],\n      multi: true,\n    },\n  ],\n})\nexport class FormlyPresetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;MACa,2BAA2B,CAAA;AACtC,IAAA,WAAA,CAAoB,YAA0B,EAAA;AAA1B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;KAAI;AAElD,IAAA,WAAW,CAAC,KAAwB,EAAA;;AAClC,QAAA,IAAI,EAAE,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC9D,OAAO;AACR,SAAA;AACD,QAAA,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,CAAC;QAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEnD,QAAA,MAAM,EAAE,IAAI,EAAE,CAAC,EAAgC,GAAA,KAAK,EAAhC,sBAAsB,GAAK,MAAA,CAAA,KAAK,EAA9C,CAAA,MAAA,CAAsC,CAAQ,CAAC;AACrD,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,MAAM,GAAG,iBAAiB,CAC9B,sBAAsB,EACtB,kBAAkB,IAAI,MAAM,GAAG,MAAM,CAAC,gBAAgB,EAAE,GAAG,MAAM,CAClE,CAAC;AACF,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC9B,SAAA;KACF;AACF,CAAA;AAEK,SAAU,yCAAyC,CAAC,YAA0B,EAAA;IAClF,OAAO;AACL,QAAA,UAAU,EAAE;AACV,YAAA;AACE,gBAAA,IAAI,EAAE,0BAA0B;AAChC,gBAAA,SAAS,EAAE,IAAI,2BAA2B,CAAC,YAAY,CAAC;gBACxD,QAAQ,EAAE,CAAC,GAAG;AACf,aAAA;AACF,SAAA;KACF,CAAC;AACJ;;MCjBa,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAlB,kBAAkB,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EATlB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,aAAa;AACtB,YAAA,UAAU,EAAE,yCAAyC;YACrD,IAAI,EAAE,CAAC,YAAY,CAAC;AACpB,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,OAAA,EAAA,CARQ,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,CAAA,CAAA;4FAUzB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACpC,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,aAAa;AACtB,4BAAA,UAAU,EAAE,yCAAyC;4BACrD,IAAI,EAAE,CAAC,YAAY,CAAC;AACpB,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACdD;;AAEG;;;;"}