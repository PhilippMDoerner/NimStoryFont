(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[5224],{"./src/app/design/animations/slideDown.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{V4:()=>slideOutFromBottom,sb:()=>slideUpFromBottom,st:()=>slideRight});var _angular_animations__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/animations/fesm2022/animations.mjs");const inactiveStyle=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.iF)({opacity:.2,transform:"translateY(50%)"}),activeStyle=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.iF)({opacity:1,transform:"translateY(0%)"}),slideUpFromBottom=((0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.hZ)("slideFromBottom",[(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":enter",[inactiveStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("500ms ease-out",activeStyle)]),(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":leave",[activeStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("500ms ease-in",inactiveStyle)])]),(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.hZ)("slideUpFromBottom",[(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":enter",[inactiveStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("500ms ease-out",activeStyle)])])),slideOutFromBottom=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.hZ)("slideOutFromBottom",[(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":leave",[activeStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("500ms ease-in",inactiveStyle)])]),inactiveSlideRightStyle=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.iF)({transform:"translateX(100%)"}),activeSlideRightStyle=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.iF)({transform:"translateX(0%)"}),slideRight=(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.hZ)("slideRight",[(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":enter",[inactiveSlideRightStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("250ms ease-in-out",activeSlideRightStyle)]),(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.kY)(":leave",[activeSlideRightStyle,(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.i0)("250ms ease-in-out",inactiveSlideRightStyle)])])},"./src/app/design/organisms/quote/quote.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{w:()=>QuoteComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var quote_componentngResource=__webpack_require__("./src/app/design/organisms/quote/quote.component.scss?ngResource"),quote_componentngResource_default=__webpack_require__.n(quote_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),routing_service=__webpack_require__("./src/app/_services/routing.service.ts"),router=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),button_component=__webpack_require__("./src/app/design/atoms/button/button.component.ts"),separator_component=__webpack_require__("./src/app/design/atoms/separator/separator.component.ts"),spinner_component=__webpack_require__("./src/app/design/atoms/spinner/spinner.component.ts"),molecules=__webpack_require__("./src/app/design/molecules/index.ts"),clipboard=__webpack_require__("./src/utils/clipboard.ts"),DOM=__webpack_require__("./src/utils/DOM.ts"),button_link_component=__webpack_require__("./src/app/design/atoms/button-link/button-link.component.ts"),toast_overlay_component=__webpack_require__("./src/app/design/organisms/toast-overlay/toast-overlay.component.ts");let QuoteComponent=class QuoteComponent{constructor(routingService,toastService){this.routingService=routingService,this.toastService=toastService,this.quote=(0,core.input)(),this.quoteControlsBlacklist=(0,core.input)([]),this._quoteControlsBlacklist=(0,core.computed)((()=>new Set(this.quoteControlsBlacklist()))),this.character=core.input.required(),this.campaignCharacters=core.input.required(),this.canCreate=(0,core.input)(!1),this.canUpdate=(0,core.input)(!1),this.canDelete=(0,core.input)(!1),this.quoteDelete=(0,core.output)(),this.quoteCreate=(0,core.output)(),this.quoteUpdate=(0,core.output)(),this.connectionDelete=(0,core.output)(),this.connectionCreate=(0,core.output)(),this.refreshQuote=(0,core.output)(),this.state="DISPLAY",this.quoteId=(0,DOM.n)(),this.badgeEntries=(0,core.computed)((()=>this.parseConnection(this.quote()?.connections??[]))),this.campaignName=(0,core.computed)((()=>this.character().campaign_details?.name)),this.isLoadingQuote=(0,core.signal)(!1),this.quoteOverviewUrl=(0,core.computed)((()=>this.routingService.getRoutePath("quote-overview",{name:this.character.name,campaign:this.campaignName}))),this.hasQuote=(0,core.computed)((()=>!!this.quote())),this.quoteLabel=(0,core.computed)((()=>`Quotes of ${this.character()?.name}`)),this._quoteControlls=(0,core.computed)((()=>[{controlKind:"REFRESH",isVisible:this.hasQuote(),title:"Load new quote",type:"INFO",icon:"refresh",config:{kind:"CLICK",onClick:()=>this.getNextRandomQuote()}},{controlKind:"UPDATE",isVisible:this.hasQuote()&&this.canUpdate(),title:"Edit Quote",type:"SECONDARY",icon:"pencil",config:{kind:"CLICK",onClick:()=>this.quoteUpdate.emit(this.quote())}},{controlKind:"CREATE",isVisible:this.canCreate(),title:this.hasQuote()?"Create Quote":void 0,label:this.hasQuote()?void 0:"Create Quote",type:"PRIMARY",icon:"plus",config:{kind:"CLICK",onClick:()=>this.quoteCreate.emit()}},{controlKind:"DELETE",isVisible:!!this.quote()&&this.canDelete(),title:"Delete Quote",type:"DANGER",icon:"trash",config:{kind:"CLICK",onClick:()=>this.quoteDelete.emit(this.quote())}},{controlKind:"COPY",isVisible:!!this.quote(),title:"Copy Quote to Clipboard",type:"DARK",icon:"copy",config:{kind:"CLICK",onClick:()=>this.copyQuoteToClipboard()}},{controlKind:"LIST",isVisible:!!this.quote(),title:"See all quotes",type:"SECONDARY",icon:"th-list",config:{kind:"LINK",link:this.routingService.getRoutePath("quote-overview",{name:this.character().name,campaign:this.campaignName()})}}])),this.quoteControlls=(0,core.computed)((()=>this._quoteControlls().filter((ctrl=>ctrl.isVisible)).filter((ctrl=>!this._quoteControlsBlacklist().has(ctrl.controlKind)))))}ngOnChanges(){this.isLoadingQuote.set(!1)}onConnectionDelete(connection){this.canDelete()&&this.connectionDelete.emit(connection)}onConnectionCreate(character){if(!this.canCreate()||!this.quote())return;const newConnection={quote:this.quote()?.pk,character:character.pk};this.connectionCreate.emit(newConnection)}getNextRandomQuote(){this.isLoadingQuote.set(!0),this.refreshQuote.emit()}parseConnection(connections){return connections.map((con=>{const characterName=con.character_details?.name;return{text:characterName,badgeValue:con,link:this.routingService.getRoutePath("character",{name:characterName,campaign:this.campaignName()})}}))}copyQuoteToClipboard(){const quote=this.quote();if(!quote)return;const text=`${quote.quote.split("<br />").map((line=>`>${line.trim().trimStart()}`)).join("<br />")}\n>${`- ${quote.description} `}`;(0,clipboard.l)(text),this.toastService.addToast({dismissMs:1500,type:"SUCCESS",onToastClick:dismiss=>dismiss(),body:{text:"Copied quote to clipboard",icon:"check"}})}static{this.ctorParameters=()=>[{type:routing_service.O},{type:toast_overlay_component.f}]}static{this.propDecorators={quote:[{type:core.Input,args:[{isSignal:!0,alias:"quote",required:!1,transform:void 0}]}],quoteControlsBlacklist:[{type:core.Input,args:[{isSignal:!0,alias:"quoteControlsBlacklist",required:!1,transform:void 0}]}],character:[{type:core.Input,args:[{isSignal:!0,alias:"character",required:!0,transform:void 0}]}],campaignCharacters:[{type:core.Input,args:[{isSignal:!0,alias:"campaignCharacters",required:!0,transform:void 0}]}],canCreate:[{type:core.Input,args:[{isSignal:!0,alias:"canCreate",required:!1,transform:void 0}]}],canUpdate:[{type:core.Input,args:[{isSignal:!0,alias:"canUpdate",required:!1,transform:void 0}]}],canDelete:[{type:core.Input,args:[{isSignal:!0,alias:"canDelete",required:!1,transform:void 0}]}],quoteDelete:[{type:core.Output,args:["quoteDelete"]}],quoteCreate:[{type:core.Output,args:["quoteCreate"]}],quoteUpdate:[{type:core.Output,args:["quoteUpdate"]}],connectionDelete:[{type:core.Output,args:["connectionDelete"]}],connectionCreate:[{type:core.Output,args:["connectionCreate"]}],refreshQuote:[{type:core.Output,args:["refreshQuote"]}]}}};QuoteComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-quote",template:'@if (!isLoadingQuote()) {\n  <section class="field">\n    @let quoteVal = quote();\n    @if (quoteVal) {\n      <div class="field__quote quote" [attr.aria-label]="quoteLabel()">\n        <figure class="m-0">\n          \x3c!-- Quote --\x3e\n          <blockquote class="quote__content">\n            <p [innerHTML]="quoteVal.quote"></p>\n          </blockquote>\n          <figcaption class="quote__description">\n            \x3c!-- Quote Description --\x3e\n            @if (quoteVal.description) {\n              <p class="m-0" [innerHTML]="\'- \' + quoteVal.description"></p>\n            } @else {\n              - {{ character().name }}\n            }\n          </figcaption>\n        </figure>\n        <app-separator />\n\n        \x3c!-- Quote Connections --\x3e\n        <div class="quote__connections">\n          <app-badge-list\n            [entries]="badgeEntries()"\n            [label]="\'Characters\'"\n            [createOptions]="{\n              kind: \'SELECT\',\n              formFieldLabel: \'Characters\',\n              config: {\n                options: campaignCharacters(),\n                labelProp: \'name\',\n                valueProp: \'pk\',\n              },\n            }"\n            [canCreate]="canCreate()"\n            [canDelete]="canDelete()"\n            [cancelButtonType]="\'DARK\'"\n            (entryCreate)="onConnectionCreate($event)"\n            (entryDelete)="onConnectionDelete($event)"\n          ></app-badge-list>\n        </div>\n      </div>\n    }\n\n    \x3c!-- Quote Refresh/Create/Edit/Delete Icons --\x3e\n    <footer class="field__controls">\n      @for (control of quoteControlls(); track $index) {\n        @switch (control.config.kind) {\n          @case ("CLICK") {\n            <button\n              btn\n              class="field__control"\n              [attr.aria-label]="control.title"\n              [attr.title]="control.title"\n              [kind]="control.type"\n              [text]="control.label"\n              [icon]="control.icon"\n              (clicked)="control.config.onClick()"\n            ></button>\n          }\n          @case ("LINK") {\n            <a\n              btn\n              class="field__control"\n              [attr.aria-label]="control.title"\n              [ngbTooltip]="control.title"\n              [kind]="control.type"\n              [text]="control.label"\n              [icon]="control.icon"\n              [routerLink]="control.config.link"\n            >\n            </a>\n          }\n        }\n      }\n    </footer>\n  </section>\n}\n\n<ng-template #loading>\n  <app-spinner></app-spinner>\n</ng-template>\n',imports:[molecules.pn,separator_component.F,button_component.Q,button_link_component.W,router.Wk,spinner_component.t,ng_bootstrap.md],styles:[quote_componentngResource_default()]})],QuoteComponent)},"./src/app/design/organisms/toast-overlay/toast-overlay.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>ToastOverlayComponent,f:()=>ToastService});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var toast_overlay_componentngResource=__webpack_require__("./src/app/design/organisms/toast-overlay/toast-overlay.component.scss?ngResource"),toast_overlay_componentngResource_default=__webpack_require__.n(toast_overlay_componentngResource),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),slideDown=__webpack_require__("./src/app/design/animations/slideDown.ts"),button_component=__webpack_require__("./src/app/design/atoms/button/button.component.ts"),icon_component=__webpack_require__("./src/app/design/atoms/icon/icon.component.ts"),logging=__webpack_require__("./src/utils/logging.ts");let ToastService=class ToastService{constructor(){this.toasts=(0,core.signal)([]),this.currentToast=(0,core.computed)((()=>this.toasts()[0]))}addToast(newToast){(0,logging.R)(this.addToast.name,newToast);const toasts=this.toasts();newToast.important?this.toasts.set([newToast,...toasts]):this.toasts.set([...toasts,newToast])}dismissToast(){const[,...newToastList]=this.toasts();this.toasts.set(newToastList)}};ToastService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],ToastService);let ToastOverlayComponent=class ToastOverlayComponent{constructor(){this.toastService=(0,core.inject)(ToastService),this.currentToast=this.toastService.currentToast,this.isCurrentlyImportant=(0,core.computed)((()=>this.currentToast()?.important??!1)),this.icon=(0,core.computed)((()=>{const currentToast=this.currentToast();if(currentToast)return this.toHeaderIcon(currentToast.type,currentToast.header?.icon)}))}dismissCurrentToast(){const currentToast=this.currentToast();if(!currentToast)return;const onHide=currentToast.onHide;onHide&&onHide(),this.toastService.dismissToast()}toHeaderIcon(toastType,icon){if(null!=icon)return icon;switch(toastType){case"DANGER":return"triangle-exclamation";case"WARNING":return"circle-exclamation";case"INFO":return"info-circle";case"SUCCESS":return"check";default:return"info"}}};ToastOverlayComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-toast-overlay",imports:[ng_bootstrap.VR,button_component.Q,icon_component.R,common.NgTemplateOutlet,a11y.kB,common.NgClass],animations:[slideDown.st],template:'@let toast = currentToast();\n@let onToastClick = toast?.onToastClick;\n@if (toast && onToastClick) {\n  <button\n    class="button-container"\n    (click)="onToastClick(dismissCurrentToast.bind(this))"\n  >\n    <ng-container *ngTemplateOutlet="toastOverlay" />\n  </button>\n} @else if (toast) {\n  <ng-container *ngTemplateOutlet="toastOverlay" />\n}\n\n<ng-template #toastOverlay>\n  @if (toast) {\n    @if (toast.header) {\n      <ngb-toast\n        class="toast toast--{{ toast.type.toLocaleLowerCase() }}"\n        data-bs-theme="dark"\n        [autohide]="!!toast.dismissMs && toast.dismissMs > 0"\n        [delay]="toast.dismissMs ? toast.dismissMs : 0"\n        [animation]="true"\n        (hidden)="dismissCurrentToast()"\n        (shown)="toast.onShow ? toast.onShow() : undefined"\n        cdkTrapFocus\n        [cdkTrapFocusAutoCapture]="true"\n      >\n        <ng-template ngbToastHeader>\n          <span class="toast-header__text">\n            @let headerIcon = icon();\n            @if (headerIcon) {\n              <app-icon\n                class="toast-header__icon"\n                [icon]="headerIcon"\n              ></app-icon>\n            }\n            <span\n              class="toast-header__text-container"\n              [innerHTML]="toast.header.text"\n            ></span>\n          </span>\n        </ng-template>\n        <ng-container *ngTemplateOutlet="timer"></ng-container>\n        <ng-container *ngTemplateOutlet="body" />\n      </ngb-toast>\n    } @else {\n      <ngb-toast\n        class="toast toast--{{ toast.type.toLocaleLowerCase() }}"\n        data-bs-theme="dark"\n        [autohide]="!!toast.dismissMs && toast.dismissMs > 0"\n        [delay]="toast.dismissMs ? toast.dismissMs : 0"\n        [ariaLive]="toast.important ? \'alert\' : \'polite\'"\n        [animation]="true"\n        (hidden)="dismissCurrentToast()"\n        (shown)="toast.onShow ? toast.onShow() : undefined"\n      >\n        <div class="d-flex flex-column w-100">\n          <ng-container *ngTemplateOutlet="timer"></ng-container>\n          <ng-container *ngTemplateOutlet="body" />\n        </div>\n      </ngb-toast>\n    }\n  }\n</ng-template>\n\n<ng-template #body>\n  @let hasHeader = !!toast?.header;\n  <div class="toast__body body">\n    <span class="body__text">\n      @let bodyIcon = toast?.body?.icon;\n      @if (bodyIcon) {\n        <app-icon class="body__icon" [icon]="bodyIcon" />\n      }\n\n      @if (toast?.body?.text) {\n        <div class="body__text-container" [innerHTML]="toast?.body?.text"></div>\n      }\n\n      @if (!hasHeader) {\n        <button\n          btn\n          class="fs-3"\n          [kind]="\'NONE\'"\n          [size]="\'SMALL\'"\n          [icon]="\'times\'"\n          aria-label="\'Close toast\'"\n          (clicked)="dismissCurrentToast()"\n        ></button>\n      }\n    </span>\n\n    <div class="body__button-container">\n      @let firstButton = toast?.body?.buttons?.[0];\n      @if (firstButton) {\n        <button\n          btn\n          class="body__button"\n          [text]="firstButton.label"\n          [icon]="firstButton.icon"\n          [size]="\'SMALL\'"\n          [kind]="\'PRIMARY\'"\n          (clicked)="firstButton.onClick(dismissCurrentToast.bind(this))"\n        ></button>\n      }\n      @let secondButton = toast?.body?.buttons?.[1];\n      @if (secondButton) {\n        <button\n          btn\n          class="body__button"\n          [text]="secondButton.label"\n          [icon]="secondButton.icon"\n          [size]="\'SMALL\'"\n          [kind]="\'SECONDARY\'"\n          (clicked)="secondButton.onClick(dismissCurrentToast.bind(this))"\n        ></button>\n      }\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #timer>\n  <span\n    class="toast__timer-bar"\n    [ngClass]="{\n      \'toast__timer-bar--short-animation\': toast?.dismissMs === 1500,\n      \'toast__timer-bar--medium-animation\': toast?.dismissMs === 3000,\n      \'toast__timer-bar--long-animation\': toast?.dismissMs === 5000,\n      \'toast__timer-bar--very-long-animation\': toast?.dismissMs === 900000,\n    }"\n  ></span>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,host:{"[ariaLive]":'isCurrentlyImportant() ? "assertive" : "polite"',"[role]":'isCurrentlyImportant() ? "alert" : "status"'},styles:[toast_overlay_componentngResource_default()]})],ToastOverlayComponent)},"./src/utils/clipboard.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function copyToClipboard(text){const windowSelection=window.getSelection(),documentSelection=window.getSelection();let userSelectedTextRange;(function userHasElementsSelected(){const selection=document.getSelection();if(null==selection)return!1;return selection?.rangeCount>0})()&&(userSelectedTextRange=documentSelection.getRangeAt(0),windowSelection.removeRange(userSelectedTextRange));const textContainerElement=function createTextContainerElement(text){const textContainerElement=document.createElement("div");textContainerElement.innerHTML=text;const strippedText=textContainerElement.textContent;return textContainerElement.innerHTML=strippedText.replaceAll(">","<br>> ").slice(4),textContainerElement.style.position="absolute",textContainerElement.style.left="-9999px",textContainerElement}(text);document.body.appendChild(textContainerElement);const copyRange=function selectElement(element){const selectedRange=document.createRange();return selectedRange.selectNode(element),window.getSelection()?.addRange(selectedRange),selectedRange}(textContainerElement);!function copyCurrentSelection(){try{document.execCommand("copy")}catch(err){window.alert("Your Browser Doesn't support this! Error : "+err)}}(),windowSelection.removeRange(copyRange),document.body.removeChild(textContainerElement),userSelectedTextRange&&windowSelection.addRange(userSelectedTextRange)}__webpack_require__.d(__webpack_exports__,{l:()=>copyToClipboard})},"./src/app/design/organisms/quote/quote.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".field {\n  margin-bottom: var(--spacer-3);\n}\n.field__controls {\n  display: flex;\n  flex-direction: row;\n  gap: var(--spacer-4);\n  margin-top: var(--spacer-3);\n}\n.field__control {\n  width: fit-content;\n}\n\n.quote {\n  border-left: solid 4px var(--bs-white);\n  padding: var(--spacer-2) var(--spacer-0) var(--spacer-1) var(--spacer-4);\n}\n.quote__description {\n  margin: var(--spacer-3) var(--spacer-0) var(--spacer-3) var(--spacer-3);\n}\n.quote__content {\n  font-style: italic;\n  margin: 0;\n  padding: 0;\n  border: none;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/toast-overlay/toast-overlay.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@keyframes shrink-bar {\n  0% {\n    transform: scaleX(1);\n  }\n  100% {\n    transform: scaleX(0);\n  }\n}\n@keyframes floatIn {\n  0% {\n    transform: translate(-50%, -100%);\n  }\n  100% {\n    transform: translate(-50%, 0%);\n  }\n}\n:host {\n  position: absolute;\n}\n\n.toast:focus-visible {\n  outline: var(--focus-outline);\n}\n\n.toast {\n  position: fixed;\n  width: 93%;\n  top: 2%;\n  left: 50%;\n  z-index: 2;\n  transform: translateX(-50%);\n  animation: floatIn 0.5s ease-in-out;\n  --bs-light-rgb: var(--bs-white);\n  --bs-toast-header-color: var(--bs-white);\n  --bs-toast-color: var(--bs-white);\n  --toast-padding-x: var(--bs-toast-padding-x);\n  --toast-padding-y: calc(var(--bs-toast-padding-y) / 2);\n  --bs-toast-border-width: 3px;\n}\n@media (min-width: 576px) {\n  .toast {\n    width: fit-content;\n    max-width: 50%;\n    bottom: 5%;\n    right: 3.5%;\n    top: unset;\n    left: unset;\n    transform: none;\n    animation: unset;\n  }\n}\n.toast--primary {\n  --bs-border-color-translucent: var(--bs-primary);\n}\n.toast--secondary {\n  --bs-border-color-translucent: var(--bs-secondary);\n}\n.toast--success {\n  --bs-border-color-translucent: var(--bs-success);\n}\n.toast--danger {\n  --bs-border-color-translucent: var(--bs-danger);\n}\n.toast--warning {\n  --bs-border-color-translucent: var(--bs-warning);\n}\n.toast--info {\n  --bs-border-color-translucent: var(--bs-info);\n}\n.toast--light {\n  --bs-border-color-translucent: var(--bs-light);\n}\n.toast--dark {\n  --bs-border-color-translucent: var(--bs-dark);\n}\n.toast__timer-bar {\n  top: 0px;\n  left: 0px;\n  border-radius: var(--bs-border-radius);\n  position: absolute;\n  height: 6px;\n  width: 100%;\n  background-color: var(--bs-border-color-translucent);\n  animation-name: shrink-bar;\n  animation-fill-mode: forwards;\n}\n.toast__timer-bar--short-animation {\n  animation-duration: 1500ms;\n}\n.toast__timer-bar--normal-animation {\n  animation-duration: 3000ms;\n}\n.toast__timer-bar--long-animation {\n  animation-duration: 5000ms;\n}\n.toast__timer-bar--very-long-animation {\n  animation-duration: 900000ms;\n}\n\n.toast-header__text {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--spacer-2);\n  flex: 1;\n  font-weight: bold;\n}\n\n.body {\n  display: flex;\n  flex-direction: column;\n}\n.body__text {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: var(--spacer-2);\n  text-align: start;\n  align-items: center;\n}\n.body__text-container {\n  width: 100%;\n  max-height: calc(var(--bs-body-font-size) * 8);\n  max-width: 100%;\n  overflow: auto;\n}\n.body__button {\n  width: fit-content;\n}\n.body__button-container {\n  display: flex;\n  flex-direction: row;\n  gap: var(--spacer-3);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);