var Tk = Object.create;
var os = Object.defineProperty;
var Bk = Object.getOwnPropertyDescriptor;
var Ik = Object.getOwnPropertyNames;
var Pk = Object.getPrototypeOf, Ok = Object.prototype.hasOwnProperty;
var s = (e, t) => os(e, "name", { value: t, configurable: !0 }), H = /* @__PURE__ */ ((e) => typeof require < "u" ? require : typeof Proxy <
"u" ? new Proxy(e, {
  get: (t, r) => (typeof require < "u" ? require : t)[r]
}) : e)(function(e) {
  if (typeof require < "u") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + e + '" is not supported');
});
var ft = (e, t) => () => (e && (t = e(e = 0)), t);
var P = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Pi = (e, t) => {
  for (var r in t)
    os(e, r, { get: t[r], enumerable: !0 });
}, ng = (e, t, r, i) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let n of Ik(t))
      !Ok.call(e, n) && n !== r && os(e, n, { get: () => t[n], enumerable: !(i = Bk(t, n)) || i.enumerable });
  return e;
};
var he = (e, t, r) => (r = e != null ? Tk(Pk(e)) : {}, ng(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  t || !e || !e.__esModule ? os(r, "default", { value: e, enumerable: !0 }) : r,
  e
)), il = (e) => ng(os({}, "__esModule", { value: !0 }), e);

// ../node_modules/picocolors/picocolors.js
var br = P((YX, nl) => {
  var Co = process || {}, sg = Co.argv || [], vo = Co.env || {}, Rk = !(vo.NO_COLOR || sg.includes("--no-color")) && (!!vo.FORCE_COLOR || sg.
  includes("--color") || Co.platform === "win32" || (Co.stdout || {}).isTTY && vo.TERM !== "dumb" || !!vo.CI), Nk = /* @__PURE__ */ s((e, t, r = e) => (i) => {
    let n = "" + i, o = n.indexOf(t, e.length);
    return ~o ? e + Lk(n, t, r, o) + t : e + n + t;
  }, "formatter"), Lk = /* @__PURE__ */ s((e, t, r, i) => {
    let n = "", o = 0;
    do
      n += e.substring(o, i) + r, o = i + t.length, i = e.indexOf(t, o);
    while (~i);
    return n + e.substring(o);
  }, "replaceClose"), og = /* @__PURE__ */ s((e = Rk) => {
    let t = e ? Nk : () => String;
    return {
      isColorSupported: e,
      reset: t("\x1B[0m", "\x1B[0m"),
      bold: t("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m"),
      dim: t("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m"),
      italic: t("\x1B[3m", "\x1B[23m"),
      underline: t("\x1B[4m", "\x1B[24m"),
      inverse: t("\x1B[7m", "\x1B[27m"),
      hidden: t("\x1B[8m", "\x1B[28m"),
      strikethrough: t("\x1B[9m", "\x1B[29m"),
      black: t("\x1B[30m", "\x1B[39m"),
      red: t("\x1B[31m", "\x1B[39m"),
      green: t("\x1B[32m", "\x1B[39m"),
      yellow: t("\x1B[33m", "\x1B[39m"),
      blue: t("\x1B[34m", "\x1B[39m"),
      magenta: t("\x1B[35m", "\x1B[39m"),
      cyan: t("\x1B[36m", "\x1B[39m"),
      white: t("\x1B[37m", "\x1B[39m"),
      gray: t("\x1B[90m", "\x1B[39m"),
      bgBlack: t("\x1B[40m", "\x1B[49m"),
      bgRed: t("\x1B[41m", "\x1B[49m"),
      bgGreen: t("\x1B[42m", "\x1B[49m"),
      bgYellow: t("\x1B[43m", "\x1B[49m"),
      bgBlue: t("\x1B[44m", "\x1B[49m"),
      bgMagenta: t("\x1B[45m", "\x1B[49m"),
      bgCyan: t("\x1B[46m", "\x1B[49m"),
      bgWhite: t("\x1B[47m", "\x1B[49m"),
      blackBright: t("\x1B[90m", "\x1B[39m"),
      redBright: t("\x1B[91m", "\x1B[39m"),
      greenBright: t("\x1B[92m", "\x1B[39m"),
      yellowBright: t("\x1B[93m", "\x1B[39m"),
      blueBright: t("\x1B[94m", "\x1B[39m"),
      magentaBright: t("\x1B[95m", "\x1B[39m"),
      cyanBright: t("\x1B[96m", "\x1B[39m"),
      whiteBright: t("\x1B[97m", "\x1B[39m"),
      bgBlackBright: t("\x1B[100m", "\x1B[49m"),
      bgRedBright: t("\x1B[101m", "\x1B[49m"),
      bgGreenBright: t("\x1B[102m", "\x1B[49m"),
      bgYellowBright: t("\x1B[103m", "\x1B[49m"),
      bgBlueBright: t("\x1B[104m", "\x1B[49m"),
      bgMagentaBright: t("\x1B[105m", "\x1B[49m"),
      bgCyanBright: t("\x1B[106m", "\x1B[49m"),
      bgWhiteBright: t("\x1B[107m", "\x1B[49m")
    };
  }, "createColors");
  nl.exports = og();
  nl.exports.createColors = og;
});

// ../node_modules/slash/index.js
function Ze(e) {
  return e.startsWith("\\\\?\\") ? e : e.replace(/\\/g, "/");
}
var en = ft(() => {
  s(Ze, "slash");
});

// ../node_modules/ts-dedent/dist/index.js
var Ft = P((ls) => {
  "use strict";
  Object.defineProperty(ls, "__esModule", { value: !0 });
  ls.dedent = void 0;
  function cg(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
      t[r - 1] = arguments[r];
    var i = Array.from(typeof e == "string" ? [e] : e);
    i[i.length - 1] = i[i.length - 1].replace(/\r?\n([\t ]*)$/, "");
    var n = i.reduce(function(u, l) {
      var c = l.match(/\n([\t ]+|(?!\s).)/g);
      return c ? u.concat(c.map(function(p) {
        var h, f;
        return (f = (h = p.match(/[\t ]/g)) === null || h === void 0 ? void 0 : h.length) !== null && f !== void 0 ? f : 0;
      })) : u;
    }, []);
    if (n.length) {
      var o = new RegExp(`
[	 ]{` + Math.min.apply(Math, n) + "}", "g");
      i = i.map(function(u) {
        return u.replace(o, `
`);
      });
    }
    i[0] = i[0].replace(/^\r?\n/, "");
    var a = i[0];
    return t.forEach(function(u, l) {
      var c = a.match(/(?:^|\n)( *)$/), p = c ? c[1] : "", h = u;
      typeof u == "string" && u.includes(`
`) && (h = String(u).split(`
`).map(function(f, d) {
        return d === 0 ? f : "" + p + f;
      }).join(`
`)), a += h + i[l + 1];
    }), a;
  }
  s(cg, "dedent");
  ls.dedent = cg;
  ls.default = cg;
});

// ../node_modules/tsconfig-paths/lib/filesystem.js
var So = P((Wt) => {
  "use strict";
  Object.defineProperty(Wt, "__esModule", { value: !0 });
  Wt.removeExtension = Wt.fileExistsAsync = Wt.readJsonFromDiskAsync = Wt.readJsonFromDiskSync = Wt.fileExistsSync = void 0;
  var cs = H("fs");
  function Kk(e) {
    if (!cs.existsSync(e))
      return !1;
    try {
      var t = cs.statSync(e);
      return t.isFile();
    } catch {
      return !1;
    }
  }
  s(Kk, "fileExistsSync");
  Wt.fileExistsSync = Kk;
  function Yk(e) {
    if (cs.existsSync(e))
      return H(e);
  }
  s(Yk, "readJsonFromDiskSync");
  Wt.readJsonFromDiskSync = Yk;
  function Qk(e, t) {
    cs.readFile(e, "utf8", function(r, i) {
      if (r || !i)
        return t();
      var n = JSON.parse(i);
      return t(void 0, n);
    });
  }
  s(Qk, "readJsonFromDiskAsync");
  Wt.readJsonFromDiskAsync = Qk;
  function Zk(e, t) {
    cs.stat(e, function(r, i) {
      if (r)
        return t(void 0, !1);
      t(void 0, i ? i.isFile() : !1);
    });
  }
  s(Zk, "fileExistsAsync");
  Wt.fileExistsAsync = Zk;
  function eT(e) {
    return e.substring(0, e.lastIndexOf(".")) || e;
  }
  s(eT, "removeExtension");
  Wt.removeExtension = eT;
});

// ../node_modules/tsconfig-paths/lib/mapping-entry.js
var cl = P((Fo) => {
  "use strict";
  Object.defineProperty(Fo, "__esModule", { value: !0 });
  Fo.getAbsoluteMappingEntries = void 0;
  var tT = H("path");
  function rT(e, t, r) {
    for (var i = iT(Object.keys(t)), n = [], o = 0, a = i; o < a.length; o++) {
      var u = a[o];
      n.push({
        pattern: u,
        paths: t[u].map(function(l) {
          return tT.resolve(e, l);
        })
      });
    }
    return !t["*"] && r && n.push({
      pattern: "*",
      paths: ["".concat(e.replace(/\/$/, ""), "/*")]
    }), n;
  }
  s(rT, "getAbsoluteMappingEntries");
  Fo.getAbsoluteMappingEntries = rT;
  function iT(e) {
    return e.concat().sort(function(t, r) {
      return pg(r) - pg(t);
    });
  }
  s(iT, "sortByLongestPrefix");
  function pg(e) {
    var t = e.indexOf("*");
    return e.substr(0, t).length;
  }
  s(pg, "getPrefixLength");
});

// ../node_modules/tsconfig-paths/lib/try-path.js
var pl = P((oi) => {
  "use strict";
  Object.defineProperty(oi, "__esModule", { value: !0 });
  oi.exhaustiveTypeException = oi.getStrippedPath = oi.getPathsToTry = void 0;
  var hg = H("path"), nT = H("path"), sT = So();
  function oT(e, t, r) {
    if (!(!t || !r || r[0] === ".")) {
      for (var i = [], n = 0, o = t; n < o.length; n++) {
        var a = o[n], u = a.pattern === r ? "" : uT(a.pattern, r);
        if (u !== void 0)
          for (var l = /* @__PURE__ */ s(function(f) {
            var d = f.replace("*", u);
            i.push({ type: "file", path: d }), i.push.apply(i, e.map(function(g) {
              return { type: "extension", path: d + g };
            })), i.push({
              type: "package",
              path: hg.join(d, "/package.json")
            });
            var m = hg.join(d, "/index");
            i.push.apply(i, e.map(function(g) {
              return { type: "index", path: m + g };
            }));
          }, "_loop_1"), c = 0, p = a.paths; c < p.length; c++) {
            var h = p[c];
            l(h);
          }
      }
      return i.length === 0 ? void 0 : i;
    }
  }
  s(oT, "getPathsToTry");
  oi.getPathsToTry = oT;
  function aT(e) {
    return e.type === "index" ? (0, nT.dirname)(e.path) : e.type === "file" ? e.path : e.type === "extension" ? (0, sT.removeExtension)(e.path) :
    e.type === "package" ? e.path : fg(e.type);
  }
  s(aT, "getStrippedPath");
  oi.getStrippedPath = aT;
  function fg(e) {
    throw new Error("Unknown type ".concat(e));
  }
  s(fg, "exhaustiveTypeException");
  oi.exhaustiveTypeException = fg;
  function uT(e, t) {
    if (!(t.length < e.length)) {
      if (e === "*")
        return t;
      var r = e.indexOf("*");
      if (r !== -1) {
        var i = e.substring(0, r), n = e.substring(r + 1);
        if (t.substr(0, r) === i && t.substr(t.length - n.length) === n)
          return t.substr(r, t.length - n.length);
      }
    }
  }
  s(uT, "matchStar");
});

// ../node_modules/tsconfig-paths/lib/match-path-sync.js
var dl = P((tn) => {
  "use strict";
  Object.defineProperty(tn, "__esModule", { value: !0 });
  tn.matchFromAbsolutePaths = tn.createMatchPath = void 0;
  var dg = H("path"), hl = So(), lT = cl(), fl = pl();
  function cT(e, t, r, i) {
    r === void 0 && (r = ["main"]), i === void 0 && (i = !0);
    var n = lT.getAbsoluteMappingEntries(e, t, i);
    return function(o, a, u, l) {
      return mg(n, o, a, u, l, r);
    };
  }
  s(cT, "createMatchPath");
  tn.createMatchPath = cT;
  function mg(e, t, r, i, n, o) {
    r === void 0 && (r = hl.readJsonFromDiskSync), i === void 0 && (i = hl.fileExistsSync), n === void 0 && (n = Object.keys(H.extensions)),
    o === void 0 && (o = ["main"]);
    var a = fl.getPathsToTry(n, e, t);
    if (a)
      return hT(a, r, i, o);
  }
  s(mg, "matchFromAbsolutePaths");
  tn.matchFromAbsolutePaths = mg;
  function pT(e, t, r, i) {
    for (var n = 0; n < t.length; n++) {
      var o = t[n], a = typeof o == "string" ? e[o] : o.reduce(function(l, c) {
        return l[c];
      }, e);
      if (a && typeof a == "string") {
        var u = dg.join(dg.dirname(r), a);
        if (i(u))
          return u;
      }
    }
  }
  s(pT, "findFirstExistingMainFieldMappedFile");
  function hT(e, t, r, i) {
    t === void 0 && (t = hl.readJsonFromDiskSync), i === void 0 && (i = ["main"]);
    for (var n = 0, o = e; n < o.length; n++) {
      var a = o[n];
      if (a.type === "file" || a.type === "extension" || a.type === "index") {
        if (r(a.path))
          return fl.getStrippedPath(a);
      } else if (a.type === "package") {
        var u = t(a.path);
        if (u) {
          var l = pT(u, i, a.path, r);
          if (l)
            return l;
        }
      } else
        fl.exhaustiveTypeException(a.type);
    }
  }
  s(hT, "findFirstExistingPath");
});

// ../node_modules/tsconfig-paths/lib/match-path-async.js
var Eg = P((rn) => {
  "use strict";
  Object.defineProperty(rn, "__esModule", { value: !0 });
  rn.matchFromAbsolutePathsAsync = rn.createMatchPathAsync = void 0;
  var gg = H("path"), ml = pl(), fT = cl(), Dg = So();
  function dT(e, t, r, i) {
    r === void 0 && (r = ["main"]), i === void 0 && (i = !0);
    var n = fT.getAbsoluteMappingEntries(e, t, i);
    return function(o, a, u, l, c) {
      return yg(n, o, a, u, l, c, r);
    };
  }
  s(dT, "createMatchPathAsync");
  rn.createMatchPathAsync = dT;
  function yg(e, t, r, i, n, o, a) {
    r === void 0 && (r = Dg.readJsonFromDiskAsync), i === void 0 && (i = Dg.fileExistsAsync), n === void 0 && (n = Object.keys(H.extensions)),
    a === void 0 && (a = ["main"]);
    var u = ml.getPathsToTry(n, e, t);
    if (!u)
      return o();
    _o(u, r, i, o, 0, a);
  }
  s(yg, "matchFromAbsolutePathsAsync");
  rn.matchFromAbsolutePathsAsync = yg;
  function xg(e, t, r, i, n, o) {
    if (o === void 0 && (o = 0), o >= t.length)
      return n(void 0, void 0);
    var a = /* @__PURE__ */ s(function() {
      return xg(e, t, r, i, n, o + 1);
    }, "tryNext"), u = t[o], l = typeof u == "string" ? e[u] : u.reduce(function(p, h) {
      return p[h];
    }, e);
    if (typeof l != "string")
      return a();
    var c = gg.join(gg.dirname(r), l);
    i(c, function(p, h) {
      return p ? n(p) : h ? n(void 0, c) : a();
    });
  }
  s(xg, "findFirstExistingMainFieldMappedFile");
  function _o(e, t, r, i, n, o) {
    n === void 0 && (n = 0), o === void 0 && (o = ["main"]);
    var a = e[n];
    a.type === "file" || a.type === "extension" || a.type === "index" ? r(a.path, function(u, l) {
      return u ? i(u) : l ? i(void 0, ml.getStrippedPath(a)) : n === e.length - 1 ? i() : _o(e, t, r, i, n + 1, o);
    }) : a.type === "package" ? t(a.path, function(u, l) {
      return u ? i(u) : l ? xg(l, o, a.path, r, function(c, p) {
        return c ? i(c) : p ? i(void 0, p) : _o(e, t, r, i, n + 1, o);
      }) : _o(e, t, r, i, n + 1, o);
    }) : ml.exhaustiveTypeException(a.type);
  }
  s(_o, "findFirstExistingPath");
});

// ../node_modules/json5/lib/unicode.js
var bg = P((XK, ko) => {
  ko.exports.Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  ko.exports.ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
  ko.exports.ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
});

// ../node_modules/json5/lib/util.js
var Dl = P((KK, vg) => {
  var gl = bg();
  vg.exports = {
    isSpaceSeparator(e) {
      return typeof e == "string" && gl.Space_Separator.test(e);
    },
    isIdStartChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e === "$" || e === "_" || gl.ID_Start.test(e));
    },
    isIdContinueChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e >= "0" && e <= "9" || e === "$" || e === "_" || e ===
      "\u200C" || e === "\u200D" || gl.ID_Continue.test(e));
    },
    isDigit(e) {
      return typeof e == "string" && /[0-9]/.test(e);
    },
    isHexDigit(e) {
      return typeof e == "string" && /[0-9A-Fa-f]/.test(e);
    }
  };
});

// ../node_modules/json5/lib/parse.js
var Fg = P((YK, Sg) => {
  var at = Dl(), xl, xt, qr, Bo, ai, lr, ut, vl, hs;
  Sg.exports = /* @__PURE__ */ s(function(t, r) {
    xl = String(t), xt = "start", qr = [], Bo = 0, ai = 1, lr = 0, ut = void 0, vl = void 0, hs = void 0;
    do
      ut = mT(), yT[xt]();
    while (ut.type !== "eof");
    return typeof r == "function" ? El({ "": hs }, "", r) : hs;
  }, "parse");
  function El(e, t, r) {
    let i = e[t];
    if (i != null && typeof i == "object")
      if (Array.isArray(i))
        for (let n = 0; n < i.length; n++) {
          let o = String(n), a = El(i, o, r);
          a === void 0 ? delete i[o] : Object.defineProperty(i, o, {
            value: a,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
      else
        for (let n in i) {
          let o = El(i, n, r);
          o === void 0 ? delete i[n] : Object.defineProperty(i, n, {
            value: o,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
    return r.call(e, t, i);
  }
  s(El, "internalize");
  var Ee, ge, ps, jr, we;
  function mT() {
    for (Ee = "default", ge = "", ps = !1, jr = 1; ; ) {
      we = $r();
      let e = wg[Ee]();
      if (e)
        return e;
    }
  }
  s(mT, "lex");
  function $r() {
    if (xl[Bo])
      return String.fromCodePoint(xl.codePointAt(Bo));
  }
  s($r, "peek");
  function G() {
    let e = $r();
    return e === `
` ? (ai++, lr = 0) : e ? lr += e.length : lr++, e && (Bo += e.length), e;
  }
  s(G, "read");
  var wg = {
    default() {
      switch (we) {
        case "	":
        case "\v":
        case "\f":
        case " ":
        case "\xA0":
        case "\uFEFF":
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          G();
          return;
        case "/":
          G(), Ee = "comment";
          return;
        case void 0:
          return G(), je("eof");
      }
      if (at.isSpaceSeparator(we)) {
        G();
        return;
      }
      return wg[xt]();
    },
    comment() {
      switch (we) {
        case "*":
          G(), Ee = "multiLineComment";
          return;
        case "/":
          G(), Ee = "singleLineComment";
          return;
      }
      throw qe(G());
    },
    multiLineComment() {
      switch (we) {
        case "*":
          G(), Ee = "multiLineCommentAsterisk";
          return;
        case void 0:
          throw qe(G());
      }
      G();
    },
    multiLineCommentAsterisk() {
      switch (we) {
        case "*":
          G();
          return;
        case "/":
          G(), Ee = "default";
          return;
        case void 0:
          throw qe(G());
      }
      G(), Ee = "multiLineComment";
    },
    singleLineComment() {
      switch (we) {
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          G(), Ee = "default";
          return;
        case void 0:
          return G(), je("eof");
      }
      G();
    },
    value() {
      switch (we) {
        case "{":
        case "[":
          return je("punctuator", G());
        case "n":
          return G(), Oi("ull"), je("null", null);
        case "t":
          return G(), Oi("rue"), je("boolean", !0);
        case "f":
          return G(), Oi("alse"), je("boolean", !1);
        case "-":
        case "+":
          G() === "-" && (jr = -1), Ee = "sign";
          return;
        case ".":
          ge = G(), Ee = "decimalPointLeading";
          return;
        case "0":
          ge = G(), Ee = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          ge = G(), Ee = "decimalInteger";
          return;
        case "I":
          return G(), Oi("nfinity"), je("numeric", 1 / 0);
        case "N":
          return G(), Oi("aN"), je("numeric", NaN);
        case '"':
        case "'":
          ps = G() === '"', ge = "", Ee = "string";
          return;
      }
      throw qe(G());
    },
    identifierNameStartEscape() {
      if (we !== "u")
        throw qe(G());
      G();
      let e = bl();
      switch (e) {
        case "$":
        case "_":
          break;
        default:
          if (!at.isIdStartChar(e))
            throw Cg();
          break;
      }
      ge += e, Ee = "identifierName";
    },
    identifierName() {
      switch (we) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          ge += G();
          return;
        case "\\":
          G(), Ee = "identifierNameEscape";
          return;
      }
      if (at.isIdContinueChar(we)) {
        ge += G();
        return;
      }
      return je("identifier", ge);
    },
    identifierNameEscape() {
      if (we !== "u")
        throw qe(G());
      G();
      let e = bl();
      switch (e) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          break;
        default:
          if (!at.isIdContinueChar(e))
            throw Cg();
          break;
      }
      ge += e, Ee = "identifierName";
    },
    sign() {
      switch (we) {
        case ".":
          ge = G(), Ee = "decimalPointLeading";
          return;
        case "0":
          ge = G(), Ee = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          ge = G(), Ee = "decimalInteger";
          return;
        case "I":
          return G(), Oi("nfinity"), je("numeric", jr * (1 / 0));
        case "N":
          return G(), Oi("aN"), je("numeric", NaN);
      }
      throw qe(G());
    },
    zero() {
      switch (we) {
        case ".":
          ge += G(), Ee = "decimalPoint";
          return;
        case "e":
        case "E":
          ge += G(), Ee = "decimalExponent";
          return;
        case "x":
        case "X":
          ge += G(), Ee = "hexadecimal";
          return;
      }
      return je("numeric", jr * 0);
    },
    decimalInteger() {
      switch (we) {
        case ".":
          ge += G(), Ee = "decimalPoint";
          return;
        case "e":
        case "E":
          ge += G(), Ee = "decimalExponent";
          return;
      }
      if (at.isDigit(we)) {
        ge += G();
        return;
      }
      return je("numeric", jr * Number(ge));
    },
    decimalPointLeading() {
      if (at.isDigit(we)) {
        ge += G(), Ee = "decimalFraction";
        return;
      }
      throw qe(G());
    },
    decimalPoint() {
      switch (we) {
        case "e":
        case "E":
          ge += G(), Ee = "decimalExponent";
          return;
      }
      if (at.isDigit(we)) {
        ge += G(), Ee = "decimalFraction";
        return;
      }
      return je("numeric", jr * Number(ge));
    },
    decimalFraction() {
      switch (we) {
        case "e":
        case "E":
          ge += G(), Ee = "decimalExponent";
          return;
      }
      if (at.isDigit(we)) {
        ge += G();
        return;
      }
      return je("numeric", jr * Number(ge));
    },
    decimalExponent() {
      switch (we) {
        case "+":
        case "-":
          ge += G(), Ee = "decimalExponentSign";
          return;
      }
      if (at.isDigit(we)) {
        ge += G(), Ee = "decimalExponentInteger";
        return;
      }
      throw qe(G());
    },
    decimalExponentSign() {
      if (at.isDigit(we)) {
        ge += G(), Ee = "decimalExponentInteger";
        return;
      }
      throw qe(G());
    },
    decimalExponentInteger() {
      if (at.isDigit(we)) {
        ge += G();
        return;
      }
      return je("numeric", jr * Number(ge));
    },
    hexadecimal() {
      if (at.isHexDigit(we)) {
        ge += G(), Ee = "hexadecimalInteger";
        return;
      }
      throw qe(G());
    },
    hexadecimalInteger() {
      if (at.isHexDigit(we)) {
        ge += G();
        return;
      }
      return je("numeric", jr * Number(ge));
    },
    string() {
      switch (we) {
        case "\\":
          G(), ge += gT();
          return;
        case '"':
          if (ps)
            return G(), je("string", ge);
          ge += G();
          return;
        case "'":
          if (!ps)
            return G(), je("string", ge);
          ge += G();
          return;
        case `
`:
        case "\r":
          throw qe(G());
        case "\u2028":
        case "\u2029":
          xT(we);
          break;
        case void 0:
          throw qe(G());
      }
      ge += G();
    },
    start() {
      switch (we) {
        case "{":
        case "[":
          return je("punctuator", G());
      }
      Ee = "value";
    },
    beforePropertyName() {
      switch (we) {
        case "$":
        case "_":
          ge = G(), Ee = "identifierName";
          return;
        case "\\":
          G(), Ee = "identifierNameStartEscape";
          return;
        case "}":
          return je("punctuator", G());
        case '"':
        case "'":
          ps = G() === '"', Ee = "string";
          return;
      }
      if (at.isIdStartChar(we)) {
        ge += G(), Ee = "identifierName";
        return;
      }
      throw qe(G());
    },
    afterPropertyName() {
      if (we === ":")
        return je("punctuator", G());
      throw qe(G());
    },
    beforePropertyValue() {
      Ee = "value";
    },
    afterPropertyValue() {
      switch (we) {
        case ",":
        case "}":
          return je("punctuator", G());
      }
      throw qe(G());
    },
    beforeArrayValue() {
      if (we === "]")
        return je("punctuator", G());
      Ee = "value";
    },
    afterArrayValue() {
      switch (we) {
        case ",":
        case "]":
          return je("punctuator", G());
      }
      throw qe(G());
    },
    end() {
      throw qe(G());
    }
  };
  function je(e, t) {
    return {
      type: e,
      value: t,
      line: ai,
      column: lr
    };
  }
  s(je, "newToken");
  function Oi(e) {
    for (let t of e) {
      if ($r() !== t)
        throw qe(G());
      G();
    }
  }
  s(Oi, "literal");
  function gT() {
    switch ($r()) {
      case "b":
        return G(), "\b";
      case "f":
        return G(), "\f";
      case "n":
        return G(), `
`;
      case "r":
        return G(), "\r";
      case "t":
        return G(), "	";
      case "v":
        return G(), "\v";
      case "0":
        if (G(), at.isDigit($r()))
          throw qe(G());
        return "\0";
      case "x":
        return G(), DT();
      case "u":
        return G(), bl();
      case `
`:
      case "\u2028":
      case "\u2029":
        return G(), "";
      case "\r":
        return G(), $r() === `
` && G(), "";
      case "1":
      case "2":
      case "3":
      case "4":
      case "5":
      case "6":
      case "7":
      case "8":
      case "9":
        throw qe(G());
      case void 0:
        throw qe(G());
    }
    return G();
  }
  s(gT, "escape");
  function DT() {
    let e = "", t = $r();
    if (!at.isHexDigit(t) || (e += G(), t = $r(), !at.isHexDigit(t)))
      throw qe(G());
    return e += G(), String.fromCodePoint(parseInt(e, 16));
  }
  s(DT, "hexEscape");
  function bl() {
    let e = "", t = 4;
    for (; t-- > 0; ) {
      let r = $r();
      if (!at.isHexDigit(r))
        throw qe(G());
      e += G();
    }
    return String.fromCodePoint(parseInt(e, 16));
  }
  s(bl, "unicodeEscape");
  var yT = {
    start() {
      if (ut.type === "eof")
        throw Ri();
      yl();
    },
    beforePropertyName() {
      switch (ut.type) {
        case "identifier":
        case "string":
          vl = ut.value, xt = "afterPropertyName";
          return;
        case "punctuator":
          To();
          return;
        case "eof":
          throw Ri();
      }
    },
    afterPropertyName() {
      if (ut.type === "eof")
        throw Ri();
      xt = "beforePropertyValue";
    },
    beforePropertyValue() {
      if (ut.type === "eof")
        throw Ri();
      yl();
    },
    beforeArrayValue() {
      if (ut.type === "eof")
        throw Ri();
      if (ut.type === "punctuator" && ut.value === "]") {
        To();
        return;
      }
      yl();
    },
    afterPropertyValue() {
      if (ut.type === "eof")
        throw Ri();
      switch (ut.value) {
        case ",":
          xt = "beforePropertyName";
          return;
        case "}":
          To();
      }
    },
    afterArrayValue() {
      if (ut.type === "eof")
        throw Ri();
      switch (ut.value) {
        case ",":
          xt = "beforeArrayValue";
          return;
        case "]":
          To();
      }
    },
    end() {
    }
  };
  function yl() {
    let e;
    switch (ut.type) {
      case "punctuator":
        switch (ut.value) {
          case "{":
            e = {};
            break;
          case "[":
            e = [];
            break;
        }
        break;
      case "null":
      case "boolean":
      case "numeric":
      case "string":
        e = ut.value;
        break;
    }
    if (hs === void 0)
      hs = e;
    else {
      let t = qr[qr.length - 1];
      Array.isArray(t) ? t.push(e) : Object.defineProperty(t, vl, {
        value: e,
        writable: !0,
        enumerable: !0,
        configurable: !0
      });
    }
    if (e !== null && typeof e == "object")
      qr.push(e), Array.isArray(e) ? xt = "beforeArrayValue" : xt = "beforePropertyName";
    else {
      let t = qr[qr.length - 1];
      t == null ? xt = "end" : Array.isArray(t) ? xt = "afterArrayValue" : xt = "afterPropertyValue";
    }
  }
  s(yl, "push");
  function To() {
    qr.pop();
    let e = qr[qr.length - 1];
    e == null ? xt = "end" : Array.isArray(e) ? xt = "afterArrayValue" : xt = "afterPropertyValue";
  }
  s(To, "pop");
  function qe(e) {
    return Io(e === void 0 ? `JSON5: invalid end of input at ${ai}:${lr}` : `JSON5: invalid character '${Ag(e)}' at ${ai}:${lr}`);
  }
  s(qe, "invalidChar");
  function Ri() {
    return Io(`JSON5: invalid end of input at ${ai}:${lr}`);
  }
  s(Ri, "invalidEOF");
  function Cg() {
    return lr -= 5, Io(`JSON5: invalid identifier character at ${ai}:${lr}`);
  }
  s(Cg, "invalidIdentifier");
  function xT(e) {
    console.warn(`JSON5: '${Ag(e)}' in strings is not valid ECMAScript; consider escaping`);
  }
  s(xT, "separatorChar");
  function Ag(e) {
    let t = {
      "'": "\\'",
      '"': '\\"',
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\v": "\\v",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    if (t[e])
      return t[e];
    if (e < " ") {
      let r = e.charCodeAt(0).toString(16);
      return "\\x" + ("00" + r).substring(r.length);
    }
    return e;
  }
  s(Ag, "formatChar");
  function Io(e) {
    let t = new SyntaxError(e);
    return t.lineNumber = ai, t.columnNumber = lr, t;
  }
  s(Io, "syntaxError");
});

// ../node_modules/json5/lib/stringify.js
var kg = P((ZK, _g) => {
  var Cl = Dl();
  _g.exports = /* @__PURE__ */ s(function(t, r, i) {
    let n = [], o = "", a, u, l = "", c;
    if (r != null && typeof r == "object" && !Array.isArray(r) && (i = r.space, c = r.quote, r = r.replacer), typeof r == "function")
      u = r;
    else if (Array.isArray(r)) {
      a = [];
      for (let g of r) {
        let b;
        typeof g == "string" ? b = g : (typeof g == "number" || g instanceof String || g instanceof Number) && (b = String(g)), b !== void 0 &&
        a.indexOf(b) < 0 && a.push(b);
      }
    }
    return i instanceof Number ? i = Number(i) : i instanceof String && (i = String(i)), typeof i == "number" ? i > 0 && (i = Math.min(10, Math.
    floor(i)), l = "          ".substr(0, i)) : typeof i == "string" && (l = i.substr(0, 10)), p("", { "": t });
    function p(g, b) {
      let D = b[g];
      switch (D != null && (typeof D.toJSON5 == "function" ? D = D.toJSON5(g) : typeof D.toJSON == "function" && (D = D.toJSON(g))), u && (D =
      u.call(b, g, D)), D instanceof Number ? D = Number(D) : D instanceof String ? D = String(D) : D instanceof Boolean && (D = D.valueOf()),
      D) {
        case null:
          return "null";
        case !0:
          return "true";
        case !1:
          return "false";
      }
      if (typeof D == "string")
        return h(D, !1);
      if (typeof D == "number")
        return String(D);
      if (typeof D == "object")
        return Array.isArray(D) ? m(D) : f(D);
    }
    s(p, "serializeProperty");
    function h(g) {
      let b = {
        "'": 0.1,
        '"': 0.2
      }, D = {
        "'": "\\'",
        '"': '\\"',
        "\\": "\\\\",
        "\b": "\\b",
        "\f": "\\f",
        "\n": "\\n",
        "\r": "\\r",
        "	": "\\t",
        "\v": "\\v",
        "\0": "\\0",
        "\u2028": "\\u2028",
        "\u2029": "\\u2029"
      }, v = "";
      for (let k = 0; k < g.length; k++) {
        let L = g[k];
        switch (L) {
          case "'":
          case '"':
            b[L]++, v += L;
            continue;
          case "\0":
            if (Cl.isDigit(g[k + 1])) {
              v += "\\x00";
              continue;
            }
        }
        if (D[L]) {
          v += D[L];
          continue;
        }
        if (L < " ") {
          let C = L.charCodeAt(0).toString(16);
          v += "\\x" + ("00" + C).substring(C.length);
          continue;
        }
        v += L;
      }
      let S = c || Object.keys(b).reduce((k, L) => b[k] < b[L] ? k : L);
      return v = v.replace(new RegExp(S, "g"), D[S]), S + v + S;
    }
    s(h, "quoteString");
    function f(g) {
      if (n.indexOf(g) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      n.push(g);
      let b = o;
      o = o + l;
      let D = a || Object.keys(g), v = [];
      for (let k of D) {
        let L = p(k, g);
        if (L !== void 0) {
          let C = d(k) + ":";
          l !== "" && (C += " "), C += L, v.push(C);
        }
      }
      let S;
      if (v.length === 0)
        S = "{}";
      else {
        let k;
        if (l === "")
          k = v.join(","), S = "{" + k + "}";
        else {
          let L = `,
` + o;
          k = v.join(L), S = `{
` + o + k + `,
` + b + "}";
        }
      }
      return n.pop(), o = b, S;
    }
    s(f, "serializeObject");
    function d(g) {
      if (g.length === 0)
        return h(g, !0);
      let b = String.fromCodePoint(g.codePointAt(0));
      if (!Cl.isIdStartChar(b))
        return h(g, !0);
      for (let D = b.length; D < g.length; D++)
        if (!Cl.isIdContinueChar(String.fromCodePoint(g.codePointAt(D))))
          return h(g, !0);
      return g;
    }
    s(d, "serializeKey");
    function m(g) {
      if (n.indexOf(g) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      n.push(g);
      let b = o;
      o = o + l;
      let D = [];
      for (let S = 0; S < g.length; S++) {
        let k = p(String(S), g);
        D.push(k !== void 0 ? k : "null");
      }
      let v;
      if (D.length === 0)
        v = "[]";
      else if (l === "")
        v = "[" + D.join(",") + "]";
      else {
        let S = `,
` + o, k = D.join(S);
        v = `[
` + o + k + `,
` + b + "]";
      }
      return n.pop(), o = b, v;
    }
    s(m, "serializeArray");
  }, "stringify");
});

// ../node_modules/json5/lib/index.js
var Bg = P((tY, Tg) => {
  var ET = Fg(), bT = kg(), vT = {
    parse: ET,
    stringify: bT
  };
  Tg.exports = vT;
});

// ../node_modules/strip-bom/index.js
var Pg = P((rY, Ig) => {
  "use strict";
  Ig.exports = (e) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string, got " + typeof e);
    return e.charCodeAt(0) === 65279 ? e.slice(1) : e;
  };
});

// ../node_modules/tsconfig-paths/lib/tsconfig-loader.js
var Ng = P((vr) => {
  "use strict";
  var Ni = vr && vr.__assign || function() {
    return Ni = Object.assign || function(e) {
      for (var t, r = 1, i = arguments.length; r < i; r++) {
        t = arguments[r];
        for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
      }
      return e;
    }, Ni.apply(this, arguments);
  };
  Object.defineProperty(vr, "__esModule", { value: !0 });
  vr.loadTsconfig = vr.walkForTsConfig = vr.tsConfigLoader = void 0;
  var cr = H("path"), fs = H("fs"), CT = Bg(), wT = Pg();
  function AT(e) {
    var t = e.getEnv, r = e.cwd, i = e.loadSync, n = i === void 0 ? ST : i, o = t("TS_NODE_PROJECT"), a = t("TS_NODE_BASEURL"), u = n(r, o, a);
    return u;
  }
  s(AT, "tsConfigLoader");
  vr.tsConfigLoader = AT;
  function ST(e, t, r) {
    var i = FT(e, t);
    if (!i)
      return {
        tsConfigPath: void 0,
        baseUrl: void 0,
        paths: void 0
      };
    var n = Al(i);
    return {
      tsConfigPath: i,
      baseUrl: r || n && n.compilerOptions && n.compilerOptions.baseUrl,
      paths: n && n.compilerOptions && n.compilerOptions.paths
    };
  }
  s(ST, "loadSyncDefault");
  function FT(e, t) {
    if (t) {
      var r = fs.lstatSync(t).isDirectory() ? cr.resolve(t, "./tsconfig.json") : cr.resolve(e, t);
      return r;
    }
    if (fs.statSync(e).isFile())
      return cr.resolve(e);
    var i = wl(e);
    return i ? cr.resolve(i) : void 0;
  }
  s(FT, "resolveConfigPath");
  function wl(e, t) {
    t === void 0 && (t = fs.readdirSync);
    for (var r = t(e), i = ["tsconfig.json", "jsconfig.json"], n = 0, o = i; n < o.length; n++) {
      var a = o[n];
      if (r.indexOf(a) !== -1)
        return cr.join(e, a);
    }
    var u = cr.dirname(e);
    if (e !== u)
      return wl(u, t);
  }
  s(wl, "walkForTsConfig");
  vr.walkForTsConfig = wl;
  function Al(e, t, r) {
    if (t === void 0 && (t = fs.existsSync), r === void 0 && (r = /* @__PURE__ */ s(function(l) {
      return fs.readFileSync(l, "utf8");
    }, "readFileSync")), !!t(e)) {
      var i = r(e), n = wT(i), o;
      try {
        o = CT.parse(n);
      } catch (l) {
        throw new Error("".concat(e, " is malformed ").concat(l.message));
      }
      var a = o.extends;
      if (a) {
        var u = void 0;
        return Array.isArray(a) ? u = a.reduce(function(l, c) {
          return Rg(l, Og(e, c, t, r));
        }, {}) : u = Og(e, a, t, r), Rg(u, o);
      }
      return o;
    }
  }
  s(Al, "loadTsconfig");
  vr.loadTsconfig = Al;
  function Og(e, t, r, i) {
    var n;
    typeof t == "string" && t.indexOf(".json") === -1 && (t += ".json");
    var o = cr.dirname(e), a = cr.join(o, t);
    t.indexOf("/") !== -1 && t.indexOf(".") !== -1 && !r(a) && (a = cr.join(o, "node_modules", t));
    var u = Al(a, r, i) || {};
    if (!((n = u.compilerOptions) === null || n === void 0) && n.baseUrl) {
      var l = cr.dirname(t);
      u.compilerOptions.baseUrl = cr.join(l, u.compilerOptions.baseUrl);
    }
    return u;
  }
  s(Og, "loadTsconfigFromExtends");
  function Rg(e, t) {
    return e = e || {}, t = t || {}, Ni(Ni(Ni({}, e), t), { compilerOptions: Ni(Ni({}, e.compilerOptions), t.compilerOptions) });
  }
  s(Rg, "mergeTsconfigs");
});

// ../node_modules/tsconfig-paths/lib/config-loader.js
var Sl = P((nn) => {
  "use strict";
  Object.defineProperty(nn, "__esModule", { value: !0 });
  nn.configLoader = nn.loadConfig = void 0;
  var _T = Ng(), Po = H("path");
  function kT(e) {
    return e === void 0 && (e = process.cwd()), Lg({ cwd: e });
  }
  s(kT, "loadConfig");
  nn.loadConfig = kT;
  function Lg(e) {
    var t = e.cwd, r = e.explicitParams, i = e.tsConfigLoader, n = i === void 0 ? _T.tsConfigLoader : i;
    if (r) {
      var o = Po.isAbsolute(r.baseUrl) ? r.baseUrl : Po.join(t, r.baseUrl);
      return {
        resultType: "success",
        configFileAbsolutePath: "",
        baseUrl: r.baseUrl,
        absoluteBaseUrl: o,
        paths: r.paths,
        mainFields: r.mainFields,
        addMatchAll: r.addMatchAll
      };
    }
    var a = n({
      cwd: t,
      getEnv: /* @__PURE__ */ s(function(u) {
        return process.env[u];
      }, "getEnv")
    });
    return a.tsConfigPath ? {
      resultType: "success",
      configFileAbsolutePath: a.tsConfigPath,
      baseUrl: a.baseUrl,
      absoluteBaseUrl: Po.resolve(Po.dirname(a.tsConfigPath), a.baseUrl || ""),
      paths: a.paths || {},
      addMatchAll: a.baseUrl !== void 0
    } : {
      resultType: "failed",
      message: "Couldn't find tsconfig.json"
    };
  }
  s(Lg, "configLoader");
  nn.configLoader = Lg;
});

// ../node_modules/minimist/index.js
var $g = P((aY, qg) => {
  "use strict";
  function TT(e, t) {
    var r = e;
    t.slice(0, -1).forEach(function(n) {
      r = r[n] || {};
    });
    var i = t[t.length - 1];
    return i in r;
  }
  s(TT, "hasKey");
  function Mg(e) {
    return typeof e == "number" || /^0x[0-9a-f]+$/i.test(e) ? !0 : /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e);
  }
  s(Mg, "isNumber");
  function jg(e, t) {
    return t === "constructor" && typeof e[t] == "function" || t === "__proto__";
  }
  s(jg, "isConstructorOrProto");
  qg.exports = function(e, t) {
    t || (t = {});
    var r = {
      bools: {},
      strings: {},
      unknownFn: null
    };
    typeof t.unknown == "function" && (r.unknownFn = t.unknown), typeof t.boolean == "boolean" && t.boolean ? r.allBools = !0 : [].concat(t.
    boolean).filter(Boolean).forEach(function(k) {
      r.bools[k] = !0;
    });
    var i = {};
    function n(k) {
      return i[k].some(function(L) {
        return r.bools[L];
      });
    }
    s(n, "aliasIsBoolean"), Object.keys(t.alias || {}).forEach(function(k) {
      i[k] = [].concat(t.alias[k]), i[k].forEach(function(L) {
        i[L] = [k].concat(i[k].filter(function(C) {
          return L !== C;
        }));
      });
    }), [].concat(t.string).filter(Boolean).forEach(function(k) {
      r.strings[k] = !0, i[k] && [].concat(i[k]).forEach(function(L) {
        r.strings[L] = !0;
      });
    });
    var o = t.default || {}, a = { _: [] };
    function u(k, L) {
      return r.allBools && /^--[^=]+$/.test(L) || r.strings[k] || r.bools[k] || i[k];
    }
    s(u, "argDefined");
    function l(k, L, C) {
      for (var w = k, T = 0; T < L.length - 1; T++) {
        var _ = L[T];
        if (jg(w, _))
          return;
        w[_] === void 0 && (w[_] = {}), (w[_] === Object.prototype || w[_] === Number.prototype || w[_] === String.prototype) && (w[_] = {}),
        w[_] === Array.prototype && (w[_] = []), w = w[_];
      }
      var q = L[L.length - 1];
      jg(w, q) || ((w === Object.prototype || w === Number.prototype || w === String.prototype) && (w = {}), w === Array.prototype && (w = []),
      w[q] === void 0 || r.bools[q] || typeof w[q] == "boolean" ? w[q] = C : Array.isArray(w[q]) ? w[q].push(C) : w[q] = [w[q], C]);
    }
    s(l, "setKey");
    function c(k, L, C) {
      if (!(C && r.unknownFn && !u(k, C) && r.unknownFn(C) === !1)) {
        var w = !r.strings[k] && Mg(L) ? Number(L) : L;
        l(a, k.split("."), w), (i[k] || []).forEach(function(T) {
          l(a, T.split("."), w);
        });
      }
    }
    s(c, "setArg"), Object.keys(r.bools).forEach(function(k) {
      c(k, o[k] === void 0 ? !1 : o[k]);
    });
    var p = [];
    e.indexOf("--") !== -1 && (p = e.slice(e.indexOf("--") + 1), e = e.slice(0, e.indexOf("--")));
    for (var h = 0; h < e.length; h++) {
      var f = e[h], d, m;
      if (/^--.+=/.test(f)) {
        var g = f.match(/^--([^=]+)=([\s\S]*)$/);
        d = g[1];
        var b = g[2];
        r.bools[d] && (b = b !== "false"), c(d, b, f);
      } else if (/^--no-.+/.test(f))
        d = f.match(/^--no-(.+)/)[1], c(d, !1, f);
      else if (/^--.+/.test(f))
        d = f.match(/^--(.+)/)[1], m = e[h + 1], m !== void 0 && !/^(-|--)[^-]/.test(m) && !r.bools[d] && !r.allBools && (!i[d] || !n(d)) ? (c(
        d, m, f), h += 1) : /^(true|false)$/.test(m) ? (c(d, m === "true", f), h += 1) : c(d, r.strings[d] ? "" : !0, f);
      else if (/^-[^-]+/.test(f)) {
        for (var D = f.slice(1, -1).split(""), v = !1, S = 0; S < D.length; S++) {
          if (m = f.slice(S + 2), m === "-") {
            c(D[S], m, f);
            continue;
          }
          if (/[A-Za-z]/.test(D[S]) && m[0] === "=") {
            c(D[S], m.slice(1), f), v = !0;
            break;
          }
          if (/[A-Za-z]/.test(D[S]) && /-?\d+(\.\d*)?(e-?\d+)?$/.test(m)) {
            c(D[S], m, f), v = !0;
            break;
          }
          if (D[S + 1] && D[S + 1].match(/\W/)) {
            c(D[S], f.slice(S + 2), f), v = !0;
            break;
          } else
            c(D[S], r.strings[D[S]] ? "" : !0, f);
        }
        d = f.slice(-1)[0], !v && d !== "-" && (e[h + 1] && !/^(-|--)[^-]/.test(e[h + 1]) && !r.bools[d] && (!i[d] || !n(d)) ? (c(d, e[h + 1],
        f), h += 1) : e[h + 1] && /^(true|false)$/.test(e[h + 1]) ? (c(d, e[h + 1] === "true", f), h += 1) : c(d, r.strings[d] ? "" : !0, f));
      } else if ((!r.unknownFn || r.unknownFn(f) !== !1) && a._.push(r.strings._ || !Mg(f) ? f : Number(f)), t.stopEarly) {
        a._.push.apply(a._, e.slice(h + 1));
        break;
      }
    }
    return Object.keys(o).forEach(function(k) {
      TT(a, k.split(".")) || (l(a, k.split("."), o[k]), (i[k] || []).forEach(function(L) {
        l(a, L.split("."), o[k]);
      }));
    }), t["--"] ? a["--"] = p.slice() : p.forEach(function(k) {
      a._.push(k);
    }), a;
  };
});

// ../node_modules/tsconfig-paths/lib/register.js
var Vg = P((sn) => {
  "use strict";
  var BT = sn && sn.__spreadArray || function(e, t, r) {
    if (r || arguments.length === 2) for (var i = 0, n = t.length, o; i < n; i++)
      (o || !(i in t)) && (o || (o = Array.prototype.slice.call(t, 0, i)), o[i] = t[i]);
    return e.concat(o || Array.prototype.slice.call(t));
  };
  Object.defineProperty(sn, "__esModule", { value: !0 });
  sn.register = void 0;
  var IT = dl(), PT = Sl(), OT = /* @__PURE__ */ s(function() {
  }, "noOp");
  function RT(e) {
    e = e || [
      "assert",
      "buffer",
      "child_process",
      "cluster",
      "crypto",
      "dgram",
      "dns",
      "domain",
      "events",
      "fs",
      "http",
      "https",
      "net",
      "os",
      "path",
      "punycode",
      "querystring",
      "readline",
      "stream",
      "string_decoder",
      "tls",
      "tty",
      "url",
      "util",
      "v8",
      "vm",
      "zlib"
    ];
    for (var t = {}, r = 0, i = e; r < i.length; r++) {
      var n = i[r];
      t[n] = !0;
    }
    return t;
  }
  s(RT, "getCoreModules");
  function NT(e) {
    var t, r;
    if (e)
      t = e.cwd, (e.baseUrl || e.paths) && (r = e);
    else {
      var i = $g(), n = i(process.argv.slice(2), {
        // eslint-disable-next-line id-denylist
        string: ["project"],
        alias: {
          project: ["P"]
        }
      });
      t = n.project;
    }
    var o = (0, PT.configLoader)({
      cwd: t ?? process.cwd(),
      explicitParams: r
    });
    if (o.resultType === "failed")
      return console.warn("".concat(o.message, ". tsconfig-paths will be skipped")), OT;
    var a = (0, IT.createMatchPath)(o.absoluteBaseUrl, o.paths, o.mainFields, o.addMatchAll), u = H("module"), l = u._resolveFilename, c = RT(
    u.builtinModules);
    return u._resolveFilename = function(p, h) {
      var f = c.hasOwnProperty(p);
      if (!f) {
        var d = a(p);
        if (d) {
          var m = BT([d], [].slice.call(arguments, 1), !0);
          return l.apply(this, m);
        }
      }
      return l.apply(this, arguments);
    }, function() {
      u._resolveFilename = l;
    };
  }
  s(NT, "register");
  sn.register = NT;
});

// ../node_modules/tsconfig-paths/lib/index.js
var zg = P((_t) => {
  "use strict";
  Object.defineProperty(_t, "__esModule", { value: !0 });
  _t.loadConfig = _t.register = _t.matchFromAbsolutePathsAsync = _t.createMatchPathAsync = _t.matchFromAbsolutePaths = _t.createMatchPath = void 0;
  var Ug = dl();
  Object.defineProperty(_t, "createMatchPath", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return Ug.createMatchPath;
  }, "get") });
  Object.defineProperty(_t, "matchFromAbsolutePaths", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return Ug.matchFromAbsolutePaths;
  }, "get") });
  var Wg = Eg();
  Object.defineProperty(_t, "createMatchPathAsync", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return Wg.createMatchPathAsync;
  }, "get") });
  Object.defineProperty(_t, "matchFromAbsolutePathsAsync", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return Wg.matchFromAbsolutePathsAsync;
  }, "get") });
  var LT = Vg();
  Object.defineProperty(_t, "register", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return LT.register;
  }, "get") });
  var MT = Sl();
  Object.defineProperty(_t, "loadConfig", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return MT.loadConfig;
  }, "get") });
});

// ../node_modules/globby/node_modules/@sindresorhus/merge-streams/index.js
import { on as VT, once as UT } from "node:events";
import { PassThrough as WT } from "node:stream";
import { finished as i0 } from "node:stream/promises";
function Bl(e) {
  if (!Array.isArray(e))
    throw new TypeError(`Expected an array, got \`${typeof e}\`.`);
  for (let n of e)
    kl(n);
  let t = e.some(({ readableObjectMode: n }) => n), r = zT(e, t), i = new _l({
    objectMode: t,
    writableHighWaterMark: r,
    readableHighWaterMark: r
  });
  for (let n of e)
    i.add(n);
  return e.length === 0 && o0(i), i;
}
var zT, _l, HT, JT, GT, kl, XT, n0, KT, YT, QT, s0, o0, Tl, a0, ZT, Oo, t0, r0, u0 = ft(() => {
  s(Bl, "mergeStreams");
  zT = /* @__PURE__ */ s((e, t) => {
    if (e.length === 0)
      return 16384;
    let r = e.filter(({ readableObjectMode: i }) => i === t).map(({ readableHighWaterMark: i }) => i);
    return Math.max(...r);
  }, "getHighWaterMark"), _l = class extends WT {
    static {
      s(this, "MergedStream");
    }
    #e = /* @__PURE__ */ new Set([]);
    #t = /* @__PURE__ */ new Set([]);
    #r = /* @__PURE__ */ new Set([]);
    #i;
    add(t) {
      kl(t), !this.#e.has(t) && (this.#e.add(t), this.#i ??= HT(this, this.#e), XT({
        passThroughStream: this,
        stream: t,
        streams: this.#e,
        ended: this.#t,
        aborted: this.#r,
        onFinished: this.#i
      }), t.pipe(this, { end: !1 }));
    }
    remove(t) {
      return kl(t), this.#e.has(t) ? (t.unpipe(this), !0) : !1;
    }
  }, HT = /* @__PURE__ */ s(async (e, t) => {
    Oo(e, t0);
    let r = new AbortController();
    try {
      await Promise.race([
        JT(e, r),
        GT(e, t, r)
      ]);
    } finally {
      r.abort(), Oo(e, -t0);
    }
  }, "onMergedStreamFinished"), JT = /* @__PURE__ */ s(async (e, { signal: t }) => {
    await i0(e, { signal: t, cleanup: !0 });
  }, "onMergedStreamEnd"), GT = /* @__PURE__ */ s(async (e, t, { signal: r }) => {
    for await (let [i] of VT(e, "unpipe", { signal: r }))
      t.has(i) && i.emit(s0);
  }, "onInputStreamsUnpipe"), kl = /* @__PURE__ */ s((e) => {
    if (typeof e?.pipe != "function")
      throw new TypeError(`Expected a readable stream, got: \`${typeof e}\`.`);
  }, "validateStream"), XT = /* @__PURE__ */ s(async ({ passThroughStream: e, stream: t, streams: r, ended: i, aborted: n, onFinished: o }) => {
    Oo(e, r0);
    let a = new AbortController();
    try {
      await Promise.race([
        KT(o, t),
        YT({ passThroughStream: e, stream: t, streams: r, ended: i, aborted: n, controller: a }),
        QT({ stream: t, streams: r, ended: i, aborted: n, controller: a })
      ]);
    } finally {
      a.abort(), Oo(e, -r0);
    }
    r.size === i.size + n.size && (i.size === 0 && n.size > 0 ? Tl(e) : o0(e));
  }, "endWhenStreamsDone"), n0 = /* @__PURE__ */ s((e) => e?.code === "ERR_STREAM_PREMATURE_CLOSE", "isAbortError"), KT = /* @__PURE__ */ s(
  async (e, t) => {
    try {
      await e, Tl(t);
    } catch (r) {
      n0(r) ? Tl(t) : a0(t, r);
    }
  }, "afterMergedStreamFinished"), YT = /* @__PURE__ */ s(async ({ passThroughStream: e, stream: t, streams: r, ended: i, aborted: n, controller: {
  signal: o } }) => {
    try {
      await i0(t, { signal: o, cleanup: !0, readable: !0, writable: !1 }), r.has(t) && i.add(t);
    } catch (a) {
      if (o.aborted || !r.has(t))
        return;
      n0(a) ? n.add(t) : a0(e, a);
    }
  }, "onInputStreamEnd"), QT = /* @__PURE__ */ s(async ({ stream: e, streams: t, ended: r, aborted: i, controller: { signal: n } }) => {
    await UT(e, s0, { signal: n }), t.delete(e), r.delete(e), i.delete(e);
  }, "onInputStreamUnpipe"), s0 = Symbol("unpipe"), o0 = /* @__PURE__ */ s((e) => {
    e.writable && e.end();
  }, "endStream"), Tl = /* @__PURE__ */ s((e) => {
    (e.readable || e.writable) && e.destroy();
  }, "abortStream"), a0 = /* @__PURE__ */ s((e, t) => {
    e.destroyed || (e.once("error", ZT), e.destroy(t));
  }, "errorStream"), ZT = /* @__PURE__ */ s(() => {
  }, "noop"), Oo = /* @__PURE__ */ s((e, t) => {
    let r = e.getMaxListeners();
    r !== 0 && r !== Number.POSITIVE_INFINITY && e.setMaxListeners(r + t);
  }, "updateMaxListeners"), t0 = 2, r0 = 1;
});

// ../node_modules/fast-glob/out/utils/array.js
var l0 = P((on) => {
  "use strict";
  Object.defineProperty(on, "__esModule", { value: !0 });
  on.splitWhen = on.flatten = void 0;
  function eB(e) {
    return e.reduce((t, r) => [].concat(t, r), []);
  }
  s(eB, "flatten");
  on.flatten = eB;
  function tB(e, t) {
    let r = [[]], i = 0;
    for (let n of e)
      t(n) ? (i++, r[i] = []) : r[i].push(n);
    return r;
  }
  s(tB, "splitWhen");
  on.splitWhen = tB;
});

// ../node_modules/fast-glob/out/utils/errno.js
var c0 = P((Ro) => {
  "use strict";
  Object.defineProperty(Ro, "__esModule", { value: !0 });
  Ro.isEnoentCodeError = void 0;
  function rB(e) {
    return e.code === "ENOENT";
  }
  s(rB, "isEnoentCodeError");
  Ro.isEnoentCodeError = rB;
});

// ../node_modules/fast-glob/out/utils/fs.js
var p0 = P((No) => {
  "use strict";
  Object.defineProperty(No, "__esModule", { value: !0 });
  No.createDirentFromStats = void 0;
  var Il = class {
    static {
      s(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function iB(e, t) {
    return new Il(e, t);
  }
  s(iB, "createDirentFromStats");
  No.createDirentFromStats = iB;
});

// ../node_modules/fast-glob/out/utils/path.js
var m0 = P((rt) => {
  "use strict";
  Object.defineProperty(rt, "__esModule", { value: !0 });
  rt.convertPosixPathToPattern = rt.convertWindowsPathToPattern = rt.convertPathToPattern = rt.escapePosixPath = rt.escapeWindowsPath = rt.escape =
  rt.removeLeadingDotSegment = rt.makeAbsolute = rt.unixify = void 0;
  var nB = H("os"), sB = H("path"), h0 = nB.platform() === "win32", oB = 2, aB = /(\\?)([()*?[\]{|}]|^!|[!+@](?=\()|\\(?![!()*+?@[\]{|}]))/g,
  uB = /(\\?)([()[\]{}]|^!|[!+@](?=\())/g, lB = /^\\\\([.?])/, cB = /\\(?![!()+@[\]{}])/g;
  function pB(e) {
    return e.replace(/\\/g, "/");
  }
  s(pB, "unixify");
  rt.unixify = pB;
  function hB(e, t) {
    return sB.resolve(e, t);
  }
  s(hB, "makeAbsolute");
  rt.makeAbsolute = hB;
  function fB(e) {
    if (e.charAt(0) === ".") {
      let t = e.charAt(1);
      if (t === "/" || t === "\\")
        return e.slice(oB);
    }
    return e;
  }
  s(fB, "removeLeadingDotSegment");
  rt.removeLeadingDotSegment = fB;
  rt.escape = h0 ? Pl : Ol;
  function Pl(e) {
    return e.replace(uB, "\\$2");
  }
  s(Pl, "escapeWindowsPath");
  rt.escapeWindowsPath = Pl;
  function Ol(e) {
    return e.replace(aB, "\\$2");
  }
  s(Ol, "escapePosixPath");
  rt.escapePosixPath = Ol;
  rt.convertPathToPattern = h0 ? f0 : d0;
  function f0(e) {
    return Pl(e).replace(lB, "//$1").replace(cB, "/");
  }
  s(f0, "convertWindowsPathToPattern");
  rt.convertWindowsPathToPattern = f0;
  function d0(e) {
    return Ol(e);
  }
  s(d0, "convertPosixPathToPattern");
  rt.convertPosixPathToPattern = d0;
});

// ../node_modules/is-extglob/index.js
var D0 = P((UY, g0) => {
  g0.exports = /* @__PURE__ */ s(function(t) {
    if (typeof t != "string" || t === "")
      return !1;
    for (var r; r = /(\\).|([@?!+*]\(.*\))/g.exec(t); ) {
      if (r[2]) return !0;
      t = t.slice(r.index + r[0].length);
    }
    return !1;
  }, "isExtglob");
});

// ../node_modules/is-glob/index.js
var E0 = P((zY, x0) => {
  var dB = D0(), y0 = { "{": "}", "(": ")", "[": "]" }, mB = /* @__PURE__ */ s(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0, r = -2, i = -2, n = -2, o = -2, a = -2; t < e.length; ) {
      if (e[t] === "*" || e[t + 1] === "?" && /[\].+)]/.test(e[t]) || i !== -1 && e[t] === "[" && e[t + 1] !== "]" && (i < t && (i = e.indexOf(
      "]", t)), i > t && (a === -1 || a > i || (a = e.indexOf("\\", t), a === -1 || a > i))) || n !== -1 && e[t] === "{" && e[t + 1] !== "}" &&
      (n = e.indexOf("}", t), n > t && (a = e.indexOf("\\", t), a === -1 || a > n)) || o !== -1 && e[t] === "(" && e[t + 1] === "?" && /[:!=]/.
      test(e[t + 2]) && e[t + 3] !== ")" && (o = e.indexOf(")", t), o > t && (a = e.indexOf("\\", t), a === -1 || a > o)) || r !== -1 && e[t] ===
      "(" && e[t + 1] !== "|" && (r < t && (r = e.indexOf("|", t)), r !== -1 && e[r + 1] !== ")" && (o = e.indexOf(")", r), o > r && (a = e.
      indexOf("\\", r), a === -1 || a > o))))
        return !0;
      if (e[t] === "\\") {
        var u = e[t + 1];
        t += 2;
        var l = y0[u];
        if (l) {
          var c = e.indexOf(l, t);
          c !== -1 && (t = c + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "strictCheck"), gB = /* @__PURE__ */ s(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0; t < e.length; ) {
      if (/[*?{}()[\]]/.test(e[t]))
        return !0;
      if (e[t] === "\\") {
        var r = e[t + 1];
        t += 2;
        var i = y0[r];
        if (i) {
          var n = e.indexOf(i, t);
          n !== -1 && (t = n + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "relaxedCheck");
  x0.exports = /* @__PURE__ */ s(function(t, r) {
    if (typeof t != "string" || t === "")
      return !1;
    if (dB(t))
      return !0;
    var i = mB;
    return r && r.strict === !1 && (i = gB), i(t);
  }, "isGlob");
});

// ../node_modules/fast-glob/node_modules/glob-parent/index.js
var v0 = P((JY, b0) => {
  "use strict";
  var DB = E0(), yB = H("path").posix.dirname, xB = H("os").platform() === "win32", Rl = "/", EB = /\\/g, bB = /[\{\[].*[\}\]]$/, vB = /(^|[^\\])([\{\[]|\([^\)]+$)/,
  CB = /\\([\!\*\?\|\[\]\(\)\{\}])/g;
  b0.exports = /* @__PURE__ */ s(function(t, r) {
    var i = Object.assign({ flipBackslashes: !0 }, r);
    i.flipBackslashes && xB && t.indexOf(Rl) < 0 && (t = t.replace(EB, Rl)), bB.test(t) && (t += Rl), t += "a";
    do
      t = yB(t);
    while (DB(t) || vB.test(t));
    return t.replace(CB, "$1");
  }, "globParent");
});

// ../node_modules/braces/lib/utils.js
var Lo = P((zt) => {
  "use strict";
  zt.isInteger = (e) => typeof e == "number" ? Number.isInteger(e) : typeof e == "string" && e.trim() !== "" ? Number.isInteger(Number(e)) :
  !1;
  zt.find = (e, t) => e.nodes.find((r) => r.type === t);
  zt.exceedsLimit = (e, t, r = 1, i) => i === !1 || !zt.isInteger(e) || !zt.isInteger(t) ? !1 : (Number(t) - Number(e)) / Number(r) >= i;
  zt.escapeNode = (e, t = 0, r) => {
    let i = e.nodes[t];
    i && (r && i.type === r || i.type === "open" || i.type === "close") && i.escaped !== !0 && (i.value = "\\" + i.value, i.escaped = !0);
  };
  zt.encloseBrace = (e) => e.type !== "brace" ? !1 : e.commas >> 0 + e.ranges >> 0 === 0 ? (e.invalid = !0, !0) : !1;
  zt.isInvalidBrace = (e) => e.type !== "brace" ? !1 : e.invalid === !0 || e.dollar ? !0 : e.commas >> 0 + e.ranges >> 0 === 0 || e.open !==
  !0 || e.close !== !0 ? (e.invalid = !0, !0) : !1;
  zt.isOpenOrClose = (e) => e.type === "open" || e.type === "close" ? !0 : e.open === !0 || e.close === !0;
  zt.reduce = (e) => e.reduce((t, r) => (r.type === "text" && t.push(r.value), r.type === "range" && (r.type = "text"), t), []);
  zt.flatten = (...e) => {
    let t = [], r = /* @__PURE__ */ s((i) => {
      for (let n = 0; n < i.length; n++) {
        let o = i[n];
        if (Array.isArray(o)) {
          r(o);
          continue;
        }
        o !== void 0 && t.push(o);
      }
      return t;
    }, "flat");
    return r(e), t;
  };
});

// ../node_modules/braces/lib/stringify.js
var Mo = P((YY, w0) => {
  "use strict";
  var C0 = Lo();
  w0.exports = (e, t = {}) => {
    let r = /* @__PURE__ */ s((i, n = {}) => {
      let o = t.escapeInvalid && C0.isInvalidBrace(n), a = i.invalid === !0 && t.escapeInvalid === !0, u = "";
      if (i.value)
        return (o || a) && C0.isOpenOrClose(i) ? "\\" + i.value : i.value;
      if (i.value)
        return i.value;
      if (i.nodes)
        for (let l of i.nodes)
          u += r(l);
      return u;
    }, "stringify");
    return r(e);
  };
});

// ../node_modules/is-number/index.js
var S0 = P((ZY, A0) => {
  "use strict";
  A0.exports = function(e) {
    return typeof e == "number" ? e - e === 0 : typeof e == "string" && e.trim() !== "" ? Number.isFinite ? Number.isFinite(+e) : isFinite(+e) :
    !1;
  };
});

// ../node_modules/to-regex-range/index.js
var R0 = P((eQ, O0) => {
  "use strict";
  var F0 = S0(), Li = /* @__PURE__ */ s((e, t, r) => {
    if (F0(e) === !1)
      throw new TypeError("toRegexRange: expected the first argument to be a number");
    if (t === void 0 || e === t)
      return String(e);
    if (F0(t) === !1)
      throw new TypeError("toRegexRange: expected the second argument to be a number.");
    let i = { relaxZeros: !0, ...r };
    typeof i.strictZeros == "boolean" && (i.relaxZeros = i.strictZeros === !1);
    let n = String(i.relaxZeros), o = String(i.shorthand), a = String(i.capture), u = String(i.wrap), l = e + ":" + t + "=" + n + o + a + u;
    if (Li.cache.hasOwnProperty(l))
      return Li.cache[l].result;
    let c = Math.min(e, t), p = Math.max(e, t);
    if (Math.abs(c - p) === 1) {
      let g = e + "|" + t;
      return i.capture ? `(${g})` : i.wrap === !1 ? g : `(?:${g})`;
    }
    let h = P0(e) || P0(t), f = { min: e, max: t, a: c, b: p }, d = [], m = [];
    if (h && (f.isPadded = h, f.maxLen = String(f.max).length), c < 0) {
      let g = p < 0 ? Math.abs(p) : 1;
      m = _0(g, Math.abs(c), f, i), c = f.a = 0;
    }
    return p >= 0 && (d = _0(c, p, f, i)), f.negatives = m, f.positives = d, f.result = wB(m, d, i), i.capture === !0 ? f.result = `(${f.result}\
)` : i.wrap !== !1 && d.length + m.length > 1 && (f.result = `(?:${f.result})`), Li.cache[l] = f, f.result;
  }, "toRegexRange");
  function wB(e, t, r) {
    let i = Nl(e, t, "-", !1, r) || [], n = Nl(t, e, "", !1, r) || [], o = Nl(e, t, "-?", !0, r) || [];
    return i.concat(o).concat(n).join("|");
  }
  s(wB, "collatePatterns");
  function AB(e, t) {
    let r = 1, i = 1, n = T0(e, r), o = /* @__PURE__ */ new Set([t]);
    for (; e <= n && n <= t; )
      o.add(n), r += 1, n = T0(e, r);
    for (n = B0(t + 1, i) - 1; e < n && n <= t; )
      o.add(n), i += 1, n = B0(t + 1, i) - 1;
    return o = [...o], o.sort(_B), o;
  }
  s(AB, "splitToRanges");
  function SB(e, t, r) {
    if (e === t)
      return { pattern: e, count: [], digits: 0 };
    let i = FB(e, t), n = i.length, o = "", a = 0;
    for (let u = 0; u < n; u++) {
      let [l, c] = i[u];
      l === c ? o += l : l !== "0" || c !== "9" ? o += kB(l, c, r) : a++;
    }
    return a && (o += r.shorthand === !0 ? "\\d" : "[0-9]"), { pattern: o, count: [a], digits: n };
  }
  s(SB, "rangeToPattern");
  function _0(e, t, r, i) {
    let n = AB(e, t), o = [], a = e, u;
    for (let l = 0; l < n.length; l++) {
      let c = n[l], p = SB(String(a), String(c), i), h = "";
      if (!r.isPadded && u && u.pattern === p.pattern) {
        u.count.length > 1 && u.count.pop(), u.count.push(p.count[0]), u.string = u.pattern + I0(u.count), a = c + 1;
        continue;
      }
      r.isPadded && (h = TB(c, r, i)), p.string = h + p.pattern + I0(p.count), o.push(p), a = c + 1, u = p;
    }
    return o;
  }
  s(_0, "splitToPatterns");
  function Nl(e, t, r, i, n) {
    let o = [];
    for (let a of e) {
      let { string: u } = a;
      !i && !k0(t, "string", u) && o.push(r + u), i && k0(t, "string", u) && o.push(r + u);
    }
    return o;
  }
  s(Nl, "filterPatterns");
  function FB(e, t) {
    let r = [];
    for (let i = 0; i < e.length; i++) r.push([e[i], t[i]]);
    return r;
  }
  s(FB, "zip");
  function _B(e, t) {
    return e > t ? 1 : t > e ? -1 : 0;
  }
  s(_B, "compare");
  function k0(e, t, r) {
    return e.some((i) => i[t] === r);
  }
  s(k0, "contains");
  function T0(e, t) {
    return Number(String(e).slice(0, -t) + "9".repeat(t));
  }
  s(T0, "countNines");
  function B0(e, t) {
    return e - e % Math.pow(10, t);
  }
  s(B0, "countZeros");
  function I0(e) {
    let [t = 0, r = ""] = e;
    return r || t > 1 ? `{${t + (r ? "," + r : "")}}` : "";
  }
  s(I0, "toQuantifier");
  function kB(e, t, r) {
    return `[${e}${t - e === 1 ? "" : "-"}${t}]`;
  }
  s(kB, "toCharacterClass");
  function P0(e) {
    return /^-?(0+)\d/.test(e);
  }
  s(P0, "hasPadding");
  function TB(e, t, r) {
    if (!t.isPadded)
      return e;
    let i = Math.abs(t.maxLen - String(e).length), n = r.relaxZeros !== !1;
    switch (i) {
      case 0:
        return "";
      case 1:
        return n ? "0?" : "0";
      case 2:
        return n ? "0{0,2}" : "00";
      default:
        return n ? `0{0,${i}}` : `0{${i}}`;
    }
  }
  s(TB, "padZeros");
  Li.cache = {};
  Li.clearCache = () => Li.cache = {};
  O0.exports = Li;
});

// ../node_modules/fill-range/index.js
var jl = P((rQ, V0) => {
  "use strict";
  var BB = H("util"), L0 = R0(), N0 = /* @__PURE__ */ s((e) => e !== null && typeof e == "object" && !Array.isArray(e), "isObject"), IB = /* @__PURE__ */ s(
  (e) => (t) => e === !0 ? Number(t) : String(t), "transform"), Ll = /* @__PURE__ */ s((e) => typeof e == "number" || typeof e == "string" &&
  e !== "", "isValidValue"), ms = /* @__PURE__ */ s((e) => Number.isInteger(+e), "isNumber"), Ml = /* @__PURE__ */ s((e) => {
    let t = `${e}`, r = -1;
    if (t[0] === "-" && (t = t.slice(1)), t === "0") return !1;
    for (; t[++r] === "0"; ) ;
    return r > 0;
  }, "zeros"), PB = /* @__PURE__ */ s((e, t, r) => typeof e == "string" || typeof t == "string" ? !0 : r.stringify === !0, "stringify"), OB = /* @__PURE__ */ s(
  (e, t, r) => {
    if (t > 0) {
      let i = e[0] === "-" ? "-" : "";
      i && (e = e.slice(1)), e = i + e.padStart(i ? t - 1 : t, "0");
    }
    return r === !1 ? String(e) : e;
  }, "pad"), qo = /* @__PURE__ */ s((e, t) => {
    let r = e[0] === "-" ? "-" : "";
    for (r && (e = e.slice(1), t--); e.length < t; ) e = "0" + e;
    return r ? "-" + e : e;
  }, "toMaxLen"), RB = /* @__PURE__ */ s((e, t, r) => {
    e.negatives.sort((u, l) => u < l ? -1 : u > l ? 1 : 0), e.positives.sort((u, l) => u < l ? -1 : u > l ? 1 : 0);
    let i = t.capture ? "" : "?:", n = "", o = "", a;
    return e.positives.length && (n = e.positives.map((u) => qo(String(u), r)).join("|")), e.negatives.length && (o = `-(${i}${e.negatives.map(
    (u) => qo(String(u), r)).join("|")})`), n && o ? a = `${n}|${o}` : a = n || o, t.wrap ? `(${i}${a})` : a;
  }, "toSequence"), M0 = /* @__PURE__ */ s((e, t, r, i) => {
    if (r)
      return L0(e, t, { wrap: !1, ...i });
    let n = String.fromCharCode(e);
    if (e === t) return n;
    let o = String.fromCharCode(t);
    return `[${n}-${o}]`;
  }, "toRange"), j0 = /* @__PURE__ */ s((e, t, r) => {
    if (Array.isArray(e)) {
      let i = r.wrap === !0, n = r.capture ? "" : "?:";
      return i ? `(${n}${e.join("|")})` : e.join("|");
    }
    return L0(e, t, r);
  }, "toRegex"), q0 = /* @__PURE__ */ s((...e) => new RangeError("Invalid range arguments: " + BB.inspect(...e)), "rangeError"), $0 = /* @__PURE__ */ s(
  (e, t, r) => {
    if (r.strictRanges === !0) throw q0([e, t]);
    return [];
  }, "invalidRange"), NB = /* @__PURE__ */ s((e, t) => {
    if (t.strictRanges === !0)
      throw new TypeError(`Expected step "${e}" to be a number`);
    return [];
  }, "invalidStep"), LB = /* @__PURE__ */ s((e, t, r = 1, i = {}) => {
    let n = Number(e), o = Number(t);
    if (!Number.isInteger(n) || !Number.isInteger(o)) {
      if (i.strictRanges === !0) throw q0([e, t]);
      return [];
    }
    n === 0 && (n = 0), o === 0 && (o = 0);
    let a = n > o, u = String(e), l = String(t), c = String(r);
    r = Math.max(Math.abs(r), 1);
    let p = Ml(u) || Ml(l) || Ml(c), h = p ? Math.max(u.length, l.length, c.length) : 0, f = p === !1 && PB(e, t, i) === !1, d = i.transform ||
    IB(f);
    if (i.toRegex && r === 1)
      return M0(qo(e, h), qo(t, h), !0, i);
    let m = { negatives: [], positives: [] }, g = /* @__PURE__ */ s((v) => m[v < 0 ? "negatives" : "positives"].push(Math.abs(v)), "push"), b = [],
    D = 0;
    for (; a ? n >= o : n <= o; )
      i.toRegex === !0 && r > 1 ? g(n) : b.push(OB(d(n, D), h, f)), n = a ? n - r : n + r, D++;
    return i.toRegex === !0 ? r > 1 ? RB(m, i, h) : j0(b, null, { wrap: !1, ...i }) : b;
  }, "fillNumbers"), MB = /* @__PURE__ */ s((e, t, r = 1, i = {}) => {
    if (!ms(e) && e.length > 1 || !ms(t) && t.length > 1)
      return $0(e, t, i);
    let n = i.transform || ((f) => String.fromCharCode(f)), o = `${e}`.charCodeAt(0), a = `${t}`.charCodeAt(0), u = o > a, l = Math.min(o, a),
    c = Math.max(o, a);
    if (i.toRegex && r === 1)
      return M0(l, c, !1, i);
    let p = [], h = 0;
    for (; u ? o >= a : o <= a; )
      p.push(n(o, h)), o = u ? o - r : o + r, h++;
    return i.toRegex === !0 ? j0(p, null, { wrap: !1, options: i }) : p;
  }, "fillLetters"), jo = /* @__PURE__ */ s((e, t, r, i = {}) => {
    if (t == null && Ll(e))
      return [e];
    if (!Ll(e) || !Ll(t))
      return $0(e, t, i);
    if (typeof r == "function")
      return jo(e, t, 1, { transform: r });
    if (N0(r))
      return jo(e, t, 0, r);
    let n = { ...i };
    return n.capture === !0 && (n.wrap = !0), r = r || n.step || 1, ms(r) ? ms(e) && ms(t) ? LB(e, t, r, n) : MB(e, t, Math.max(Math.abs(r),
    1), n) : r != null && !N0(r) ? NB(r, n) : jo(e, t, 1, r);
  }, "fill");
  V0.exports = jo;
});

// ../node_modules/braces/lib/compile.js
var z0 = P((nQ, W0) => {
  "use strict";
  var jB = jl(), U0 = Lo(), qB = /* @__PURE__ */ s((e, t = {}) => {
    let r = /* @__PURE__ */ s((i, n = {}) => {
      let o = U0.isInvalidBrace(n), a = i.invalid === !0 && t.escapeInvalid === !0, u = o === !0 || a === !0, l = t.escapeInvalid === !0 ? "\
\\" : "", c = "";
      if (i.isOpen === !0)
        return l + i.value;
      if (i.isClose === !0)
        return console.log("node.isClose", l, i.value), l + i.value;
      if (i.type === "open")
        return u ? l + i.value : "(";
      if (i.type === "close")
        return u ? l + i.value : ")";
      if (i.type === "comma")
        return i.prev.type === "comma" ? "" : u ? i.value : "|";
      if (i.value)
        return i.value;
      if (i.nodes && i.ranges > 0) {
        let p = U0.reduce(i.nodes), h = jB(...p, { ...t, wrap: !1, toRegex: !0, strictZeros: !0 });
        if (h.length !== 0)
          return p.length > 1 && h.length > 1 ? `(${h})` : h;
      }
      if (i.nodes)
        for (let p of i.nodes)
          c += r(p, i);
      return c;
    }, "walk");
    return r(e);
  }, "compile");
  W0.exports = qB;
});

// ../node_modules/braces/lib/expand.js
var G0 = P((oQ, J0) => {
  "use strict";
  var $B = jl(), H0 = Mo(), an = Lo(), Mi = /* @__PURE__ */ s((e = "", t = "", r = !1) => {
    let i = [];
    if (e = [].concat(e), t = [].concat(t), !t.length) return e;
    if (!e.length)
      return r ? an.flatten(t).map((n) => `{${n}}`) : t;
    for (let n of e)
      if (Array.isArray(n))
        for (let o of n)
          i.push(Mi(o, t, r));
      else
        for (let o of t)
          r === !0 && typeof o == "string" && (o = `{${o}}`), i.push(Array.isArray(o) ? Mi(n, o, r) : n + o);
    return an.flatten(i);
  }, "append"), VB = /* @__PURE__ */ s((e, t = {}) => {
    let r = t.rangeLimit === void 0 ? 1e3 : t.rangeLimit, i = /* @__PURE__ */ s((n, o = {}) => {
      n.queue = [];
      let a = o, u = o.queue;
      for (; a.type !== "brace" && a.type !== "root" && a.parent; )
        a = a.parent, u = a.queue;
      if (n.invalid || n.dollar) {
        u.push(Mi(u.pop(), H0(n, t)));
        return;
      }
      if (n.type === "brace" && n.invalid !== !0 && n.nodes.length === 2) {
        u.push(Mi(u.pop(), ["{}"]));
        return;
      }
      if (n.nodes && n.ranges > 0) {
        let h = an.reduce(n.nodes);
        if (an.exceedsLimit(...h, t.step, r))
          throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");
        let f = $B(...h, t);
        f.length === 0 && (f = H0(n, t)), u.push(Mi(u.pop(), f)), n.nodes = [];
        return;
      }
      let l = an.encloseBrace(n), c = n.queue, p = n;
      for (; p.type !== "brace" && p.type !== "root" && p.parent; )
        p = p.parent, c = p.queue;
      for (let h = 0; h < n.nodes.length; h++) {
        let f = n.nodes[h];
        if (f.type === "comma" && n.type === "brace") {
          h === 1 && c.push(""), c.push("");
          continue;
        }
        if (f.type === "close") {
          u.push(Mi(u.pop(), c, l));
          continue;
        }
        if (f.value && f.type !== "open") {
          c.push(Mi(c.pop(), f.value));
          continue;
        }
        f.nodes && i(f, n);
      }
      return c;
    }, "walk");
    return an.flatten(i(e));
  }, "expand");
  J0.exports = VB;
});

// ../node_modules/braces/lib/constants.js
var K0 = P((uQ, X0) => {
  "use strict";
  X0.exports = {
    MAX_LENGTH: 1e4,
    // Digits
    CHAR_0: "0",
    /* 0 */
    CHAR_9: "9",
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: "A",
    /* A */
    CHAR_LOWERCASE_A: "a",
    /* a */
    CHAR_UPPERCASE_Z: "Z",
    /* Z */
    CHAR_LOWERCASE_Z: "z",
    /* z */
    CHAR_LEFT_PARENTHESES: "(",
    /* ( */
    CHAR_RIGHT_PARENTHESES: ")",
    /* ) */
    CHAR_ASTERISK: "*",
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: "&",
    /* & */
    CHAR_AT: "@",
    /* @ */
    CHAR_BACKSLASH: "\\",
    /* \ */
    CHAR_BACKTICK: "`",
    /* ` */
    CHAR_CARRIAGE_RETURN: "\r",
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: "^",
    /* ^ */
    CHAR_COLON: ":",
    /* : */
    CHAR_COMMA: ",",
    /* , */
    CHAR_DOLLAR: "$",
    /* . */
    CHAR_DOT: ".",
    /* . */
    CHAR_DOUBLE_QUOTE: '"',
    /* " */
    CHAR_EQUAL: "=",
    /* = */
    CHAR_EXCLAMATION_MARK: "!",
    /* ! */
    CHAR_FORM_FEED: "\f",
    /* \f */
    CHAR_FORWARD_SLASH: "/",
    /* / */
    CHAR_HASH: "#",
    /* # */
    CHAR_HYPHEN_MINUS: "-",
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: "<",
    /* < */
    CHAR_LEFT_CURLY_BRACE: "{",
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: "[",
    /* [ */
    CHAR_LINE_FEED: `
`,
    /* \n */
    CHAR_NO_BREAK_SPACE: "\xA0",
    /* \u00A0 */
    CHAR_PERCENT: "%",
    /* % */
    CHAR_PLUS: "+",
    /* + */
    CHAR_QUESTION_MARK: "?",
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: ">",
    /* > */
    CHAR_RIGHT_CURLY_BRACE: "}",
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: "]",
    /* ] */
    CHAR_SEMICOLON: ";",
    /* ; */
    CHAR_SINGLE_QUOTE: "'",
    /* ' */
    CHAR_SPACE: " ",
    /*   */
    CHAR_TAB: "	",
    /* \t */
    CHAR_UNDERSCORE: "_",
    /* _ */
    CHAR_VERTICAL_LINE: "|",
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: "\uFEFF"
    /* \uFEFF */
  };
});

// ../node_modules/braces/lib/parse.js
var tD = P((lQ, eD) => {
  "use strict";
  var UB = Mo(), {
    MAX_LENGTH: Y0,
    CHAR_BACKSLASH: ql,
    /* \ */
    CHAR_BACKTICK: WB,
    /* ` */
    CHAR_COMMA: zB,
    /* , */
    CHAR_DOT: HB,
    /* . */
    CHAR_LEFT_PARENTHESES: JB,
    /* ( */
    CHAR_RIGHT_PARENTHESES: GB,
    /* ) */
    CHAR_LEFT_CURLY_BRACE: XB,
    /* { */
    CHAR_RIGHT_CURLY_BRACE: KB,
    /* } */
    CHAR_LEFT_SQUARE_BRACKET: Q0,
    /* [ */
    CHAR_RIGHT_SQUARE_BRACKET: Z0,
    /* ] */
    CHAR_DOUBLE_QUOTE: YB,
    /* " */
    CHAR_SINGLE_QUOTE: QB,
    /* ' */
    CHAR_NO_BREAK_SPACE: ZB,
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: e6
  } = K0(), t6 = /* @__PURE__ */ s((e, t = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    let r = t || {}, i = typeof r.maxLength == "number" ? Math.min(Y0, r.maxLength) : Y0;
    if (e.length > i)
      throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${i})`);
    let n = { type: "root", input: e, nodes: [] }, o = [n], a = n, u = n, l = 0, c = e.length, p = 0, h = 0, f, d = /* @__PURE__ */ s(() => e[p++],
    "advance"), m = /* @__PURE__ */ s((g) => {
      if (g.type === "text" && u.type === "dot" && (u.type = "text"), u && u.type === "text" && g.type === "text") {
        u.value += g.value;
        return;
      }
      return a.nodes.push(g), g.parent = a, g.prev = u, u = g, g;
    }, "push");
    for (m({ type: "bos" }); p < c; )
      if (a = o[o.length - 1], f = d(), !(f === e6 || f === ZB)) {
        if (f === ql) {
          m({ type: "text", value: (t.keepEscaping ? f : "") + d() });
          continue;
        }
        if (f === Z0) {
          m({ type: "text", value: "\\" + f });
          continue;
        }
        if (f === Q0) {
          l++;
          let g;
          for (; p < c && (g = d()); ) {
            if (f += g, g === Q0) {
              l++;
              continue;
            }
            if (g === ql) {
              f += d();
              continue;
            }
            if (g === Z0 && (l--, l === 0))
              break;
          }
          m({ type: "text", value: f });
          continue;
        }
        if (f === JB) {
          a = m({ type: "paren", nodes: [] }), o.push(a), m({ type: "text", value: f });
          continue;
        }
        if (f === GB) {
          if (a.type !== "paren") {
            m({ type: "text", value: f });
            continue;
          }
          a = o.pop(), m({ type: "text", value: f }), a = o[o.length - 1];
          continue;
        }
        if (f === YB || f === QB || f === WB) {
          let g = f, b;
          for (t.keepQuotes !== !0 && (f = ""); p < c && (b = d()); ) {
            if (b === ql) {
              f += b + d();
              continue;
            }
            if (b === g) {
              t.keepQuotes === !0 && (f += b);
              break;
            }
            f += b;
          }
          m({ type: "text", value: f });
          continue;
        }
        if (f === XB) {
          h++;
          let b = {
            type: "brace",
            open: !0,
            close: !1,
            dollar: u.value && u.value.slice(-1) === "$" || a.dollar === !0,
            depth: h,
            commas: 0,
            ranges: 0,
            nodes: []
          };
          a = m(b), o.push(a), m({ type: "open", value: f });
          continue;
        }
        if (f === KB) {
          if (a.type !== "brace") {
            m({ type: "text", value: f });
            continue;
          }
          let g = "close";
          a = o.pop(), a.close = !0, m({ type: g, value: f }), h--, a = o[o.length - 1];
          continue;
        }
        if (f === zB && h > 0) {
          if (a.ranges > 0) {
            a.ranges = 0;
            let g = a.nodes.shift();
            a.nodes = [g, { type: "text", value: UB(a) }];
          }
          m({ type: "comma", value: f }), a.commas++;
          continue;
        }
        if (f === HB && h > 0 && a.commas === 0) {
          let g = a.nodes;
          if (h === 0 || g.length === 0) {
            m({ type: "text", value: f });
            continue;
          }
          if (u.type === "dot") {
            if (a.range = [], u.value += f, u.type = "range", a.nodes.length !== 3 && a.nodes.length !== 5) {
              a.invalid = !0, a.ranges = 0, u.type = "text";
              continue;
            }
            a.ranges++, a.args = [];
            continue;
          }
          if (u.type === "range") {
            g.pop();
            let b = g[g.length - 1];
            b.value += u.value + f, u = b, a.ranges--;
            continue;
          }
          m({ type: "dot", value: f });
          continue;
        }
        m({ type: "text", value: f });
      }
    do
      if (a = o.pop(), a.type !== "root") {
        a.nodes.forEach((D) => {
          D.nodes || (D.type === "open" && (D.isOpen = !0), D.type === "close" && (D.isClose = !0), D.nodes || (D.type = "text"), D.invalid =
          !0);
        });
        let g = o[o.length - 1], b = g.nodes.indexOf(a);
        g.nodes.splice(b, 1, ...a.nodes);
      }
    while (o.length > 0);
    return m({ type: "eos" }), n;
  }, "parse");
  eD.exports = t6;
});

// ../node_modules/braces/index.js
var nD = P((pQ, iD) => {
  "use strict";
  var rD = Mo(), r6 = z0(), i6 = G0(), n6 = tD(), Nt = /* @__PURE__ */ s((e, t = {}) => {
    let r = [];
    if (Array.isArray(e))
      for (let i of e) {
        let n = Nt.create(i, t);
        Array.isArray(n) ? r.push(...n) : r.push(n);
      }
    else
      r = [].concat(Nt.create(e, t));
    return t && t.expand === !0 && t.nodupes === !0 && (r = [...new Set(r)]), r;
  }, "braces");
  Nt.parse = (e, t = {}) => n6(e, t);
  Nt.stringify = (e, t = {}) => rD(typeof e == "string" ? Nt.parse(e, t) : e, t);
  Nt.compile = (e, t = {}) => (typeof e == "string" && (e = Nt.parse(e, t)), r6(e, t));
  Nt.expand = (e, t = {}) => {
    typeof e == "string" && (e = Nt.parse(e, t));
    let r = i6(e, t);
    return t.noempty === !0 && (r = r.filter(Boolean)), t.nodupes === !0 && (r = [...new Set(r)]), r;
  };
  Nt.create = (e, t = {}) => e === "" || e.length < 3 ? [e] : t.expand !== !0 ? Nt.compile(e, t) : Nt.expand(e, t);
  iD.exports = Nt;
});

// ../node_modules/picomatch/lib/constants.js
var gs = P((fQ, lD) => {
  "use strict";
  var s6 = H("path"), wr = "\\\\/", sD = `[^${wr}]`, Vr = "\\.", o6 = "\\+", a6 = "\\?", $o = "\\/", u6 = "(?=.)", oD = "[^/]", $l = `(?:${$o}\
|$)`, aD = `(?:^|${$o})`, Vl = `${Vr}{1,2}${$l}`, l6 = `(?!${Vr})`, c6 = `(?!${aD}${Vl})`, p6 = `(?!${Vr}{0,1}${$l})`, h6 = `(?!${Vl})`, f6 = `\
[^.${$o}]`, d6 = `${oD}*?`, uD = {
    DOT_LITERAL: Vr,
    PLUS_LITERAL: o6,
    QMARK_LITERAL: a6,
    SLASH_LITERAL: $o,
    ONE_CHAR: u6,
    QMARK: oD,
    END_ANCHOR: $l,
    DOTS_SLASH: Vl,
    NO_DOT: l6,
    NO_DOTS: c6,
    NO_DOT_SLASH: p6,
    NO_DOTS_SLASH: h6,
    QMARK_NO_DOT: f6,
    STAR: d6,
    START_ANCHOR: aD
  }, m6 = {
    ...uD,
    SLASH_LITERAL: `[${wr}]`,
    QMARK: sD,
    STAR: `${sD}*?`,
    DOTS_SLASH: `${Vr}{1,2}(?:[${wr}]|$)`,
    NO_DOT: `(?!${Vr})`,
    NO_DOTS: `(?!(?:^|[${wr}])${Vr}{1,2}(?:[${wr}]|$))`,
    NO_DOT_SLASH: `(?!${Vr}{0,1}(?:[${wr}]|$))`,
    NO_DOTS_SLASH: `(?!${Vr}{1,2}(?:[${wr}]|$))`,
    QMARK_NO_DOT: `[^.${wr}]`,
    START_ANCHOR: `(?:^|[${wr}])`,
    END_ANCHOR: `(?:[${wr}]|$)`
  }, g6 = {
    alnum: "a-zA-Z0-9",
    alpha: "a-zA-Z",
    ascii: "\\x00-\\x7F",
    blank: " \\t",
    cntrl: "\\x00-\\x1F\\x7F",
    digit: "0-9",
    graph: "\\x21-\\x7E",
    lower: "a-z",
    print: "\\x20-\\x7E ",
    punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",
    space: " \\t\\r\\n\\v\\f",
    upper: "A-Z",
    word: "A-Za-z0-9_",
    xdigit: "A-Fa-f0-9"
  };
  lD.exports = {
    MAX_LENGTH: 1024 * 64,
    POSIX_REGEX_SOURCE: g6,
    // regular expressions
    REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
    REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
    REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
    REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
    REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
    REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,
    // Replace globs with equivalent patterns to reduce parsing time.
    REPLACEMENTS: {
      "***": "*",
      "**/**": "**",
      "**/**/**": "**"
    },
    // Digits
    CHAR_0: 48,
    /* 0 */
    CHAR_9: 57,
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: 65,
    /* A */
    CHAR_LOWERCASE_A: 97,
    /* a */
    CHAR_UPPERCASE_Z: 90,
    /* Z */
    CHAR_LOWERCASE_Z: 122,
    /* z */
    CHAR_LEFT_PARENTHESES: 40,
    /* ( */
    CHAR_RIGHT_PARENTHESES: 41,
    /* ) */
    CHAR_ASTERISK: 42,
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: 38,
    /* & */
    CHAR_AT: 64,
    /* @ */
    CHAR_BACKWARD_SLASH: 92,
    /* \ */
    CHAR_CARRIAGE_RETURN: 13,
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: 94,
    /* ^ */
    CHAR_COLON: 58,
    /* : */
    CHAR_COMMA: 44,
    /* , */
    CHAR_DOT: 46,
    /* . */
    CHAR_DOUBLE_QUOTE: 34,
    /* " */
    CHAR_EQUAL: 61,
    /* = */
    CHAR_EXCLAMATION_MARK: 33,
    /* ! */
    CHAR_FORM_FEED: 12,
    /* \f */
    CHAR_FORWARD_SLASH: 47,
    /* / */
    CHAR_GRAVE_ACCENT: 96,
    /* ` */
    CHAR_HASH: 35,
    /* # */
    CHAR_HYPHEN_MINUS: 45,
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: 60,
    /* < */
    CHAR_LEFT_CURLY_BRACE: 123,
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: 91,
    /* [ */
    CHAR_LINE_FEED: 10,
    /* \n */
    CHAR_NO_BREAK_SPACE: 160,
    /* \u00A0 */
    CHAR_PERCENT: 37,
    /* % */
    CHAR_PLUS: 43,
    /* + */
    CHAR_QUESTION_MARK: 63,
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: 62,
    /* > */
    CHAR_RIGHT_CURLY_BRACE: 125,
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: 93,
    /* ] */
    CHAR_SEMICOLON: 59,
    /* ; */
    CHAR_SINGLE_QUOTE: 39,
    /* ' */
    CHAR_SPACE: 32,
    /*   */
    CHAR_TAB: 9,
    /* \t */
    CHAR_UNDERSCORE: 95,
    /* _ */
    CHAR_VERTICAL_LINE: 124,
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,
    /* \uFEFF */
    SEP: s6.sep,
    /**
     * Create EXTGLOB_CHARS
     */
    extglobChars(e) {
      return {
        "!": { type: "negate", open: "(?:(?!(?:", close: `))${e.STAR})` },
        "?": { type: "qmark", open: "(?:", close: ")?" },
        "+": { type: "plus", open: "(?:", close: ")+" },
        "*": { type: "star", open: "(?:", close: ")*" },
        "@": { type: "at", open: "(?:", close: ")" }
      };
    },
    /**
     * Create GLOB_CHARS
     */
    globChars(e) {
      return e === !0 ? m6 : uD;
    }
  };
});

// ../node_modules/picomatch/lib/utils.js
var Ds = P((kt) => {
  "use strict";
  var D6 = H("path"), y6 = process.platform === "win32", {
    REGEX_BACKSLASH: x6,
    REGEX_REMOVE_BACKSLASH: E6,
    REGEX_SPECIAL_CHARS: b6,
    REGEX_SPECIAL_CHARS_GLOBAL: v6
  } = gs();
  kt.isObject = (e) => e !== null && typeof e == "object" && !Array.isArray(e);
  kt.hasRegexChars = (e) => b6.test(e);
  kt.isRegexChar = (e) => e.length === 1 && kt.hasRegexChars(e);
  kt.escapeRegex = (e) => e.replace(v6, "\\$1");
  kt.toPosixSlashes = (e) => e.replace(x6, "/");
  kt.removeBackslashes = (e) => e.replace(E6, (t) => t === "\\" ? "" : t);
  kt.supportsLookbehinds = () => {
    let e = process.version.slice(1).split(".").map(Number);
    return e.length === 3 && e[0] >= 9 || e[0] === 8 && e[1] >= 10;
  };
  kt.isWindows = (e) => e && typeof e.windows == "boolean" ? e.windows : y6 === !0 || D6.sep === "\\";
  kt.escapeLast = (e, t, r) => {
    let i = e.lastIndexOf(t, r);
    return i === -1 ? e : e[i - 1] === "\\" ? kt.escapeLast(e, t, i - 1) : `${e.slice(0, i)}\\${e.slice(i)}`;
  };
  kt.removePrefix = (e, t = {}) => {
    let r = e;
    return r.startsWith("./") && (r = r.slice(2), t.prefix = "./"), r;
  };
  kt.wrapOutput = (e, t = {}, r = {}) => {
    let i = r.contains ? "" : "^", n = r.contains ? "" : "$", o = `${i}(?:${e})${n}`;
    return t.negated === !0 && (o = `(?:^(?!${o}).*$)`), o;
  };
});

// ../node_modules/picomatch/lib/scan.js
var DD = P((mQ, gD) => {
  "use strict";
  var cD = Ds(), {
    CHAR_ASTERISK: Ul,
    /* * */
    CHAR_AT: C6,
    /* @ */
    CHAR_BACKWARD_SLASH: ys,
    /* \ */
    CHAR_COMMA: w6,
    /* , */
    CHAR_DOT: Wl,
    /* . */
    CHAR_EXCLAMATION_MARK: zl,
    /* ! */
    CHAR_FORWARD_SLASH: mD,
    /* / */
    CHAR_LEFT_CURLY_BRACE: Hl,
    /* { */
    CHAR_LEFT_PARENTHESES: Jl,
    /* ( */
    CHAR_LEFT_SQUARE_BRACKET: A6,
    /* [ */
    CHAR_PLUS: S6,
    /* + */
    CHAR_QUESTION_MARK: pD,
    /* ? */
    CHAR_RIGHT_CURLY_BRACE: F6,
    /* } */
    CHAR_RIGHT_PARENTHESES: hD,
    /* ) */
    CHAR_RIGHT_SQUARE_BRACKET: _6
    /* ] */
  } = gs(), fD = /* @__PURE__ */ s((e) => e === mD || e === ys, "isPathSeparator"), dD = /* @__PURE__ */ s((e) => {
    e.isPrefix !== !0 && (e.depth = e.isGlobstar ? 1 / 0 : 1);
  }, "depth"), k6 = /* @__PURE__ */ s((e, t) => {
    let r = t || {}, i = e.length - 1, n = r.parts === !0 || r.scanToEnd === !0, o = [], a = [], u = [], l = e, c = -1, p = 0, h = 0, f = !1,
    d = !1, m = !1, g = !1, b = !1, D = !1, v = !1, S = !1, k = !1, L = !1, C = 0, w, T, _ = { value: "", depth: 0, isGlob: !1 }, q = /* @__PURE__ */ s(
    () => c >= i, "eos"), O = /* @__PURE__ */ s(() => l.charCodeAt(c + 1), "peek"), $ = /* @__PURE__ */ s(() => (w = T, l.charCodeAt(++c)), "\
advance");
    for (; c < i; ) {
      T = $();
      let U;
      if (T === ys) {
        v = _.backslashes = !0, T = $(), T === Hl && (D = !0);
        continue;
      }
      if (D === !0 || T === Hl) {
        for (C++; q() !== !0 && (T = $()); ) {
          if (T === ys) {
            v = _.backslashes = !0, $();
            continue;
          }
          if (T === Hl) {
            C++;
            continue;
          }
          if (D !== !0 && T === Wl && (T = $()) === Wl) {
            if (f = _.isBrace = !0, m = _.isGlob = !0, L = !0, n === !0)
              continue;
            break;
          }
          if (D !== !0 && T === w6) {
            if (f = _.isBrace = !0, m = _.isGlob = !0, L = !0, n === !0)
              continue;
            break;
          }
          if (T === F6 && (C--, C === 0)) {
            D = !1, f = _.isBrace = !0, L = !0;
            break;
          }
        }
        if (n === !0)
          continue;
        break;
      }
      if (T === mD) {
        if (o.push(c), a.push(_), _ = { value: "", depth: 0, isGlob: !1 }, L === !0) continue;
        if (w === Wl && c === p + 1) {
          p += 2;
          continue;
        }
        h = c + 1;
        continue;
      }
      if (r.noext !== !0 && (T === S6 || T === C6 || T === Ul || T === pD || T === zl) === !0 && O() === Jl) {
        if (m = _.isGlob = !0, g = _.isExtglob = !0, L = !0, T === zl && c === p && (k = !0), n === !0) {
          for (; q() !== !0 && (T = $()); ) {
            if (T === ys) {
              v = _.backslashes = !0, T = $();
              continue;
            }
            if (T === hD) {
              m = _.isGlob = !0, L = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (T === Ul) {
        if (w === Ul && (b = _.isGlobstar = !0), m = _.isGlob = !0, L = !0, n === !0)
          continue;
        break;
      }
      if (T === pD) {
        if (m = _.isGlob = !0, L = !0, n === !0)
          continue;
        break;
      }
      if (T === A6) {
        for (; q() !== !0 && (U = $()); ) {
          if (U === ys) {
            v = _.backslashes = !0, $();
            continue;
          }
          if (U === _6) {
            d = _.isBracket = !0, m = _.isGlob = !0, L = !0;
            break;
          }
        }
        if (n === !0)
          continue;
        break;
      }
      if (r.nonegate !== !0 && T === zl && c === p) {
        S = _.negated = !0, p++;
        continue;
      }
      if (r.noparen !== !0 && T === Jl) {
        if (m = _.isGlob = !0, n === !0) {
          for (; q() !== !0 && (T = $()); ) {
            if (T === Jl) {
              v = _.backslashes = !0, T = $();
              continue;
            }
            if (T === hD) {
              L = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (m === !0) {
        if (L = !0, n === !0)
          continue;
        break;
      }
    }
    r.noext === !0 && (g = !1, m = !1);
    let V = l, K = "", M = "";
    p > 0 && (K = l.slice(0, p), l = l.slice(p), h -= p), V && m === !0 && h > 0 ? (V = l.slice(0, h), M = l.slice(h)) : m === !0 ? (V = "",
    M = l) : V = l, V && V !== "" && V !== "/" && V !== l && fD(V.charCodeAt(V.length - 1)) && (V = V.slice(0, -1)), r.unescape === !0 && (M &&
    (M = cD.removeBackslashes(M)), V && v === !0 && (V = cD.removeBackslashes(V)));
    let R = {
      prefix: K,
      input: e,
      start: p,
      base: V,
      glob: M,
      isBrace: f,
      isBracket: d,
      isGlob: m,
      isExtglob: g,
      isGlobstar: b,
      negated: S,
      negatedExtglob: k
    };
    if (r.tokens === !0 && (R.maxDepth = 0, fD(T) || a.push(_), R.tokens = a), r.parts === !0 || r.tokens === !0) {
      let U;
      for (let Y = 0; Y < o.length; Y++) {
        let ee = U ? U + 1 : p, I = o[Y], se = e.slice(ee, I);
        r.tokens && (Y === 0 && p !== 0 ? (a[Y].isPrefix = !0, a[Y].value = K) : a[Y].value = se, dD(a[Y]), R.maxDepth += a[Y].depth), (Y !==
        0 || se !== "") && u.push(se), U = I;
      }
      if (U && U + 1 < e.length) {
        let Y = e.slice(U + 1);
        u.push(Y), r.tokens && (a[a.length - 1].value = Y, dD(a[a.length - 1]), R.maxDepth += a[a.length - 1].depth);
      }
      R.slashes = o, R.parts = u;
    }
    return R;
  }, "scan");
  gD.exports = k6;
});

// ../node_modules/picomatch/lib/parse.js
var ED = P((DQ, xD) => {
  "use strict";
  var Vo = gs(), Lt = Ds(), {
    MAX_LENGTH: Uo,
    POSIX_REGEX_SOURCE: T6,
    REGEX_NON_SPECIAL_CHARS: B6,
    REGEX_SPECIAL_CHARS_BACKREF: I6,
    REPLACEMENTS: yD
  } = Vo, P6 = /* @__PURE__ */ s((e, t) => {
    if (typeof t.expandRange == "function")
      return t.expandRange(...e, t);
    e.sort();
    let r = `[${e.join("-")}]`;
    try {
      new RegExp(r);
    } catch {
      return e.map((n) => Lt.escapeRegex(n)).join("..");
    }
    return r;
  }, "expandRange"), un = /* @__PURE__ */ s((e, t) => `Missing ${e}: "${t}" - use "\\\\${t}" to match literal characters`, "syntaxError"), Gl = /* @__PURE__ */ s(
  (e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    e = yD[e] || e;
    let r = { ...t }, i = typeof r.maxLength == "number" ? Math.min(Uo, r.maxLength) : Uo, n = e.length;
    if (n > i)
      throw new SyntaxError(`Input length: ${n}, exceeds maximum allowed length: ${i}`);
    let o = { type: "bos", value: "", output: r.prepend || "" }, a = [o], u = r.capture ? "" : "?:", l = Lt.isWindows(t), c = Vo.globChars(l),
    p = Vo.extglobChars(c), {
      DOT_LITERAL: h,
      PLUS_LITERAL: f,
      SLASH_LITERAL: d,
      ONE_CHAR: m,
      DOTS_SLASH: g,
      NO_DOT: b,
      NO_DOT_SLASH: D,
      NO_DOTS_SLASH: v,
      QMARK: S,
      QMARK_NO_DOT: k,
      STAR: L,
      START_ANCHOR: C
    } = c, w = /* @__PURE__ */ s((Z) => `(${u}(?:(?!${C}${Z.dot ? g : h}).)*?)`, "globstar"), T = r.dot ? "" : b, _ = r.dot ? S : k, q = r.bash ===
    !0 ? w(r) : L;
    r.capture && (q = `(${q})`), typeof r.noext == "boolean" && (r.noextglob = r.noext);
    let O = {
      input: e,
      index: -1,
      start: 0,
      dot: r.dot === !0,
      consumed: "",
      output: "",
      prefix: "",
      backtrack: !1,
      negated: !1,
      brackets: 0,
      braces: 0,
      parens: 0,
      quotes: 0,
      globstar: !1,
      tokens: a
    };
    e = Lt.removePrefix(e, O), n = e.length;
    let $ = [], V = [], K = [], M = o, R, U = /* @__PURE__ */ s(() => O.index === n - 1, "eos"), Y = O.peek = (Z = 1) => e[O.index + Z], ee = O.
    advance = () => e[++O.index] || "", I = /* @__PURE__ */ s(() => e.slice(O.index + 1), "remaining"), se = /* @__PURE__ */ s((Z = "", de = 0) => {
      O.consumed += Z, O.index += de;
    }, "consume"), Me = /* @__PURE__ */ s((Z) => {
      O.output += Z.output != null ? Z.output : Z.value, se(Z.value);
    }, "append"), N = /* @__PURE__ */ s(() => {
      let Z = 1;
      for (; Y() === "!" && (Y(2) !== "(" || Y(3) === "?"); )
        ee(), O.start++, Z++;
      return Z % 2 === 0 ? !1 : (O.negated = !0, O.start++, !0);
    }, "negate"), Oe = /* @__PURE__ */ s((Z) => {
      O[Z]++, K.push(Z);
    }, "increment"), Pe = /* @__PURE__ */ s((Z) => {
      O[Z]--, K.pop();
    }, "decrement"), ce = /* @__PURE__ */ s((Z) => {
      if (M.type === "globstar") {
        let de = O.braces > 0 && (Z.type === "comma" || Z.type === "brace"), X = Z.extglob === !0 || $.length && (Z.type === "pipe" || Z.type ===
        "paren");
        Z.type !== "slash" && Z.type !== "paren" && !de && !X && (O.output = O.output.slice(0, -M.output.length), M.type = "star", M.value =
        "*", M.output = q, O.output += M.output);
      }
      if ($.length && Z.type !== "paren" && ($[$.length - 1].inner += Z.value), (Z.value || Z.output) && Me(Z), M && M.type === "text" && Z.
      type === "text") {
        M.value += Z.value, M.output = (M.output || "") + Z.value;
        return;
      }
      Z.prev = M, a.push(Z), M = Z;
    }, "push"), Dt = /* @__PURE__ */ s((Z, de) => {
      let X = { ...p[de], conditions: 1, inner: "" };
      X.prev = M, X.parens = O.parens, X.output = O.output;
      let te = (r.capture ? "(" : "") + X.open;
      Oe("parens"), ce({ type: Z, value: de, output: O.output ? "" : m }), ce({ type: "paren", extglob: !0, value: ee(), output: te }), $.push(
      X);
    }, "extglobOpen"), Be = /* @__PURE__ */ s((Z) => {
      let de = Z.close + (r.capture ? ")" : ""), X;
      if (Z.type === "negate") {
        let te = q;
        if (Z.inner && Z.inner.length > 1 && Z.inner.includes("/") && (te = w(r)), (te !== q || U() || /^\)+$/.test(I())) && (de = Z.close =
        `)$))${te}`), Z.inner.includes("*") && (X = I()) && /^\.[^\\/.]+$/.test(X)) {
          let pe = Gl(X, { ...t, fastpaths: !1 }).output;
          de = Z.close = `)${pe})${te})`;
        }
        Z.prev.type === "bos" && (O.negatedExtglob = !0);
      }
      ce({ type: "paren", extglob: !0, value: R, output: de }), Pe("parens");
    }, "extglobClose");
    if (r.fastpaths !== !1 && !/(^[*!]|[/()[\]{}"])/.test(e)) {
      let Z = !1, de = e.replace(I6, (X, te, pe, me, De, He) => me === "\\" ? (Z = !0, X) : me === "?" ? te ? te + me + (De ? S.repeat(De.length) :
      "") : He === 0 ? _ + (De ? S.repeat(De.length) : "") : S.repeat(pe.length) : me === "." ? h.repeat(pe.length) : me === "*" ? te ? te +
      me + (De ? q : "") : q : te ? X : `\\${X}`);
      return Z === !0 && (r.unescape === !0 ? de = de.replace(/\\/g, "") : de = de.replace(/\\+/g, (X) => X.length % 2 === 0 ? "\\\\" : X ? "\
\\" : "")), de === e && r.contains === !0 ? (O.output = e, O) : (O.output = Lt.wrapOutput(de, O, t), O);
    }
    for (; !U(); ) {
      if (R = ee(), R === "\0")
        continue;
      if (R === "\\") {
        let X = Y();
        if (X === "/" && r.bash !== !0 || X === "." || X === ";")
          continue;
        if (!X) {
          R += "\\", ce({ type: "text", value: R });
          continue;
        }
        let te = /^\\+/.exec(I()), pe = 0;
        if (te && te[0].length > 2 && (pe = te[0].length, O.index += pe, pe % 2 !== 0 && (R += "\\")), r.unescape === !0 ? R = ee() : R += ee(),
        O.brackets === 0) {
          ce({ type: "text", value: R });
          continue;
        }
      }
      if (O.brackets > 0 && (R !== "]" || M.value === "[" || M.value === "[^")) {
        if (r.posix !== !1 && R === ":") {
          let X = M.value.slice(1);
          if (X.includes("[") && (M.posix = !0, X.includes(":"))) {
            let te = M.value.lastIndexOf("["), pe = M.value.slice(0, te), me = M.value.slice(te + 2), De = T6[me];
            if (De) {
              M.value = pe + De, O.backtrack = !0, ee(), !o.output && a.indexOf(M) === 1 && (o.output = m);
              continue;
            }
          }
        }
        (R === "[" && Y() !== ":" || R === "-" && Y() === "]") && (R = `\\${R}`), R === "]" && (M.value === "[" || M.value === "[^") && (R =
        `\\${R}`), r.posix === !0 && R === "!" && M.value === "[" && (R = "^"), M.value += R, Me({ value: R });
        continue;
      }
      if (O.quotes === 1 && R !== '"') {
        R = Lt.escapeRegex(R), M.value += R, Me({ value: R });
        continue;
      }
      if (R === '"') {
        O.quotes = O.quotes === 1 ? 0 : 1, r.keepQuotes === !0 && ce({ type: "text", value: R });
        continue;
      }
      if (R === "(") {
        Oe("parens"), ce({ type: "paren", value: R });
        continue;
      }
      if (R === ")") {
        if (O.parens === 0 && r.strictBrackets === !0)
          throw new SyntaxError(un("opening", "("));
        let X = $[$.length - 1];
        if (X && O.parens === X.parens + 1) {
          Be($.pop());
          continue;
        }
        ce({ type: "paren", value: R, output: O.parens ? ")" : "\\)" }), Pe("parens");
        continue;
      }
      if (R === "[") {
        if (r.nobracket === !0 || !I().includes("]")) {
          if (r.nobracket !== !0 && r.strictBrackets === !0)
            throw new SyntaxError(un("closing", "]"));
          R = `\\${R}`;
        } else
          Oe("brackets");
        ce({ type: "bracket", value: R });
        continue;
      }
      if (R === "]") {
        if (r.nobracket === !0 || M && M.type === "bracket" && M.value.length === 1) {
          ce({ type: "text", value: R, output: `\\${R}` });
          continue;
        }
        if (O.brackets === 0) {
          if (r.strictBrackets === !0)
            throw new SyntaxError(un("opening", "["));
          ce({ type: "text", value: R, output: `\\${R}` });
          continue;
        }
        Pe("brackets");
        let X = M.value.slice(1);
        if (M.posix !== !0 && X[0] === "^" && !X.includes("/") && (R = `/${R}`), M.value += R, Me({ value: R }), r.literalBrackets === !1 ||
        Lt.hasRegexChars(X))
          continue;
        let te = Lt.escapeRegex(M.value);
        if (O.output = O.output.slice(0, -M.value.length), r.literalBrackets === !0) {
          O.output += te, M.value = te;
          continue;
        }
        M.value = `(${u}${te}|${M.value})`, O.output += M.value;
        continue;
      }
      if (R === "{" && r.nobrace !== !0) {
        Oe("braces");
        let X = {
          type: "brace",
          value: R,
          output: "(",
          outputIndex: O.output.length,
          tokensIndex: O.tokens.length
        };
        V.push(X), ce(X);
        continue;
      }
      if (R === "}") {
        let X = V[V.length - 1];
        if (r.nobrace === !0 || !X) {
          ce({ type: "text", value: R, output: R });
          continue;
        }
        let te = ")";
        if (X.dots === !0) {
          let pe = a.slice(), me = [];
          for (let De = pe.length - 1; De >= 0 && (a.pop(), pe[De].type !== "brace"); De--)
            pe[De].type !== "dots" && me.unshift(pe[De].value);
          te = P6(me, r), O.backtrack = !0;
        }
        if (X.comma !== !0 && X.dots !== !0) {
          let pe = O.output.slice(0, X.outputIndex), me = O.tokens.slice(X.tokensIndex);
          X.value = X.output = "\\{", R = te = "\\}", O.output = pe;
          for (let De of me)
            O.output += De.output || De.value;
        }
        ce({ type: "brace", value: R, output: te }), Pe("braces"), V.pop();
        continue;
      }
      if (R === "|") {
        $.length > 0 && $[$.length - 1].conditions++, ce({ type: "text", value: R });
        continue;
      }
      if (R === ",") {
        let X = R, te = V[V.length - 1];
        te && K[K.length - 1] === "braces" && (te.comma = !0, X = "|"), ce({ type: "comma", value: R, output: X });
        continue;
      }
      if (R === "/") {
        if (M.type === "dot" && O.index === O.start + 1) {
          O.start = O.index + 1, O.consumed = "", O.output = "", a.pop(), M = o;
          continue;
        }
        ce({ type: "slash", value: R, output: d });
        continue;
      }
      if (R === ".") {
        if (O.braces > 0 && M.type === "dot") {
          M.value === "." && (M.output = h);
          let X = V[V.length - 1];
          M.type = "dots", M.output += R, M.value += R, X.dots = !0;
          continue;
        }
        if (O.braces + O.parens === 0 && M.type !== "bos" && M.type !== "slash") {
          ce({ type: "text", value: R, output: h });
          continue;
        }
        ce({ type: "dot", value: R, output: h });
        continue;
      }
      if (R === "?") {
        if (!(M && M.value === "(") && r.noextglob !== !0 && Y() === "(" && Y(2) !== "?") {
          Dt("qmark", R);
          continue;
        }
        if (M && M.type === "paren") {
          let te = Y(), pe = R;
          if (te === "<" && !Lt.supportsLookbehinds())
            throw new Error("Node.js v10 or higher is required for regex lookbehinds");
          (M.value === "(" && !/[!=<:]/.test(te) || te === "<" && !/<([!=]|\w+>)/.test(I())) && (pe = `\\${R}`), ce({ type: "text", value: R,
          output: pe });
          continue;
        }
        if (r.dot !== !0 && (M.type === "slash" || M.type === "bos")) {
          ce({ type: "qmark", value: R, output: k });
          continue;
        }
        ce({ type: "qmark", value: R, output: S });
        continue;
      }
      if (R === "!") {
        if (r.noextglob !== !0 && Y() === "(" && (Y(2) !== "?" || !/[!=<:]/.test(Y(3)))) {
          Dt("negate", R);
          continue;
        }
        if (r.nonegate !== !0 && O.index === 0) {
          N();
          continue;
        }
      }
      if (R === "+") {
        if (r.noextglob !== !0 && Y() === "(" && Y(2) !== "?") {
          Dt("plus", R);
          continue;
        }
        if (M && M.value === "(" || r.regex === !1) {
          ce({ type: "plus", value: R, output: f });
          continue;
        }
        if (M && (M.type === "bracket" || M.type === "paren" || M.type === "brace") || O.parens > 0) {
          ce({ type: "plus", value: R });
          continue;
        }
        ce({ type: "plus", value: f });
        continue;
      }
      if (R === "@") {
        if (r.noextglob !== !0 && Y() === "(" && Y(2) !== "?") {
          ce({ type: "at", extglob: !0, value: R, output: "" });
          continue;
        }
        ce({ type: "text", value: R });
        continue;
      }
      if (R !== "*") {
        (R === "$" || R === "^") && (R = `\\${R}`);
        let X = B6.exec(I());
        X && (R += X[0], O.index += X[0].length), ce({ type: "text", value: R });
        continue;
      }
      if (M && (M.type === "globstar" || M.star === !0)) {
        M.type = "star", M.star = !0, M.value += R, M.output = q, O.backtrack = !0, O.globstar = !0, se(R);
        continue;
      }
      let Z = I();
      if (r.noextglob !== !0 && /^\([^?]/.test(Z)) {
        Dt("star", R);
        continue;
      }
      if (M.type === "star") {
        if (r.noglobstar === !0) {
          se(R);
          continue;
        }
        let X = M.prev, te = X.prev, pe = X.type === "slash" || X.type === "bos", me = te && (te.type === "star" || te.type === "globstar");
        if (r.bash === !0 && (!pe || Z[0] && Z[0] !== "/")) {
          ce({ type: "star", value: R, output: "" });
          continue;
        }
        let De = O.braces > 0 && (X.type === "comma" || X.type === "brace"), He = $.length && (X.type === "pipe" || X.type === "paren");
        if (!pe && X.type !== "paren" && !De && !He) {
          ce({ type: "star", value: R, output: "" });
          continue;
        }
        for (; Z.slice(0, 3) === "/**"; ) {
          let pt = e[O.index + 4];
          if (pt && pt !== "/")
            break;
          Z = Z.slice(3), se("/**", 3);
        }
        if (X.type === "bos" && U()) {
          M.type = "globstar", M.value += R, M.output = w(r), O.output = M.output, O.globstar = !0, se(R);
          continue;
        }
        if (X.type === "slash" && X.prev.type !== "bos" && !me && U()) {
          O.output = O.output.slice(0, -(X.output + M.output).length), X.output = `(?:${X.output}`, M.type = "globstar", M.output = w(r) + (r.
          strictSlashes ? ")" : "|$)"), M.value += R, O.globstar = !0, O.output += X.output + M.output, se(R);
          continue;
        }
        if (X.type === "slash" && X.prev.type !== "bos" && Z[0] === "/") {
          let pt = Z[1] !== void 0 ? "|$" : "";
          O.output = O.output.slice(0, -(X.output + M.output).length), X.output = `(?:${X.output}`, M.type = "globstar", M.output = `${w(r)}${d}\
|${d}${pt})`, M.value += R, O.output += X.output + M.output, O.globstar = !0, se(R + ee()), ce({ type: "slash", value: "/", output: "" });
          continue;
        }
        if (X.type === "bos" && Z[0] === "/") {
          M.type = "globstar", M.value += R, M.output = `(?:^|${d}|${w(r)}${d})`, O.output = M.output, O.globstar = !0, se(R + ee()), ce({ type: "\
slash", value: "/", output: "" });
          continue;
        }
        O.output = O.output.slice(0, -M.output.length), M.type = "globstar", M.output = w(r), M.value += R, O.output += M.output, O.globstar =
        !0, se(R);
        continue;
      }
      let de = { type: "star", value: R, output: q };
      if (r.bash === !0) {
        de.output = ".*?", (M.type === "bos" || M.type === "slash") && (de.output = T + de.output), ce(de);
        continue;
      }
      if (M && (M.type === "bracket" || M.type === "paren") && r.regex === !0) {
        de.output = R, ce(de);
        continue;
      }
      (O.index === O.start || M.type === "slash" || M.type === "dot") && (M.type === "dot" ? (O.output += D, M.output += D) : r.dot === !0 ?
      (O.output += v, M.output += v) : (O.output += T, M.output += T), Y() !== "*" && (O.output += m, M.output += m)), ce(de);
    }
    for (; O.brackets > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(un("closing", "]"));
      O.output = Lt.escapeLast(O.output, "["), Pe("brackets");
    }
    for (; O.parens > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(un("closing", ")"));
      O.output = Lt.escapeLast(O.output, "("), Pe("parens");
    }
    for (; O.braces > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(un("closing", "}"));
      O.output = Lt.escapeLast(O.output, "{"), Pe("braces");
    }
    if (r.strictSlashes !== !0 && (M.type === "star" || M.type === "bracket") && ce({ type: "maybe_slash", value: "", output: `${d}?` }), O.
    backtrack === !0) {
      O.output = "";
      for (let Z of O.tokens)
        O.output += Z.output != null ? Z.output : Z.value, Z.suffix && (O.output += Z.suffix);
    }
    return O;
  }, "parse");
  Gl.fastpaths = (e, t) => {
    let r = { ...t }, i = typeof r.maxLength == "number" ? Math.min(Uo, r.maxLength) : Uo, n = e.length;
    if (n > i)
      throw new SyntaxError(`Input length: ${n}, exceeds maximum allowed length: ${i}`);
    e = yD[e] || e;
    let o = Lt.isWindows(t), {
      DOT_LITERAL: a,
      SLASH_LITERAL: u,
      ONE_CHAR: l,
      DOTS_SLASH: c,
      NO_DOT: p,
      NO_DOTS: h,
      NO_DOTS_SLASH: f,
      STAR: d,
      START_ANCHOR: m
    } = Vo.globChars(o), g = r.dot ? h : p, b = r.dot ? f : p, D = r.capture ? "" : "?:", v = { negated: !1, prefix: "" }, S = r.bash === !0 ?
    ".*?" : d;
    r.capture && (S = `(${S})`);
    let k = /* @__PURE__ */ s((T) => T.noglobstar === !0 ? S : `(${D}(?:(?!${m}${T.dot ? c : a}).)*?)`, "globstar"), L = /* @__PURE__ */ s((T) => {
      switch (T) {
        case "*":
          return `${g}${l}${S}`;
        case ".*":
          return `${a}${l}${S}`;
        case "*.*":
          return `${g}${S}${a}${l}${S}`;
        case "*/*":
          return `${g}${S}${u}${l}${b}${S}`;
        case "**":
          return g + k(r);
        case "**/*":
          return `(?:${g}${k(r)}${u})?${b}${l}${S}`;
        case "**/*.*":
          return `(?:${g}${k(r)}${u})?${b}${S}${a}${l}${S}`;
        case "**/.*":
          return `(?:${g}${k(r)}${u})?${a}${l}${S}`;
        default: {
          let _ = /^(.*?)\.(\w+)$/.exec(T);
          if (!_) return;
          let q = L(_[1]);
          return q ? q + a + _[2] : void 0;
        }
      }
    }, "create"), C = Lt.removePrefix(e, v), w = L(C);
    return w && r.strictSlashes !== !0 && (w += `${u}?`), w;
  };
  xD.exports = Gl;
});

// ../node_modules/picomatch/lib/picomatch.js
var vD = P((xQ, bD) => {
  "use strict";
  var O6 = H("path"), R6 = DD(), Xl = ED(), Kl = Ds(), N6 = gs(), L6 = /* @__PURE__ */ s((e) => e && typeof e == "object" && !Array.isArray(
  e), "isObject"), et = /* @__PURE__ */ s((e, t, r = !1) => {
    if (Array.isArray(e)) {
      let p = e.map((f) => et(f, t, r));
      return /* @__PURE__ */ s((f) => {
        for (let d of p) {
          let m = d(f);
          if (m) return m;
        }
        return !1;
      }, "arrayMatcher");
    }
    let i = L6(e) && e.tokens && e.input;
    if (e === "" || typeof e != "string" && !i)
      throw new TypeError("Expected pattern to be a non-empty string");
    let n = t || {}, o = Kl.isWindows(t), a = i ? et.compileRe(e, t) : et.makeRe(e, t, !1, !0), u = a.state;
    delete a.state;
    let l = /* @__PURE__ */ s(() => !1, "isIgnored");
    if (n.ignore) {
      let p = { ...t, ignore: null, onMatch: null, onResult: null };
      l = et(n.ignore, p, r);
    }
    let c = /* @__PURE__ */ s((p, h = !1) => {
      let { isMatch: f, match: d, output: m } = et.test(p, a, t, { glob: e, posix: o }), g = { glob: e, state: u, regex: a, posix: o, input: p,
      output: m, match: d, isMatch: f };
      return typeof n.onResult == "function" && n.onResult(g), f === !1 ? (g.isMatch = !1, h ? g : !1) : l(p) ? (typeof n.onIgnore == "funct\
ion" && n.onIgnore(g), g.isMatch = !1, h ? g : !1) : (typeof n.onMatch == "function" && n.onMatch(g), h ? g : !0);
    }, "matcher");
    return r && (c.state = u), c;
  }, "picomatch");
  et.test = (e, t, r, { glob: i, posix: n } = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected input to be a string");
    if (e === "")
      return { isMatch: !1, output: "" };
    let o = r || {}, a = o.format || (n ? Kl.toPosixSlashes : null), u = e === i, l = u && a ? a(e) : e;
    return u === !1 && (l = a ? a(e) : e, u = l === i), (u === !1 || o.capture === !0) && (o.matchBase === !0 || o.basename === !0 ? u = et.
    matchBase(e, t, r, n) : u = t.exec(l)), { isMatch: !!u, match: u, output: l };
  };
  et.matchBase = (e, t, r, i = Kl.isWindows(r)) => (t instanceof RegExp ? t : et.makeRe(t, r)).test(O6.basename(e));
  et.isMatch = (e, t, r) => et(t, r)(e);
  et.parse = (e, t) => Array.isArray(e) ? e.map((r) => et.parse(r, t)) : Xl(e, { ...t, fastpaths: !1 });
  et.scan = (e, t) => R6(e, t);
  et.compileRe = (e, t, r = !1, i = !1) => {
    if (r === !0)
      return e.output;
    let n = t || {}, o = n.contains ? "" : "^", a = n.contains ? "" : "$", u = `${o}(?:${e.output})${a}`;
    e && e.negated === !0 && (u = `^(?!${u}).*$`);
    let l = et.toRegex(u, t);
    return i === !0 && (l.state = e), l;
  };
  et.makeRe = (e, t = {}, r = !1, i = !1) => {
    if (!e || typeof e != "string")
      throw new TypeError("Expected a non-empty string");
    let n = { negated: !1, fastpaths: !0 };
    return t.fastpaths !== !1 && (e[0] === "." || e[0] === "*") && (n.output = Xl.fastpaths(e, t)), n.output || (n = Xl(e, t)), et.compileRe(
    n, t, r, i);
  };
  et.toRegex = (e, t) => {
    try {
      let r = t || {};
      return new RegExp(e, r.flags || (r.nocase ? "i" : ""));
    } catch (r) {
      if (t && t.debug === !0) throw r;
      return /$^/;
    }
  };
  et.constants = N6;
  bD.exports = et;
});

// ../node_modules/picomatch/index.js
var wD = P((bQ, CD) => {
  "use strict";
  CD.exports = vD();
});

// ../node_modules/micromatch/index.js
var TD = P((vQ, kD) => {
  "use strict";
  var SD = H("util"), FD = nD(), Ar = wD(), Yl = Ds(), AD = /* @__PURE__ */ s((e) => e === "" || e === "./", "isEmptyString"), _D = /* @__PURE__ */ s(
  (e) => {
    let t = e.indexOf("{");
    return t > -1 && e.indexOf("}", t) > -1;
  }, "hasBraces"), $e = /* @__PURE__ */ s((e, t, r) => {
    t = [].concat(t), e = [].concat(e);
    let i = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set(), a = 0, u = /* @__PURE__ */ s((p) => {
      o.add(p.output), r && r.onResult && r.onResult(p);
    }, "onResult");
    for (let p = 0; p < t.length; p++) {
      let h = Ar(String(t[p]), { ...r, onResult: u }, !0), f = h.state.negated || h.state.negatedExtglob;
      f && a++;
      for (let d of e) {
        let m = h(d, !0);
        (f ? !m.isMatch : m.isMatch) && (f ? i.add(m.output) : (i.delete(m.output), n.add(m.output)));
      }
    }
    let c = (a === t.length ? [...o] : [...n]).filter((p) => !i.has(p));
    if (r && c.length === 0) {
      if (r.failglob === !0)
        throw new Error(`No matches found for "${t.join(", ")}"`);
      if (r.nonull === !0 || r.nullglob === !0)
        return r.unescape ? t.map((p) => p.replace(/\\/g, "")) : t;
    }
    return c;
  }, "micromatch");
  $e.match = $e;
  $e.matcher = (e, t) => Ar(e, t);
  $e.isMatch = (e, t, r) => Ar(t, r)(e);
  $e.any = $e.isMatch;
  $e.not = (e, t, r = {}) => {
    t = [].concat(t).map(String);
    let i = /* @__PURE__ */ new Set(), n = [], o = /* @__PURE__ */ s((u) => {
      r.onResult && r.onResult(u), n.push(u.output);
    }, "onResult"), a = new Set($e(e, t, { ...r, onResult: o }));
    for (let u of n)
      a.has(u) || i.add(u);
    return [...i];
  };
  $e.contains = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${SD.inspect(e)}"`);
    if (Array.isArray(t))
      return t.some((i) => $e.contains(e, i, r));
    if (typeof t == "string") {
      if (AD(e) || AD(t))
        return !1;
      if (e.includes(t) || e.startsWith("./") && e.slice(2).includes(t))
        return !0;
    }
    return $e.isMatch(e, t, { ...r, contains: !0 });
  };
  $e.matchKeys = (e, t, r) => {
    if (!Yl.isObject(e))
      throw new TypeError("Expected the first argument to be an object");
    let i = $e(Object.keys(e), t, r), n = {};
    for (let o of i) n[o] = e[o];
    return n;
  };
  $e.some = (e, t, r) => {
    let i = [].concat(e);
    for (let n of [].concat(t)) {
      let o = Ar(String(n), r);
      if (i.some((a) => o(a)))
        return !0;
    }
    return !1;
  };
  $e.every = (e, t, r) => {
    let i = [].concat(e);
    for (let n of [].concat(t)) {
      let o = Ar(String(n), r);
      if (!i.every((a) => o(a)))
        return !1;
    }
    return !0;
  };
  $e.all = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${SD.inspect(e)}"`);
    return [].concat(t).every((i) => Ar(i, r)(e));
  };
  $e.capture = (e, t, r) => {
    let i = Yl.isWindows(r), o = Ar.makeRe(String(e), { ...r, capture: !0 }).exec(i ? Yl.toPosixSlashes(t) : t);
    if (o)
      return o.slice(1).map((a) => a === void 0 ? "" : a);
  };
  $e.makeRe = (...e) => Ar.makeRe(...e);
  $e.scan = (...e) => Ar.scan(...e);
  $e.parse = (e, t) => {
    let r = [];
    for (let i of [].concat(e || []))
      for (let n of FD(String(i), t))
        r.push(Ar.parse(n, t));
    return r;
  };
  $e.braces = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return t && t.nobrace === !0 || !_D(e) ? [e] : FD(e, t);
  };
  $e.braceExpand = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return $e.braces(e, { ...t, expand: !0 });
  };
  $e.hasBraces = _D;
  kD.exports = $e;
});

// ../node_modules/fast-glob/out/utils/pattern.js
var qD = P((le) => {
  "use strict";
  Object.defineProperty(le, "__esModule", { value: !0 });
  le.isAbsolute = le.partitionAbsoluteAndRelative = le.removeDuplicateSlashes = le.matchAny = le.convertPatternsToRe = le.makeRe = le.getPatternParts =
  le.expandBraceExpansion = le.expandPatternsWithBraceExpansion = le.isAffectDepthOfReadingPattern = le.endsWithSlashGlobStar = le.hasGlobStar =
  le.getBaseDirectory = le.isPatternRelatedToParentDirectory = le.getPatternsOutsideCurrentDirectory = le.getPatternsInsideCurrentDirectory =
  le.getPositivePatterns = le.getNegativePatterns = le.isPositivePattern = le.isNegativePattern = le.convertToNegativePattern = le.convertToPositivePattern =
  le.isDynamicPattern = le.isStaticPattern = void 0;
  var BD = H("path"), M6 = v0(), Ql = TD(), ID = "**", j6 = "\\", q6 = /[*?]|^!/, $6 = /\[[^[]*]/, V6 = /(?:^|[^!*+?@])\([^(]*\|[^|]*\)/, U6 = /[!*+?@]\([^(]*\)/,
  W6 = /,|\.\./, z6 = /(?!^)\/{2,}/g;
  function PD(e, t = {}) {
    return !OD(e, t);
  }
  s(PD, "isStaticPattern");
  le.isStaticPattern = PD;
  function OD(e, t = {}) {
    return e === "" ? !1 : !!(t.caseSensitiveMatch === !1 || e.includes(j6) || q6.test(e) || $6.test(e) || V6.test(e) || t.extglob !== !1 &&
    U6.test(e) || t.braceExpansion !== !1 && H6(e));
  }
  s(OD, "isDynamicPattern");
  le.isDynamicPattern = OD;
  function H6(e) {
    let t = e.indexOf("{");
    if (t === -1)
      return !1;
    let r = e.indexOf("}", t + 1);
    if (r === -1)
      return !1;
    let i = e.slice(t, r);
    return W6.test(i);
  }
  s(H6, "hasBraceExpansion");
  function J6(e) {
    return Wo(e) ? e.slice(1) : e;
  }
  s(J6, "convertToPositivePattern");
  le.convertToPositivePattern = J6;
  function G6(e) {
    return "!" + e;
  }
  s(G6, "convertToNegativePattern");
  le.convertToNegativePattern = G6;
  function Wo(e) {
    return e.startsWith("!") && e[1] !== "(";
  }
  s(Wo, "isNegativePattern");
  le.isNegativePattern = Wo;
  function RD(e) {
    return !Wo(e);
  }
  s(RD, "isPositivePattern");
  le.isPositivePattern = RD;
  function X6(e) {
    return e.filter(Wo);
  }
  s(X6, "getNegativePatterns");
  le.getNegativePatterns = X6;
  function K6(e) {
    return e.filter(RD);
  }
  s(K6, "getPositivePatterns");
  le.getPositivePatterns = K6;
  function Y6(e) {
    return e.filter((t) => !Zl(t));
  }
  s(Y6, "getPatternsInsideCurrentDirectory");
  le.getPatternsInsideCurrentDirectory = Y6;
  function Q6(e) {
    return e.filter(Zl);
  }
  s(Q6, "getPatternsOutsideCurrentDirectory");
  le.getPatternsOutsideCurrentDirectory = Q6;
  function Zl(e) {
    return e.startsWith("..") || e.startsWith("./..");
  }
  s(Zl, "isPatternRelatedToParentDirectory");
  le.isPatternRelatedToParentDirectory = Zl;
  function Z6(e) {
    return M6(e, { flipBackslashes: !1 });
  }
  s(Z6, "getBaseDirectory");
  le.getBaseDirectory = Z6;
  function eI(e) {
    return e.includes(ID);
  }
  s(eI, "hasGlobStar");
  le.hasGlobStar = eI;
  function ND(e) {
    return e.endsWith("/" + ID);
  }
  s(ND, "endsWithSlashGlobStar");
  le.endsWithSlashGlobStar = ND;
  function tI(e) {
    let t = BD.basename(e);
    return ND(e) || PD(t);
  }
  s(tI, "isAffectDepthOfReadingPattern");
  le.isAffectDepthOfReadingPattern = tI;
  function rI(e) {
    return e.reduce((t, r) => t.concat(LD(r)), []);
  }
  s(rI, "expandPatternsWithBraceExpansion");
  le.expandPatternsWithBraceExpansion = rI;
  function LD(e) {
    let t = Ql.braces(e, { expand: !0, nodupes: !0, keepEscaping: !0 });
    return t.sort((r, i) => r.length - i.length), t.filter((r) => r !== "");
  }
  s(LD, "expandBraceExpansion");
  le.expandBraceExpansion = LD;
  function iI(e, t) {
    let { parts: r } = Ql.scan(e, Object.assign(Object.assign({}, t), { parts: !0 }));
    return r.length === 0 && (r = [e]), r[0].startsWith("/") && (r[0] = r[0].slice(1), r.unshift("")), r;
  }
  s(iI, "getPatternParts");
  le.getPatternParts = iI;
  function MD(e, t) {
    return Ql.makeRe(e, t);
  }
  s(MD, "makeRe");
  le.makeRe = MD;
  function nI(e, t) {
    return e.map((r) => MD(r, t));
  }
  s(nI, "convertPatternsToRe");
  le.convertPatternsToRe = nI;
  function sI(e, t) {
    return t.some((r) => r.test(e));
  }
  s(sI, "matchAny");
  le.matchAny = sI;
  function oI(e) {
    return e.replace(z6, "/");
  }
  s(oI, "removeDuplicateSlashes");
  le.removeDuplicateSlashes = oI;
  function aI(e) {
    let t = [], r = [];
    for (let i of e)
      jD(i) ? t.push(i) : r.push(i);
    return [t, r];
  }
  s(aI, "partitionAbsoluteAndRelative");
  le.partitionAbsoluteAndRelative = aI;
  function jD(e) {
    return BD.isAbsolute(e);
  }
  s(jD, "isAbsolute");
  le.isAbsolute = jD;
});

// ../node_modules/merge2/index.js
var WD = P((SQ, UD) => {
  "use strict";
  var uI = H("stream"), $D = uI.PassThrough, lI = Array.prototype.slice;
  UD.exports = cI;
  function cI() {
    let e = [], t = lI.call(arguments), r = !1, i = t[t.length - 1];
    i && !Array.isArray(i) && i.pipe == null ? t.pop() : i = {};
    let n = i.end !== !1, o = i.pipeError === !0;
    i.objectMode == null && (i.objectMode = !0), i.highWaterMark == null && (i.highWaterMark = 64 * 1024);
    let a = $D(i);
    function u() {
      for (let p = 0, h = arguments.length; p < h; p++)
        e.push(VD(arguments[p], i));
      return l(), this;
    }
    s(u, "addStream");
    function l() {
      if (r)
        return;
      r = !0;
      let p = e.shift();
      if (!p) {
        process.nextTick(c);
        return;
      }
      Array.isArray(p) || (p = [p]);
      let h = p.length + 1;
      function f() {
        --h > 0 || (r = !1, l());
      }
      s(f, "next");
      function d(m) {
        function g() {
          m.removeListener("merge2UnpipeEnd", g), m.removeListener("end", g), o && m.removeListener("error", b), f();
        }
        s(g, "onend");
        function b(D) {
          a.emit("error", D);
        }
        if (s(b, "onerror"), m._readableState.endEmitted)
          return f();
        m.on("merge2UnpipeEnd", g), m.on("end", g), o && m.on("error", b), m.pipe(a, { end: !1 }), m.resume();
      }
      s(d, "pipe");
      for (let m = 0; m < p.length; m++)
        d(p[m]);
      f();
    }
    s(l, "mergeStream");
    function c() {
      r = !1, a.emit("queueDrain"), n && a.end();
    }
    return s(c, "endStream"), a.setMaxListeners(0), a.add = u, a.on("unpipe", function(p) {
      p.emit("merge2UnpipeEnd");
    }), t.length && u.apply(null, t), a;
  }
  s(cI, "merge2");
  function VD(e, t) {
    if (Array.isArray(e))
      for (let r = 0, i = e.length; r < i; r++)
        e[r] = VD(e[r], t);
    else {
      if (!e._readableState && e.pipe && (e = e.pipe($D(t))), !e._readableState || !e.pause || !e.pipe)
        throw new Error("Only readable stream can be merged.");
      e.pause();
    }
    return e;
  }
  s(VD, "pauseStreams");
});

// ../node_modules/fast-glob/out/utils/stream.js
var HD = P((zo) => {
  "use strict";
  Object.defineProperty(zo, "__esModule", { value: !0 });
  zo.merge = void 0;
  var pI = WD();
  function hI(e) {
    let t = pI(e);
    return e.forEach((r) => {
      r.once("error", (i) => t.emit("error", i));
    }), t.once("close", () => zD(e)), t.once("end", () => zD(e)), t;
  }
  s(hI, "merge");
  zo.merge = hI;
  function zD(e) {
    e.forEach((t) => t.emit("close"));
  }
  s(zD, "propagateCloseEventToSources");
});

// ../node_modules/fast-glob/out/utils/string.js
var JD = P((ln) => {
  "use strict";
  Object.defineProperty(ln, "__esModule", { value: !0 });
  ln.isEmpty = ln.isString = void 0;
  function fI(e) {
    return typeof e == "string";
  }
  s(fI, "isString");
  ln.isString = fI;
  function dI(e) {
    return e === "";
  }
  s(dI, "isEmpty");
  ln.isEmpty = dI;
});

// ../node_modules/fast-glob/out/utils/index.js
var Ur = P((dt) => {
  "use strict";
  Object.defineProperty(dt, "__esModule", { value: !0 });
  dt.string = dt.stream = dt.pattern = dt.path = dt.fs = dt.errno = dt.array = void 0;
  var mI = l0();
  dt.array = mI;
  var gI = c0();
  dt.errno = gI;
  var DI = p0();
  dt.fs = DI;
  var yI = m0();
  dt.path = yI;
  var xI = qD();
  dt.pattern = xI;
  var EI = HD();
  dt.stream = EI;
  var bI = JD();
  dt.string = bI;
});

// ../node_modules/fast-glob/out/managers/tasks.js
var YD = P((mt) => {
  "use strict";
  Object.defineProperty(mt, "__esModule", { value: !0 });
  mt.convertPatternGroupToTask = mt.convertPatternGroupsToTasks = mt.groupPatternsByBaseDirectory = mt.getNegativePatternsAsPositive = mt.getPositivePatterns =
  mt.convertPatternsToTasks = mt.generate = void 0;
  var pr = Ur();
  function vI(e, t) {
    let r = GD(e, t), i = GD(t.ignore, t), n = XD(r), o = KD(r, i), a = n.filter((p) => pr.pattern.isStaticPattern(p, t)), u = n.filter((p) => pr.
    pattern.isDynamicPattern(p, t)), l = ec(
      a,
      o,
      /* dynamic */
      !1
    ), c = ec(
      u,
      o,
      /* dynamic */
      !0
    );
    return l.concat(c);
  }
  s(vI, "generate");
  mt.generate = vI;
  function GD(e, t) {
    let r = e;
    return t.braceExpansion && (r = pr.pattern.expandPatternsWithBraceExpansion(r)), t.baseNameMatch && (r = r.map((i) => i.includes("/") ? i :
    `**/${i}`)), r.map((i) => pr.pattern.removeDuplicateSlashes(i));
  }
  s(GD, "processPatterns");
  function ec(e, t, r) {
    let i = [], n = pr.pattern.getPatternsOutsideCurrentDirectory(e), o = pr.pattern.getPatternsInsideCurrentDirectory(e), a = tc(n), u = tc(
    o);
    return i.push(...rc(a, t, r)), "." in u ? i.push(ic(".", o, t, r)) : i.push(...rc(u, t, r)), i;
  }
  s(ec, "convertPatternsToTasks");
  mt.convertPatternsToTasks = ec;
  function XD(e) {
    return pr.pattern.getPositivePatterns(e);
  }
  s(XD, "getPositivePatterns");
  mt.getPositivePatterns = XD;
  function KD(e, t) {
    return pr.pattern.getNegativePatterns(e).concat(t).map(pr.pattern.convertToPositivePattern);
  }
  s(KD, "getNegativePatternsAsPositive");
  mt.getNegativePatternsAsPositive = KD;
  function tc(e) {
    let t = {};
    return e.reduce((r, i) => {
      let n = pr.pattern.getBaseDirectory(i);
      return n in r ? r[n].push(i) : r[n] = [i], r;
    }, t);
  }
  s(tc, "groupPatternsByBaseDirectory");
  mt.groupPatternsByBaseDirectory = tc;
  function rc(e, t, r) {
    return Object.keys(e).map((i) => ic(i, e[i], t, r));
  }
  s(rc, "convertPatternGroupsToTasks");
  mt.convertPatternGroupsToTasks = rc;
  function ic(e, t, r, i) {
    return {
      dynamic: i,
      positive: t,
      negative: r,
      base: e,
      patterns: [].concat(t, r.map(pr.pattern.convertToNegativePattern))
    };
  }
  s(ic, "convertPatternGroupToTask");
  mt.convertPatternGroupToTask = ic;
});

// ../node_modules/@nodelib/fs.stat/out/providers/async.js
var ZD = P((Ho) => {
  "use strict";
  Object.defineProperty(Ho, "__esModule", { value: !0 });
  Ho.read = void 0;
  function CI(e, t, r) {
    t.fs.lstat(e, (i, n) => {
      if (i !== null) {
        QD(r, i);
        return;
      }
      if (!n.isSymbolicLink() || !t.followSymbolicLink) {
        nc(r, n);
        return;
      }
      t.fs.stat(e, (o, a) => {
        if (o !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            QD(r, o);
            return;
          }
          nc(r, n);
          return;
        }
        t.markSymbolicLink && (a.isSymbolicLink = () => !0), nc(r, a);
      });
    });
  }
  s(CI, "read");
  Ho.read = CI;
  function QD(e, t) {
    e(t);
  }
  s(QD, "callFailureCallback");
  function nc(e, t) {
    e(null, t);
  }
  s(nc, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.stat/out/providers/sync.js
var ey = P((Jo) => {
  "use strict";
  Object.defineProperty(Jo, "__esModule", { value: !0 });
  Jo.read = void 0;
  function wI(e, t) {
    let r = t.fs.lstatSync(e);
    if (!r.isSymbolicLink() || !t.followSymbolicLink)
      return r;
    try {
      let i = t.fs.statSync(e);
      return t.markSymbolicLink && (i.isSymbolicLink = () => !0), i;
    } catch (i) {
      if (!t.throwErrorOnBrokenSymbolicLink)
        return r;
      throw i;
    }
  }
  s(wI, "read");
  Jo.read = wI;
});

// ../node_modules/@nodelib/fs.stat/out/adapters/fs.js
var ty = P((ui) => {
  "use strict";
  Object.defineProperty(ui, "__esModule", { value: !0 });
  ui.createFileSystemAdapter = ui.FILE_SYSTEM_ADAPTER = void 0;
  var Go = H("fs");
  ui.FILE_SYSTEM_ADAPTER = {
    lstat: Go.lstat,
    stat: Go.stat,
    lstatSync: Go.lstatSync,
    statSync: Go.statSync
  };
  function AI(e) {
    return e === void 0 ? ui.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, ui.FILE_SYSTEM_ADAPTER), e);
  }
  s(AI, "createFileSystemAdapter");
  ui.createFileSystemAdapter = AI;
});

// ../node_modules/@nodelib/fs.stat/out/settings.js
var ry = P((oc) => {
  "use strict";
  Object.defineProperty(oc, "__esModule", { value: !0 });
  var SI = ty(), sc = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, !0), this.fs = SI.createFileSystemAdapter(
      this._options.fs), this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, !1), this.throwErrorOnBrokenSymbolicLink = this.
      _getValue(this._options.throwErrorOnBrokenSymbolicLink, !0);
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  oc.default = sc;
});

// ../node_modules/@nodelib/fs.stat/out/index.js
var ji = P((li) => {
  "use strict";
  Object.defineProperty(li, "__esModule", { value: !0 });
  li.statSync = li.stat = li.Settings = void 0;
  var iy = ZD(), FI = ey(), ac = ry();
  li.Settings = ac.default;
  function _I(e, t, r) {
    if (typeof t == "function") {
      iy.read(e, uc(), t);
      return;
    }
    iy.read(e, uc(t), r);
  }
  s(_I, "stat");
  li.stat = _I;
  function kI(e, t) {
    let r = uc(t);
    return FI.read(e, r);
  }
  s(kI, "statSync");
  li.statSync = kI;
  function uc(e = {}) {
    return e instanceof ac.default ? e : new ac.default(e);
  }
  s(uc, "getSettings");
});

// ../node_modules/queue-microtask/index.js
var oy = P((zQ, sy) => {
  var ny;
  sy.exports = typeof queueMicrotask == "function" ? queueMicrotask.bind(typeof window < "u" ? window : global) : (e) => (ny || (ny = Promise.
  resolve())).then(e).catch((t) => setTimeout(() => {
    throw t;
  }, 0));
});

// ../node_modules/run-parallel/index.js
var uy = P((HQ, ay) => {
  ay.exports = BI;
  var TI = oy();
  function BI(e, t) {
    let r, i, n, o = !0;
    Array.isArray(e) ? (r = [], i = e.length) : (n = Object.keys(e), r = {}, i = n.length);
    function a(l) {
      function c() {
        t && t(l, r), t = null;
      }
      s(c, "end"), o ? TI(c) : c();
    }
    s(a, "done");
    function u(l, c, p) {
      r[l] = p, (--i === 0 || c) && a(c);
    }
    s(u, "each"), i ? n ? n.forEach(function(l) {
      e[l](function(c, p) {
        u(l, c, p);
      });
    }) : e.forEach(function(l, c) {
      l(function(p, h) {
        u(c, p, h);
      });
    }) : a(null), o = !1;
  }
  s(BI, "runParallel");
});

// ../node_modules/@nodelib/fs.scandir/out/constants.js
var lc = P((Ko) => {
  "use strict";
  Object.defineProperty(Ko, "__esModule", { value: !0 });
  Ko.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;
  var Xo = process.versions.node.split(".");
  if (Xo[0] === void 0 || Xo[1] === void 0)
    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);
  var ly = Number.parseInt(Xo[0], 10), II = Number.parseInt(Xo[1], 10), cy = 10, PI = 10, OI = ly > cy, RI = ly === cy && II >= PI;
  Ko.IS_SUPPORT_READDIR_WITH_FILE_TYPES = OI || RI;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/fs.js
var py = P((Yo) => {
  "use strict";
  Object.defineProperty(Yo, "__esModule", { value: !0 });
  Yo.createDirentFromStats = void 0;
  var cc = class {
    static {
      s(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function NI(e, t) {
    return new cc(e, t);
  }
  s(NI, "createDirentFromStats");
  Yo.createDirentFromStats = NI;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/index.js
var pc = P((Qo) => {
  "use strict";
  Object.defineProperty(Qo, "__esModule", { value: !0 });
  Qo.fs = void 0;
  var LI = py();
  Qo.fs = LI;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/common.js
var hc = P((Zo) => {
  "use strict";
  Object.defineProperty(Zo, "__esModule", { value: !0 });
  Zo.joinPathSegments = void 0;
  function MI(e, t, r) {
    return e.endsWith(r) ? e + t : e + r + t;
  }
  s(MI, "joinPathSegments");
  Zo.joinPathSegments = MI;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/async.js
var Dy = P((ci) => {
  "use strict";
  Object.defineProperty(ci, "__esModule", { value: !0 });
  ci.readdir = ci.readdirWithFileTypes = ci.read = void 0;
  var jI = ji(), hy = uy(), qI = lc(), fy = pc(), dy = hc();
  function $I(e, t, r) {
    if (!t.stats && qI.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
      my(e, t, r);
      return;
    }
    gy(e, t, r);
  }
  s($I, "read");
  ci.read = $I;
  function my(e, t, r) {
    t.fs.readdir(e, { withFileTypes: !0 }, (i, n) => {
      if (i !== null) {
        ea(r, i);
        return;
      }
      let o = n.map((u) => ({
        dirent: u,
        name: u.name,
        path: dy.joinPathSegments(e, u.name, t.pathSegmentSeparator)
      }));
      if (!t.followSymbolicLinks) {
        fc(r, o);
        return;
      }
      let a = o.map((u) => VI(u, t));
      hy(a, (u, l) => {
        if (u !== null) {
          ea(r, u);
          return;
        }
        fc(r, l);
      });
    });
  }
  s(my, "readdirWithFileTypes");
  ci.readdirWithFileTypes = my;
  function VI(e, t) {
    return (r) => {
      if (!e.dirent.isSymbolicLink()) {
        r(null, e);
        return;
      }
      t.fs.stat(e.path, (i, n) => {
        if (i !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            r(i);
            return;
          }
          r(null, e);
          return;
        }
        e.dirent = fy.fs.createDirentFromStats(e.name, n), r(null, e);
      });
    };
  }
  s(VI, "makeRplTaskEntry");
  function gy(e, t, r) {
    t.fs.readdir(e, (i, n) => {
      if (i !== null) {
        ea(r, i);
        return;
      }
      let o = n.map((a) => {
        let u = dy.joinPathSegments(e, a, t.pathSegmentSeparator);
        return (l) => {
          jI.stat(u, t.fsStatSettings, (c, p) => {
            if (c !== null) {
              l(c);
              return;
            }
            let h = {
              name: a,
              path: u,
              dirent: fy.fs.createDirentFromStats(a, p)
            };
            t.stats && (h.stats = p), l(null, h);
          });
        };
      });
      hy(o, (a, u) => {
        if (a !== null) {
          ea(r, a);
          return;
        }
        fc(r, u);
      });
    });
  }
  s(gy, "readdir");
  ci.readdir = gy;
  function ea(e, t) {
    e(t);
  }
  s(ea, "callFailureCallback");
  function fc(e, t) {
    e(null, t);
  }
  s(fc, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.scandir/out/providers/sync.js
var vy = P((pi) => {
  "use strict";
  Object.defineProperty(pi, "__esModule", { value: !0 });
  pi.readdir = pi.readdirWithFileTypes = pi.read = void 0;
  var UI = ji(), WI = lc(), yy = pc(), xy = hc();
  function zI(e, t) {
    return !t.stats && WI.IS_SUPPORT_READDIR_WITH_FILE_TYPES ? Ey(e, t) : by(e, t);
  }
  s(zI, "read");
  pi.read = zI;
  function Ey(e, t) {
    return t.fs.readdirSync(e, { withFileTypes: !0 }).map((i) => {
      let n = {
        dirent: i,
        name: i.name,
        path: xy.joinPathSegments(e, i.name, t.pathSegmentSeparator)
      };
      if (n.dirent.isSymbolicLink() && t.followSymbolicLinks)
        try {
          let o = t.fs.statSync(n.path);
          n.dirent = yy.fs.createDirentFromStats(n.name, o);
        } catch (o) {
          if (t.throwErrorOnBrokenSymbolicLink)
            throw o;
        }
      return n;
    });
  }
  s(Ey, "readdirWithFileTypes");
  pi.readdirWithFileTypes = Ey;
  function by(e, t) {
    return t.fs.readdirSync(e).map((i) => {
      let n = xy.joinPathSegments(e, i, t.pathSegmentSeparator), o = UI.statSync(n, t.fsStatSettings), a = {
        name: i,
        path: n,
        dirent: yy.fs.createDirentFromStats(i, o)
      };
      return t.stats && (a.stats = o), a;
    });
  }
  s(by, "readdir");
  pi.readdir = by;
});

// ../node_modules/@nodelib/fs.scandir/out/adapters/fs.js
var Cy = P((hi) => {
  "use strict";
  Object.defineProperty(hi, "__esModule", { value: !0 });
  hi.createFileSystemAdapter = hi.FILE_SYSTEM_ADAPTER = void 0;
  var cn = H("fs");
  hi.FILE_SYSTEM_ADAPTER = {
    lstat: cn.lstat,
    stat: cn.stat,
    lstatSync: cn.lstatSync,
    statSync: cn.statSync,
    readdir: cn.readdir,
    readdirSync: cn.readdirSync
  };
  function HI(e) {
    return e === void 0 ? hi.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, hi.FILE_SYSTEM_ADAPTER), e);
  }
  s(HI, "createFileSystemAdapter");
  hi.createFileSystemAdapter = HI;
});

// ../node_modules/@nodelib/fs.scandir/out/settings.js
var wy = P((mc) => {
  "use strict";
  Object.defineProperty(mc, "__esModule", { value: !0 });
  var JI = H("path"), GI = ji(), XI = Cy(), dc = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !1), this.fs = XI.createFileSystemAdapter(
      this._options.fs), this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, JI.sep), this.stats = this._getValue(
      this._options.stats, !1), this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !0), this.
      fsStatSettings = new GI.Settings({
        followSymbolicLink: this.followSymbolicLinks,
        fs: this.fs,
        throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  mc.default = dc;
});

// ../node_modules/@nodelib/fs.scandir/out/index.js
var ta = P((fi) => {
  "use strict";
  Object.defineProperty(fi, "__esModule", { value: !0 });
  fi.Settings = fi.scandirSync = fi.scandir = void 0;
  var Ay = Dy(), KI = vy(), gc = wy();
  fi.Settings = gc.default;
  function YI(e, t, r) {
    if (typeof t == "function") {
      Ay.read(e, Dc(), t);
      return;
    }
    Ay.read(e, Dc(t), r);
  }
  s(YI, "scandir");
  fi.scandir = YI;
  function QI(e, t) {
    let r = Dc(t);
    return KI.read(e, r);
  }
  s(QI, "scandirSync");
  fi.scandirSync = QI;
  function Dc(e = {}) {
    return e instanceof gc.default ? e : new gc.default(e);
  }
  s(Dc, "getSettings");
});

// ../node_modules/reusify/reusify.js
var Fy = P((cZ, Sy) => {
  "use strict";
  function ZI(e) {
    var t = new e(), r = t;
    function i() {
      var o = t;
      return o.next ? t = o.next : (t = new e(), r = t), o.next = null, o;
    }
    s(i, "get");
    function n(o) {
      r.next = o, r = o;
    }
    return s(n, "release"), {
      get: i,
      release: n
    };
  }
  s(ZI, "reusify");
  Sy.exports = ZI;
});

// ../node_modules/fastq/queue.js
var ky = P((hZ, yc) => {
  "use strict";
  var eP = Fy();
  function _y(e, t, r) {
    if (typeof e == "function" && (r = t, t = e, e = null), !(r >= 1))
      throw new Error("fastqueue concurrency must be equal to or greater than 1");
    var i = eP(tP), n = null, o = null, a = 0, u = null, l = {
      push: g,
      drain: Ht,
      saturated: Ht,
      pause: p,
      paused: !1,
      get concurrency() {
        return r;
      },
      set concurrency(L) {
        if (!(L >= 1))
          throw new Error("fastqueue concurrency must be equal to or greater than 1");
        if (r = L, !l.paused)
          for (; n && a < r; )
            a++, D();
      },
      running: c,
      resume: d,
      idle: m,
      length: h,
      getQueue: f,
      unshift: b,
      empty: Ht,
      kill: v,
      killAndDrain: S,
      error: k
    };
    return l;
    function c() {
      return a;
    }
    function p() {
      l.paused = !0;
    }
    function h() {
      for (var L = n, C = 0; L; )
        L = L.next, C++;
      return C;
    }
    function f() {
      for (var L = n, C = []; L; )
        C.push(L.value), L = L.next;
      return C;
    }
    function d() {
      if (l.paused) {
        if (l.paused = !1, n === null) {
          a++, D();
          return;
        }
        for (; n && a < r; )
          a++, D();
      }
    }
    function m() {
      return a === 0 && l.length() === 0;
    }
    function g(L, C) {
      var w = i.get();
      w.context = e, w.release = D, w.value = L, w.callback = C || Ht, w.errorHandler = u, a >= r || l.paused ? o ? (o.next = w, o = w) : (n =
      w, o = w, l.saturated()) : (a++, t.call(e, w.value, w.worked));
    }
    function b(L, C) {
      var w = i.get();
      w.context = e, w.release = D, w.value = L, w.callback = C || Ht, w.errorHandler = u, a >= r || l.paused ? n ? (w.next = n, n = w) : (n =
      w, o = w, l.saturated()) : (a++, t.call(e, w.value, w.worked));
    }
    function D(L) {
      L && i.release(L);
      var C = n;
      C && a <= r ? l.paused ? a-- : (o === n && (o = null), n = C.next, C.next = null, t.call(e, C.value, C.worked), o === null && l.empty()) :
      --a === 0 && l.drain();
    }
    function v() {
      n = null, o = null, l.drain = Ht;
    }
    function S() {
      n = null, o = null, l.drain(), l.drain = Ht;
    }
    function k(L) {
      u = L;
    }
  }
  s(_y, "fastqueue");
  function Ht() {
  }
  s(Ht, "noop");
  function tP() {
    this.value = null, this.callback = Ht, this.next = null, this.release = Ht, this.context = null, this.errorHandler = null;
    var e = this;
    this.worked = /* @__PURE__ */ s(function(r, i) {
      var n = e.callback, o = e.errorHandler, a = e.value;
      e.value = null, e.callback = Ht, e.errorHandler && o(r, a), n.call(e.context, r, i), e.release(e);
    }, "worked");
  }
  s(tP, "Task");
  function rP(e, t, r) {
    typeof e == "function" && (r = t, t = e, e = null);
    function i(p, h) {
      t.call(this, p).then(function(f) {
        h(null, f);
      }, h);
    }
    s(i, "asyncWrapper");
    var n = _y(e, i, r), o = n.push, a = n.unshift;
    return n.push = u, n.unshift = l, n.drained = c, n;
    function u(p) {
      var h = new Promise(function(f, d) {
        o(p, function(m, g) {
          if (m) {
            d(m);
            return;
          }
          f(g);
        });
      });
      return h.catch(Ht), h;
    }
    s(u, "push");
    function l(p) {
      var h = new Promise(function(f, d) {
        a(p, function(m, g) {
          if (m) {
            d(m);
            return;
          }
          f(g);
        });
      });
      return h.catch(Ht), h;
    }
    s(l, "unshift");
    function c() {
      var p = new Promise(function(h) {
        process.nextTick(function() {
          if (n.idle())
            h();
          else {
            var f = n.drain;
            n.drain = function() {
              typeof f == "function" && f(), h(), n.drain = f;
            };
          }
        });
      });
      return p;
    }
    s(c, "drained");
  }
  s(rP, "queueAsPromised");
  yc.exports = _y;
  yc.exports.promise = rP;
});

// ../node_modules/@nodelib/fs.walk/out/readers/common.js
var ra = P((Sr) => {
  "use strict";
  Object.defineProperty(Sr, "__esModule", { value: !0 });
  Sr.joinPathSegments = Sr.replacePathSegmentSeparator = Sr.isAppliedFilter = Sr.isFatalError = void 0;
  function iP(e, t) {
    return e.errorFilter === null ? !0 : !e.errorFilter(t);
  }
  s(iP, "isFatalError");
  Sr.isFatalError = iP;
  function nP(e, t) {
    return e === null || e(t);
  }
  s(nP, "isAppliedFilter");
  Sr.isAppliedFilter = nP;
  function sP(e, t) {
    return e.split(/[/\\]/).join(t);
  }
  s(sP, "replacePathSegmentSeparator");
  Sr.replacePathSegmentSeparator = sP;
  function oP(e, t, r) {
    return e === "" ? t : e.endsWith(r) ? e + t : e + r + t;
  }
  s(oP, "joinPathSegments");
  Sr.joinPathSegments = oP;
});

// ../node_modules/@nodelib/fs.walk/out/readers/reader.js
var bc = P((Ec) => {
  "use strict";
  Object.defineProperty(Ec, "__esModule", { value: !0 });
  var aP = ra(), xc = class {
    static {
      s(this, "Reader");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._root = aP.replacePathSegmentSeparator(t, r.pathSegmentSeparator);
    }
  };
  Ec.default = xc;
});

// ../node_modules/@nodelib/fs.walk/out/readers/async.js
var wc = P((Cc) => {
  "use strict";
  Object.defineProperty(Cc, "__esModule", { value: !0 });
  var uP = H("events"), lP = ta(), cP = ky(), ia = ra(), pP = bc(), vc = class extends pP.default {
    static {
      s(this, "AsyncReader");
    }
    constructor(t, r) {
      super(t, r), this._settings = r, this._scandir = lP.scandir, this._emitter = new uP.EventEmitter(), this._queue = cP(this._worker.bind(
      this), this._settings.concurrency), this._isFatalError = !1, this._isDestroyed = !1, this._queue.drain = () => {
        this._isFatalError || this._emitter.emit("end");
      };
    }
    read() {
      return this._isFatalError = !1, this._isDestroyed = !1, setImmediate(() => {
        this._pushToQueue(this._root, this._settings.basePath);
      }), this._emitter;
    }
    get isDestroyed() {
      return this._isDestroyed;
    }
    destroy() {
      if (this._isDestroyed)
        throw new Error("The reader is already destroyed");
      this._isDestroyed = !0, this._queue.killAndDrain();
    }
    onEntry(t) {
      this._emitter.on("entry", t);
    }
    onError(t) {
      this._emitter.once("error", t);
    }
    onEnd(t) {
      this._emitter.once("end", t);
    }
    _pushToQueue(t, r) {
      let i = { directory: t, base: r };
      this._queue.push(i, (n) => {
        n !== null && this._handleError(n);
      });
    }
    _worker(t, r) {
      this._scandir(t.directory, this._settings.fsScandirSettings, (i, n) => {
        if (i !== null) {
          r(i, void 0);
          return;
        }
        for (let o of n)
          this._handleEntry(o, t.base);
        r(null, void 0);
      });
    }
    _handleError(t) {
      this._isDestroyed || !ia.isFatalError(this._settings, t) || (this._isFatalError = !0, this._isDestroyed = !0, this._emitter.emit("erro\
r", t));
    }
    _handleEntry(t, r) {
      if (this._isDestroyed || this._isFatalError)
        return;
      let i = t.path;
      r !== void 0 && (t.path = ia.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), ia.isAppliedFilter(this._settings.entryFilter,
      t) && this._emitEntry(t), t.dirent.isDirectory() && ia.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(i, r === void 0 ?
      void 0 : t.path);
    }
    _emitEntry(t) {
      this._emitter.emit("entry", t);
    }
  };
  Cc.default = vc;
});

// ../node_modules/@nodelib/fs.walk/out/providers/async.js
var Ty = P((Sc) => {
  "use strict";
  Object.defineProperty(Sc, "__esModule", { value: !0 });
  var hP = wc(), Ac = class {
    static {
      s(this, "AsyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new hP.default(this._root, this._settings), this._storage = [];
    }
    read(t) {
      this._reader.onError((r) => {
        fP(t, r);
      }), this._reader.onEntry((r) => {
        this._storage.push(r);
      }), this._reader.onEnd(() => {
        dP(t, this._storage);
      }), this._reader.read();
    }
  };
  Sc.default = Ac;
  function fP(e, t) {
    e(t);
  }
  s(fP, "callFailureCallback");
  function dP(e, t) {
    e(null, t);
  }
  s(dP, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.walk/out/providers/stream.js
var By = P((_c) => {
  "use strict";
  Object.defineProperty(_c, "__esModule", { value: !0 });
  var mP = H("stream"), gP = wc(), Fc = class {
    static {
      s(this, "StreamProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new gP.default(this._root, this._settings), this._stream = new mP.Readable({
        objectMode: !0,
        read: /* @__PURE__ */ s(() => {
        }, "read"),
        destroy: /* @__PURE__ */ s(() => {
          this._reader.isDestroyed || this._reader.destroy();
        }, "destroy")
      });
    }
    read() {
      return this._reader.onError((t) => {
        this._stream.emit("error", t);
      }), this._reader.onEntry((t) => {
        this._stream.push(t);
      }), this._reader.onEnd(() => {
        this._stream.push(null);
      }), this._reader.read(), this._stream;
    }
  };
  _c.default = Fc;
});

// ../node_modules/@nodelib/fs.walk/out/readers/sync.js
var Iy = P((Tc) => {
  "use strict";
  Object.defineProperty(Tc, "__esModule", { value: !0 });
  var DP = ta(), na = ra(), yP = bc(), kc = class extends yP.default {
    static {
      s(this, "SyncReader");
    }
    constructor() {
      super(...arguments), this._scandir = DP.scandirSync, this._storage = [], this._queue = /* @__PURE__ */ new Set();
    }
    read() {
      return this._pushToQueue(this._root, this._settings.basePath), this._handleQueue(), this._storage;
    }
    _pushToQueue(t, r) {
      this._queue.add({ directory: t, base: r });
    }
    _handleQueue() {
      for (let t of this._queue.values())
        this._handleDirectory(t.directory, t.base);
    }
    _handleDirectory(t, r) {
      try {
        let i = this._scandir(t, this._settings.fsScandirSettings);
        for (let n of i)
          this._handleEntry(n, r);
      } catch (i) {
        this._handleError(i);
      }
    }
    _handleError(t) {
      if (na.isFatalError(this._settings, t))
        throw t;
    }
    _handleEntry(t, r) {
      let i = t.path;
      r !== void 0 && (t.path = na.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), na.isAppliedFilter(this._settings.entryFilter,
      t) && this._pushToStorage(t), t.dirent.isDirectory() && na.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(i, r ===
      void 0 ? void 0 : t.path);
    }
    _pushToStorage(t) {
      this._storage.push(t);
    }
  };
  Tc.default = kc;
});

// ../node_modules/@nodelib/fs.walk/out/providers/sync.js
var Py = P((Ic) => {
  "use strict";
  Object.defineProperty(Ic, "__esModule", { value: !0 });
  var xP = Iy(), Bc = class {
    static {
      s(this, "SyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new xP.default(this._root, this._settings);
    }
    read() {
      return this._reader.read();
    }
  };
  Ic.default = Bc;
});

// ../node_modules/@nodelib/fs.walk/out/settings.js
var Oy = P((Oc) => {
  "use strict";
  Object.defineProperty(Oc, "__esModule", { value: !0 });
  var EP = H("path"), bP = ta(), Pc = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.basePath = this._getValue(this._options.basePath, void 0), this.concurrency = this._getValue(this._options.concurrency,
      Number.POSITIVE_INFINITY), this.deepFilter = this._getValue(this._options.deepFilter, null), this.entryFilter = this._getValue(this._options.
      entryFilter, null), this.errorFilter = this._getValue(this._options.errorFilter, null), this.pathSegmentSeparator = this._getValue(this.
      _options.pathSegmentSeparator, EP.sep), this.fsScandirSettings = new bP.Settings({
        followSymbolicLinks: this._options.followSymbolicLinks,
        fs: this._options.fs,
        pathSegmentSeparator: this._options.pathSegmentSeparator,
        stats: this._options.stats,
        throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  Oc.default = Pc;
});

// ../node_modules/@nodelib/fs.walk/out/index.js
var oa = P((Fr) => {
  "use strict";
  Object.defineProperty(Fr, "__esModule", { value: !0 });
  Fr.Settings = Fr.walkStream = Fr.walkSync = Fr.walk = void 0;
  var Ry = Ty(), vP = By(), CP = Py(), Rc = Oy();
  Fr.Settings = Rc.default;
  function wP(e, t, r) {
    if (typeof t == "function") {
      new Ry.default(e, sa()).read(t);
      return;
    }
    new Ry.default(e, sa(t)).read(r);
  }
  s(wP, "walk");
  Fr.walk = wP;
  function AP(e, t) {
    let r = sa(t);
    return new CP.default(e, r).read();
  }
  s(AP, "walkSync");
  Fr.walkSync = AP;
  function SP(e, t) {
    let r = sa(t);
    return new vP.default(e, r).read();
  }
  s(SP, "walkStream");
  Fr.walkStream = SP;
  function sa(e = {}) {
    return e instanceof Rc.default ? e : new Rc.default(e);
  }
  s(sa, "getSettings");
});

// ../node_modules/fast-glob/out/readers/reader.js
var aa = P((Lc) => {
  "use strict";
  Object.defineProperty(Lc, "__esModule", { value: !0 });
  var FP = H("path"), _P = ji(), Ny = Ur(), Nc = class {
    static {
      s(this, "Reader");
    }
    constructor(t) {
      this._settings = t, this._fsStatSettings = new _P.Settings({
        followSymbolicLink: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks
      });
    }
    _getFullEntryPath(t) {
      return FP.resolve(this._settings.cwd, t);
    }
    _makeEntry(t, r) {
      let i = {
        name: r,
        path: r,
        dirent: Ny.fs.createDirentFromStats(r, t)
      };
      return this._settings.stats && (i.stats = t), i;
    }
    _isFatalError(t) {
      return !Ny.errno.isEnoentCodeError(t) && !this._settings.suppressErrors;
    }
  };
  Lc.default = Nc;
});

// ../node_modules/fast-glob/out/readers/stream.js
var qc = P((jc) => {
  "use strict";
  Object.defineProperty(jc, "__esModule", { value: !0 });
  var kP = H("stream"), TP = ji(), BP = oa(), IP = aa(), Mc = class extends IP.default {
    static {
      s(this, "ReaderStream");
    }
    constructor() {
      super(...arguments), this._walkStream = BP.walkStream, this._stat = TP.stat;
    }
    dynamic(t, r) {
      return this._walkStream(t, r);
    }
    static(t, r) {
      let i = t.map(this._getFullEntryPath, this), n = new kP.PassThrough({ objectMode: !0 });
      n._write = (o, a, u) => this._getEntry(i[o], t[o], r).then((l) => {
        l !== null && r.entryFilter(l) && n.push(l), o === i.length - 1 && n.end(), u();
      }).catch(u);
      for (let o = 0; o < i.length; o++)
        n.write(o);
      return n;
    }
    _getEntry(t, r, i) {
      return this._getStat(t).then((n) => this._makeEntry(n, r)).catch((n) => {
        if (i.errorFilter(n))
          return null;
        throw n;
      });
    }
    _getStat(t) {
      return new Promise((r, i) => {
        this._stat(t, this._fsStatSettings, (n, o) => n === null ? r(o) : i(n));
      });
    }
  };
  jc.default = Mc;
});

// ../node_modules/fast-glob/out/readers/async.js
var Ly = P((Vc) => {
  "use strict";
  Object.defineProperty(Vc, "__esModule", { value: !0 });
  var PP = oa(), OP = aa(), RP = qc(), $c = class extends OP.default {
    static {
      s(this, "ReaderAsync");
    }
    constructor() {
      super(...arguments), this._walkAsync = PP.walk, this._readerStream = new RP.default(this._settings);
    }
    dynamic(t, r) {
      return new Promise((i, n) => {
        this._walkAsync(t, r, (o, a) => {
          o === null ? i(a) : n(o);
        });
      });
    }
    async static(t, r) {
      let i = [], n = this._readerStream.static(t, r);
      return new Promise((o, a) => {
        n.once("error", a), n.on("data", (u) => i.push(u)), n.once("end", () => o(i));
      });
    }
  };
  Vc.default = $c;
});

// ../node_modules/fast-glob/out/providers/matchers/matcher.js
var My = P((Wc) => {
  "use strict";
  Object.defineProperty(Wc, "__esModule", { value: !0 });
  var xs = Ur(), Uc = class {
    static {
      s(this, "Matcher");
    }
    constructor(t, r, i) {
      this._patterns = t, this._settings = r, this._micromatchOptions = i, this._storage = [], this._fillStorage();
    }
    _fillStorage() {
      for (let t of this._patterns) {
        let r = this._getPatternSegments(t), i = this._splitSegmentsIntoSections(r);
        this._storage.push({
          complete: i.length <= 1,
          pattern: t,
          segments: r,
          sections: i
        });
      }
    }
    _getPatternSegments(t) {
      return xs.pattern.getPatternParts(t, this._micromatchOptions).map((i) => xs.pattern.isDynamicPattern(i, this._settings) ? {
        dynamic: !0,
        pattern: i,
        patternRe: xs.pattern.makeRe(i, this._micromatchOptions)
      } : {
        dynamic: !1,
        pattern: i
      });
    }
    _splitSegmentsIntoSections(t) {
      return xs.array.splitWhen(t, (r) => r.dynamic && xs.pattern.hasGlobStar(r.pattern));
    }
  };
  Wc.default = Uc;
});

// ../node_modules/fast-glob/out/providers/matchers/partial.js
var jy = P((Hc) => {
  "use strict";
  Object.defineProperty(Hc, "__esModule", { value: !0 });
  var NP = My(), zc = class extends NP.default {
    static {
      s(this, "PartialMatcher");
    }
    match(t) {
      let r = t.split("/"), i = r.length, n = this._storage.filter((o) => !o.complete || o.segments.length > i);
      for (let o of n) {
        let a = o.sections[0];
        if (!o.complete && i > a.length || r.every((l, c) => {
          let p = o.segments[c];
          return !!(p.dynamic && p.patternRe.test(l) || !p.dynamic && p.pattern === l);
        }))
          return !0;
      }
      return !1;
    }
  };
  Hc.default = zc;
});

// ../node_modules/fast-glob/out/providers/filters/deep.js
var qy = P((Gc) => {
  "use strict";
  Object.defineProperty(Gc, "__esModule", { value: !0 });
  var ua = Ur(), LP = jy(), Jc = class {
    static {
      s(this, "DeepFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r;
    }
    getFilter(t, r, i) {
      let n = this._getMatcher(r), o = this._getNegativePatternsRe(i);
      return (a) => this._filter(t, a, n, o);
    }
    _getMatcher(t) {
      return new LP.default(t, this._settings, this._micromatchOptions);
    }
    _getNegativePatternsRe(t) {
      let r = t.filter(ua.pattern.isAffectDepthOfReadingPattern);
      return ua.pattern.convertPatternsToRe(r, this._micromatchOptions);
    }
    _filter(t, r, i, n) {
      if (this._isSkippedByDeep(t, r.path) || this._isSkippedSymbolicLink(r))
        return !1;
      let o = ua.path.removeLeadingDotSegment(r.path);
      return this._isSkippedByPositivePatterns(o, i) ? !1 : this._isSkippedByNegativePatterns(o, n);
    }
    _isSkippedByDeep(t, r) {
      return this._settings.deep === 1 / 0 ? !1 : this._getEntryLevel(t, r) >= this._settings.deep;
    }
    _getEntryLevel(t, r) {
      let i = r.split("/").length;
      if (t === "")
        return i;
      let n = t.split("/").length;
      return i - n;
    }
    _isSkippedSymbolicLink(t) {
      return !this._settings.followSymbolicLinks && t.dirent.isSymbolicLink();
    }
    _isSkippedByPositivePatterns(t, r) {
      return !this._settings.baseNameMatch && !r.match(t);
    }
    _isSkippedByNegativePatterns(t, r) {
      return !ua.pattern.matchAny(t, r);
    }
  };
  Gc.default = Jc;
});

// ../node_modules/fast-glob/out/providers/filters/entry.js
var $y = P((Kc) => {
  "use strict";
  Object.defineProperty(Kc, "__esModule", { value: !0 });
  var di = Ur(), Xc = class {
    static {
      s(this, "EntryFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r, this.index = /* @__PURE__ */ new Map();
    }
    getFilter(t, r) {
      let [i, n] = di.pattern.partitionAbsoluteAndRelative(r), o = {
        positive: {
          all: di.pattern.convertPatternsToRe(t, this._micromatchOptions)
        },
        negative: {
          absolute: di.pattern.convertPatternsToRe(i, Object.assign(Object.assign({}, this._micromatchOptions), { dot: !0 })),
          relative: di.pattern.convertPatternsToRe(n, Object.assign(Object.assign({}, this._micromatchOptions), { dot: !0 }))
        }
      };
      return (a) => this._filter(a, o);
    }
    _filter(t, r) {
      let i = di.path.removeLeadingDotSegment(t.path);
      if (this._settings.unique && this._isDuplicateEntry(i) || this._onlyFileFilter(t) || this._onlyDirectoryFilter(t))
        return !1;
      let n = this._isMatchToPatternsSet(i, r, t.dirent.isDirectory());
      return this._settings.unique && n && this._createIndexRecord(i), n;
    }
    _isDuplicateEntry(t) {
      return this.index.has(t);
    }
    _createIndexRecord(t) {
      this.index.set(t, void 0);
    }
    _onlyFileFilter(t) {
      return this._settings.onlyFiles && !t.dirent.isFile();
    }
    _onlyDirectoryFilter(t) {
      return this._settings.onlyDirectories && !t.dirent.isDirectory();
    }
    _isMatchToPatternsSet(t, r, i) {
      return !(!this._isMatchToPatterns(t, r.positive.all, i) || this._isMatchToPatterns(t, r.negative.relative, i) || this._isMatchToAbsoluteNegative(
      t, r.negative.absolute, i));
    }
    _isMatchToAbsoluteNegative(t, r, i) {
      if (r.length === 0)
        return !1;
      let n = di.path.makeAbsolute(this._settings.cwd, t);
      return this._isMatchToPatterns(n, r, i);
    }
    _isMatchToPatterns(t, r, i) {
      if (r.length === 0)
        return !1;
      let n = di.pattern.matchAny(t, r);
      return !n && i ? di.pattern.matchAny(t + "/", r) : n;
    }
  };
  Kc.default = Xc;
});

// ../node_modules/fast-glob/out/providers/filters/error.js
var Vy = P((Qc) => {
  "use strict";
  Object.defineProperty(Qc, "__esModule", { value: !0 });
  var MP = Ur(), Yc = class {
    static {
      s(this, "ErrorFilter");
    }
    constructor(t) {
      this._settings = t;
    }
    getFilter() {
      return (t) => this._isNonFatalError(t);
    }
    _isNonFatalError(t) {
      return MP.errno.isEnoentCodeError(t) || this._settings.suppressErrors;
    }
  };
  Qc.default = Yc;
});

// ../node_modules/fast-glob/out/providers/transformers/entry.js
var Wy = P((ep) => {
  "use strict";
  Object.defineProperty(ep, "__esModule", { value: !0 });
  var Uy = Ur(), Zc = class {
    static {
      s(this, "EntryTransformer");
    }
    constructor(t) {
      this._settings = t;
    }
    getTransformer() {
      return (t) => this._transform(t);
    }
    _transform(t) {
      let r = t.path;
      return this._settings.absolute && (r = Uy.path.makeAbsolute(this._settings.cwd, r), r = Uy.path.unixify(r)), this._settings.markDirectories &&
      t.dirent.isDirectory() && (r += "/"), this._settings.objectMode ? Object.assign(Object.assign({}, t), { path: r }) : r;
    }
  };
  ep.default = Zc;
});

// ../node_modules/fast-glob/out/providers/provider.js
var la = P((rp) => {
  "use strict";
  Object.defineProperty(rp, "__esModule", { value: !0 });
  var jP = H("path"), qP = qy(), $P = $y(), VP = Vy(), UP = Wy(), tp = class {
    static {
      s(this, "Provider");
    }
    constructor(t) {
      this._settings = t, this.errorFilter = new VP.default(this._settings), this.entryFilter = new $P.default(this._settings, this._getMicromatchOptions()),
      this.deepFilter = new qP.default(this._settings, this._getMicromatchOptions()), this.entryTransformer = new UP.default(this._settings);
    }
    _getRootDirectory(t) {
      return jP.resolve(this._settings.cwd, t.base);
    }
    _getReaderOptions(t) {
      let r = t.base === "." ? "" : t.base;
      return {
        basePath: r,
        pathSegmentSeparator: "/",
        concurrency: this._settings.concurrency,
        deepFilter: this.deepFilter.getFilter(r, t.positive, t.negative),
        entryFilter: this.entryFilter.getFilter(t.positive, t.negative),
        errorFilter: this.errorFilter.getFilter(),
        followSymbolicLinks: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        stats: this._settings.stats,
        throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,
        transform: this.entryTransformer.getTransformer()
      };
    }
    _getMicromatchOptions() {
      return {
        dot: this._settings.dot,
        matchBase: this._settings.baseNameMatch,
        nobrace: !this._settings.braceExpansion,
        nocase: !this._settings.caseSensitiveMatch,
        noext: !this._settings.extglob,
        noglobstar: !this._settings.globstar,
        posix: !0,
        strictSlashes: !1
      };
    }
  };
  rp.default = tp;
});

// ../node_modules/fast-glob/out/providers/async.js
var zy = P((np) => {
  "use strict";
  Object.defineProperty(np, "__esModule", { value: !0 });
  var WP = Ly(), zP = la(), ip = class extends zP.default {
    static {
      s(this, "ProviderAsync");
    }
    constructor() {
      super(...arguments), this._reader = new WP.default(this._settings);
    }
    async read(t) {
      let r = this._getRootDirectory(t), i = this._getReaderOptions(t);
      return (await this.api(r, t, i)).map((o) => i.transform(o));
    }
    api(t, r, i) {
      return r.dynamic ? this._reader.dynamic(t, i) : this._reader.static(r.patterns, i);
    }
  };
  np.default = ip;
});

// ../node_modules/fast-glob/out/providers/stream.js
var Hy = P((op) => {
  "use strict";
  Object.defineProperty(op, "__esModule", { value: !0 });
  var HP = H("stream"), JP = qc(), GP = la(), sp = class extends GP.default {
    static {
      s(this, "ProviderStream");
    }
    constructor() {
      super(...arguments), this._reader = new JP.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), i = this._getReaderOptions(t), n = this.api(r, t, i), o = new HP.Readable({ objectMode: !0, read: /* @__PURE__ */ s(
      () => {
      }, "read") });
      return n.once("error", (a) => o.emit("error", a)).on("data", (a) => o.emit("data", i.transform(a))).once("end", () => o.emit("end")), o.
      once("close", () => n.destroy()), o;
    }
    api(t, r, i) {
      return r.dynamic ? this._reader.dynamic(t, i) : this._reader.static(r.patterns, i);
    }
  };
  op.default = sp;
});

// ../node_modules/fast-glob/out/readers/sync.js
var Jy = P((up) => {
  "use strict";
  Object.defineProperty(up, "__esModule", { value: !0 });
  var XP = ji(), KP = oa(), YP = aa(), ap = class extends YP.default {
    static {
      s(this, "ReaderSync");
    }
    constructor() {
      super(...arguments), this._walkSync = KP.walkSync, this._statSync = XP.statSync;
    }
    dynamic(t, r) {
      return this._walkSync(t, r);
    }
    static(t, r) {
      let i = [];
      for (let n of t) {
        let o = this._getFullEntryPath(n), a = this._getEntry(o, n, r);
        a === null || !r.entryFilter(a) || i.push(a);
      }
      return i;
    }
    _getEntry(t, r, i) {
      try {
        let n = this._getStat(t);
        return this._makeEntry(n, r);
      } catch (n) {
        if (i.errorFilter(n))
          return null;
        throw n;
      }
    }
    _getStat(t) {
      return this._statSync(t, this._fsStatSettings);
    }
  };
  up.default = ap;
});

// ../node_modules/fast-glob/out/providers/sync.js
var Gy = P((cp) => {
  "use strict";
  Object.defineProperty(cp, "__esModule", { value: !0 });
  var QP = Jy(), ZP = la(), lp = class extends ZP.default {
    static {
      s(this, "ProviderSync");
    }
    constructor() {
      super(...arguments), this._reader = new QP.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), i = this._getReaderOptions(t);
      return this.api(r, t, i).map(i.transform);
    }
    api(t, r, i) {
      return r.dynamic ? this._reader.dynamic(t, i) : this._reader.static(r.patterns, i);
    }
  };
  cp.default = lp;
});

// ../node_modules/fast-glob/out/settings.js
var Xy = P((hn) => {
  "use strict";
  Object.defineProperty(hn, "__esModule", { value: !0 });
  hn.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;
  var pn = H("fs"), e8 = H("os"), t8 = Math.max(e8.cpus().length, 1);
  hn.DEFAULT_FILE_SYSTEM_ADAPTER = {
    lstat: pn.lstat,
    lstatSync: pn.lstatSync,
    stat: pn.stat,
    statSync: pn.statSync,
    readdir: pn.readdir,
    readdirSync: pn.readdirSync
  };
  var pp = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.absolute = this._getValue(this._options.absolute, !1), this.baseNameMatch = this._getValue(this._options.baseNameMatch,
      !1), this.braceExpansion = this._getValue(this._options.braceExpansion, !0), this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch,
      !0), this.concurrency = this._getValue(this._options.concurrency, t8), this.cwd = this._getValue(this._options.cwd, process.cwd()), this.
      deep = this._getValue(this._options.deep, 1 / 0), this.dot = this._getValue(this._options.dot, !1), this.extglob = this._getValue(this.
      _options.extglob, !0), this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !0), this.fs = this._getFileSystemMethods(
      this._options.fs), this.globstar = this._getValue(this._options.globstar, !0), this.ignore = this._getValue(this._options.ignore, []),
      this.markDirectories = this._getValue(this._options.markDirectories, !1), this.objectMode = this._getValue(this._options.objectMode, !1),
      this.onlyDirectories = this._getValue(this._options.onlyDirectories, !1), this.onlyFiles = this._getValue(this._options.onlyFiles, !0),
      this.stats = this._getValue(this._options.stats, !1), this.suppressErrors = this._getValue(this._options.suppressErrors, !1), this.throwErrorOnBrokenSymbolicLink =
      this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !1), this.unique = this._getValue(this._options.unique, !0), this.onlyDirectories &&
      (this.onlyFiles = !1), this.stats && (this.objectMode = !0), this.ignore = [].concat(this.ignore);
    }
    _getValue(t, r) {
      return t === void 0 ? r : t;
    }
    _getFileSystemMethods(t = {}) {
      return Object.assign(Object.assign({}, hn.DEFAULT_FILE_SYSTEM_ADAPTER), t);
    }
  };
  hn.default = pp;
});

// ../node_modules/fast-glob/out/index.js
var mp = P((uee, Yy) => {
  "use strict";
  var Ky = YD(), r8 = zy(), i8 = Hy(), n8 = Gy(), hp = Xy(), Jt = Ur();
  async function fp(e, t) {
    hr(e);
    let r = dp(e, r8.default, t), i = await Promise.all(r);
    return Jt.array.flatten(i);
  }
  s(fp, "FastGlob");
  (function(e) {
    e.glob = e, e.globSync = t, e.globStream = r, e.async = e;
    function t(c, p) {
      hr(c);
      let h = dp(c, n8.default, p);
      return Jt.array.flatten(h);
    }
    s(t, "sync"), e.sync = t;
    function r(c, p) {
      hr(c);
      let h = dp(c, i8.default, p);
      return Jt.stream.merge(h);
    }
    s(r, "stream"), e.stream = r;
    function i(c, p) {
      hr(c);
      let h = [].concat(c), f = new hp.default(p);
      return Ky.generate(h, f);
    }
    s(i, "generateTasks"), e.generateTasks = i;
    function n(c, p) {
      hr(c);
      let h = new hp.default(p);
      return Jt.pattern.isDynamicPattern(c, h);
    }
    s(n, "isDynamicPattern"), e.isDynamicPattern = n;
    function o(c) {
      return hr(c), Jt.path.escape(c);
    }
    s(o, "escapePath"), e.escapePath = o;
    function a(c) {
      return hr(c), Jt.path.convertPathToPattern(c);
    }
    s(a, "convertPathToPattern"), e.convertPathToPattern = a;
    let u;
    (function(c) {
      function p(f) {
        return hr(f), Jt.path.escapePosixPath(f);
      }
      s(p, "escapePath"), c.escapePath = p;
      function h(f) {
        return hr(f), Jt.path.convertPosixPathToPattern(f);
      }
      s(h, "convertPathToPattern"), c.convertPathToPattern = h;
    })(u = e.posix || (e.posix = {}));
    let l;
    (function(c) {
      function p(f) {
        return hr(f), Jt.path.escapeWindowsPath(f);
      }
      s(p, "escapePath"), c.escapePath = p;
      function h(f) {
        return hr(f), Jt.path.convertWindowsPathToPattern(f);
      }
      s(h, "convertPathToPattern"), c.convertPathToPattern = h;
    })(l = e.win32 || (e.win32 = {}));
  })(fp || (fp = {}));
  function dp(e, t, r) {
    let i = [].concat(e), n = new hp.default(r), o = Ky.generate(i, n), a = new t(n);
    return o.map(a.read, a);
  }
  s(dp, "getWorks");
  function hr(e) {
    if (![].concat(e).every((i) => Jt.string.isString(i) && !Jt.string.isEmpty(i)))
      throw new TypeError("Patterns must be a string (non empty) or an array of strings");
  }
  s(hr, "assertPatternsInput");
  Yy.exports = fp;
});

// ../node_modules/globby/node_modules/path-type/index.js
import s8 from "node:fs";
import o8 from "node:fs/promises";
async function gp(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return (await o8[e](r))[t]();
  } catch (i) {
    if (i.code === "ENOENT")
      return !1;
    throw i;
  }
}
function Dp(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return s8[e](r)[t]();
  } catch (i) {
    if (i.code === "ENOENT")
      return !1;
    throw i;
  }
}
var hee, Qy, fee, dee, Zy, mee, ex = ft(() => {
  s(gp, "isType");
  s(Dp, "isTypeSync");
  hee = gp.bind(void 0, "stat", "isFile"), Qy = gp.bind(void 0, "stat", "isDirectory"), fee = gp.bind(void 0, "lstat", "isSymbolicLink"), dee =
  Dp.bind(void 0, "statSync", "isFile"), Zy = Dp.bind(void 0, "statSync", "isDirectory"), mee = Dp.bind(void 0, "lstatSync", "isSymbolicLink");
});

// ../node_modules/unicorn-magic/default.js
var tx = ft(() => {
});

// ../node_modules/unicorn-magic/node.js
import { promisify as a8 } from "node:util";
import { execFile as u8, execFileSync as vee } from "node:child_process";
import wee from "node:path";
import { fileURLToPath as l8 } from "node:url";
function Es(e) {
  return e instanceof URL ? l8(e) : e;
}
var See, Fee, yp = ft(() => {
  tx();
  See = a8(u8);
  s(Es, "toPath");
  Fee = 10 * 1024 * 1024;
});

// ../node_modules/globby/node_modules/ignore/index.js
var lx = P((Bee, Ap) => {
  function nx(e) {
    return Array.isArray(e) ? e : [e];
  }
  s(nx, "makeArray");
  var c8 = void 0, Ep = "", rx = " ", xp = "\\", p8 = /^\s+$/, h8 = /(?:[^\\]|^)\\$/, f8 = /^\\!/, d8 = /^\\#/, m8 = /\r?\n/g, g8 = /^\.{0,2}\/|^\.{1,2}$/,
  D8 = /\/$/, fn = "/", sx = "node-ignore";
  typeof Symbol < "u" && (sx = Symbol.for("node-ignore"));
  var ox = sx, bs = /* @__PURE__ */ s((e, t, r) => (Object.defineProperty(e, t, { value: r }), r), "define"), y8 = /([0-z])-([0-z])/g, ax = /* @__PURE__ */ s(
  () => !1, "RETURN_FALSE"), x8 = /* @__PURE__ */ s((e) => e.replace(
    y8,
    (t, r, i) => r.charCodeAt(0) <= i.charCodeAt(0) ? t : Ep
  ), "sanitizeRange"), E8 = /* @__PURE__ */ s((e) => {
    let { length: t } = e;
    return e.slice(0, t - t % 2);
  }, "cleanRangeBackSlash"), b8 = [
    [
      // Remove BOM
      // TODO:
      // Other similar zero-width characters?
      /^\uFEFF/,
      () => Ep
    ],
    // > Trailing spaces are ignored unless they are quoted with backslash ("\")
    [
      // (a\ ) -> (a )
      // (a  ) -> (a)
      // (a ) -> (a)
      // (a \ ) -> (a  )
      /((?:\\\\)*?)(\\?\s+)$/,
      (e, t, r) => t + (r.indexOf("\\") === 0 ? rx : Ep)
    ],
    // Replace (\ ) with ' '
    // (\ ) -> ' '
    // (\\ ) -> '\\ '
    // (\\\ ) -> '\\ '
    [
      /(\\+?)\s/g,
      (e, t) => {
        let { length: r } = t;
        return t.slice(0, r - r % 2) + rx;
      }
    ],
    // Escape metacharacters
    // which is written down by users but means special for regular expressions.
    // > There are 12 characters with special meanings:
    // > - the backslash \,
    // > - the caret ^,
    // > - the dollar sign $,
    // > - the period or dot .,
    // > - the vertical bar or pipe symbol |,
    // > - the question mark ?,
    // > - the asterisk or star *,
    // > - the plus sign +,
    // > - the opening parenthesis (,
    // > - the closing parenthesis ),
    // > - and the opening square bracket [,
    // > - the opening curly brace {,
    // > These special characters are often called "metacharacters".
    [
      /[\\$.|*+(){^]/g,
      (e) => `\\${e}`
    ],
    [
      // > a question mark (?) matches a single character
      /(?!\\)\?/g,
      () => "[^/]"
    ],
    // leading slash
    [
      // > A leading slash matches the beginning of the pathname.
      // > For example, "/*.c" matches "cat-file.c" but not "mozilla-sha1/sha1.c".
      // A leading slash matches the beginning of the pathname
      /^\//,
      () => "^"
    ],
    // replace special metacharacter slash after the leading slash
    [
      /\//g,
      () => "\\/"
    ],
    [
      // > A leading "**" followed by a slash means match in all directories.
      // > For example, "**/foo" matches file or directory "foo" anywhere,
      // > the same as pattern "foo".
      // > "**/foo/bar" matches file or directory "bar" anywhere that is directly
      // >   under directory "foo".
      // Notice that the '*'s have been replaced as '\\*'
      /^\^*\\\*\\\*\\\//,
      // '**/foo' <-> 'foo'
      () => "^(?:.*\\/)?"
    ],
    // starting
    [
      // there will be no leading '/'
      //   (which has been replaced by section "leading slash")
      // If starts with '**', adding a '^' to the regular expression also works
      /^(?=[^^])/,
      /* @__PURE__ */ s(function() {
        return /\/(?!$)/.test(this) ? "^" : "(?:^|\\/)";
      }, "startingReplacer")
    ],
    // two globstars
    [
      // Use lookahead assertions so that we could match more than one `'/**'`
      /\\\/\\\*\\\*(?=\\\/|$)/g,
      // Zero, one or several directories
      // should not use '*', or it will be replaced by the next replacer
      // Check if it is not the last `'/**'`
      (e, t, r) => t + 6 < r.length ? "(?:\\/[^\\/]+)*" : "\\/.+"
    ],
    // normal intermediate wildcards
    [
      // Never replace escaped '*'
      // ignore rule '\*' will match the path '*'
      // 'abc.*/' -> go
      // 'abc.*'  -> skip this rule,
      //    coz trailing single wildcard will be handed by [trailing wildcard]
      /(^|[^\\]+)(\\\*)+(?=.+)/g,
      // '*.js' matches '.js'
      // '*.js' doesn't match 'abc'
      (e, t, r) => {
        let i = r.replace(/\\\*/g, "[^\\/]*");
        return t + i;
      }
    ],
    [
      // unescape, revert step 3 except for back slash
      // For example, if a user escape a '\\*',
      // after step 3, the result will be '\\\\\\*'
      /\\\\\\(?=[$.|*+(){^])/g,
      () => xp
    ],
    [
      // '\\\\' -> '\\'
      /\\\\/g,
      () => xp
    ],
    [
      // > The range notation, e.g. [a-zA-Z],
      // > can be used to match one of the characters in a range.
      // `\` is escaped by step 3
      /(\\)?\[([^\]/]*?)(\\*)($|\])/g,
      (e, t, r, i, n) => t === xp ? `\\[${r}${E8(i)}${n}` : n === "]" && i.length % 2 === 0 ? `[${x8(r)}${i}]` : "[]"
    ],
    // ending
    [
      // 'js' will not match 'js.'
      // 'ab' will not match 'abc'
      /(?:[^*])$/,
      // WTF!
      // https://git-scm.com/docs/gitignore
      // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)
      // which re-fixes #24, #38
      // > If there is a separator at the end of the pattern then the pattern
      // > will only match directories, otherwise the pattern can match both
      // > files and directories.
      // 'js*' will not match 'a.js'
      // 'js/' will not match 'a.js'
      // 'js' will match 'a.js' and 'a.js/'
      (e) => /\/$/.test(e) ? `${e}$` : `${e}(?=$|\\/$)`
    ]
  ], v8 = /(^|\\\/)?\\\*$/, vs = "regex", ca = "checkRegex", ix = "_", C8 = {
    [vs](e, t) {
      return `${t ? `${t}[^/]+` : "[^/]*"}(?=$|\\/$)`;
    },
    [ca](e, t) {
      return `${t ? `${t}[^/]*` : "[^/]*"}(?=$|\\/$)`;
    }
  }, w8 = /* @__PURE__ */ s((e) => b8.reduce(
    (t, [r, i]) => t.replace(r, i.bind(e)),
    e
  ), "makeRegexPrefix"), pa = /* @__PURE__ */ s((e) => typeof e == "string", "isString"), A8 = /* @__PURE__ */ s((e) => e && pa(e) && !p8.test(
  e) && !h8.test(e) && e.indexOf("#") !== 0, "checkPattern"), S8 = /* @__PURE__ */ s((e) => e.split(m8).filter(Boolean), "splitPattern"), bp = class {
    static {
      s(this, "IgnoreRule");
    }
    constructor(t, r, i, n, o, a) {
      this.pattern = t, this.mark = r, this.negative = o, bs(this, "body", i), bs(this, "ignoreCase", n), bs(this, "regexPrefix", a);
    }
    get regex() {
      let t = ix + vs;
      return this[t] ? this[t] : this._make(vs, t);
    }
    get checkRegex() {
      let t = ix + ca;
      return this[t] ? this[t] : this._make(ca, t);
    }
    _make(t, r) {
      let i = this.regexPrefix.replace(
        v8,
        // It does not need to bind pattern
        C8[t]
      ), n = this.ignoreCase ? new RegExp(i, "i") : new RegExp(i);
      return bs(this, r, n);
    }
  }, F8 = /* @__PURE__ */ s(({
    pattern: e,
    mark: t
  }, r) => {
    let i = !1, n = e;
    n.indexOf("!") === 0 && (i = !0, n = n.substr(1)), n = n.replace(f8, "!").replace(d8, "#");
    let o = w8(n);
    return new bp(
      e,
      t,
      n,
      r,
      i,
      o
    );
  }, "createRule"), vp = class {
    static {
      s(this, "RuleManager");
    }
    constructor(t) {
      this._ignoreCase = t, this._rules = [];
    }
    _add(t) {
      if (t && t[ox]) {
        this._rules = this._rules.concat(t._rules._rules), this._added = !0;
        return;
      }
      if (pa(t) && (t = {
        pattern: t
      }), A8(t.pattern)) {
        let r = F8(t, this._ignoreCase);
        this._added = !0, this._rules.push(r);
      }
    }
    // @param {Array<string> | string | Ignore} pattern
    add(t) {
      return this._added = !1, nx(
        pa(t) ? S8(t) : t
      ).forEach(this._add, this), this._added;
    }
    // Test one single path without recursively checking parent directories
    //
    // - checkUnignored `boolean` whether should check if the path is unignored,
    //   setting `checkUnignored` to `false` could reduce additional
    //   path matching.
    // - check `string` either `MODE_IGNORE` or `MODE_CHECK_IGNORE`
    // @returns {TestResult} true if a file is ignored
    test(t, r, i) {
      let n = !1, o = !1, a;
      this._rules.forEach((l) => {
        let { negative: c } = l;
        o === c && n !== o || c && !n && !o && !r || !l[i].test(t) || (n = !c, o = c, a = c ? c8 : l);
      });
      let u = {
        ignored: n,
        unignored: o
      };
      return a && (u.rule = a), u;
    }
  }, _8 = /* @__PURE__ */ s((e, t) => {
    throw new t(e);
  }, "throwError"), Wr = /* @__PURE__ */ s((e, t, r) => pa(e) ? e ? Wr.isNotRelative(e) ? r(
    `path should be a \`path.relative()\`d string, but got "${t}"`,
    RangeError
  ) : !0 : r("path must not be empty", TypeError) : r(
    `path must be a string, but got \`${t}\``,
    TypeError
  ), "checkPath"), ux = /* @__PURE__ */ s((e) => g8.test(e), "isNotRelative");
  Wr.isNotRelative = ux;
  Wr.convert = (e) => e;
  var Cp = class {
    static {
      s(this, "Ignore");
    }
    constructor({
      ignorecase: t = !0,
      ignoreCase: r = t,
      allowRelativePaths: i = !1
    } = {}) {
      bs(this, ox, !0), this._rules = new vp(r), this._strictPathCheck = !i, this._initCache();
    }
    _initCache() {
      this._ignoreCache = /* @__PURE__ */ Object.create(null), this._testCache = /* @__PURE__ */ Object.create(null);
    }
    add(t) {
      return this._rules.add(t) && this._initCache(), this;
    }
    // legacy
    addPattern(t) {
      return this.add(t);
    }
    // @returns {TestResult}
    _test(t, r, i, n) {
      let o = t && Wr.convert(t);
      return Wr(
        o,
        t,
        this._strictPathCheck ? _8 : ax
      ), this._t(o, r, i, n);
    }
    checkIgnore(t) {
      if (!D8.test(t))
        return this.test(t);
      let r = t.split(fn).filter(Boolean);
      if (r.pop(), r.length) {
        let i = this._t(
          r.join(fn) + fn,
          this._testCache,
          !0,
          r
        );
        if (i.ignored)
          return i;
      }
      return this._rules.test(t, !1, ca);
    }
    _t(t, r, i, n) {
      if (t in r)
        return r[t];
      if (n || (n = t.split(fn).filter(Boolean)), n.pop(), !n.length)
        return r[t] = this._rules.test(t, i, vs);
      let o = this._t(
        n.join(fn) + fn,
        r,
        i,
        n
      );
      return r[t] = o.ignored ? o : this._rules.test(t, i, vs);
    }
    ignores(t) {
      return this._test(t, this._ignoreCache, !1).ignored;
    }
    createFilter() {
      return (t) => !this.ignores(t);
    }
    filter(t) {
      return nx(t).filter(this.createFilter());
    }
    // @returns {TestResult}
    test(t) {
      return this._test(t, this._testCache, !0);
    }
  }, wp = /* @__PURE__ */ s((e) => new Cp(e), "factory"), k8 = /* @__PURE__ */ s((e) => Wr(e && Wr.convert(e), e, ax), "isPathValid");
  if (
    // Detect `process` so that it can run in browsers.
    typeof process < "u" && (process.env && process.env.IGNORE_TEST_WIN32 || process.platform === "win32")
  ) {
    let e = /* @__PURE__ */ s((r) => /^\\\\\?\\/.test(r) || /["<>|\u0000-\u001F]+/u.test(r) ? r : r.replace(/\\/g, "/"), "makePosix");
    Wr.convert = e;
    let t = /^[a-z]:\//i;
    Wr.isNotRelative = (r) => t.test(r) || ux(r);
  }
  Ap.exports = wp;
  wp.default = wp;
  Ap.exports.isPathValid = k8;
});

// ../node_modules/globby/utilities.js
var Cs, Sp = ft(() => {
  Cs = /* @__PURE__ */ s((e) => e[0] === "!", "isNegativePattern");
});

// ../node_modules/globby/ignore.js
import T8 from "node:process";
import B8 from "node:fs";
import I8 from "node:fs/promises";
import dn from "node:path";
var Fp, cx, P8, px, ha, O8, R8, N8, hx, fx, ws, As, dx, mx, _p = ft(() => {
  Fp = he(mp(), 1), cx = he(lx(), 1);
  en();
  yp();
  Sp();
  P8 = [
    "**/node_modules",
    "**/flow-typed",
    "**/coverage",
    "**/.git"
  ], px = {
    absolute: !0,
    dot: !0
  }, ha = "**/.gitignore", O8 = /* @__PURE__ */ s((e, t) => Cs(e) ? "!" + dn.posix.join(t, e.slice(1)) : dn.posix.join(t, e), "applyBaseToPa\
ttern"), R8 = /* @__PURE__ */ s((e, t) => {
    let r = Ze(dn.relative(t, dn.dirname(e.filePath)));
    return e.content.split(/\r?\n/).filter((i) => i && !i.startsWith("#")).map((i) => O8(i, r));
  }, "parseIgnoreFile"), N8 = /* @__PURE__ */ s((e, t) => {
    if (t = Ze(t), dn.isAbsolute(e)) {
      if (Ze(e).startsWith(t))
        return dn.relative(t, e);
      throw new Error(`Path ${e} is not in cwd ${t}`);
    }
    return e;
  }, "toRelativePath"), hx = /* @__PURE__ */ s((e, t) => {
    let r = e.flatMap((n) => R8(n, t)), i = (0, cx.default)().add(r);
    return (n) => (n = Es(n), n = N8(n, t), n ? i.ignores(Ze(n)) : !1);
  }, "getIsIgnoredPredicate"), fx = /* @__PURE__ */ s((e = {}) => ({
    cwd: Es(e.cwd) ?? T8.cwd(),
    suppressErrors: !!e.suppressErrors,
    deep: typeof e.deep == "number" ? e.deep : Number.POSITIVE_INFINITY,
    ignore: [...e.ignore ?? [], ...P8]
  }), "normalizeOptions"), ws = /* @__PURE__ */ s(async (e, t) => {
    let { cwd: r, suppressErrors: i, deep: n, ignore: o } = fx(t), a = await (0, Fp.default)(e, {
      cwd: r,
      suppressErrors: i,
      deep: n,
      ignore: o,
      ...px
    }), u = await Promise.all(
      a.map(async (l) => ({
        filePath: l,
        content: await I8.readFile(l, "utf8")
      }))
    );
    return hx(u, r);
  }, "isIgnoredByIgnoreFiles"), As = /* @__PURE__ */ s((e, t) => {
    let { cwd: r, suppressErrors: i, deep: n, ignore: o } = fx(t), u = Fp.default.sync(e, {
      cwd: r,
      suppressErrors: i,
      deep: n,
      ignore: o,
      ...px
    }).map((l) => ({
      filePath: l,
      content: B8.readFileSync(l, "utf8")
    }));
    return hx(u, r);
  }, "isIgnoredByIgnoreFilesSync"), dx = /* @__PURE__ */ s((e) => ws(ha, e), "isGitIgnored"), mx = /* @__PURE__ */ s((e) => As(ha, e), "isGi\
tIgnoredSync");
});

// ../node_modules/globby/index.js
var Bp = {};
Pi(Bp, {
  convertPathToPattern: () => J8,
  generateGlobTasks: () => z8,
  generateGlobTasksSync: () => H8,
  globby: () => $8,
  globbyStream: () => U8,
  globbySync: () => V8,
  isDynamicPattern: () => W8,
  isGitIgnored: () => dx,
  isGitIgnoredSync: () => mx,
  isIgnoredByIgnoreFiles: () => ws,
  isIgnoredByIgnoreFilesSync: () => As
});
import yx from "node:process";
import L8 from "node:fs";
import mn from "node:path";
var gn, M8, xx, Ex, gx, Dx, kp, j8, bx, vx, fa, Cx, q8, wx, Ax, Sx, Fx, _x, kx, Tp, $8, V8, U8, W8, z8, H8, J8, Ip = ft(() => {
  u0();
  gn = he(mp(), 1);
  ex();
  yp();
  _p();
  Sp();
  _p();
  M8 = /* @__PURE__ */ s((e) => {
    if (e.some((t) => typeof t != "string"))
      throw new TypeError("Patterns must be a string or an array of strings");
  }, "assertPatternsInput"), xx = /* @__PURE__ */ s((e, t) => {
    let r = Cs(e) ? e.slice(1) : e;
    return mn.isAbsolute(r) ? r : mn.join(t, r);
  }, "normalizePathForDirectoryGlob"), Ex = /* @__PURE__ */ s(({ directoryPath: e, files: t, extensions: r }) => {
    let i = r?.length > 0 ? `.${r.length > 1 ? `{${r.join(",")}}` : r[0]}` : "";
    return t ? t.map((n) => mn.posix.join(e, `**/${mn.extname(n) ? n : `${n}${i}`}`)) : [mn.posix.join(e, `**${i ? `/*${i}` : ""}`)];
  }, "getDirectoryGlob"), gx = /* @__PURE__ */ s(async (e, {
    cwd: t = yx.cwd(),
    files: r,
    extensions: i
  } = {}) => (await Promise.all(
    e.map(async (o) => await Qy(xx(o, t)) ? Ex({ directoryPath: o, files: r, extensions: i }) : o)
  )).flat(), "directoryToGlob"), Dx = /* @__PURE__ */ s((e, {
    cwd: t = yx.cwd(),
    files: r,
    extensions: i
  } = {}) => e.flatMap((n) => Zy(xx(n, t)) ? Ex({ directoryPath: n, files: r, extensions: i }) : n), "directoryToGlobSync"), kp = /* @__PURE__ */ s(
  (e) => (e = [...new Set([e].flat())], M8(e), e), "toPatternsArray"), j8 = /* @__PURE__ */ s((e) => {
    if (!e)
      return;
    let t;
    try {
      t = L8.statSync(e);
    } catch {
      return;
    }
    if (!t.isDirectory())
      throw new Error("The `cwd` option must be a path to a directory");
  }, "checkCwdOption"), bx = /* @__PURE__ */ s((e = {}) => (e = {
    ...e,
    ignore: e.ignore ?? [],
    expandDirectories: e.expandDirectories ?? !0,
    cwd: Es(e.cwd)
  }, j8(e.cwd), e), "normalizeOptions"), vx = /* @__PURE__ */ s((e) => async (t, r) => e(kp(t), bx(r)), "normalizeArguments"), fa = /* @__PURE__ */ s(
  (e) => (t, r) => e(kp(t), bx(r)), "normalizeArgumentsSync"), Cx = /* @__PURE__ */ s((e) => {
    let { ignoreFiles: t, gitignore: r } = e, i = t ? kp(t) : [];
    return r && i.push(ha), i;
  }, "getIgnoreFilesPatterns"), q8 = /* @__PURE__ */ s(async (e) => {
    let t = Cx(e);
    return Ax(
      t.length > 0 && await ws(t, e)
    );
  }, "getFilter"), wx = /* @__PURE__ */ s((e) => {
    let t = Cx(e);
    return Ax(
      t.length > 0 && As(t, e)
    );
  }, "getFilterSync"), Ax = /* @__PURE__ */ s((e) => {
    let t = /* @__PURE__ */ new Set();
    return (r) => {
      let i = mn.normalize(r.path ?? r);
      return t.has(i) || e && e(i) ? !1 : (t.add(i), !0);
    };
  }, "createFilterFunction"), Sx = /* @__PURE__ */ s((e, t) => e.flat().filter((r) => t(r)), "unionFastGlobResults"), Fx = /* @__PURE__ */ s(
  (e, t) => {
    let r = [];
    for (; e.length > 0; ) {
      let i = e.findIndex((o) => Cs(o));
      if (i === -1) {
        r.push({ patterns: e, options: t });
        break;
      }
      let n = e[i].slice(1);
      for (let o of r)
        o.options.ignore.push(n);
      i !== 0 && r.push({
        patterns: e.slice(0, i),
        options: {
          ...t,
          ignore: [
            ...t.ignore,
            n
          ]
        }
      }), e = e.slice(i + 1);
    }
    return r;
  }, "convertNegativePatterns"), _x = /* @__PURE__ */ s((e, t) => ({
    ...t ? { cwd: t } : {},
    ...Array.isArray(e) ? { files: e } : e
  }), "normalizeExpandDirectoriesOption"), kx = /* @__PURE__ */ s(async (e, t) => {
    let r = Fx(e, t), { cwd: i, expandDirectories: n } = t;
    if (!n)
      return r;
    let o = _x(n, i);
    return Promise.all(
      r.map(async (a) => {
        let { patterns: u, options: l } = a;
        return [
          u,
          l.ignore
        ] = await Promise.all([
          gx(u, o),
          gx(l.ignore, { cwd: i })
        ]), { patterns: u, options: l };
      })
    );
  }, "generateTasks"), Tp = /* @__PURE__ */ s((e, t) => {
    let r = Fx(e, t), { cwd: i, expandDirectories: n } = t;
    if (!n)
      return r;
    let o = _x(n, i);
    return r.map((a) => {
      let { patterns: u, options: l } = a;
      return u = Dx(u, o), l.ignore = Dx(l.ignore, { cwd: i }), { patterns: u, options: l };
    });
  }, "generateTasksSync"), $8 = vx(async (e, t) => {
    let [
      r,
      i
    ] = await Promise.all([
      kx(e, t),
      q8(t)
    ]), n = await Promise.all(r.map((o) => (0, gn.default)(o.patterns, o.options)));
    return Sx(n, i);
  }), V8 = fa((e, t) => {
    let r = Tp(e, t), i = wx(t), n = r.map((o) => gn.default.sync(o.patterns, o.options));
    return Sx(n, i);
  }), U8 = fa((e, t) => {
    let r = Tp(e, t), i = wx(t), n = r.map((a) => gn.default.stream(a.patterns, a.options));
    return Bl(n).filter((a) => i(a));
  }), W8 = fa(
    (e, t) => e.some((r) => gn.default.isDynamicPattern(r, t))
  ), z8 = vx(kx), H8 = fa(Tp), { convertPathToPattern: J8 } = gn.default;
});

// ../node_modules/@storybook/docs-mdx/dist/chunk-H6DQNFQR.js
function Mx(e, t) {
  let r = {}, i = {}, n = -1;
  for (; ++n < e.length; )
    Object.assign(r, e[n].property), Object.assign(i, e[n].normal);
  return new Ss(r, i, t);
}
function Op(e) {
  return e.toLowerCase();
}
function qi() {
  return 2 ** ++tO;
}
function Tx(e, t, r) {
  r && (e[t] = r);
}
function xn(e) {
  let t = {}, r = {}, i;
  for (i in e.properties)
    if (rO.call(e.properties, i)) {
      let n = e.properties[i], o = new jp(
        i,
        e.transform(e.attributes || {}, i),
        n,
        e.space
      );
      e.mustUseProperty && e.mustUseProperty.includes(i) && (o.mustUseProperty = !0), t[i] = o, r[Op(i)] = i, r[Op(o.attribute)] = i;
    }
  return new Ss(t, r, e.space);
}
function Vx(e, t) {
  return t in e ? e[t] : t;
}
function Ux(e, t) {
  return Vx(e, t.toLowerCase());
}
function aO(e, t) {
  let r = Op(t), i = t, n = Gt;
  if (r in e.normal)
    return e.property[e.normal[r]];
  if (r.length > 4 && r.slice(0, 4) === "data" && sO.test(t)) {
    if (t.charAt(4) === "-") {
      let o = t.slice(5).replace(Bx, lO);
      i = "data" + o.charAt(0).toUpperCase() + o.slice(1);
    } else {
      let o = t.slice(4);
      if (!Bx.test(o)) {
        let a = o.replace(oO, uO);
        a.charAt(0) !== "-" && (a = "-" + a), t = "data" + a;
      }
    }
    n = jp;
  }
  return new n(i, t);
}
function uO(e) {
  return "-" + e.toLowerCase();
}
function lO(e) {
  return e.charAt(1).toUpperCase();
}
function Hx(e) {
  return t;
  function t(r) {
    let i = r && r.position && r.position[e] || {};
    if (typeof i.line == "number" && i.line > 0 && typeof i.column == "number" && i.column > 0)
      return {
        line: i.line,
        column: i.column,
        offset: typeof i.offset == "number" && i.offset > -1 ? i.offset : void 0
      };
  }
}
function Up(e) {
  let t = Vp(e), r = $p(e);
  if (t && r)
    return { start: t, end: r };
}
function hO(e, t) {
  let r = t || {};
  function i(n, ...o) {
    let a = i.invalid, u = i.handlers;
    if (n && Ix.call(n, e)) {
      let l = String(n[e]);
      a = Ix.call(u, l) ? u[l] : i.unknown;
    }
    if (a)
      return a.call(this, n, ...o);
  }
  return s(i, "one"), i.handlers = r.handlers || {}, i.invalid = r.invalid, i.unknown = r.unknown, i;
}
function fO(e, t) {
  let r = { type: "Block", value: e.value };
  t.inherit(e, r), t.comments.push(r);
  let i = {
    type: "JSXEmptyExpression",
    // @ts-expect-error: `comments` is custom.
    comments: [Object.assign({}, r, { leading: !1, trailing: !0 })]
  };
  t.patch(e, i);
  let n = { type: "JSXExpressionContainer", expression: i };
  return t.patch(e, n), n;
}
function dO(e, t) {
  let r = t || {};
  return (e[e.length - 1] === "" ? [...e, ""] : e).join(
    (r.padRight ? " " : "") + "," + (r.padLeft === !1 ? "" : " ")
  ).trim();
}
function Xt(e) {
  return e ? mO.test(String.fromCodePoint(e)) : !1;
}
function En(e, t) {
  let i = (t || Jx).jsx ? DO : gO;
  return e ? i.test(String.fromCodePoint(e)) : !1;
}
function fr(e, t) {
  return ((t || Jx).jsx ? xO : yO).test(e);
}
function EO(e) {
  return e.join(" ").trim();
}
function SO(e, t) {
  let r = t.schema, i = r, n = e.properties || {};
  r.space === "html" && e.tagName.toLowerCase() === "svg" && (i = qp, t.schema = i);
  let o = t.all(e), a = [], u, l, c;
  for (u in n)
    if (Rp.call(n, u)) {
      let h = n[u], f = aO(i, u), d;
      if (h == null || h === !1 || typeof h == "number" && Number.isNaN(h) || !h && f.boolean)
        continue;
      if (u = t.elementAttributeNameCase === "react" && f.space ? cO[f.property] || f.property : f.attribute, Array.isArray(h) && (h = f.commaSeparated ?
      dO(h) : EO(h)), u === "style") {
        let m = typeof h == "object" ? h : FO(String(h), e.tagName);
        t.stylePropertyNameCase === "css" && (m = _O(m));
        let g = [], b;
        for (b in m)
          Rp.call(m, b) && g.push({
            type: "Property",
            method: !1,
            shorthand: !1,
            computed: !1,
            key: fr(b) ? { type: "Identifier", name: b } : { type: "Literal", value: b },
            value: { type: "Literal", value: String(m[b]) },
            kind: "init"
          });
        c = g, d = {
          type: "JSXExpressionContainer",
          expression: { type: "ObjectExpression", properties: g }
        };
      } else if (h === !0)
        d = null;
      else if (t.tableCellAlignToStyle && AO.has(e.tagName) && u === "align") {
        l = String(h);
        continue;
      } else
        d = { type: "Literal", value: String(h) };
      fr(u, { jsx: !0 }) ? a.push({
        type: "JSXAttribute",
        name: { type: "JSXIdentifier", name: u },
        value: d
      }) : a.push({
        type: "JSXSpreadAttribute",
        argument: {
          type: "ObjectExpression",
          properties: [
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              key: { type: "Literal", value: String(u) },
              // @ts-expect-error No need to worry about `style` (which has a
              // `JSXExpressionContainer` value) because that’s a valid identifier.
              value: d || { type: "Literal", value: !0 },
              kind: "init"
            }
          ]
        }
      });
    }
  if (l !== void 0) {
    c || (c = [], a.push({
      type: "JSXAttribute",
      name: { type: "JSXIdentifier", name: "style" },
      value: {
        type: "JSXExpressionContainer",
        expression: { type: "ObjectExpression", properties: c }
      }
    }));
    let h = t.stylePropertyNameCase === "css" ? Gx("textAlign") : "textAlign";
    c.push({
      type: "Property",
      method: !1,
      shorthand: !1,
      computed: !1,
      key: fr(h) ? { type: "Identifier", name: h } : { type: "Literal", value: h },
      value: { type: "Literal", value: l },
      kind: "init"
    });
  }
  t.schema = r;
  let p = {
    type: "JSXElement",
    openingElement: {
      type: "JSXOpeningElement",
      attributes: a,
      name: t.createJsxElementName(e.tagName),
      selfClosing: o.length === 0
    },
    closingElement: o.length > 0 ? {
      type: "JSXClosingElement",
      name: t.createJsxElementName(e.tagName)
    } : null,
    children: o
  };
  return t.inherit(e, p), p;
}
function FO(e, t) {
  let r = {};
  try {
    vO(e, i);
  } catch (n) {
    let o = (
      /** @type {Error} */
      n
    );
    throw new Error(
      "Could not parse `style` attribute on `" + t + "`",
      { cause: o }
    );
  }
  return r;
  function i(n, o) {
    let a = n;
    a.slice(0, 2) !== "--" && (a.slice(0, 4) === "-ms-" && (a = "ms-" + a.slice(4)), a = a.replace(wO, kO)), r[a] = o;
  }
}
function _O(e) {
  let t = {}, r;
  for (r in e)
    Rp.call(e, r) && (t[Gx(r)] = e[r]);
  return t;
}
function Gx(e) {
  let t = e.replace(CO, TO);
  return t.slice(0, 3) === "ms-" && (t = "-" + t), t;
}
function kO(e, t) {
  return t.toUpperCase();
}
function TO(e) {
  return "-" + e.toLowerCase();
}
function ma(e, t) {
  let r = t ? [...t].sort(Wp) : IO;
  r.length > 0 && Xx(e, { comments: r, index: 0 });
}
function Xx(e, t) {
  if (t.index === t.comments.length)
    return;
  let r = [], i = [], n;
  for (n in e)
    if (BO.call(e, n)) {
      let a = e[n];
      if (a && typeof a == "object" && n !== "comments")
        if (Array.isArray(a)) {
          let u = -1;
          for (; ++u < a.length; )
            a[u] && typeof a[u].type == "string" && r.push(a[u]);
        } else typeof a.type == "string" && r.push(a);
    }
  r.sort(Wp), i.push(...Px(t, e, !1, { leading: !0, trailing: !1 }));
  let o = -1;
  for (; ++o < r.length; )
    Xx(r[o], t);
  i.push(
    ...Px(t, e, !0, {
      leading: !1,
      trailing: r.length > 0
    })
  ), i.length > 0 && (e.comments = i);
}
function Px(e, t, r, i) {
  let n = [];
  for (; e.comments[e.index] && Wp(e.comments[e.index], t, r) < 1; )
    n.push(Object.assign({}, e.comments[e.index++], i));
  return n;
}
function Wp(e, t, r) {
  let i = r ? "end" : "start";
  return e.range && t.range ? e.range[0] - t.range[r ? 1 : 0] : e.loc && e.loc.start && t.loc && t.loc[i] ? e.loc.start.line - t.loc[i].line ||
  e.loc.start.column - t.loc[i].column : "start" in e && i in t ? e.start - t[i] : Number.NaN;
}
function Ox(e, t) {
  let r = e.data && e.data.estree, i = r && r.comments || [], n;
  r && (t.comments.push(...i), ma(r, r.comments), n = r.body[0] && r.body[0].type === "ExpressionStatement" && r.body[0].expression || void 0),
  n || (n = { type: "JSXEmptyExpression" }, t.patch(e, n));
  let o = { type: "JSXExpressionContainer", expression: n };
  return t.inherit(e, o), o;
}
function Rx(e, t) {
  let r = t.schema, i = r, n = e.attributes || [], o = -1;
  e.name && r.space === "html" && e.name.toLowerCase() === "svg" && (i = qp, t.schema = i);
  let a = t.all(e), u = [];
  for (; ++o < n.length; ) {
    let c = n[o], p = c.value, h;
    if (c.type === "mdxJsxAttribute") {
      if (p == null)
        h = null;
      else if (typeof p == "object") {
        let d = p.data && p.data.estree, m = d && d.comments || [], g;
        d && (t.comments.push(...m), ma(d, d.comments), g = d.body[0] && d.body[0].type === "ExpressionStatement" && d.body[0].expression ||
        void 0), h = {
          type: "JSXExpressionContainer",
          expression: g || { type: "JSXEmptyExpression" }
        }, t.inherit(p, h);
      } else
        h = { type: "Literal", value: String(p) };
      let f = {
        type: "JSXAttribute",
        name: t.createJsxAttributeName(c.name),
        value: h
      };
      t.inherit(c, f), u.push(f);
    } else {
      let f = c.data && c.data.estree, d = f && f.comments || [], m;
      f && (t.comments.push(...d), ma(f, f.comments), m = f.body[0] && f.body[0].type === "ExpressionStatement" && f.body[0].expression && f.
      body[0].expression.type === "ObjectExpression" && f.body[0].expression.properties && f.body[0].expression.properties[0] && f.body[0].expression.
      properties[0].type === "SpreadElement" && f.body[0].expression.properties[0].argument || void 0);
      let g = {
        type: "JSXSpreadAttribute",
        argument: m || { type: "ObjectExpression", properties: [] }
      };
      t.inherit(c, g), u.push(g);
    }
  }
  t.schema = r;
  let l = e.name ? {
    type: "JSXElement",
    openingElement: {
      type: "JSXOpeningElement",
      attributes: u,
      name: t.createJsxElementName(e.name),
      selfClosing: a.length === 0
    },
    closingElement: a.length > 0 ? {
      type: "JSXClosingElement",
      name: t.createJsxElementName(e.name)
    } : null,
    children: a
  } : {
    type: "JSXFragment",
    openingFragment: { type: "JSXOpeningFragment" },
    closingFragment: { type: "JSXClosingFragment" },
    children: a
  };
  return t.inherit(e, l), l;
}
function PO(e, t) {
  let r = e.data && e.data.estree, i = r && r.comments || [];
  r && (t.comments.push(...i), ma(r, i), t.esm.push(...r.body));
}
function RO(e) {
  return typeof e == "object" ? e.type === "text" ? Nx(e.value) : !1 : Nx(e);
}
function Nx(e) {
  return e.replace(OO, "") === "";
}
function NO(e, t) {
  let r = t.all(e), i = [], n = -1, o;
  for (; ++n < r.length; ) {
    let u = r[n];
    u.type === "JSXExpressionContainer" && u.expression.type === "Literal" && RO(String(u.expression.value)) ? o && o.push(u) : (o && i.push(
    ...o), i.push(u), o = []);
  }
  let a = {
    type: "JSXFragment",
    openingFragment: { type: "JSXOpeningFragment" },
    closingFragment: { type: "JSXClosingFragment" },
    children: i
  };
  return t.inherit(e, a), a;
}
function LO(e, t) {
  let r = String(e.value || "");
  if (r) {
    let i = { type: "Literal", value: r };
    t.inherit(e, i);
    let n = { type: "JSXExpressionContainer", expression: i };
    return t.patch(e, n), n;
  }
}
function jO() {
}
function VO(e) {
  let t = hO("type", {
    invalid: UO,
    unknown: WO,
    handlers: { ...MO, ...e.handlers }
  });
  return {
    // Current space.
    elementAttributeNameCase: e.elementAttributeNameCase || "react",
    schema: e.space === "svg" ? qp : pO,
    stylePropertyNameCase: e.stylePropertyNameCase || "dom",
    tableCellAlignToStyle: e.tableCellAlignToStyle !== !1,
    // Results.
    comments: [],
    esm: [],
    // Useful functions.
    all: zO,
    createJsxAttributeName: JO,
    createJsxElementName: GO,
    handle: r,
    inherit: HO,
    patch: Kx
  };
  function r(i) {
    return t(i, this);
  }
}
function UO(e) {
  throw new Error("Cannot handle value `" + e + "`, expected node");
}
function WO(e) {
  throw "type" in e, new Error("Cannot handle unknown node `" + e.type + "`");
}
function zO(e) {
  let t = e.children || [], r = -1, i = [], n = this.schema.space === "html" && e.type === "element" && $O.has(e.tagName.toLowerCase());
  for (; ++r < t.length; ) {
    let o = t[r];
    if (n && o.type === "text" && o.value === `
`)
      continue;
    let a = this.handle(o);
    Array.isArray(a) ? i.push(...a) : a && i.push(a);
  }
  return i;
}
function HO(e, t) {
  let r = (
    /** @type {Record<string, unknown> | undefined} */
    e.data
  ), i, n;
  if (Kx(e, t), r) {
    for (n in r)
      qO.call(r, n) && n !== "estree" && (i || (i = {}), i[n] = r[n]);
    i && (t.data = i);
  }
}
function Kx(e, t) {
  let r = Up(e);
  r && r.start.offset !== void 0 && r.end.offset !== void 0 && (t.start = r.start.offset, t.end = r.end.offset, t.loc = {
    start: { line: r.start.line, column: r.start.column - 1 },
    end: { line: r.end.line, column: r.end.column - 1 }
  }, t.range = [r.start.offset, r.end.offset]);
}
function JO(e) {
  let t = Yx(e);
  if (t.type === "JSXMemberExpression")
    throw new Error("Member expressions in attribute names are not supported");
  return t;
}
function GO(e) {
  return Yx(e);
}
function Yx(e) {
  if (e.includes(".")) {
    let t = e.split("."), r = t.shift();
    let i = { type: "JSXIdentifier", name: r };
    for (; r = t.shift(); )
      i = {
        type: "JSXMemberExpression",
        object: i,
        property: { type: "JSXIdentifier", name: r }
      };
    return i;
  }
  if (e.includes(":")) {
    let t = e.split(":");
    return {
      type: "JSXNamespacedName",
      namespace: { type: "JSXIdentifier", name: t[0] },
      name: { type: "JSXIdentifier", name: t[1] }
    };
  }
  return { type: "JSXIdentifier", name: e };
}
function Da(e, t) {
  let r = VO(t || {}), i = r.handle(e), n = r.esm;
  if (i) {
    i.type !== "JSXFragment" && i.type !== "JSXElement" && (i = {
      type: "JSXFragment",
      openingFragment: { type: "JSXOpeningFragment" },
      closingFragment: { type: "JSXClosingFragment" },
      children: [i]
    }, r.patch(e, i));
    let a = { type: "ExpressionStatement", expression: i };
    r.patch(e, a), n.push(a);
  }
  let o = {
    type: "Program",
    body: n,
    sourceType: "module",
    comments: r.comments
  };
  return r.patch(e, o), o;
}
var G8, Np, X8, Lx, K8, Y8, Lp, yn, Mp, Q8, ga, Z8, eO, Ss, Gt, da, tO, ye, it, jx, Q, Ne, Dn, Mt, Pp, jp, rO, qx, $x, Wx, zx, iO, nO, sO, Bx,
oO, cO, pO, qp, $p, Vp, Ix, mO, gO, DO, yO, xO, Jx, bO, vO, Rp, CO, wO, AO, BO, IO, OO, MO, qO, $O, zp = ft(() => {
  G8 = Object.create, Np = Object.defineProperty, X8 = Object.getOwnPropertyDescriptor, Lx = Object.getOwnPropertyNames, K8 = Object.getPrototypeOf,
  Y8 = Object.prototype.hasOwnProperty, Lp = /* @__PURE__ */ ((e) => typeof H < "u" ? H : typeof Proxy < "u" ? new Proxy(e, {
    get: /* @__PURE__ */ s((t, r) => (typeof H < "u" ? H : t)[r], "get")
  }) : e)(function(e) {
    if (typeof H < "u")
      return H.apply(this, arguments);
    throw new Error('Dynamic require of "' + e + '" is not supported');
  }), yn = /* @__PURE__ */ s((e, t) => /* @__PURE__ */ s(function() {
    return t || (0, e[Lx(e)[0]])((t = { exports: {} }).exports, t), t.exports;
  }, "__require2"), "__commonJS"), Mp = /* @__PURE__ */ s((e, t) => {
    for (var r in t)
      Np(e, r, { get: t[r], enumerable: !0 });
  }, "__export"), Q8 = /* @__PURE__ */ s((e, t, r, i) => {
    if (t && typeof t == "object" || typeof t == "function")
      for (let n of Lx(t))
        !Y8.call(e, n) && n !== r && Np(e, n, { get: /* @__PURE__ */ s(() => t[n], "get"), enumerable: !(i = X8(t, n)) || i.enumerable });
    return e;
  }, "__copyProps"), ga = /* @__PURE__ */ s((e, t, r) => (r = e != null ? G8(K8(e)) : {}, Q8(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    t || !e || !e.__esModule ? Np(r, "default", { value: e, enumerable: !0 }) : r,
    e
  )), "__toESM"), Z8 = yn({
    "node_modules/inline-style-parser/index.js"(e, t) {
      var r = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, i = /\n/g, n = /^\s*/, o = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, a = /^:\s*/, u = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,
      l = /^[;\s]*/, c = /^\s+|\s+$/g, p = `
`, h = "/", f = "*", d = "", m = "comment", g = "declaration";
      t.exports = function(D, v) {
        if (typeof D != "string")
          throw new TypeError("First argument must be a string");
        if (!D)
          return [];
        v = v || {};
        var S = 1, k = 1;
        function L(R) {
          var U = R.match(i);
          U && (S += U.length);
          var Y = R.lastIndexOf(p);
          k = ~Y ? R.length - Y : k + R.length;
        }
        s(L, "updatePosition");
        function C() {
          var R = { line: S, column: k };
          return function(U) {
            return U.position = new w(R), O(), U;
          };
        }
        s(C, "position2");
        function w(R) {
          this.start = R, this.end = { line: S, column: k }, this.source = v.source;
        }
        s(w, "Position"), w.prototype.content = D;
        var T = [];
        function _(R) {
          var U = new Error(
            v.source + ":" + S + ":" + k + ": " + R
          );
          if (U.reason = R, U.filename = v.source, U.line = S, U.column = k, U.source = D, v.silent)
            T.push(U);
          else
            throw U;
        }
        s(_, "error");
        function q(R) {
          var U = R.exec(D);
          if (U) {
            var Y = U[0];
            return L(Y), D = D.slice(Y.length), U;
          }
        }
        s(q, "match");
        function O() {
          q(n);
        }
        s(O, "whitespace2");
        function $(R) {
          var U;
          for (R = R || []; U = V(); )
            U !== !1 && R.push(U);
          return R;
        }
        s($, "comments");
        function V() {
          var R = C();
          if (!(h != D.charAt(0) || f != D.charAt(1))) {
            for (var U = 2; d != D.charAt(U) && (f != D.charAt(U) || h != D.charAt(U + 1)); )
              ++U;
            if (U += 2, d === D.charAt(U - 1))
              return _("End of comment missing");
            var Y = D.slice(2, U - 2);
            return k += 2, L(Y), D = D.slice(U), k += 2, R({
              type: m,
              comment: Y
            });
          }
        }
        s(V, "comment2");
        function K() {
          var R = C(), U = q(o);
          if (U) {
            if (V(), !q(a))
              return _("property missing ':'");
            var Y = q(u), ee = R({
              type: g,
              property: b(U[0].replace(r, d)),
              value: Y ? b(Y[0].replace(r, d)) : d
            });
            return q(l), ee;
          }
        }
        s(K, "declaration");
        function M() {
          var R = [];
          $(R);
          for (var U; U = K(); )
            U !== !1 && (R.push(U), $(R));
          return R;
        }
        return s(M, "declarations"), O(), M();
      };
      function b(D) {
        return D ? D.replace(c, d) : d;
      }
      s(b, "trim");
    }
  }), eO = yn({
    "node_modules/style-to-object/index.js"(e, t) {
      var r = Z8();
      function i(n, o) {
        var a = null;
        if (!n || typeof n != "string")
          return a;
        for (var u, l = r(n), c = typeof o == "function", p, h, f = 0, d = l.length; f < d; f++)
          u = l[f], p = u.property, h = u.value, c ? o(p, h, u) : h && (a || (a = {}), a[p] = h);
        return a;
      }
      s(i, "StyleToObject2"), t.exports = i, t.exports.default = i;
    }
  }), Ss = class {
    static {
      s(this, "Schema");
    }
    /**
     * @constructor
     * @param {Properties} property
     * @param {Normal} normal
     * @param {string} [space]
     */
    constructor(e, t, r) {
      this.property = e, this.normal = t, r && (this.space = r);
    }
  };
  Ss.prototype.property = {};
  Ss.prototype.normal = {};
  Ss.prototype.space = null;
  s(Mx, "merge");
  s(Op, "normalize");
  Gt = class {
    static {
      s(this, "Info");
    }
    /**
     * @constructor
     * @param {string} property
     * @param {string} attribute
     */
    constructor(e, t) {
      this.property = e, this.attribute = t;
    }
  };
  Gt.prototype.space = null;
  Gt.prototype.boolean = !1;
  Gt.prototype.booleanish = !1;
  Gt.prototype.overloadedBoolean = !1;
  Gt.prototype.number = !1;
  Gt.prototype.commaSeparated = !1;
  Gt.prototype.spaceSeparated = !1;
  Gt.prototype.commaOrSpaceSeparated = !1;
  Gt.prototype.mustUseProperty = !1;
  Gt.prototype.defined = !1;
  da = {};
  Mp(da, {
    boolean: /* @__PURE__ */ s(() => ye, "boolean"),
    booleanish: /* @__PURE__ */ s(() => it, "booleanish"),
    commaOrSpaceSeparated: /* @__PURE__ */ s(() => Mt, "commaOrSpaceSeparated"),
    commaSeparated: /* @__PURE__ */ s(() => Dn, "commaSeparated"),
    number: /* @__PURE__ */ s(() => Q, "number"),
    overloadedBoolean: /* @__PURE__ */ s(() => jx, "overloadedBoolean"),
    spaceSeparated: /* @__PURE__ */ s(() => Ne, "spaceSeparated")
  });
  tO = 0, ye = qi(), it = qi(), jx = qi(), Q = qi(), Ne = qi(), Dn = qi(), Mt = qi();
  s(qi, "increment");
  Pp = Object.keys(da), jp = class extends Gt {
    static {
      s(this, "DefinedInfo");
    }
    /**
     * @constructor
     * @param {string} property
     * @param {string} attribute
     * @param {number|null} [mask]
     * @param {string} [space]
     */
    constructor(e, t, r, i) {
      let n = -1;
      if (super(e, t), Tx(this, "space", i), typeof r == "number")
        for (; ++n < Pp.length; ) {
          let o = Pp[n];
          Tx(this, Pp[n], (r & da[o]) === da[o]);
        }
    }
  };
  jp.prototype.defined = !0;
  s(Tx, "mark");
  rO = {}.hasOwnProperty;
  s(xn, "create");
  qx = xn({
    space: "xlink",
    transform(e, t) {
      return "xlink:" + t.slice(5).toLowerCase();
    },
    properties: {
      xLinkActuate: null,
      xLinkArcRole: null,
      xLinkHref: null,
      xLinkRole: null,
      xLinkShow: null,
      xLinkTitle: null,
      xLinkType: null
    }
  }), $x = xn({
    space: "xml",
    transform(e, t) {
      return "xml:" + t.slice(3).toLowerCase();
    },
    properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
  });
  s(Vx, "caseSensitiveTransform");
  s(Ux, "caseInsensitiveTransform");
  Wx = xn({
    space: "xmlns",
    attributes: { xmlnsxlink: "xmlns:xlink" },
    transform: Ux,
    properties: { xmlns: null, xmlnsXLink: null }
  }), zx = xn({
    transform(e, t) {
      return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
    },
    properties: {
      ariaActiveDescendant: null,
      ariaAtomic: it,
      ariaAutoComplete: null,
      ariaBusy: it,
      ariaChecked: it,
      ariaColCount: Q,
      ariaColIndex: Q,
      ariaColSpan: Q,
      ariaControls: Ne,
      ariaCurrent: null,
      ariaDescribedBy: Ne,
      ariaDetails: null,
      ariaDisabled: it,
      ariaDropEffect: Ne,
      ariaErrorMessage: null,
      ariaExpanded: it,
      ariaFlowTo: Ne,
      ariaGrabbed: it,
      ariaHasPopup: null,
      ariaHidden: it,
      ariaInvalid: null,
      ariaKeyShortcuts: null,
      ariaLabel: null,
      ariaLabelledBy: Ne,
      ariaLevel: Q,
      ariaLive: null,
      ariaModal: it,
      ariaMultiLine: it,
      ariaMultiSelectable: it,
      ariaOrientation: null,
      ariaOwns: Ne,
      ariaPlaceholder: null,
      ariaPosInSet: Q,
      ariaPressed: it,
      ariaReadOnly: it,
      ariaRelevant: null,
      ariaRequired: it,
      ariaRoleDescription: Ne,
      ariaRowCount: Q,
      ariaRowIndex: Q,
      ariaRowSpan: Q,
      ariaSelected: it,
      ariaSetSize: Q,
      ariaSort: null,
      ariaValueMax: Q,
      ariaValueMin: Q,
      ariaValueNow: Q,
      ariaValueText: null,
      role: null
    }
  }), iO = xn({
    space: "html",
    attributes: {
      acceptcharset: "accept-charset",
      classname: "class",
      htmlfor: "for",
      httpequiv: "http-equiv"
    },
    transform: Ux,
    mustUseProperty: ["checked", "multiple", "muted", "selected"],
    properties: {
      // Standard Properties.
      abbr: null,
      accept: Dn,
      acceptCharset: Ne,
      accessKey: Ne,
      action: null,
      allow: null,
      allowFullScreen: ye,
      allowPaymentRequest: ye,
      allowUserMedia: ye,
      alt: null,
      as: null,
      async: ye,
      autoCapitalize: null,
      autoComplete: Ne,
      autoFocus: ye,
      autoPlay: ye,
      blocking: Ne,
      capture: ye,
      charSet: null,
      checked: ye,
      cite: null,
      className: Ne,
      cols: Q,
      colSpan: null,
      content: null,
      contentEditable: it,
      controls: ye,
      controlsList: Ne,
      coords: Q | Dn,
      crossOrigin: null,
      data: null,
      dateTime: null,
      decoding: null,
      default: ye,
      defer: ye,
      dir: null,
      dirName: null,
      disabled: ye,
      download: jx,
      draggable: it,
      encType: null,
      enterKeyHint: null,
      fetchPriority: null,
      form: null,
      formAction: null,
      formEncType: null,
      formMethod: null,
      formNoValidate: ye,
      formTarget: null,
      headers: Ne,
      height: Q,
      hidden: ye,
      high: Q,
      href: null,
      hrefLang: null,
      htmlFor: Ne,
      httpEquiv: Ne,
      id: null,
      imageSizes: null,
      imageSrcSet: null,
      inert: ye,
      inputMode: null,
      integrity: null,
      is: null,
      isMap: ye,
      itemId: null,
      itemProp: Ne,
      itemRef: Ne,
      itemScope: ye,
      itemType: Ne,
      kind: null,
      label: null,
      lang: null,
      language: null,
      list: null,
      loading: null,
      loop: ye,
      low: Q,
      manifest: null,
      max: null,
      maxLength: Q,
      media: null,
      method: null,
      min: null,
      minLength: Q,
      multiple: ye,
      muted: ye,
      name: null,
      nonce: null,
      noModule: ye,
      noValidate: ye,
      onAbort: null,
      onAfterPrint: null,
      onAuxClick: null,
      onBeforeMatch: null,
      onBeforePrint: null,
      onBeforeToggle: null,
      onBeforeUnload: null,
      onBlur: null,
      onCancel: null,
      onCanPlay: null,
      onCanPlayThrough: null,
      onChange: null,
      onClick: null,
      onClose: null,
      onContextLost: null,
      onContextMenu: null,
      onContextRestored: null,
      onCopy: null,
      onCueChange: null,
      onCut: null,
      onDblClick: null,
      onDrag: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragExit: null,
      onDragLeave: null,
      onDragOver: null,
      onDragStart: null,
      onDrop: null,
      onDurationChange: null,
      onEmptied: null,
      onEnded: null,
      onError: null,
      onFocus: null,
      onFormData: null,
      onHashChange: null,
      onInput: null,
      onInvalid: null,
      onKeyDown: null,
      onKeyPress: null,
      onKeyUp: null,
      onLanguageChange: null,
      onLoad: null,
      onLoadedData: null,
      onLoadedMetadata: null,
      onLoadEnd: null,
      onLoadStart: null,
      onMessage: null,
      onMessageError: null,
      onMouseDown: null,
      onMouseEnter: null,
      onMouseLeave: null,
      onMouseMove: null,
      onMouseOut: null,
      onMouseOver: null,
      onMouseUp: null,
      onOffline: null,
      onOnline: null,
      onPageHide: null,
      onPageShow: null,
      onPaste: null,
      onPause: null,
      onPlay: null,
      onPlaying: null,
      onPopState: null,
      onProgress: null,
      onRateChange: null,
      onRejectionHandled: null,
      onReset: null,
      onResize: null,
      onScroll: null,
      onScrollEnd: null,
      onSecurityPolicyViolation: null,
      onSeeked: null,
      onSeeking: null,
      onSelect: null,
      onSlotChange: null,
      onStalled: null,
      onStorage: null,
      onSubmit: null,
      onSuspend: null,
      onTimeUpdate: null,
      onToggle: null,
      onUnhandledRejection: null,
      onUnload: null,
      onVolumeChange: null,
      onWaiting: null,
      onWheel: null,
      open: ye,
      optimum: Q,
      pattern: null,
      ping: Ne,
      placeholder: null,
      playsInline: ye,
      popover: null,
      popoverTarget: null,
      popoverTargetAction: null,
      poster: null,
      preload: null,
      readOnly: ye,
      referrerPolicy: null,
      rel: Ne,
      required: ye,
      reversed: ye,
      rows: Q,
      rowSpan: Q,
      sandbox: Ne,
      scope: null,
      scoped: ye,
      seamless: ye,
      selected: ye,
      shadowRootDelegatesFocus: ye,
      shadowRootMode: null,
      shape: null,
      size: Q,
      sizes: null,
      slot: null,
      span: Q,
      spellCheck: it,
      src: null,
      srcDoc: null,
      srcLang: null,
      srcSet: null,
      start: Q,
      step: null,
      style: null,
      tabIndex: Q,
      target: null,
      title: null,
      translate: null,
      type: null,
      typeMustMatch: ye,
      useMap: null,
      value: it,
      width: Q,
      wrap: null,
      // Legacy.
      // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
      align: null,
      // Several. Use CSS `text-align` instead,
      aLink: null,
      // `<body>`. Use CSS `a:active {color}` instead
      archive: Ne,
      // `<object>`. List of URIs to archives
      axis: null,
      // `<td>` and `<th>`. Use `scope` on `<th>`
      background: null,
      // `<body>`. Use CSS `background-image` instead
      bgColor: null,
      // `<body>` and table elements. Use CSS `background-color` instead
      border: Q,
      // `<table>`. Use CSS `border-width` instead,
      borderColor: null,
      // `<table>`. Use CSS `border-color` instead,
      bottomMargin: Q,
      // `<body>`
      cellPadding: null,
      // `<table>`
      cellSpacing: null,
      // `<table>`
      char: null,
      // Several table elements. When `align=char`, sets the character to align on
      charOff: null,
      // Several table elements. When `char`, offsets the alignment
      classId: null,
      // `<object>`
      clear: null,
      // `<br>`. Use CSS `clear` instead
      code: null,
      // `<object>`
      codeBase: null,
      // `<object>`
      codeType: null,
      // `<object>`
      color: null,
      // `<font>` and `<hr>`. Use CSS instead
      compact: ye,
      // Lists. Use CSS to reduce space between items instead
      declare: ye,
      // `<object>`
      event: null,
      // `<script>`
      face: null,
      // `<font>`. Use CSS instead
      frame: null,
      // `<table>`
      frameBorder: null,
      // `<iframe>`. Use CSS `border` instead
      hSpace: Q,
      // `<img>` and `<object>`
      leftMargin: Q,
      // `<body>`
      link: null,
      // `<body>`. Use CSS `a:link {color: *}` instead
      longDesc: null,
      // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
      lowSrc: null,
      // `<img>`. Use a `<picture>`
      marginHeight: Q,
      // `<body>`
      marginWidth: Q,
      // `<body>`
      noResize: ye,
      // `<frame>`
      noHref: ye,
      // `<area>`. Use no href instead of an explicit `nohref`
      noShade: ye,
      // `<hr>`. Use background-color and height instead of borders
      noWrap: ye,
      // `<td>` and `<th>`
      object: null,
      // `<applet>`
      profile: null,
      // `<head>`
      prompt: null,
      // `<isindex>`
      rev: null,
      // `<link>`
      rightMargin: Q,
      // `<body>`
      rules: null,
      // `<table>`
      scheme: null,
      // `<meta>`
      scrolling: it,
      // `<frame>`. Use overflow in the child context
      standby: null,
      // `<object>`
      summary: null,
      // `<table>`
      text: null,
      // `<body>`. Use CSS `color` instead
      topMargin: Q,
      // `<body>`
      valueType: null,
      // `<param>`
      version: null,
      // `<html>`. Use a doctype.
      vAlign: null,
      // Several. Use CSS `vertical-align` instead
      vLink: null,
      // `<body>`. Use CSS `a:visited {color}` instead
      vSpace: Q,
      // `<img>` and `<object>`
      // Non-standard Properties.
      allowTransparency: null,
      autoCorrect: null,
      autoSave: null,
      disablePictureInPicture: ye,
      disableRemotePlayback: ye,
      prefix: null,
      property: null,
      results: Q,
      security: null,
      unselectable: null
    }
  }), nO = xn({
    space: "svg",
    attributes: {
      accentHeight: "accent-height",
      alignmentBaseline: "alignment-baseline",
      arabicForm: "arabic-form",
      baselineShift: "baseline-shift",
      capHeight: "cap-height",
      className: "class",
      clipPath: "clip-path",
      clipRule: "clip-rule",
      colorInterpolation: "color-interpolation",
      colorInterpolationFilters: "color-interpolation-filters",
      colorProfile: "color-profile",
      colorRendering: "color-rendering",
      crossOrigin: "crossorigin",
      dataType: "datatype",
      dominantBaseline: "dominant-baseline",
      enableBackground: "enable-background",
      fillOpacity: "fill-opacity",
      fillRule: "fill-rule",
      floodColor: "flood-color",
      floodOpacity: "flood-opacity",
      fontFamily: "font-family",
      fontSize: "font-size",
      fontSizeAdjust: "font-size-adjust",
      fontStretch: "font-stretch",
      fontStyle: "font-style",
      fontVariant: "font-variant",
      fontWeight: "font-weight",
      glyphName: "glyph-name",
      glyphOrientationHorizontal: "glyph-orientation-horizontal",
      glyphOrientationVertical: "glyph-orientation-vertical",
      hrefLang: "hreflang",
      horizAdvX: "horiz-adv-x",
      horizOriginX: "horiz-origin-x",
      horizOriginY: "horiz-origin-y",
      imageRendering: "image-rendering",
      letterSpacing: "letter-spacing",
      lightingColor: "lighting-color",
      markerEnd: "marker-end",
      markerMid: "marker-mid",
      markerStart: "marker-start",
      navDown: "nav-down",
      navDownLeft: "nav-down-left",
      navDownRight: "nav-down-right",
      navLeft: "nav-left",
      navNext: "nav-next",
      navPrev: "nav-prev",
      navRight: "nav-right",
      navUp: "nav-up",
      navUpLeft: "nav-up-left",
      navUpRight: "nav-up-right",
      onAbort: "onabort",
      onActivate: "onactivate",
      onAfterPrint: "onafterprint",
      onBeforePrint: "onbeforeprint",
      onBegin: "onbegin",
      onCancel: "oncancel",
      onCanPlay: "oncanplay",
      onCanPlayThrough: "oncanplaythrough",
      onChange: "onchange",
      onClick: "onclick",
      onClose: "onclose",
      onCopy: "oncopy",
      onCueChange: "oncuechange",
      onCut: "oncut",
      onDblClick: "ondblclick",
      onDrag: "ondrag",
      onDragEnd: "ondragend",
      onDragEnter: "ondragenter",
      onDragExit: "ondragexit",
      onDragLeave: "ondragleave",
      onDragOver: "ondragover",
      onDragStart: "ondragstart",
      onDrop: "ondrop",
      onDurationChange: "ondurationchange",
      onEmptied: "onemptied",
      onEnd: "onend",
      onEnded: "onended",
      onError: "onerror",
      onFocus: "onfocus",
      onFocusIn: "onfocusin",
      onFocusOut: "onfocusout",
      onHashChange: "onhashchange",
      onInput: "oninput",
      onInvalid: "oninvalid",
      onKeyDown: "onkeydown",
      onKeyPress: "onkeypress",
      onKeyUp: "onkeyup",
      onLoad: "onload",
      onLoadedData: "onloadeddata",
      onLoadedMetadata: "onloadedmetadata",
      onLoadStart: "onloadstart",
      onMessage: "onmessage",
      onMouseDown: "onmousedown",
      onMouseEnter: "onmouseenter",
      onMouseLeave: "onmouseleave",
      onMouseMove: "onmousemove",
      onMouseOut: "onmouseout",
      onMouseOver: "onmouseover",
      onMouseUp: "onmouseup",
      onMouseWheel: "onmousewheel",
      onOffline: "onoffline",
      onOnline: "ononline",
      onPageHide: "onpagehide",
      onPageShow: "onpageshow",
      onPaste: "onpaste",
      onPause: "onpause",
      onPlay: "onplay",
      onPlaying: "onplaying",
      onPopState: "onpopstate",
      onProgress: "onprogress",
      onRateChange: "onratechange",
      onRepeat: "onrepeat",
      onReset: "onreset",
      onResize: "onresize",
      onScroll: "onscroll",
      onSeeked: "onseeked",
      onSeeking: "onseeking",
      onSelect: "onselect",
      onShow: "onshow",
      onStalled: "onstalled",
      onStorage: "onstorage",
      onSubmit: "onsubmit",
      onSuspend: "onsuspend",
      onTimeUpdate: "ontimeupdate",
      onToggle: "ontoggle",
      onUnload: "onunload",
      onVolumeChange: "onvolumechange",
      onWaiting: "onwaiting",
      onZoom: "onzoom",
      overlinePosition: "overline-position",
      overlineThickness: "overline-thickness",
      paintOrder: "paint-order",
      panose1: "panose-1",
      pointerEvents: "pointer-events",
      referrerPolicy: "referrerpolicy",
      renderingIntent: "rendering-intent",
      shapeRendering: "shape-rendering",
      stopColor: "stop-color",
      stopOpacity: "stop-opacity",
      strikethroughPosition: "strikethrough-position",
      strikethroughThickness: "strikethrough-thickness",
      strokeDashArray: "stroke-dasharray",
      strokeDashOffset: "stroke-dashoffset",
      strokeLineCap: "stroke-linecap",
      strokeLineJoin: "stroke-linejoin",
      strokeMiterLimit: "stroke-miterlimit",
      strokeOpacity: "stroke-opacity",
      strokeWidth: "stroke-width",
      tabIndex: "tabindex",
      textAnchor: "text-anchor",
      textDecoration: "text-decoration",
      textRendering: "text-rendering",
      transformOrigin: "transform-origin",
      typeOf: "typeof",
      underlinePosition: "underline-position",
      underlineThickness: "underline-thickness",
      unicodeBidi: "unicode-bidi",
      unicodeRange: "unicode-range",
      unitsPerEm: "units-per-em",
      vAlphabetic: "v-alphabetic",
      vHanging: "v-hanging",
      vIdeographic: "v-ideographic",
      vMathematical: "v-mathematical",
      vectorEffect: "vector-effect",
      vertAdvY: "vert-adv-y",
      vertOriginX: "vert-origin-x",
      vertOriginY: "vert-origin-y",
      wordSpacing: "word-spacing",
      writingMode: "writing-mode",
      xHeight: "x-height",
      // These were camelcased in Tiny. Now lowercased in SVG 2
      playbackOrder: "playbackorder",
      timelineBegin: "timelinebegin"
    },
    transform: Vx,
    properties: {
      about: Mt,
      accentHeight: Q,
      accumulate: null,
      additive: null,
      alignmentBaseline: null,
      alphabetic: Q,
      amplitude: Q,
      arabicForm: null,
      ascent: Q,
      attributeName: null,
      attributeType: null,
      azimuth: Q,
      bandwidth: null,
      baselineShift: null,
      baseFrequency: null,
      baseProfile: null,
      bbox: null,
      begin: null,
      bias: Q,
      by: null,
      calcMode: null,
      capHeight: Q,
      className: Ne,
      clip: null,
      clipPath: null,
      clipPathUnits: null,
      clipRule: null,
      color: null,
      colorInterpolation: null,
      colorInterpolationFilters: null,
      colorProfile: null,
      colorRendering: null,
      content: null,
      contentScriptType: null,
      contentStyleType: null,
      crossOrigin: null,
      cursor: null,
      cx: null,
      cy: null,
      d: null,
      dataType: null,
      defaultAction: null,
      descent: Q,
      diffuseConstant: Q,
      direction: null,
      display: null,
      dur: null,
      divisor: Q,
      dominantBaseline: null,
      download: ye,
      dx: null,
      dy: null,
      edgeMode: null,
      editable: null,
      elevation: Q,
      enableBackground: null,
      end: null,
      event: null,
      exponent: Q,
      externalResourcesRequired: null,
      fill: null,
      fillOpacity: Q,
      fillRule: null,
      filter: null,
      filterRes: null,
      filterUnits: null,
      floodColor: null,
      floodOpacity: null,
      focusable: null,
      focusHighlight: null,
      fontFamily: null,
      fontSize: null,
      fontSizeAdjust: null,
      fontStretch: null,
      fontStyle: null,
      fontVariant: null,
      fontWeight: null,
      format: null,
      fr: null,
      from: null,
      fx: null,
      fy: null,
      g1: Dn,
      g2: Dn,
      glyphName: Dn,
      glyphOrientationHorizontal: null,
      glyphOrientationVertical: null,
      glyphRef: null,
      gradientTransform: null,
      gradientUnits: null,
      handler: null,
      hanging: Q,
      hatchContentUnits: null,
      hatchUnits: null,
      height: null,
      href: null,
      hrefLang: null,
      horizAdvX: Q,
      horizOriginX: Q,
      horizOriginY: Q,
      id: null,
      ideographic: Q,
      imageRendering: null,
      initialVisibility: null,
      in: null,
      in2: null,
      intercept: Q,
      k: Q,
      k1: Q,
      k2: Q,
      k3: Q,
      k4: Q,
      kernelMatrix: Mt,
      kernelUnitLength: null,
      keyPoints: null,
      // SEMI_COLON_SEPARATED
      keySplines: null,
      // SEMI_COLON_SEPARATED
      keyTimes: null,
      // SEMI_COLON_SEPARATED
      kerning: null,
      lang: null,
      lengthAdjust: null,
      letterSpacing: null,
      lightingColor: null,
      limitingConeAngle: Q,
      local: null,
      markerEnd: null,
      markerMid: null,
      markerStart: null,
      markerHeight: null,
      markerUnits: null,
      markerWidth: null,
      mask: null,
      maskContentUnits: null,
      maskUnits: null,
      mathematical: null,
      max: null,
      media: null,
      mediaCharacterEncoding: null,
      mediaContentEncodings: null,
      mediaSize: Q,
      mediaTime: null,
      method: null,
      min: null,
      mode: null,
      name: null,
      navDown: null,
      navDownLeft: null,
      navDownRight: null,
      navLeft: null,
      navNext: null,
      navPrev: null,
      navRight: null,
      navUp: null,
      navUpLeft: null,
      navUpRight: null,
      numOctaves: null,
      observer: null,
      offset: null,
      onAbort: null,
      onActivate: null,
      onAfterPrint: null,
      onBeforePrint: null,
      onBegin: null,
      onCancel: null,
      onCanPlay: null,
      onCanPlayThrough: null,
      onChange: null,
      onClick: null,
      onClose: null,
      onCopy: null,
      onCueChange: null,
      onCut: null,
      onDblClick: null,
      onDrag: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragExit: null,
      onDragLeave: null,
      onDragOver: null,
      onDragStart: null,
      onDrop: null,
      onDurationChange: null,
      onEmptied: null,
      onEnd: null,
      onEnded: null,
      onError: null,
      onFocus: null,
      onFocusIn: null,
      onFocusOut: null,
      onHashChange: null,
      onInput: null,
      onInvalid: null,
      onKeyDown: null,
      onKeyPress: null,
      onKeyUp: null,
      onLoad: null,
      onLoadedData: null,
      onLoadedMetadata: null,
      onLoadStart: null,
      onMessage: null,
      onMouseDown: null,
      onMouseEnter: null,
      onMouseLeave: null,
      onMouseMove: null,
      onMouseOut: null,
      onMouseOver: null,
      onMouseUp: null,
      onMouseWheel: null,
      onOffline: null,
      onOnline: null,
      onPageHide: null,
      onPageShow: null,
      onPaste: null,
      onPause: null,
      onPlay: null,
      onPlaying: null,
      onPopState: null,
      onProgress: null,
      onRateChange: null,
      onRepeat: null,
      onReset: null,
      onResize: null,
      onScroll: null,
      onSeeked: null,
      onSeeking: null,
      onSelect: null,
      onShow: null,
      onStalled: null,
      onStorage: null,
      onSubmit: null,
      onSuspend: null,
      onTimeUpdate: null,
      onToggle: null,
      onUnload: null,
      onVolumeChange: null,
      onWaiting: null,
      onZoom: null,
      opacity: null,
      operator: null,
      order: null,
      orient: null,
      orientation: null,
      origin: null,
      overflow: null,
      overlay: null,
      overlinePosition: Q,
      overlineThickness: Q,
      paintOrder: null,
      panose1: null,
      path: null,
      pathLength: Q,
      patternContentUnits: null,
      patternTransform: null,
      patternUnits: null,
      phase: null,
      ping: Ne,
      pitch: null,
      playbackOrder: null,
      pointerEvents: null,
      points: null,
      pointsAtX: Q,
      pointsAtY: Q,
      pointsAtZ: Q,
      preserveAlpha: null,
      preserveAspectRatio: null,
      primitiveUnits: null,
      propagate: null,
      property: Mt,
      r: null,
      radius: null,
      referrerPolicy: null,
      refX: null,
      refY: null,
      rel: Mt,
      rev: Mt,
      renderingIntent: null,
      repeatCount: null,
      repeatDur: null,
      requiredExtensions: Mt,
      requiredFeatures: Mt,
      requiredFonts: Mt,
      requiredFormats: Mt,
      resource: null,
      restart: null,
      result: null,
      rotate: null,
      rx: null,
      ry: null,
      scale: null,
      seed: null,
      shapeRendering: null,
      side: null,
      slope: null,
      snapshotTime: null,
      specularConstant: Q,
      specularExponent: Q,
      spreadMethod: null,
      spacing: null,
      startOffset: null,
      stdDeviation: null,
      stemh: null,
      stemv: null,
      stitchTiles: null,
      stopColor: null,
      stopOpacity: null,
      strikethroughPosition: Q,
      strikethroughThickness: Q,
      string: null,
      stroke: null,
      strokeDashArray: Mt,
      strokeDashOffset: null,
      strokeLineCap: null,
      strokeLineJoin: null,
      strokeMiterLimit: Q,
      strokeOpacity: Q,
      strokeWidth: null,
      style: null,
      surfaceScale: Q,
      syncBehavior: null,
      syncBehaviorDefault: null,
      syncMaster: null,
      syncTolerance: null,
      syncToleranceDefault: null,
      systemLanguage: Mt,
      tabIndex: Q,
      tableValues: null,
      target: null,
      targetX: Q,
      targetY: Q,
      textAnchor: null,
      textDecoration: null,
      textRendering: null,
      textLength: null,
      timelineBegin: null,
      title: null,
      transformBehavior: null,
      type: null,
      typeOf: Mt,
      to: null,
      transform: null,
      transformOrigin: null,
      u1: null,
      u2: null,
      underlinePosition: Q,
      underlineThickness: Q,
      unicode: null,
      unicodeBidi: null,
      unicodeRange: null,
      unitsPerEm: Q,
      values: null,
      vAlphabetic: Q,
      vMathematical: Q,
      vectorEffect: null,
      vHanging: Q,
      vIdeographic: Q,
      version: null,
      vertAdvY: Q,
      vertOriginX: Q,
      vertOriginY: Q,
      viewBox: null,
      viewTarget: null,
      visibility: null,
      width: null,
      widths: null,
      wordSpacing: null,
      writingMode: null,
      x: null,
      x1: null,
      x2: null,
      xChannelSelector: null,
      xHeight: Q,
      y: null,
      y1: null,
      y2: null,
      yChannelSelector: null,
      z: null,
      zoomAndPan: null
    }
  }), sO = /^data[-\w.:]+$/i, Bx = /-[a-z]/g, oO = /[A-Z]/g;
  s(aO, "find");
  s(uO, "kebab");
  s(lO, "camelcase");
  cO = {
    classId: "classID",
    dataType: "datatype",
    itemId: "itemID",
    strokeDashArray: "strokeDasharray",
    strokeDashOffset: "strokeDashoffset",
    strokeLineCap: "strokeLinecap",
    strokeLineJoin: "strokeLinejoin",
    strokeMiterLimit: "strokeMiterlimit",
    typeOf: "typeof",
    xLinkActuate: "xlinkActuate",
    xLinkArcRole: "xlinkArcrole",
    xLinkHref: "xlinkHref",
    xLinkRole: "xlinkRole",
    xLinkShow: "xlinkShow",
    xLinkTitle: "xlinkTitle",
    xLinkType: "xlinkType",
    xmlnsXLink: "xmlnsXlink"
  }, pO = Mx([$x, qx, Wx, zx, iO], "html"), qp = Mx([$x, qx, Wx, zx, nO], "svg"), $p = Hx("end"), Vp = Hx("start");
  s(Hx, "point");
  s(Up, "position");
  Ix = {}.hasOwnProperty;
  s(hO, "zwitch");
  s(fO, "comment");
  s(dO, "stringify");
  mO = /[$_\p{ID_Start}]/u, gO = /[$_\u{200C}\u{200D}\p{ID_Continue}]/u, DO = /[-$_\u{200C}\u{200D}\p{ID_Continue}]/u, yO = /^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,
  xO = /^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, Jx = {};
  s(Xt, "start");
  s(En, "cont");
  s(fr, "name");
  s(EO, "stringify2");
  bO = ga(eO(), 1), vO = bO.default, Rp = {}.hasOwnProperty, CO = /[A-Z]/g, wO = /-([a-z])/g, AO = /* @__PURE__ */ new Set(["td", "th"]);
  s(SO, "element");
  s(FO, "parseStyle");
  s(_O, "transformStylesToCssCasing");
  s(Gx, "transformStyleToCssCasing");
  s(kO, "toCamel");
  s(TO, "toDash");
  BO = {}.hasOwnProperty, IO = [];
  s(ma, "attachComments");
  s(Xx, "walk");
  s(Px, "slice");
  s(Wp, "compare");
  s(Ox, "mdxExpression");
  s(Rx, "mdxJsxElement");
  s(PO, "mdxjsEsm");
  OO = /[ \t\n\f\r]/g;
  s(RO, "whitespace");
  s(Nx, "empty");
  s(NO, "root");
  s(LO, "text");
  MO = {
    comment: fO,
    doctype: jO,
    element: SO,
    mdxFlowExpression: Ox,
    mdxJsxFlowElement: Rx,
    mdxJsxTextElement: Rx,
    mdxTextExpression: Ox,
    mdxjsEsm: PO,
    root: NO,
    text: LO
  };
  s(jO, "ignore");
  qO = {}.hasOwnProperty, $O = /* @__PURE__ */ new Set(["table", "tbody", "thead", "tfoot", "tr"]);
  s(VO, "createState");
  s(UO, "invalid");
  s(WO, "unknown");
  s(zO, "all");
  s(HO, "inherit");
  s(Kx, "patch");
  s(JO, "createJsxAttributeName");
  s(GO, "createJsxElementName");
  s(Yx, "createJsxNameFromString");
  s(Da, "toEstree");
});

// ../node_modules/@storybook/docs-mdx/node_modules/acorn/dist/acorn.mjs
function Xp(e, t) {
  for (var r = 65536, i = 0; i < t.length; i += 2) {
    if (r += t[i], r > e)
      return !1;
    if (r += t[i + 1], r >= e)
      return !0;
  }
  return !1;
}
function zr(e, t) {
  return e < 65 ? e === 36 : e < 91 ? !0 : e < 97 ? e === 95 : e < 123 ? !0 : e <= 65535 ? e >= 170 && ZO.test(String.fromCharCode(e)) : t ===
  !1 ? !1 : Xp(e, iE);
}
function bn(e, t) {
  return e < 48 ? e === 36 : e < 58 ? !0 : e < 65 ? !1 : e < 91 ? !0 : e < 97 ? e === 95 : e < 123 ? !0 : e <= 65535 ? e >= 170 && e9.test(String.
  fromCharCode(e)) : t === !1 ? !1 : Xp(e, iE) || Xp(e, XO);
}
function Kt(e, t) {
  return new _e(e, { beforeExpr: !0, binop: t });
}
function Se(e, t) {
  return t === void 0 && (t = {}), t.keyword = e, Zp[e] = new _e(e, t);
}
function vn(e) {
  return e === 10 || e === 13 || e === 8232 || e === 8233;
}
function sE(e, t, r) {
  r === void 0 && (r = e.length);
  for (var i = t; i < r; i++) {
    var n = e.charCodeAt(i);
    if (vn(n))
      return i < r - 1 && n === 13 && e.charCodeAt(i + 1) === 10 ? i + 2 : i + 1;
  }
  return -1;
}
function mi(e) {
  return Zx[e] || (Zx[e] = new RegExp("^(?:" + e.replace(/ /g, "|") + ")$"));
}
function Hr(e) {
  return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode((e >> 10) + 55296, (e & 1023) + 56320));
}
function uE(e, t) {
  for (var r = 1, i = 0; ; ) {
    var n = sE(e, i, t);
    if (n < 0)
      return new _s(r, t - i);
    ++r, i = n;
  }
}
function s9(e) {
  var t = {};
  for (var r in Kp)
    t[r] = e && Cn(e, r) ? e[r] : Kp[r];
  if (t.ecmaVersion === "latest" ? t.ecmaVersion = 1e8 : t.ecmaVersion == null ? (!eE && typeof console == "object" && console.warn && (eE =
  !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.`)), t.ecmaVersion = 11) : t.ecmaVersion >= 2015 && (t.ecmaVersion -= 2009), t.
  allowReserved == null && (t.allowReserved = t.ecmaVersion < 5), (!e || e.allowHashBang == null) && (t.allowHashBang = t.ecmaVersion >= 14),
  Qx(t.onToken)) {
    var i = t.onToken;
    t.onToken = function(n) {
      return i.push(n);
    };
  }
  return Qx(t.onComment) && (t.onComment = o9(t, t.onComment)), t;
}
function o9(e, t) {
  return function(r, i, n, o, a, u) {
    var l = {
      type: r ? "Block" : "Line",
      value: i,
      start: n,
      end: o
    };
    e.locations && (l.loc = new Ca(this, a, u)), e.ranges && (l.range = [n, o]), t.push(l);
  };
}
function rh(e, t) {
  return wn | (e ? eh : 0) | (t ? lE : 0);
}
function c9(e, t) {
  var r = t.key.name, i = e[r], n = "true";
  return t.type === "MethodDefinition" && (t.kind === "get" || t.kind === "set") && (n = (t.static ? "s" : "i") + t.kind), i === "iget" && n ===
  "iset" || i === "iset" && n === "iget" || i === "sget" && n === "sset" || i === "sset" && n === "sget" ? (e[r] = "true", !1) : i ? !0 : (e[r] =
  n, !1);
}
function Ea(e, t) {
  var r = e.computed, i = e.key;
  return !r && (i.type === "Identifier" && i.name === t || i.type === "Literal" && i.value === t);
}
function gE(e) {
  return e.type === "Identifier" || e.type === "ParenthesizedExpression" && gE(e.expression);
}
function Qp(e) {
  return e.type === "MemberExpression" && e.property.type === "PrivateIdentifier" || e.type === "ChainExpression" && Qp(e.expression) || e.type ===
  "ParenthesizedExpression" && Qp(e.expression);
}
function DE(e, t, r, i) {
  return e.type = t, e.end = r, this.options.locations && (e.loc.end = i), this.options.ranges && (e.range[1] = r), e;
}
function E9(e) {
  var t = _E[e] = {
    binary: mi(m9[e] + " " + tE),
    binaryOfStrings: mi(D9[e]),
    nonBinary: {
      General_Category: mi(tE),
      Script: mi(x9[e])
    }
  };
  t.nonBinary.Script_Extensions = t.nonBinary.Script, t.nonBinary.gc = t.nonBinary.General_Category, t.nonBinary.sc = t.nonBinary.Script, t.
  nonBinary.scx = t.nonBinary.Script_Extensions;
}
function b9(e) {
  for (var t in e)
    return !0;
  return !1;
}
function v9(e) {
  return e === 105 || e === 109 || e === 115;
}
function kE(e) {
  return e === 36 || e >= 40 && e <= 43 || e === 46 || e === 63 || e >= 91 && e <= 94 || e >= 123 && e <= 125;
}
function C9(e) {
  return zr(e, !0) || e === 36 || e === 95;
}
function w9(e) {
  return bn(e, !0) || e === 36 || e === 95 || e === 8204 || e === 8205;
}
function TE(e) {
  return e >= 65 && e <= 90 || e >= 97 && e <= 122;
}
function A9(e) {
  return e >= 0 && e <= 1114111;
}
function S9(e) {
  return e === 100 || e === 68 || e === 115 || e === 83 || e === 119 || e === 87;
}
function IE(e) {
  return TE(e) || e === 95;
}
function F9(e) {
  return IE(e) || _a(e);
}
function _9(e) {
  return e === 33 || e >= 35 && e <= 38 || e >= 42 && e <= 44 || e === 46 || e >= 58 && e <= 64 || e === 94 || e === 96 || e === 126;
}
function k9(e) {
  return e === 40 || e === 41 || e === 45 || e === 47 || e >= 91 && e <= 93 || e >= 123 && e <= 125;
}
function T9(e) {
  return e === 33 || e === 35 || e === 37 || e === 38 || e === 44 || e === 45 || e >= 58 && e <= 62 || e === 64 || e === 96 || e === 126;
}
function _a(e) {
  return e >= 48 && e <= 57;
}
function PE(e) {
  return e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102;
}
function OE(e) {
  return e >= 65 && e <= 70 ? 10 + (e - 65) : e >= 97 && e <= 102 ? 10 + (e - 97) : e - 48;
}
function RE(e) {
  return e >= 48 && e <= 55;
}
function B9(e, t) {
  return t ? parseInt(e, 8) : parseFloat(e.replace(/_/g, ""));
}
function NE(e) {
  return typeof BigInt != "function" ? null : BigInt(e.replace(/_/g, ""));
}
var XO, iE, KO, nE, Hp, Jp, YO, QO, ZO, e9, _e, Yt, Tt, Zp, A, er, t9, oE, Qt, aE, r9, i9, Cn, Qx, Zx, n9, _s, Ca, Kp, eE, ks, wn, eh, lE, th,
cE, wa, pE, $i, Ts, Aa, xa, ih, Gr, hE, fE, dE, nt, _r, Et, a9, Sa, ie, nh, u9, l9, Fs, Yp, mE, tr, dr, Ue, An, fe, p9, ba, gi, h9, Fa, Bs, f9,
yE, xE, EE, bE, vE, d9, m9, g9, D9, tE, CE, wE, AE, SE, FE, y9, x9, _E, rE, ya, Gp, re, va, kr, BE, Jr, Zt, sh, Ae, LE, I9, ME = ft(() => {
  XO = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123,
  2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158,
  11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19,
  13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6,
  3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49,
  4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470,
  0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15,
  0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759,
  9, 787719, 239], iE = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7,
  2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41,
  2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28,
  4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0,
  9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2,
  24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0,
  26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32,
  7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36,
  18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637,
  96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74,
  6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8,
  8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2,
  24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27,
  229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0,
  2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719,
  33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], KO = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\
\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0897-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\
\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369\
-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\
\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65",
  nE = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\
\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\
\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\
\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18\
-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\
\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\
\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
  Hp = {
    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package pri\
vate protected public short static super synchronized throws transient volatile",
    5: "class enum extends super const export import",
    6: "enum",
    strict: "implements interface let package private protected public static yield",
    strictBind: "eval arguments"
  }, Jp = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false\
 instanceof typeof void delete new in this", YO = {
    5: Jp,
    "5module": Jp + " export import",
    6: Jp + " const class extends export import super"
  }, QO = /^in(stanceof)?$/, ZO = new RegExp("[" + nE + "]"), e9 = new RegExp("[" + nE + KO + "]");
  s(Xp, "isInAstralSet");
  s(zr, "isIdentifierStart");
  s(bn, "isIdentifierChar");
  _e = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = {}), this.label = t, this.keyword = r.keyword, this.beforeExpr = !!r.beforeExpr, this.startsExpr = !!r.startsExpr, this.
    isLoop = !!r.isLoop, this.isAssign = !!r.isAssign, this.prefix = !!r.prefix, this.postfix = !!r.postfix, this.binop = r.binop || null, this.
    updateContext = null;
  }, "TokenType");
  s(Kt, "binop");
  Yt = { beforeExpr: !0 }, Tt = { startsExpr: !0 }, Zp = {};
  s(Se, "kw");
  A = {
    num: new _e("num", Tt),
    regexp: new _e("regexp", Tt),
    string: new _e("string", Tt),
    name: new _e("name", Tt),
    privateId: new _e("privateId", Tt),
    eof: new _e("eof"),
    // Punctuation token types.
    bracketL: new _e("[", { beforeExpr: !0, startsExpr: !0 }),
    bracketR: new _e("]"),
    braceL: new _e("{", { beforeExpr: !0, startsExpr: !0 }),
    braceR: new _e("}"),
    parenL: new _e("(", { beforeExpr: !0, startsExpr: !0 }),
    parenR: new _e(")"),
    comma: new _e(",", Yt),
    semi: new _e(";", Yt),
    colon: new _e(":", Yt),
    dot: new _e("."),
    question: new _e("?", Yt),
    questionDot: new _e("?."),
    arrow: new _e("=>", Yt),
    template: new _e("template"),
    invalidTemplate: new _e("invalidTemplate"),
    ellipsis: new _e("...", Yt),
    backQuote: new _e("`", Tt),
    dollarBraceL: new _e("${", { beforeExpr: !0, startsExpr: !0 }),
    // Operators. These carry several kinds of properties to help the
    // parser use them properly (the presence of these properties is
    // what categorizes them as operators).
    //
    // `binop`, when present, specifies that this operator is a binary
    // operator, and will refer to its precedence.
    //
    // `prefix` and `postfix` mark the operator as a prefix or postfix
    // unary operator.
    //
    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
    // binary operators with a very low precedence, that should result
    // in AssignmentExpression nodes.
    eq: new _e("=", { beforeExpr: !0, isAssign: !0 }),
    assign: new _e("_=", { beforeExpr: !0, isAssign: !0 }),
    incDec: new _e("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
    prefix: new _e("!/~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    logicalOR: Kt("||", 1),
    logicalAND: Kt("&&", 2),
    bitwiseOR: Kt("|", 3),
    bitwiseXOR: Kt("^", 4),
    bitwiseAND: Kt("&", 5),
    equality: Kt("==/!=/===/!==", 6),
    relational: Kt("</>/<=/>=", 7),
    bitShift: Kt("<</>>/>>>", 8),
    plusMin: new _e("+/-", { beforeExpr: !0, binop: 9, prefix: !0, startsExpr: !0 }),
    modulo: Kt("%", 10),
    star: Kt("*", 10),
    slash: Kt("/", 10),
    starstar: new _e("**", { beforeExpr: !0 }),
    coalesce: Kt("??", 1),
    // Keyword token types.
    _break: Se("break"),
    _case: Se("case", Yt),
    _catch: Se("catch"),
    _continue: Se("continue"),
    _debugger: Se("debugger"),
    _default: Se("default", Yt),
    _do: Se("do", { isLoop: !0, beforeExpr: !0 }),
    _else: Se("else", Yt),
    _finally: Se("finally"),
    _for: Se("for", { isLoop: !0 }),
    _function: Se("function", Tt),
    _if: Se("if"),
    _return: Se("return", Yt),
    _switch: Se("switch"),
    _throw: Se("throw", Yt),
    _try: Se("try"),
    _var: Se("var"),
    _const: Se("const"),
    _while: Se("while", { isLoop: !0 }),
    _with: Se("with"),
    _new: Se("new", { beforeExpr: !0, startsExpr: !0 }),
    _this: Se("this", Tt),
    _super: Se("super", Tt),
    _class: Se("class", Tt),
    _extends: Se("extends", Yt),
    _export: Se("export"),
    _import: Se("import", Tt),
    _null: Se("null", Tt),
    _true: Se("true", Tt),
    _false: Se("false", Tt),
    _in: Se("in", { beforeExpr: !0, binop: 7 }),
    _instanceof: Se("instanceof", { beforeExpr: !0, binop: 7 }),
    _typeof: Se("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    _void: Se("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    _delete: Se("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 })
  }, er = /\r\n?|\n|\u2028|\u2029/, t9 = new RegExp(er.source, "g");
  s(vn, "isNewLine");
  s(sE, "nextLineBreak");
  oE = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, Qt = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, aE = Object.prototype, r9 = aE.hasOwnProperty,
  i9 = aE.toString, Cn = Object.hasOwn || function(e, t) {
    return r9.call(e, t);
  }, Qx = Array.isArray || function(e) {
    return i9.call(e) === "[object Array]";
  }, Zx = /* @__PURE__ */ Object.create(null);
  s(mi, "wordsRegexp");
  s(Hr, "codePointToString");
  n9 = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, _s = /* @__PURE__ */ s(function(t, r) {
    this.line = t, this.column = r;
  }, "Position");
  _s.prototype.offset = /* @__PURE__ */ s(function(t) {
    return new _s(this.line, this.column + t);
  }, "offset");
  Ca = /* @__PURE__ */ s(function(t, r, i) {
    this.start = r, this.end = i, t.sourceFile !== null && (this.source = t.sourceFile);
  }, "SourceLocation");
  s(uE, "getLineInfo");
  Kp = {
    // `ecmaVersion` indicates the ECMAScript version to parse. Must be
    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
    // (the latest version the library supports). This influences
    // support for strict mode, the set of reserved words, and support
    // for new syntax features.
    ecmaVersion: null,
    // `sourceType` indicates the mode the code should be parsed in.
    // Can be either `"script"` or `"module"`. This influences global
    // strict mode and parsing of `import` and `export` declarations.
    sourceType: "script",
    // `onInsertedSemicolon` can be a callback that will be called when
    // a semicolon is automatically inserted. It will be passed the
    // position of the inserted semicolon as an offset, and if
    // `locations` is enabled, it is given the location as a `{line,
    // column}` object as second argument.
    onInsertedSemicolon: null,
    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
    // trailing commas.
    onTrailingComma: null,
    // By default, reserved words are only enforced if ecmaVersion >= 5.
    // Set `allowReserved` to a boolean value to explicitly turn this on
    // an off. When this option has the value "never", reserved words
    // and keywords can also not be used as property names.
    allowReserved: null,
    // When enabled, a return at the top level is not considered an
    // error.
    allowReturnOutsideFunction: !1,
    // When enabled, import/export statements are not constrained to
    // appearing at the top of the program, and an import.meta expression
    // in a script isn't considered an error.
    allowImportExportEverywhere: !1,
    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
    // When enabled, await identifiers are allowed to appear at the top-level scope,
    // but they are still not allowed in non-async functions.
    allowAwaitOutsideFunction: null,
    // When enabled, super identifiers are not constrained to
    // appearing in methods and do not raise an error when they appear elsewhere.
    allowSuperOutsideMethod: null,
    // When enabled, hashbang directive in the beginning of file is
    // allowed and treated as a line comment. Enabled by default when
    // `ecmaVersion` >= 2023.
    allowHashBang: !1,
    // By default, the parser will verify that private properties are
    // only used in places where they are valid and have been declared.
    // Set this to false to turn such checks off.
    checkPrivateFields: !0,
    // When `locations` is on, `loc` properties holding objects with
    // `start` and `end` properties in `{line, column}` form (with
    // line being 1-based and column 0-based) will be attached to the
    // nodes.
    locations: !1,
    // A function can be passed as `onToken` option, which will
    // cause Acorn to call that function with object in the same
    // format as tokens returned from `tokenizer().getToken()`. Note
    // that you are not allowed to call the parser from the
    // callback—that will corrupt its internal state.
    onToken: null,
    // A function can be passed as `onComment` option, which will
    // cause Acorn to call that function with `(block, text, start,
    // end)` parameters whenever a comment is skipped. `block` is a
    // boolean indicating whether this is a block (`/* */`) comment,
    // `text` is the content of the comment, and `start` and `end` are
    // character offsets that denote the start and end of the comment.
    // When the `locations` option is on, two more parameters are
    // passed, the full `{line, column}` locations of the start and
    // end of the comments. Note that you are not allowed to call the
    // parser from the callback—that will corrupt its internal state.
    // When this option has an array as value, objects representing the
    // comments are pushed to it.
    onComment: null,
    // Nodes have their start and end characters offsets recorded in
    // `start` and `end` properties (directly on the node, rather than
    // the `loc` object, which holds line/column data. To also add a
    // [semi-standardized][range] `range` property holding a `[start,
    // end]` array with the same numbers, set the `ranges` option to
    // `true`.
    //
    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
    ranges: !1,
    // It is possible to parse multiple files into a single AST by
    // passing the tree produced by parsing the first file as
    // `program` option in subsequent parses. This will add the
    // toplevel forms of the parsed file to the `Program` (top) node
    // of an existing parse tree.
    program: null,
    // When `locations` is on, you can pass this to record the source
    // file in every node's `loc` object.
    sourceFile: null,
    // This value, if given, is stored in every node, whether
    // `locations` is on or off.
    directSourceFile: null,
    // When enabled, parenthesized expressions are represented by
    // (non-standard) ParenthesizedExpression nodes
    preserveParens: !1
  }, eE = !1;
  s(s9, "getOptions");
  s(o9, "pushComment");
  ks = 1, wn = 2, eh = 4, lE = 8, th = 16, cE = 32, wa = 64, pE = 128, $i = 256, Ts = 512, Aa = ks | wn | $i;
  s(rh, "functionFlags");
  xa = 0, ih = 1, Gr = 2, hE = 3, fE = 4, dE = 5, nt = /* @__PURE__ */ s(function(t, r, i) {
    this.options = t = s9(t), this.sourceFile = t.sourceFile, this.keywords = mi(YO[t.ecmaVersion >= 6 ? 6 : t.sourceType === "module" ? "5m\
odule" : 5]);
    var n = "";
    t.allowReserved !== !0 && (n = Hp[t.ecmaVersion >= 6 ? 6 : t.ecmaVersion === 5 ? 5 : 3], t.sourceType === "module" && (n += " await")), this.
    reservedWords = mi(n);
    var o = (n ? n + " " : "") + Hp.strict;
    this.reservedWordsStrict = mi(o), this.reservedWordsStrictBind = mi(o + " " + Hp.strictBind), this.input = String(r), this.containsEsc =
    !1, i ? (this.pos = i, this.lineStart = this.input.lastIndexOf(`
`, i - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(er).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.
    type = A.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc =
    this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0,
    this.inModule = t.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.
    potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.
    create(null), this.pos === 0 && t.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.
    enterScope(ks), this.regexpState = null, this.privateNameStack = [];
  }, "Parser"), _r = { inFunction: { configurable: !0 }, inGenerator: { configurable: !0 }, inAsync: { configurable: !0 }, canAwait: { configurable: !0 },
  allowSuper: { configurable: !0 }, allowDirectSuper: { configurable: !0 }, treatFunctionsAsVar: { configurable: !0 }, allowNewDotTarget: { configurable: !0 },
  inClassStaticBlock: { configurable: !0 } };
  nt.prototype.parse = /* @__PURE__ */ s(function() {
    var t = this.options.program || this.startNode();
    return this.nextToken(), this.parseTopLevel(t);
  }, "parse");
  _r.inFunction.get = function() {
    return (this.currentVarScope().flags & wn) > 0;
  };
  _r.inGenerator.get = function() {
    return (this.currentVarScope().flags & lE) > 0;
  };
  _r.inAsync.get = function() {
    return (this.currentVarScope().flags & eh) > 0;
  };
  _r.canAwait.get = function() {
    for (var e = this.scopeStack.length - 1; e >= 0; e--) {
      var t = this.scopeStack[e], r = t.flags;
      if (r & ($i | Ts))
        return !1;
      if (r & wn)
        return (r & eh) > 0;
    }
    return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
  };
  _r.allowSuper.get = function() {
    var e = this.currentThisScope(), t = e.flags;
    return (t & wa) > 0 || this.options.allowSuperOutsideMethod;
  };
  _r.allowDirectSuper.get = function() {
    return (this.currentThisScope().flags & pE) > 0;
  };
  _r.treatFunctionsAsVar.get = function() {
    return this.treatFunctionsAsVarInScope(this.currentScope());
  };
  _r.allowNewDotTarget.get = function() {
    for (var e = this.scopeStack.length - 1; e >= 0; e--) {
      var t = this.scopeStack[e], r = t.flags;
      if (r & ($i | Ts) || r & wn && !(r & th))
        return !0;
    }
    return !1;
  };
  _r.inClassStaticBlock.get = function() {
    return (this.currentVarScope().flags & $i) > 0;
  };
  nt.extend = /* @__PURE__ */ s(function() {
    for (var t = [], r = arguments.length; r--; ) t[r] = arguments[r];
    for (var i = this, n = 0; n < t.length; n++)
      i = t[n](i);
    return i;
  }, "extend");
  nt.parse = /* @__PURE__ */ s(function(t, r) {
    return new this(r, t).parse();
  }, "parse");
  nt.parseExpressionAt = /* @__PURE__ */ s(function(t, r, i) {
    var n = new this(i, t, r);
    return n.nextToken(), n.parseExpression();
  }, "parseExpressionAt");
  nt.tokenizer = /* @__PURE__ */ s(function(t, r) {
    return new this(r, t);
  }, "tokenizer");
  Object.defineProperties(nt.prototype, _r);
  Et = nt.prototype, a9 = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
  Et.strictDirective = function(e) {
    if (this.options.ecmaVersion < 5)
      return !1;
    for (; ; ) {
      Qt.lastIndex = e, e += Qt.exec(this.input)[0].length;
      var t = a9.exec(this.input.slice(e));
      if (!t)
        return !1;
      if ((t[1] || t[2]) === "use strict") {
        Qt.lastIndex = e + t[0].length;
        var r = Qt.exec(this.input), i = r.index + r[0].length, n = this.input.charAt(i);
        return n === ";" || n === "}" || er.test(r[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(n) || n === "!" && this.input.charAt(i + 1) === "=");
      }
      e += t[0].length, Qt.lastIndex = e, e += Qt.exec(this.input)[0].length, this.input[e] === ";" && e++;
    }
  };
  Et.eat = function(e) {
    return this.type === e ? (this.next(), !0) : !1;
  };
  Et.isContextual = function(e) {
    return this.type === A.name && this.value === e && !this.containsEsc;
  };
  Et.eatContextual = function(e) {
    return this.isContextual(e) ? (this.next(), !0) : !1;
  };
  Et.expectContextual = function(e) {
    this.eatContextual(e) || this.unexpected();
  };
  Et.canInsertSemicolon = function() {
    return this.type === A.eof || this.type === A.braceR || er.test(this.input.slice(this.lastTokEnd, this.start));
  };
  Et.insertSemicolon = function() {
    if (this.canInsertSemicolon())
      return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
  };
  Et.semicolon = function() {
    !this.eat(A.semi) && !this.insertSemicolon() && this.unexpected();
  };
  Et.afterTrailingComma = function(e, t) {
    if (this.type === e)
      return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), t || this.next(), !0;
  };
  Et.expect = function(e) {
    this.eat(e) || this.unexpected();
  };
  Et.unexpected = function(e) {
    this.raise(e ?? this.start, "Unexpected token");
  };
  Sa = /* @__PURE__ */ s(function() {
    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
  }, "DestructuringErrors");
  Et.checkPatternErrors = function(e, t) {
    if (e) {
      e.trailingComma > -1 && this.raiseRecoverable(e.trailingComma, "Comma is not permitted after the rest element");
      var r = t ? e.parenthesizedAssign : e.parenthesizedBind;
      r > -1 && this.raiseRecoverable(r, t ? "Assigning to rvalue" : "Parenthesized pattern");
    }
  };
  Et.checkExpressionErrors = function(e, t) {
    if (!e)
      return !1;
    var r = e.shorthandAssign, i = e.doubleProto;
    if (!t)
      return r >= 0 || i >= 0;
    r >= 0 && this.raise(r, "Shorthand property assignments are valid only in destructuring patterns"), i >= 0 && this.raiseRecoverable(i, "\
Redefinition of __proto__ property");
  };
  Et.checkYieldAwaitInDefaultParams = function() {
    this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default va\
lue"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
  };
  Et.isSimpleAssignTarget = function(e) {
    return e.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(e.expression) : e.type === "Identifier" || e.type === "MemberExp\
ression";
  };
  ie = nt.prototype;
  ie.parseTopLevel = function(e) {
    var t = /* @__PURE__ */ Object.create(null);
    for (e.body || (e.body = []); this.type !== A.eof; ) {
      var r = this.parseStatement(null, !0, t);
      e.body.push(r);
    }
    if (this.inModule)
      for (var i = 0, n = Object.keys(this.undefinedExports); i < n.length; i += 1) {
        var o = n[i];
        this.raiseRecoverable(this.undefinedExports[o].start, "Export '" + o + "' is not defined");
      }
    return this.adaptDirectivePrologue(e.body), this.next(), e.sourceType = this.options.sourceType, this.finishNode(e, "Program");
  };
  nh = { kind: "loop" }, u9 = { kind: "switch" };
  ie.isLet = function(e) {
    if (this.options.ecmaVersion < 6 || !this.isContextual("let"))
      return !1;
    Qt.lastIndex = this.pos;
    var t = Qt.exec(this.input), r = this.pos + t[0].length, i = this.input.charCodeAt(r);
    if (i === 91 || i === 92)
      return !0;
    if (e)
      return !1;
    if (i === 123 || i > 55295 && i < 56320)
      return !0;
    if (zr(i, !0)) {
      for (var n = r + 1; bn(i = this.input.charCodeAt(n), !0); )
        ++n;
      if (i === 92 || i > 55295 && i < 56320)
        return !0;
      var o = this.input.slice(r, n);
      if (!QO.test(o))
        return !0;
    }
    return !1;
  };
  ie.isAsyncFunction = function() {
    if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
      return !1;
    Qt.lastIndex = this.pos;
    var e = Qt.exec(this.input), t = this.pos + e[0].length, r;
    return !er.test(this.input.slice(this.pos, t)) && this.input.slice(t, t + 8) === "function" && (t + 8 === this.input.length || !(bn(r = this.
    input.charCodeAt(t + 8)) || r > 55295 && r < 56320));
  };
  ie.parseStatement = function(e, t, r) {
    var i = this.type, n = this.startNode(), o;
    switch (this.isLet(e) && (i = A._var, o = "let"), i) {
      case A._break:
      case A._continue:
        return this.parseBreakContinueStatement(n, i.keyword);
      case A._debugger:
        return this.parseDebuggerStatement(n);
      case A._do:
        return this.parseDoStatement(n);
      case A._for:
        return this.parseForStatement(n);
      case A._function:
        return e && (this.strict || e !== "if" && e !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(
        n, !1, !e);
      case A._class:
        return e && this.unexpected(), this.parseClass(n, !0);
      case A._if:
        return this.parseIfStatement(n);
      case A._return:
        return this.parseReturnStatement(n);
      case A._switch:
        return this.parseSwitchStatement(n);
      case A._throw:
        return this.parseThrowStatement(n);
      case A._try:
        return this.parseTryStatement(n);
      case A._const:
      case A._var:
        return o = o || this.value, e && o !== "var" && this.unexpected(), this.parseVarStatement(n, o);
      case A._while:
        return this.parseWhileStatement(n);
      case A._with:
        return this.parseWithStatement(n);
      case A.braceL:
        return this.parseBlock(!0, n);
      case A.semi:
        return this.parseEmptyStatement(n);
      case A._export:
      case A._import:
        if (this.options.ecmaVersion > 10 && i === A._import) {
          Qt.lastIndex = this.pos;
          var a = Qt.exec(this.input), u = this.pos + a[0].length, l = this.input.charCodeAt(u);
          if (l === 40 || l === 46)
            return this.parseExpressionStatement(n, this.parseExpression());
        }
        return this.options.allowImportExportEverywhere || (t || this.raise(this.start, "'import' and 'export' may only appear at the top le\
vel"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), i === A._import ? this.parseImport(
        n) : this.parseExport(n, r);
      // If the statement does not start with a statement keyword or a
      // brace, it's an ExpressionStatement or LabeledStatement. We
      // simply start parsing an expression, and afterwards, if the
      // next token is a colon and the expression was a simple
      // Identifier node, we switch to interpreting it as a label.
      default:
        if (this.isAsyncFunction())
          return e && this.unexpected(), this.next(), this.parseFunctionStatement(n, !0, !e);
        var c = this.value, p = this.parseExpression();
        return i === A.name && p.type === "Identifier" && this.eat(A.colon) ? this.parseLabeledStatement(n, c, p, e) : this.parseExpressionStatement(
        n, p);
    }
  };
  ie.parseBreakContinueStatement = function(e, t) {
    var r = t === "break";
    this.next(), this.eat(A.semi) || this.insertSemicolon() ? e.label = null : this.type !== A.name ? this.unexpected() : (e.label = this.parseIdent(),
    this.semicolon());
    for (var i = 0; i < this.labels.length; ++i) {
      var n = this.labels[i];
      if ((e.label == null || n.name === e.label.name) && (n.kind != null && (r || n.kind === "loop") || e.label && r))
        break;
    }
    return i === this.labels.length && this.raise(e.start, "Unsyntactic " + t), this.finishNode(e, r ? "BreakStatement" : "ContinueStatement");
  };
  ie.parseDebuggerStatement = function(e) {
    return this.next(), this.semicolon(), this.finishNode(e, "DebuggerStatement");
  };
  ie.parseDoStatement = function(e) {
    return this.next(), this.labels.push(nh), e.body = this.parseStatement("do"), this.labels.pop(), this.expect(A._while), e.test = this.parseParenExpression(),
    this.options.ecmaVersion >= 6 ? this.eat(A.semi) : this.semicolon(), this.finishNode(e, "DoWhileStatement");
  };
  ie.parseForStatement = function(e) {
    this.next();
    var t = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
    if (this.labels.push(nh), this.enterScope(0), this.expect(A.parenL), this.type === A.semi)
      return t > -1 && this.unexpected(t), this.parseFor(e, null);
    var r = this.isLet();
    if (this.type === A._var || this.type === A._const || r) {
      var i = this.startNode(), n = r ? "let" : this.value;
      return this.next(), this.parseVar(i, !0, n), this.finishNode(i, "VariableDeclaration"), (this.type === A._in || this.options.ecmaVersion >=
      6 && this.isContextual("of")) && i.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === A._in ? t > -1 && this.
      unexpected(t) : e.await = t > -1), this.parseForIn(e, i)) : (t > -1 && this.unexpected(t), this.parseFor(e, i));
    }
    var o = this.isContextual("let"), a = !1, u = this.containsEsc, l = new Sa(), c = this.start, p = t > -1 ? this.parseExprSubscripts(l, "\
await") : this.parseExpression(!0, l);
    return this.type === A._in || (a = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (t > -1 ? (this.type === A._in && this.unexpected(
    t), e.await = !0) : a && this.options.ecmaVersion >= 8 && (p.start === c && !u && p.type === "Identifier" && p.name === "async" ? this.unexpected() :
    this.options.ecmaVersion >= 9 && (e.await = !1)), o && a && this.raise(p.start, "The left-hand side of a for-of loop may not start with \
'let'."), this.toAssignable(p, !1, l), this.checkLValPattern(p), this.parseForIn(e, p)) : (this.checkExpressionErrors(l, !0), t > -1 && this.
    unexpected(t), this.parseFor(e, p));
  };
  ie.parseFunctionStatement = function(e, t, r) {
    return this.next(), this.parseFunction(e, Fs | (r ? 0 : Yp), !1, t);
  };
  ie.parseIfStatement = function(e) {
    return this.next(), e.test = this.parseParenExpression(), e.consequent = this.parseStatement("if"), e.alternate = this.eat(A._else) ? this.
    parseStatement("if") : null, this.finishNode(e, "IfStatement");
  };
  ie.parseReturnStatement = function(e) {
    return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "'return' outside of function"), this.next(),
    this.eat(A.semi) || this.insertSemicolon() ? e.argument = null : (e.argument = this.parseExpression(), this.semicolon()), this.finishNode(
    e, "ReturnStatement");
  };
  ie.parseSwitchStatement = function(e) {
    this.next(), e.discriminant = this.parseParenExpression(), e.cases = [], this.expect(A.braceL), this.labels.push(u9), this.enterScope(0);
    for (var t, r = !1; this.type !== A.braceR; )
      if (this.type === A._case || this.type === A._default) {
        var i = this.type === A._case;
        t && this.finishNode(t, "SwitchCase"), e.cases.push(t = this.startNode()), t.consequent = [], this.next(), i ? t.test = this.parseExpression() :
        (r && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), r = !0, t.test = null), this.expect(A.colon);
      } else
        t || this.unexpected(), t.consequent.push(this.parseStatement(null));
    return this.exitScope(), t && this.finishNode(t, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(e, "SwitchStatement");
  };
  ie.parseThrowStatement = function(e) {
    return this.next(), er.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"),
    e.argument = this.parseExpression(), this.semicolon(), this.finishNode(e, "ThrowStatement");
  };
  l9 = [];
  ie.parseCatchClauseParam = function() {
    var e = this.parseBindingAtom(), t = e.type === "Identifier";
    return this.enterScope(t ? cE : 0), this.checkLValPattern(e, t ? fE : Gr), this.expect(A.parenR), e;
  };
  ie.parseTryStatement = function(e) {
    if (this.next(), e.block = this.parseBlock(), e.handler = null, this.type === A._catch) {
      var t = this.startNode();
      this.next(), this.eat(A.parenL) ? t.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), t.param =
      null, this.enterScope(0)), t.body = this.parseBlock(!1), this.exitScope(), e.handler = this.finishNode(t, "CatchClause");
    }
    return e.finalizer = this.eat(A._finally) ? this.parseBlock() : null, !e.handler && !e.finalizer && this.raise(e.start, "Missing catch o\
r finally clause"), this.finishNode(e, "TryStatement");
  };
  ie.parseVarStatement = function(e, t, r) {
    return this.next(), this.parseVar(e, !1, t, r), this.semicolon(), this.finishNode(e, "VariableDeclaration");
  };
  ie.parseWhileStatement = function(e) {
    return this.next(), e.test = this.parseParenExpression(), this.labels.push(nh), e.body = this.parseStatement("while"), this.labels.pop(),
    this.finishNode(e, "WhileStatement");
  };
  ie.parseWithStatement = function(e) {
    return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), e.object = this.parseParenExpression(), e.body = this.
    parseStatement("with"), this.finishNode(e, "WithStatement");
  };
  ie.parseEmptyStatement = function(e) {
    return this.next(), this.finishNode(e, "EmptyStatement");
  };
  ie.parseLabeledStatement = function(e, t, r, i) {
    for (var n = 0, o = this.labels; n < o.length; n += 1) {
      var a = o[n];
      a.name === t && this.raise(r.start, "Label '" + t + "' is already declared");
    }
    for (var u = this.type.isLoop ? "loop" : this.type === A._switch ? "switch" : null, l = this.labels.length - 1; l >= 0; l--) {
      var c = this.labels[l];
      if (c.statementStart === e.start)
        c.statementStart = this.start, c.kind = u;
      else
        break;
    }
    return this.labels.push({ name: t, kind: u, statementStart: this.start }), e.body = this.parseStatement(i ? i.indexOf("label") === -1 ? i +
    "label" : i : "label"), this.labels.pop(), e.label = r, this.finishNode(e, "LabeledStatement");
  };
  ie.parseExpressionStatement = function(e, t) {
    return e.expression = t, this.semicolon(), this.finishNode(e, "ExpressionStatement");
  };
  ie.parseBlock = function(e, t, r) {
    for (e === void 0 && (e = !0), t === void 0 && (t = this.startNode()), t.body = [], this.expect(A.braceL), e && this.enterScope(0); this.
    type !== A.braceR; ) {
      var i = this.parseStatement(null);
      t.body.push(i);
    }
    return r && (this.strict = !1), this.next(), e && this.exitScope(), this.finishNode(t, "BlockStatement");
  };
  ie.parseFor = function(e, t) {
    return e.init = t, this.expect(A.semi), e.test = this.type === A.semi ? null : this.parseExpression(), this.expect(A.semi), e.update = this.
    type === A.parenR ? null : this.parseExpression(), this.expect(A.parenR), e.body = this.parseStatement("for"), this.exitScope(), this.labels.
    pop(), this.finishNode(e, "ForStatement");
  };
  ie.parseForIn = function(e, t) {
    var r = this.type === A._in;
    return this.next(), t.type === "VariableDeclaration" && t.declarations[0].init != null && (!r || this.options.ecmaVersion < 8 || this.strict ||
    t.kind !== "var" || t.declarations[0].id.type !== "Identifier") && this.raise(
      t.start,
      (r ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
    ), e.left = t, e.right = r ? this.parseExpression() : this.parseMaybeAssign(), this.expect(A.parenR), e.body = this.parseStatement("for"),
    this.exitScope(), this.labels.pop(), this.finishNode(e, r ? "ForInStatement" : "ForOfStatement");
  };
  ie.parseVar = function(e, t, r, i) {
    for (e.declarations = [], e.kind = r; ; ) {
      var n = this.startNode();
      if (this.parseVarId(n, r), this.eat(A.eq) ? n.init = this.parseMaybeAssign(t) : !i && r === "const" && !(this.type === A._in || this.options.
      ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : !i && n.id.type !== "Identifier" && !(t && (this.type === A._in || this.
      isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : n.init = null, e.declarations.
      push(this.finishNode(n, "VariableDeclarator")), !this.eat(A.comma))
        break;
    }
    return e;
  };
  ie.parseVarId = function(e, t) {
    e.id = this.parseBindingAtom(), this.checkLValPattern(e.id, t === "var" ? ih : Gr, !1);
  };
  Fs = 1, Yp = 2, mE = 4;
  ie.parseFunction = function(e, t, r, i, n) {
    this.initFunction(e), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !i) && (this.type === A.star && t & Yp && this.
    unexpected(), e.generator = this.eat(A.star)), this.options.ecmaVersion >= 8 && (e.async = !!i), t & Fs && (e.id = t & mE && this.type !==
    A.name ? null : this.parseIdent(), e.id && !(t & Yp) && this.checkLValSimple(e.id, this.strict || e.generator || e.async ? this.treatFunctionsAsVar ?
    ih : Gr : hE));
    var o = this.yieldPos, a = this.awaitPos, u = this.awaitIdentPos;
    return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(rh(e.async, e.generator)), t & Fs || (e.id = this.type ===
    A.name ? this.parseIdent() : null), this.parseFunctionParams(e), this.parseFunctionBody(e, r, !1, n), this.yieldPos = o, this.awaitPos =
    a, this.awaitIdentPos = u, this.finishNode(e, t & Fs ? "FunctionDeclaration" : "FunctionExpression");
  };
  ie.parseFunctionParams = function(e) {
    this.expect(A.parenL), e.params = this.parseBindingList(A.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
  };
  ie.parseClass = function(e, t) {
    this.next();
    var r = this.strict;
    this.strict = !0, this.parseClassId(e, t), this.parseClassSuper(e);
    var i = this.enterClassBody(), n = this.startNode(), o = !1;
    for (n.body = [], this.expect(A.braceL); this.type !== A.braceR; ) {
      var a = this.parseClassElement(e.superClass !== null);
      a && (n.body.push(a), a.type === "MethodDefinition" && a.kind === "constructor" ? (o && this.raiseRecoverable(a.start, "Duplicate cons\
tructor in the same class"), o = !0) : a.key && a.key.type === "PrivateIdentifier" && c9(i, a) && this.raiseRecoverable(a.key.start, "Identi\
fier '#" + a.key.name + "' has already been declared"));
    }
    return this.strict = r, this.next(), e.body = this.finishNode(n, "ClassBody"), this.exitClassBody(), this.finishNode(e, t ? "ClassDeclar\
ation" : "ClassExpression");
  };
  ie.parseClassElement = function(e) {
    if (this.eat(A.semi))
      return null;
    var t = this.options.ecmaVersion, r = this.startNode(), i = "", n = !1, o = !1, a = "method", u = !1;
    if (this.eatContextual("static")) {
      if (t >= 13 && this.eat(A.braceL))
        return this.parseClassStaticBlock(r), r;
      this.isClassElementNameStart() || this.type === A.star ? u = !0 : i = "static";
    }
    if (r.static = u, !i && t >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === A.star) && !this.canInsertSemicolon() ?
    o = !0 : i = "async"), !i && (t >= 9 || !o) && this.eat(A.star) && (n = !0), !i && !o && !n) {
      var l = this.value;
      (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = l : i = l);
    }
    if (i ? (r.computed = !1, r.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), r.key.name = i, this.finishNode(r.key, "Ide\
ntifier")) : this.parseClassElementName(r), t < 13 || this.type === A.parenL || a !== "method" || n || o) {
      var c = !r.static && Ea(r, "constructor"), p = c && e;
      c && a !== "method" && this.raise(r.key.start, "Constructor can't have get/set modifier"), r.kind = c ? "constructor" : a, this.parseClassMethod(
      r, n, o, p);
    } else
      this.parseClassField(r);
    return r;
  };
  ie.isClassElementNameStart = function() {
    return this.type === A.name || this.type === A.privateId || this.type === A.num || this.type === A.string || this.type === A.bracketL ||
    this.type.keyword;
  };
  ie.parseClassElementName = function(e) {
    this.type === A.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can't have an element named '#constructor'"),
    e.computed = !1, e.key = this.parsePrivateIdent()) : this.parsePropertyName(e);
  };
  ie.parseClassMethod = function(e, t, r, i) {
    var n = e.key;
    e.kind === "constructor" ? (t && this.raise(n.start, "Constructor can't be a generator"), r && this.raise(n.start, "Constructor can't be\
 an async method")) : e.static && Ea(e, "prototype") && this.raise(n.start, "Classes may not have a static property named prototype");
    var o = e.value = this.parseMethod(t, r, i);
    return e.kind === "get" && o.params.length !== 0 && this.raiseRecoverable(o.start, "getter should have no params"), e.kind === "set" && o.
    params.length !== 1 && this.raiseRecoverable(o.start, "setter should have exactly one param"), e.kind === "set" && o.params[0].type === "\
RestElement" && this.raiseRecoverable(o.params[0].start, "Setter cannot use rest params"), this.finishNode(e, "MethodDefinition");
  };
  ie.parseClassField = function(e) {
    return Ea(e, "constructor") ? this.raise(e.key.start, "Classes can't have a field named 'constructor'") : e.static && Ea(e, "prototype") &&
    this.raise(e.key.start, "Classes can't have a static field named 'prototype'"), this.eat(A.eq) ? (this.enterScope(Ts | wa), e.value = this.
    parseMaybeAssign(), this.exitScope()) : e.value = null, this.semicolon(), this.finishNode(e, "PropertyDefinition");
  };
  ie.parseClassStaticBlock = function(e) {
    e.body = [];
    var t = this.labels;
    for (this.labels = [], this.enterScope($i | wa); this.type !== A.braceR; ) {
      var r = this.parseStatement(null);
      e.body.push(r);
    }
    return this.next(), this.exitScope(), this.labels = t, this.finishNode(e, "StaticBlock");
  };
  ie.parseClassId = function(e, t) {
    this.type === A.name ? (e.id = this.parseIdent(), t && this.checkLValSimple(e.id, Gr, !1)) : (t === !0 && this.unexpected(), e.id = null);
  };
  ie.parseClassSuper = function(e) {
    e.superClass = this.eat(A._extends) ? this.parseExprSubscripts(null, !1) : null;
  };
  ie.enterClassBody = function() {
    var e = { declared: /* @__PURE__ */ Object.create(null), used: [] };
    return this.privateNameStack.push(e), e.declared;
  };
  ie.exitClassBody = function() {
    var e = this.privateNameStack.pop(), t = e.declared, r = e.used;
    if (this.options.checkPrivateFields)
      for (var i = this.privateNameStack.length, n = i === 0 ? null : this.privateNameStack[i - 1], o = 0; o < r.length; ++o) {
        var a = r[o];
        Cn(t, a.name) || (n ? n.used.push(a) : this.raiseRecoverable(a.start, "Private field '#" + a.name + "' must be declared in an enclos\
ing class"));
      }
  };
  s(c9, "isPrivateNameConflicted");
  s(Ea, "checkKeyName");
  ie.parseExportAllDeclaration = function(e, t) {
    return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (e.exported = this.parseModuleExportName(), this.checkExport(t, e.exported,
    this.lastTokStart)) : e.exported = null), this.expectContextual("from"), this.type !== A.string && this.unexpected(), e.source = this.parseExprAtom(),
    this.options.ecmaVersion >= 16 && (e.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e, "ExportAllDeclaration");
  };
  ie.parseExport = function(e, t) {
    if (this.next(), this.eat(A.star))
      return this.parseExportAllDeclaration(e, t);
    if (this.eat(A._default))
      return this.checkExport(t, "default", this.lastTokStart), e.declaration = this.parseExportDefaultDeclaration(), this.finishNode(e, "Ex\
portDefaultDeclaration");
    if (this.shouldParseExportStatement())
      e.declaration = this.parseExportDeclaration(e), e.declaration.type === "VariableDeclaration" ? this.checkVariableExport(t, e.declaration.
      declarations) : this.checkExport(t, e.declaration.id, e.declaration.id.start), e.specifiers = [], e.source = null, this.options.ecmaVersion >=
      16 && (e.attributes = []);
    else {
      if (e.declaration = null, e.specifiers = this.parseExportSpecifiers(t), this.eatContextual("from"))
        this.type !== A.string && this.unexpected(), e.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (e.attributes = this.
        parseWithClause());
      else {
        for (var r = 0, i = e.specifiers; r < i.length; r += 1) {
          var n = i[r];
          this.checkUnreserved(n.local), this.checkLocalExport(n.local), n.local.type === "Literal" && this.raise(n.local.start, "A string l\
iteral cannot be used as an exported binding without `from`.");
        }
        e.source = null, this.options.ecmaVersion >= 16 && (e.attributes = []);
      }
      this.semicolon();
    }
    return this.finishNode(e, "ExportNamedDeclaration");
  };
  ie.parseExportDeclaration = function(e) {
    return this.parseStatement(null);
  };
  ie.parseExportDefaultDeclaration = function() {
    var e;
    if (this.type === A._function || (e = this.isAsyncFunction())) {
      var t = this.startNode();
      return this.next(), e && this.next(), this.parseFunction(t, Fs | mE, !1, e);
    } else if (this.type === A._class) {
      var r = this.startNode();
      return this.parseClass(r, "nullableID");
    } else {
      var i = this.parseMaybeAssign();
      return this.semicolon(), i;
    }
  };
  ie.checkExport = function(e, t, r) {
    e && (typeof t != "string" && (t = t.type === "Identifier" ? t.name : t.value), Cn(e, t) && this.raiseRecoverable(r, "Duplicate export '" +
    t + "'"), e[t] = !0);
  };
  ie.checkPatternExport = function(e, t) {
    var r = t.type;
    if (r === "Identifier")
      this.checkExport(e, t, t.start);
    else if (r === "ObjectPattern")
      for (var i = 0, n = t.properties; i < n.length; i += 1) {
        var o = n[i];
        this.checkPatternExport(e, o);
      }
    else if (r === "ArrayPattern")
      for (var a = 0, u = t.elements; a < u.length; a += 1) {
        var l = u[a];
        l && this.checkPatternExport(e, l);
      }
    else r === "Property" ? this.checkPatternExport(e, t.value) : r === "AssignmentPattern" ? this.checkPatternExport(e, t.left) : r === "Re\
stElement" && this.checkPatternExport(e, t.argument);
  };
  ie.checkVariableExport = function(e, t) {
    if (e)
      for (var r = 0, i = t; r < i.length; r += 1) {
        var n = i[r];
        this.checkPatternExport(e, n.id);
      }
  };
  ie.shouldParseExportStatement = function() {
    return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" ||
    this.isLet() || this.isAsyncFunction();
  };
  ie.parseExportSpecifier = function(e) {
    var t = this.startNode();
    return t.local = this.parseModuleExportName(), t.exported = this.eatContextual("as") ? this.parseModuleExportName() : t.local, this.checkExport(
      e,
      t.exported,
      t.exported.start
    ), this.finishNode(t, "ExportSpecifier");
  };
  ie.parseExportSpecifiers = function(e) {
    var t = [], r = !0;
    for (this.expect(A.braceL); !this.eat(A.braceR); ) {
      if (r)
        r = !1;
      else if (this.expect(A.comma), this.afterTrailingComma(A.braceR))
        break;
      t.push(this.parseExportSpecifier(e));
    }
    return t;
  };
  ie.parseImport = function(e) {
    return this.next(), this.type === A.string ? (e.specifiers = l9, e.source = this.parseExprAtom()) : (e.specifiers = this.parseImportSpecifiers(),
    this.expectContextual("from"), e.source = this.type === A.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >=
    16 && (e.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e, "ImportDeclaration");
  };
  ie.parseImportSpecifier = function() {
    var e = this.startNode();
    return e.imported = this.parseModuleExportName(), this.eatContextual("as") ? e.local = this.parseIdent() : (this.checkUnreserved(e.imported),
    e.local = e.imported), this.checkLValSimple(e.local, Gr), this.finishNode(e, "ImportSpecifier");
  };
  ie.parseImportDefaultSpecifier = function() {
    var e = this.startNode();
    return e.local = this.parseIdent(), this.checkLValSimple(e.local, Gr), this.finishNode(e, "ImportDefaultSpecifier");
  };
  ie.parseImportNamespaceSpecifier = function() {
    var e = this.startNode();
    return this.next(), this.expectContextual("as"), e.local = this.parseIdent(), this.checkLValSimple(e.local, Gr), this.finishNode(e, "Imp\
ortNamespaceSpecifier");
  };
  ie.parseImportSpecifiers = function() {
    var e = [], t = !0;
    if (this.type === A.name && (e.push(this.parseImportDefaultSpecifier()), !this.eat(A.comma)))
      return e;
    if (this.type === A.star)
      return e.push(this.parseImportNamespaceSpecifier()), e;
    for (this.expect(A.braceL); !this.eat(A.braceR); ) {
      if (t)
        t = !1;
      else if (this.expect(A.comma), this.afterTrailingComma(A.braceR))
        break;
      e.push(this.parseImportSpecifier());
    }
    return e;
  };
  ie.parseWithClause = function() {
    var e = [];
    if (!this.eat(A._with))
      return e;
    this.expect(A.braceL);
    for (var t = {}, r = !0; !this.eat(A.braceR); ) {
      if (r)
        r = !1;
      else if (this.expect(A.comma), this.afterTrailingComma(A.braceR))
        break;
      var i = this.parseImportAttribute(), n = i.key.type === "Identifier" ? i.key.name : i.key.value;
      Cn(t, n) && this.raiseRecoverable(i.key.start, "Duplicate attribute key '" + n + "'"), t[n] = !0, e.push(i);
    }
    return e;
  };
  ie.parseImportAttribute = function() {
    var e = this.startNode();
    return e.key = this.type === A.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never"), this.expect(A.colon),
    this.type !== A.string && this.unexpected(), e.value = this.parseExprAtom(), this.finishNode(e, "ImportAttribute");
  };
  ie.parseModuleExportName = function() {
    if (this.options.ecmaVersion >= 13 && this.type === A.string) {
      var e = this.parseLiteral(this.value);
      return n9.test(e.value) && this.raise(e.start, "An export name cannot include a lone surrogate."), e;
    }
    return this.parseIdent(!0);
  };
  ie.adaptDirectivePrologue = function(e) {
    for (var t = 0; t < e.length && this.isDirectiveCandidate(e[t]); ++t)
      e[t].directive = e[t].expression.raw.slice(1, -1);
  };
  ie.isDirectiveCandidate = function(e) {
    return this.options.ecmaVersion >= 5 && e.type === "ExpressionStatement" && e.expression.type === "Literal" && typeof e.expression.value ==
    "string" && // Reject parenthesized strings.
    (this.input[e.start] === '"' || this.input[e.start] === "'");
  };
  tr = nt.prototype;
  tr.toAssignable = function(e, t, r) {
    if (this.options.ecmaVersion >= 6 && e)
      switch (e.type) {
        case "Identifier":
          this.inAsync && e.name === "await" && this.raise(e.start, "Cannot use 'await' as identifier inside an async function");
          break;
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
        case "RestElement":
          break;
        case "ObjectExpression":
          e.type = "ObjectPattern", r && this.checkPatternErrors(r, !0);
          for (var i = 0, n = e.properties; i < n.length; i += 1) {
            var o = n[i];
            this.toAssignable(o, t), o.type === "RestElement" && (o.argument.type === "ArrayPattern" || o.argument.type === "ObjectPattern") &&
            this.raise(o.argument.start, "Unexpected token");
          }
          break;
        case "Property":
          e.kind !== "init" && this.raise(e.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(e.value, t);
          break;
        case "ArrayExpression":
          e.type = "ArrayPattern", r && this.checkPatternErrors(r, !0), this.toAssignableList(e.elements, t);
          break;
        case "SpreadElement":
          e.type = "RestElement", this.toAssignable(e.argument, t), e.argument.type === "AssignmentPattern" && this.raise(e.argument.start, "\
Rest elements cannot have a default value");
          break;
        case "AssignmentExpression":
          e.operator !== "=" && this.raise(e.left.end, "Only '=' operator can be used for specifying default value."), e.type = "AssignmentP\
attern", delete e.operator, this.toAssignable(e.left, t);
          break;
        case "ParenthesizedExpression":
          this.toAssignable(e.expression, t, r);
          break;
        case "ChainExpression":
          this.raiseRecoverable(e.start, "Optional chaining cannot appear in left-hand side");
          break;
        case "MemberExpression":
          if (!t)
            break;
        default:
          this.raise(e.start, "Assigning to rvalue");
      }
    else r && this.checkPatternErrors(r, !0);
    return e;
  };
  tr.toAssignableList = function(e, t) {
    for (var r = e.length, i = 0; i < r; i++) {
      var n = e[i];
      n && this.toAssignable(n, t);
    }
    if (r) {
      var o = e[r - 1];
      this.options.ecmaVersion === 6 && t && o && o.type === "RestElement" && o.argument.type !== "Identifier" && this.unexpected(o.argument.
      start);
    }
    return e;
  };
  tr.parseSpread = function(e) {
    var t = this.startNode();
    return this.next(), t.argument = this.parseMaybeAssign(!1, e), this.finishNode(t, "SpreadElement");
  };
  tr.parseRestBinding = function() {
    var e = this.startNode();
    return this.next(), this.options.ecmaVersion === 6 && this.type !== A.name && this.unexpected(), e.argument = this.parseBindingAtom(), this.
    finishNode(e, "RestElement");
  };
  tr.parseBindingAtom = function() {
    if (this.options.ecmaVersion >= 6)
      switch (this.type) {
        case A.bracketL:
          var e = this.startNode();
          return this.next(), e.elements = this.parseBindingList(A.bracketR, !0, !0), this.finishNode(e, "ArrayPattern");
        case A.braceL:
          return this.parseObj(!0);
      }
    return this.parseIdent();
  };
  tr.parseBindingList = function(e, t, r, i) {
    for (var n = [], o = !0; !this.eat(e); )
      if (o ? o = !1 : this.expect(A.comma), t && this.type === A.comma)
        n.push(null);
      else {
        if (r && this.afterTrailingComma(e))
          break;
        if (this.type === A.ellipsis) {
          var a = this.parseRestBinding();
          this.parseBindingListItem(a), n.push(a), this.type === A.comma && this.raiseRecoverable(this.start, "Comma is not permitted after \
the rest element"), this.expect(e);
          break;
        } else
          n.push(this.parseAssignableListItem(i));
      }
    return n;
  };
  tr.parseAssignableListItem = function(e) {
    var t = this.parseMaybeDefault(this.start, this.startLoc);
    return this.parseBindingListItem(t), t;
  };
  tr.parseBindingListItem = function(e) {
    return e;
  };
  tr.parseMaybeDefault = function(e, t, r) {
    if (r = r || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(A.eq))
      return r;
    var i = this.startNodeAt(e, t);
    return i.left = r, i.right = this.parseMaybeAssign(), this.finishNode(i, "AssignmentPattern");
  };
  tr.checkLValSimple = function(e, t, r) {
    t === void 0 && (t = xa);
    var i = t !== xa;
    switch (e.type) {
      case "Identifier":
        this.strict && this.reservedWordsStrictBind.test(e.name) && this.raiseRecoverable(e.start, (i ? "Binding " : "Assigning to ") + e.name +
        " in strict mode"), i && (t === Gr && e.name === "let" && this.raiseRecoverable(e.start, "let is disallowed as a lexically bound nam\
e"), r && (Cn(r, e.name) && this.raiseRecoverable(e.start, "Argument name clash"), r[e.name] = !0), t !== dE && this.declareName(e.name, t, e.
        start));
        break;
      case "ChainExpression":
        this.raiseRecoverable(e.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        i && this.raiseRecoverable(e.start, "Binding member expression");
        break;
      case "ParenthesizedExpression":
        return i && this.raiseRecoverable(e.start, "Binding parenthesized expression"), this.checkLValSimple(e.expression, t, r);
      default:
        this.raise(e.start, (i ? "Binding" : "Assigning to") + " rvalue");
    }
  };
  tr.checkLValPattern = function(e, t, r) {
    switch (t === void 0 && (t = xa), e.type) {
      case "ObjectPattern":
        for (var i = 0, n = e.properties; i < n.length; i += 1) {
          var o = n[i];
          this.checkLValInnerPattern(o, t, r);
        }
        break;
      case "ArrayPattern":
        for (var a = 0, u = e.elements; a < u.length; a += 1) {
          var l = u[a];
          l && this.checkLValInnerPattern(l, t, r);
        }
        break;
      default:
        this.checkLValSimple(e, t, r);
    }
  };
  tr.checkLValInnerPattern = function(e, t, r) {
    switch (t === void 0 && (t = xa), e.type) {
      case "Property":
        this.checkLValInnerPattern(e.value, t, r);
        break;
      case "AssignmentPattern":
        this.checkLValPattern(e.left, t, r);
        break;
      case "RestElement":
        this.checkLValPattern(e.argument, t, r);
        break;
      default:
        this.checkLValPattern(e, t, r);
    }
  };
  dr = /* @__PURE__ */ s(function(t, r, i, n, o) {
    this.token = t, this.isExpr = !!r, this.preserveSpace = !!i, this.override = n, this.generator = !!o;
  }, "TokContext"), Ue = {
    b_stat: new dr("{", !1),
    b_expr: new dr("{", !0),
    b_tmpl: new dr("${", !1),
    p_stat: new dr("(", !1),
    p_expr: new dr("(", !0),
    q_tmpl: new dr("`", !0, !0, function(e) {
      return e.tryReadTemplateToken();
    }),
    f_stat: new dr("function", !1),
    f_expr: new dr("function", !0),
    f_expr_gen: new dr("function", !0, !1, null, !0),
    f_gen: new dr("function", !1, !1, null, !0)
  }, An = nt.prototype;
  An.initialContext = function() {
    return [Ue.b_stat];
  };
  An.curContext = function() {
    return this.context[this.context.length - 1];
  };
  An.braceIsBlock = function(e) {
    var t = this.curContext();
    return t === Ue.f_expr || t === Ue.f_stat ? !0 : e === A.colon && (t === Ue.b_stat || t === Ue.b_expr) ? !t.isExpr : e === A._return || e ===
    A.name && this.exprAllowed ? er.test(this.input.slice(this.lastTokEnd, this.start)) : e === A._else || e === A.semi || e === A.eof || e ===
    A.parenR || e === A.arrow ? !0 : e === A.braceL ? t === Ue.b_stat : e === A._var || e === A._const || e === A.name ? !1 : !this.exprAllowed;
  };
  An.inGeneratorContext = function() {
    for (var e = this.context.length - 1; e >= 1; e--) {
      var t = this.context[e];
      if (t.token === "function")
        return t.generator;
    }
    return !1;
  };
  An.updateContext = function(e) {
    var t, r = this.type;
    r.keyword && e === A.dot ? this.exprAllowed = !1 : (t = r.updateContext) ? t.call(this, e) : this.exprAllowed = r.beforeExpr;
  };
  An.overrideContext = function(e) {
    this.curContext() !== e && (this.context[this.context.length - 1] = e);
  };
  A.parenR.updateContext = A.braceR.updateContext = function() {
    if (this.context.length === 1) {
      this.exprAllowed = !0;
      return;
    }
    var e = this.context.pop();
    e === Ue.b_stat && this.curContext().token === "function" && (e = this.context.pop()), this.exprAllowed = !e.isExpr;
  };
  A.braceL.updateContext = function(e) {
    this.context.push(this.braceIsBlock(e) ? Ue.b_stat : Ue.b_expr), this.exprAllowed = !0;
  };
  A.dollarBraceL.updateContext = function() {
    this.context.push(Ue.b_tmpl), this.exprAllowed = !0;
  };
  A.parenL.updateContext = function(e) {
    var t = e === A._if || e === A._for || e === A._with || e === A._while;
    this.context.push(t ? Ue.p_stat : Ue.p_expr), this.exprAllowed = !0;
  };
  A.incDec.updateContext = function() {
  };
  A._function.updateContext = A._class.updateContext = function(e) {
    e.beforeExpr && e !== A._else && !(e === A.semi && this.curContext() !== Ue.p_stat) && !(e === A._return && er.test(this.input.slice(this.
    lastTokEnd, this.start))) && !((e === A.colon || e === A.braceL) && this.curContext() === Ue.b_stat) ? this.context.push(Ue.f_expr) : this.
    context.push(Ue.f_stat), this.exprAllowed = !1;
  };
  A.colon.updateContext = function() {
    this.curContext().token === "function" && this.context.pop(), this.exprAllowed = !0;
  };
  A.backQuote.updateContext = function() {
    this.curContext() === Ue.q_tmpl ? this.context.pop() : this.context.push(Ue.q_tmpl), this.exprAllowed = !1;
  };
  A.star.updateContext = function(e) {
    if (e === A._function) {
      var t = this.context.length - 1;
      this.context[t] === Ue.f_expr ? this.context[t] = Ue.f_expr_gen : this.context[t] = Ue.f_gen;
    }
    this.exprAllowed = !0;
  };
  A.name.updateContext = function(e) {
    var t = !1;
    this.options.ecmaVersion >= 6 && e !== A.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) &&
    (t = !0), this.exprAllowed = t;
  };
  fe = nt.prototype;
  fe.checkPropClash = function(e, t, r) {
    if (!(this.options.ecmaVersion >= 9 && e.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (e.computed || e.method || e.shorthand))) {
      var i = e.key, n;
      switch (i.type) {
        case "Identifier":
          n = i.name;
          break;
        case "Literal":
          n = String(i.value);
          break;
        default:
          return;
      }
      var o = e.kind;
      if (this.options.ecmaVersion >= 6) {
        n === "__proto__" && o === "init" && (t.proto && (r ? r.doubleProto < 0 && (r.doubleProto = i.start) : this.raiseRecoverable(i.start,
        "Redefinition of __proto__ property")), t.proto = !0);
        return;
      }
      n = "$" + n;
      var a = t[n];
      if (a) {
        var u;
        o === "init" ? u = this.strict && a.init || a.get || a.set : u = a.init || a[o], u && this.raiseRecoverable(i.start, "Redefinition o\
f property");
      } else
        a = t[n] = {
          init: !1,
          get: !1,
          set: !1
        };
      a[o] = !0;
    }
  };
  fe.parseExpression = function(e, t) {
    var r = this.start, i = this.startLoc, n = this.parseMaybeAssign(e, t);
    if (this.type === A.comma) {
      var o = this.startNodeAt(r, i);
      for (o.expressions = [n]; this.eat(A.comma); )
        o.expressions.push(this.parseMaybeAssign(e, t));
      return this.finishNode(o, "SequenceExpression");
    }
    return n;
  };
  fe.parseMaybeAssign = function(e, t, r) {
    if (this.isContextual("yield")) {
      if (this.inGenerator)
        return this.parseYield(e);
      this.exprAllowed = !1;
    }
    var i = !1, n = -1, o = -1, a = -1;
    t ? (n = t.parenthesizedAssign, o = t.trailingComma, a = t.doubleProto, t.parenthesizedAssign = t.trailingComma = -1) : (t = new Sa(), i =
    !0);
    var u = this.start, l = this.startLoc;
    (this.type === A.parenL || this.type === A.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = e === "await");
    var c = this.parseMaybeConditional(e, t);
    if (r && (c = r.call(this, c, u, l)), this.type.isAssign) {
      var p = this.startNodeAt(u, l);
      return p.operator = this.value, this.type === A.eq && (c = this.toAssignable(c, !1, t)), i || (t.parenthesizedAssign = t.trailingComma =
      t.doubleProto = -1), t.shorthandAssign >= c.start && (t.shorthandAssign = -1), this.type === A.eq ? this.checkLValPattern(c) : this.checkLValSimple(
      c), p.left = c, this.next(), p.right = this.parseMaybeAssign(e), a > -1 && (t.doubleProto = a), this.finishNode(p, "AssignmentExpressi\
on");
    } else
      i && this.checkExpressionErrors(t, !0);
    return n > -1 && (t.parenthesizedAssign = n), o > -1 && (t.trailingComma = o), c;
  };
  fe.parseMaybeConditional = function(e, t) {
    var r = this.start, i = this.startLoc, n = this.parseExprOps(e, t);
    if (this.checkExpressionErrors(t))
      return n;
    if (this.eat(A.question)) {
      var o = this.startNodeAt(r, i);
      return o.test = n, o.consequent = this.parseMaybeAssign(), this.expect(A.colon), o.alternate = this.parseMaybeAssign(e), this.finishNode(
      o, "ConditionalExpression");
    }
    return n;
  };
  fe.parseExprOps = function(e, t) {
    var r = this.start, i = this.startLoc, n = this.parseMaybeUnary(t, !1, !1, e);
    return this.checkExpressionErrors(t) || n.start === r && n.type === "ArrowFunctionExpression" ? n : this.parseExprOp(n, r, i, -1, e);
  };
  fe.parseExprOp = function(e, t, r, i, n) {
    var o = this.type.binop;
    if (o != null && (!n || this.type !== A._in) && o > i) {
      var a = this.type === A.logicalOR || this.type === A.logicalAND, u = this.type === A.coalesce;
      u && (o = A.logicalAND.binop);
      var l = this.value;
      this.next();
      var c = this.start, p = this.startLoc, h = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, n), c, p, o, n), f = this.buildBinary(t,
      r, e, h, l, a || u);
      return (a && this.type === A.coalesce || u && (this.type === A.logicalOR || this.type === A.logicalAND)) && this.raiseRecoverable(this.
      start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(f, t, r, i, n);
    }
    return e;
  };
  fe.buildBinary = function(e, t, r, i, n, o) {
    i.type === "PrivateIdentifier" && this.raise(i.start, "Private identifier can only be left side of binary expression");
    var a = this.startNodeAt(e, t);
    return a.left = r, a.operator = n, a.right = i, this.finishNode(a, o ? "LogicalExpression" : "BinaryExpression");
  };
  fe.parseMaybeUnary = function(e, t, r, i) {
    var n = this.start, o = this.startLoc, a;
    if (this.isContextual("await") && this.canAwait)
      a = this.parseAwait(i), t = !0;
    else if (this.type.prefix) {
      var u = this.startNode(), l = this.type === A.incDec;
      u.operator = this.value, u.prefix = !0, this.next(), u.argument = this.parseMaybeUnary(null, !0, l, i), this.checkExpressionErrors(e, !0),
      l ? this.checkLValSimple(u.argument) : this.strict && u.operator === "delete" && gE(u.argument) ? this.raiseRecoverable(u.start, "Dele\
ting local variable in strict mode") : u.operator === "delete" && Qp(u.argument) ? this.raiseRecoverable(u.start, "Private fields can not be\
 deleted") : t = !0, a = this.finishNode(u, l ? "UpdateExpression" : "UnaryExpression");
    } else if (!t && this.type === A.privateId)
      (i || this.privateNameStack.length === 0) && this.options.checkPrivateFields && this.unexpected(), a = this.parsePrivateIdent(), this.
      type !== A._in && this.unexpected();
    else {
      if (a = this.parseExprSubscripts(e, i), this.checkExpressionErrors(e))
        return a;
      for (; this.type.postfix && !this.canInsertSemicolon(); ) {
        var c = this.startNodeAt(n, o);
        c.operator = this.value, c.prefix = !1, c.argument = a, this.checkLValSimple(a), this.next(), a = this.finishNode(c, "UpdateExpressi\
on");
      }
    }
    if (!r && this.eat(A.starstar))
      if (t)
        this.unexpected(this.lastTokStart);
      else
        return this.buildBinary(n, o, a, this.parseMaybeUnary(null, !1, !1, i), "**", !1);
    else
      return a;
  };
  s(gE, "isLocalVariableAccess");
  s(Qp, "isPrivateFieldAccess");
  fe.parseExprSubscripts = function(e, t) {
    var r = this.start, i = this.startLoc, n = this.parseExprAtom(e, t);
    if (n.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
      return n;
    var o = this.parseSubscripts(n, r, i, !1, t);
    return e && o.type === "MemberExpression" && (e.parenthesizedAssign >= o.start && (e.parenthesizedAssign = -1), e.parenthesizedBind >= o.
    start && (e.parenthesizedBind = -1), e.trailingComma >= o.start && (e.trailingComma = -1)), o;
  };
  fe.parseSubscripts = function(e, t, r, i, n) {
    for (var o = this.options.ecmaVersion >= 8 && e.type === "Identifier" && e.name === "async" && this.lastTokEnd === e.end && !this.canInsertSemicolon() &&
    e.end - e.start === 5 && this.potentialArrowAt === e.start, a = !1; ; ) {
      var u = this.parseSubscript(e, t, r, i, o, a, n);
      if (u.optional && (a = !0), u === e || u.type === "ArrowFunctionExpression") {
        if (a) {
          var l = this.startNodeAt(t, r);
          l.expression = u, u = this.finishNode(l, "ChainExpression");
        }
        return u;
      }
      e = u;
    }
  };
  fe.shouldParseAsyncArrow = function() {
    return !this.canInsertSemicolon() && this.eat(A.arrow);
  };
  fe.parseSubscriptAsyncArrow = function(e, t, r, i) {
    return this.parseArrowExpression(this.startNodeAt(e, t), r, !0, i);
  };
  fe.parseSubscript = function(e, t, r, i, n, o, a) {
    var u = this.options.ecmaVersion >= 11, l = u && this.eat(A.questionDot);
    i && l && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
    var c = this.eat(A.bracketL);
    if (c || l && this.type !== A.parenL && this.type !== A.backQuote || this.eat(A.dot)) {
      var p = this.startNodeAt(t, r);
      p.object = e, c ? (p.property = this.parseExpression(), this.expect(A.bracketR)) : this.type === A.privateId && e.type !== "Super" ? p.
      property = this.parsePrivateIdent() : p.property = this.parseIdent(this.options.allowReserved !== "never"), p.computed = !!c, u && (p.
      optional = l), e = this.finishNode(p, "MemberExpression");
    } else if (!i && this.eat(A.parenL)) {
      var h = new Sa(), f = this.yieldPos, d = this.awaitPos, m = this.awaitIdentPos;
      this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
      var g = this.parseExprList(A.parenR, this.options.ecmaVersion >= 8, !1, h);
      if (n && !l && this.shouldParseAsyncArrow())
        return this.checkPatternErrors(h, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos,
        "Cannot use 'await' as identifier inside an async function"), this.yieldPos = f, this.awaitPos = d, this.awaitIdentPos = m, this.parseSubscriptAsyncArrow(
        t, r, g, a);
      this.checkExpressionErrors(h, !0), this.yieldPos = f || this.yieldPos, this.awaitPos = d || this.awaitPos, this.awaitIdentPos = m || this.
      awaitIdentPos;
      var b = this.startNodeAt(t, r);
      b.callee = e, b.arguments = g, u && (b.optional = l), e = this.finishNode(b, "CallExpression");
    } else if (this.type === A.backQuote) {
      (l || o) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
      var D = this.startNodeAt(t, r);
      D.tag = e, D.quasi = this.parseTemplate({ isTagged: !0 }), e = this.finishNode(D, "TaggedTemplateExpression");
    }
    return e;
  };
  fe.parseExprAtom = function(e, t, r) {
    this.type === A.slash && this.readRegexp();
    var i, n = this.potentialArrowAt === this.start;
    switch (this.type) {
      case A._super:
        return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), i = this.startNode(), this.next(), this.type ===
        A.parenL && !this.allowDirectSuper && this.raise(i.start, "super() call outside constructor of a subclass"), this.type !== A.dot && this.
        type !== A.bracketL && this.type !== A.parenL && this.unexpected(), this.finishNode(i, "Super");
      case A._this:
        return i = this.startNode(), this.next(), this.finishNode(i, "ThisExpression");
      case A.name:
        var o = this.start, a = this.startLoc, u = this.containsEsc, l = this.parseIdent(!1);
        if (this.options.ecmaVersion >= 8 && !u && l.name === "async" && !this.canInsertSemicolon() && this.eat(A._function))
          return this.overrideContext(Ue.f_expr), this.parseFunction(this.startNodeAt(o, a), 0, !1, !0, t);
        if (n && !this.canInsertSemicolon()) {
          if (this.eat(A.arrow))
            return this.parseArrowExpression(this.startNodeAt(o, a), [l], !1, t);
          if (this.options.ecmaVersion >= 8 && l.name === "async" && this.type === A.name && !u && (!this.potentialArrowInForAwait || this.value !==
          "of" || this.containsEsc))
            return l = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(A.arrow)) && this.unexpected(), this.parseArrowExpression(
            this.startNodeAt(o, a), [l], !0, t);
        }
        return l;
      case A.regexp:
        var c = this.value;
        return i = this.parseLiteral(c.value), i.regex = { pattern: c.pattern, flags: c.flags }, i;
      case A.num:
      case A.string:
        return this.parseLiteral(this.value);
      case A._null:
      case A._true:
      case A._false:
        return i = this.startNode(), i.value = this.type === A._null ? null : this.type === A._true, i.raw = this.type.keyword, this.next(),
        this.finishNode(i, "Literal");
      case A.parenL:
        var p = this.start, h = this.parseParenAndDistinguishExpression(n, t);
        return e && (e.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(h) && (e.parenthesizedAssign = p), e.parenthesizedBind < 0 && (e.
        parenthesizedBind = p)), h;
      case A.bracketL:
        return i = this.startNode(), this.next(), i.elements = this.parseExprList(A.bracketR, !0, !0, e), this.finishNode(i, "ArrayExpressio\
n");
      case A.braceL:
        return this.overrideContext(Ue.b_expr), this.parseObj(!1, e);
      case A._function:
        return i = this.startNode(), this.next(), this.parseFunction(i, 0);
      case A._class:
        return this.parseClass(this.startNode(), !1);
      case A._new:
        return this.parseNew();
      case A.backQuote:
        return this.parseTemplate();
      case A._import:
        return this.options.ecmaVersion >= 11 ? this.parseExprImport(r) : this.unexpected();
      default:
        return this.parseExprAtomDefault();
    }
  };
  fe.parseExprAtomDefault = function() {
    this.unexpected();
  };
  fe.parseExprImport = function(e) {
    var t = this.startNode();
    if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === A.parenL && !e)
      return this.parseDynamicImport(t);
    if (this.type === A.dot) {
      var r = this.startNodeAt(t.start, t.loc && t.loc.start);
      return r.name = "import", t.meta = this.finishNode(r, "Identifier"), this.parseImportMeta(t);
    } else
      this.unexpected();
  };
  fe.parseDynamicImport = function(e) {
    if (this.next(), e.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16)
      this.eat(A.parenR) ? e.options = null : (this.expect(A.comma), this.afterTrailingComma(A.parenR) ? e.options = null : (e.options = this.
      parseMaybeAssign(), this.eat(A.parenR) || (this.expect(A.comma), this.afterTrailingComma(A.parenR) || this.unexpected())));
    else if (!this.eat(A.parenR)) {
      var t = this.start;
      this.eat(A.comma) && this.eat(A.parenR) ? this.raiseRecoverable(t, "Trailing comma is not allowed in import()") : this.unexpected(t);
    }
    return this.finishNode(e, "ImportExpression");
  };
  fe.parseImportMeta = function(e) {
    this.next();
    var t = this.containsEsc;
    return e.property = this.parseIdent(!0), e.property.name !== "meta" && this.raiseRecoverable(e.property.start, "The only valid meta prop\
erty for import is 'import.meta'"), t && this.raiseRecoverable(e.start, "'import.meta' must not contain escaped characters"), this.options.sourceType !==
    "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(e.start, "Cannot use 'import.meta' outside a module"), this.
    finishNode(e, "MetaProperty");
  };
  fe.parseLiteral = function(e) {
    var t = this.startNode();
    return t.value = e, t.raw = this.input.slice(this.start, this.end), t.raw.charCodeAt(t.raw.length - 1) === 110 && (t.bigint = t.raw.slice(
    0, -1).replace(/_/g, "")), this.next(), this.finishNode(t, "Literal");
  };
  fe.parseParenExpression = function() {
    this.expect(A.parenL);
    var e = this.parseExpression();
    return this.expect(A.parenR), e;
  };
  fe.shouldParseArrow = function(e) {
    return !this.canInsertSemicolon();
  };
  fe.parseParenAndDistinguishExpression = function(e, t) {
    var r = this.start, i = this.startLoc, n, o = this.options.ecmaVersion >= 8;
    if (this.options.ecmaVersion >= 6) {
      this.next();
      var a = this.start, u = this.startLoc, l = [], c = !0, p = !1, h = new Sa(), f = this.yieldPos, d = this.awaitPos, m;
      for (this.yieldPos = 0, this.awaitPos = 0; this.type !== A.parenR; )
        if (c ? c = !1 : this.expect(A.comma), o && this.afterTrailingComma(A.parenR, !0)) {
          p = !0;
          break;
        } else if (this.type === A.ellipsis) {
          m = this.start, l.push(this.parseParenItem(this.parseRestBinding())), this.type === A.comma && this.raiseRecoverable(
            this.start,
            "Comma is not permitted after the rest element"
          );
          break;
        } else
          l.push(this.parseMaybeAssign(!1, h, this.parseParenItem));
      var g = this.lastTokEnd, b = this.lastTokEndLoc;
      if (this.expect(A.parenR), e && this.shouldParseArrow(l) && this.eat(A.arrow))
        return this.checkPatternErrors(h, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = f, this.awaitPos = d, this.parseParenArrowList(
        r, i, l, t);
      (!l.length || p) && this.unexpected(this.lastTokStart), m && this.unexpected(m), this.checkExpressionErrors(h, !0), this.yieldPos = f ||
      this.yieldPos, this.awaitPos = d || this.awaitPos, l.length > 1 ? (n = this.startNodeAt(a, u), n.expressions = l, this.finishNodeAt(n,
      "SequenceExpression", g, b)) : n = l[0];
    } else
      n = this.parseParenExpression();
    if (this.options.preserveParens) {
      var D = this.startNodeAt(r, i);
      return D.expression = n, this.finishNode(D, "ParenthesizedExpression");
    } else
      return n;
  };
  fe.parseParenItem = function(e) {
    return e;
  };
  fe.parseParenArrowList = function(e, t, r, i) {
    return this.parseArrowExpression(this.startNodeAt(e, t), r, !1, i);
  };
  p9 = [];
  fe.parseNew = function() {
    this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
    var e = this.startNode();
    if (this.next(), this.options.ecmaVersion >= 6 && this.type === A.dot) {
      var t = this.startNodeAt(e.start, e.loc && e.loc.start);
      t.name = "new", e.meta = this.finishNode(t, "Identifier"), this.next();
      var r = this.containsEsc;
      return e.property = this.parseIdent(!0), e.property.name !== "target" && this.raiseRecoverable(e.property.start, "The only valid meta \
property for new is 'new.target'"), r && this.raiseRecoverable(e.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget ||
      this.raiseRecoverable(e.start, "'new.target' can only be used in functions and class static block"), this.finishNode(e, "MetaProperty");
    }
    var i = this.start, n = this.startLoc;
    return e.callee = this.parseSubscripts(this.parseExprAtom(null, !1, !0), i, n, !0, !1), this.eat(A.parenL) ? e.arguments = this.parseExprList(
    A.parenR, this.options.ecmaVersion >= 8, !1) : e.arguments = p9, this.finishNode(e, "NewExpression");
  };
  fe.parseTemplateElement = function(e) {
    var t = e.isTagged, r = this.startNode();
    return this.type === A.invalidTemplate ? (t || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), r.
    value = {
      raw: this.value.replace(/\r\n?/g, `
`),
      cooked: null
    }) : r.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, `
`),
      cooked: this.value
    }, this.next(), r.tail = this.type === A.backQuote, this.finishNode(r, "TemplateElement");
  };
  fe.parseTemplate = function(e) {
    e === void 0 && (e = {});
    var t = e.isTagged;
    t === void 0 && (t = !1);
    var r = this.startNode();
    this.next(), r.expressions = [];
    var i = this.parseTemplateElement({ isTagged: t });
    for (r.quasis = [i]; !i.tail; )
      this.type === A.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(A.dollarBraceL), r.expressions.push(this.parseExpression()),
      this.expect(A.braceR), r.quasis.push(i = this.parseTemplateElement({ isTagged: t }));
    return this.next(), this.finishNode(r, "TemplateLiteral");
  };
  fe.isAsyncProp = function(e) {
    return !e.computed && e.key.type === "Identifier" && e.key.name === "async" && (this.type === A.name || this.type === A.num || this.type ===
    A.string || this.type === A.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === A.star) && !er.test(this.input.
    slice(this.lastTokEnd, this.start));
  };
  fe.parseObj = function(e, t) {
    var r = this.startNode(), i = !0, n = {};
    for (r.properties = [], this.next(); !this.eat(A.braceR); ) {
      if (i)
        i = !1;
      else if (this.expect(A.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(A.braceR))
        break;
      var o = this.parseProperty(e, t);
      e || this.checkPropClash(o, n, t), r.properties.push(o);
    }
    return this.finishNode(r, e ? "ObjectPattern" : "ObjectExpression");
  };
  fe.parseProperty = function(e, t) {
    var r = this.startNode(), i, n, o, a;
    if (this.options.ecmaVersion >= 9 && this.eat(A.ellipsis))
      return e ? (r.argument = this.parseIdent(!1), this.type === A.comma && this.raiseRecoverable(this.start, "Comma is not permitted after\
 the rest element"), this.finishNode(r, "RestElement")) : (r.argument = this.parseMaybeAssign(!1, t), this.type === A.comma && t && t.trailingComma <
      0 && (t.trailingComma = this.start), this.finishNode(r, "SpreadElement"));
    this.options.ecmaVersion >= 6 && (r.method = !1, r.shorthand = !1, (e || t) && (o = this.start, a = this.startLoc), e || (i = this.eat(A.
    star)));
    var u = this.containsEsc;
    return this.parsePropertyName(r), !e && !u && this.options.ecmaVersion >= 8 && !i && this.isAsyncProp(r) ? (n = !0, i = this.options.ecmaVersion >=
    9 && this.eat(A.star), this.parsePropertyName(r)) : n = !1, this.parsePropertyValue(r, e, i, n, o, a, t, u), this.finishNode(r, "Propert\
y");
  };
  fe.parseGetterSetter = function(e) {
    var t = e.key.name;
    this.parsePropertyName(e), e.value = this.parseMethod(!1), e.kind = t;
    var r = e.kind === "get" ? 0 : 1;
    if (e.value.params.length !== r) {
      var i = e.value.start;
      e.kind === "get" ? this.raiseRecoverable(i, "getter should have no params") : this.raiseRecoverable(i, "setter should have exactly one\
 param");
    } else
      e.kind === "set" && e.value.params[0].type === "RestElement" && this.raiseRecoverable(e.value.params[0].start, "Setter cannot use rest\
 params");
  };
  fe.parsePropertyValue = function(e, t, r, i, n, o, a, u) {
    (r || i) && this.type === A.colon && this.unexpected(), this.eat(A.colon) ? (e.value = t ? this.parseMaybeDefault(this.start, this.startLoc) :
    this.parseMaybeAssign(!1, a), e.kind = "init") : this.options.ecmaVersion >= 6 && this.type === A.parenL ? (t && this.unexpected(), e.method =
    !0, e.value = this.parseMethod(r, i), e.kind = "init") : !t && !u && this.options.ecmaVersion >= 5 && !e.computed && e.key.type === "Ide\
ntifier" && (e.key.name === "get" || e.key.name === "set") && this.type !== A.comma && this.type !== A.braceR && this.type !== A.eq ? ((r ||
    i) && this.unexpected(), this.parseGetterSetter(e)) : this.options.ecmaVersion >= 6 && !e.computed && e.key.type === "Identifier" ? ((r ||
    i) && this.unexpected(), this.checkUnreserved(e.key), e.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = n), t ? e.value =
    this.parseMaybeDefault(n, o, this.copyNode(e.key)) : this.type === A.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start),
    e.value = this.parseMaybeDefault(n, o, this.copyNode(e.key))) : e.value = this.copyNode(e.key), e.kind = "init", e.shorthand = !0) : this.
    unexpected();
  };
  fe.parsePropertyName = function(e) {
    if (this.options.ecmaVersion >= 6) {
      if (this.eat(A.bracketL))
        return e.computed = !0, e.key = this.parseMaybeAssign(), this.expect(A.bracketR), e.key;
      e.computed = !1;
    }
    return e.key = this.type === A.num || this.type === A.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "ne\
ver");
  };
  fe.initFunction = function(e) {
    e.id = null, this.options.ecmaVersion >= 6 && (e.generator = e.expression = !1), this.options.ecmaVersion >= 8 && (e.async = !1);
  };
  fe.parseMethod = function(e, t, r) {
    var i = this.startNode(), n = this.yieldPos, o = this.awaitPos, a = this.awaitIdentPos;
    return this.initFunction(i), this.options.ecmaVersion >= 6 && (i.generator = e), this.options.ecmaVersion >= 8 && (i.async = !!t), this.
    yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(rh(t, i.generator) | wa | (r ? pE : 0)), this.expect(A.parenL),
    i.params = this.parseBindingList(A.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(
    i, !1, !0, !1), this.yieldPos = n, this.awaitPos = o, this.awaitIdentPos = a, this.finishNode(i, "FunctionExpression");
  };
  fe.parseArrowExpression = function(e, t, r, i) {
    var n = this.yieldPos, o = this.awaitPos, a = this.awaitIdentPos;
    return this.enterScope(rh(r, !1) | th), this.initFunction(e), this.options.ecmaVersion >= 8 && (e.async = !!r), this.yieldPos = 0, this.
    awaitPos = 0, this.awaitIdentPos = 0, e.params = this.toAssignableList(t, !0), this.parseFunctionBody(e, !0, !1, i), this.yieldPos = n, this.
    awaitPos = o, this.awaitIdentPos = a, this.finishNode(e, "ArrowFunctionExpression");
  };
  fe.parseFunctionBody = function(e, t, r, i) {
    var n = t && this.type !== A.braceL, o = this.strict, a = !1;
    if (n)
      e.body = this.parseMaybeAssign(i), e.expression = !0, this.checkParams(e, !1);
    else {
      var u = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(e.params);
      (!o || u) && (a = this.strictDirective(this.end), a && u && this.raiseRecoverable(e.start, "Illegal 'use strict' directive in function\
 with non-simple parameter list"));
      var l = this.labels;
      this.labels = [], a && (this.strict = !0), this.checkParams(e, !o && !a && !t && !r && this.isSimpleParamList(e.params)), this.strict &&
      e.id && this.checkLValSimple(e.id, dE), e.body = this.parseBlock(!1, void 0, a && !o), e.expression = !1, this.adaptDirectivePrologue(
      e.body.body), this.labels = l;
    }
    this.exitScope();
  };
  fe.isSimpleParamList = function(e) {
    for (var t = 0, r = e; t < r.length; t += 1) {
      var i = r[t];
      if (i.type !== "Identifier")
        return !1;
    }
    return !0;
  };
  fe.checkParams = function(e, t) {
    for (var r = /* @__PURE__ */ Object.create(null), i = 0, n = e.params; i < n.length; i += 1) {
      var o = n[i];
      this.checkLValInnerPattern(o, ih, t ? null : r);
    }
  };
  fe.parseExprList = function(e, t, r, i) {
    for (var n = [], o = !0; !this.eat(e); ) {
      if (o)
        o = !1;
      else if (this.expect(A.comma), t && this.afterTrailingComma(e))
        break;
      var a = void 0;
      r && this.type === A.comma ? a = null : this.type === A.ellipsis ? (a = this.parseSpread(i), i && this.type === A.comma && i.trailingComma <
      0 && (i.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, i), n.push(a);
    }
    return n;
  };
  fe.checkUnreserved = function(e) {
    var t = e.start, r = e.end, i = e.name;
    if (this.inGenerator && i === "yield" && this.raiseRecoverable(t, "Cannot use 'yield' as identifier inside a generator"), this.inAsync &&
    i === "await" && this.raiseRecoverable(t, "Cannot use 'await' as identifier inside an async function"), !(this.currentThisScope().flags &
    Aa) && i === "arguments" && this.raiseRecoverable(t, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && (i ===
    "arguments" || i === "await") && this.raise(t, "Cannot use " + i + " in class static initialization block"), this.keywords.test(i) && this.
    raise(t, "Unexpected keyword '" + i + "'"), !(this.options.ecmaVersion < 6 && this.input.slice(t, r).indexOf("\\") !== -1)) {
      var n = this.strict ? this.reservedWordsStrict : this.reservedWords;
      n.test(i) && (!this.inAsync && i === "await" && this.raiseRecoverable(t, "Cannot use keyword 'await' outside an async function"), this.
      raiseRecoverable(t, "The keyword '" + i + "' is reserved"));
    }
  };
  fe.parseIdent = function(e) {
    var t = this.parseIdentNode();
    return this.next(!!e), this.finishNode(t, "Identifier"), e || (this.checkUnreserved(t), t.name === "await" && !this.awaitIdentPos && (this.
    awaitIdentPos = t.start)), t;
  };
  fe.parseIdentNode = function() {
    var e = this.startNode();
    return this.type === A.name ? e.name = this.value : this.type.keyword ? (e.name = this.type.keyword, (e.name === "class" || e.name === "\
function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop(), this.type =
    A.name) : this.unexpected(), e;
  };
  fe.parsePrivateIdent = function() {
    var e = this.startNode();
    return this.type === A.privateId ? e.name = this.value : this.unexpected(), this.next(), this.finishNode(e, "PrivateIdentifier"), this.options.
    checkPrivateFields && (this.privateNameStack.length === 0 ? this.raise(e.start, "Private field '#" + e.name + "' must be declared in an \
enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(e)), e;
  };
  fe.parseYield = function(e) {
    this.yieldPos || (this.yieldPos = this.start);
    var t = this.startNode();
    return this.next(), this.type === A.semi || this.canInsertSemicolon() || this.type !== A.star && !this.type.startsExpr ? (t.delegate = !1,
    t.argument = null) : (t.delegate = this.eat(A.star), t.argument = this.parseMaybeAssign(e)), this.finishNode(t, "YieldExpression");
  };
  fe.parseAwait = function(e) {
    this.awaitPos || (this.awaitPos = this.start);
    var t = this.startNode();
    return this.next(), t.argument = this.parseMaybeUnary(null, !0, !1, e), this.finishNode(t, "AwaitExpression");
  };
  ba = nt.prototype;
  ba.raise = function(e, t) {
    var r = uE(this.input, e);
    t += " (" + r.line + ":" + r.column + ")", this.sourceFile && (t += " in " + this.sourceFile);
    var i = new SyntaxError(t);
    throw i.pos = e, i.loc = r, i.raisedAt = this.pos, i;
  };
  ba.raiseRecoverable = ba.raise;
  ba.curPosition = function() {
    if (this.options.locations)
      return new _s(this.curLine, this.pos - this.lineStart);
  };
  gi = nt.prototype, h9 = /* @__PURE__ */ s(function(t) {
    this.flags = t, this.var = [], this.lexical = [], this.functions = [];
  }, "Scope");
  gi.enterScope = function(e) {
    this.scopeStack.push(new h9(e));
  };
  gi.exitScope = function() {
    this.scopeStack.pop();
  };
  gi.treatFunctionsAsVarInScope = function(e) {
    return e.flags & wn || !this.inModule && e.flags & ks;
  };
  gi.declareName = function(e, t, r) {
    var i = !1;
    if (t === Gr) {
      var n = this.currentScope();
      i = n.lexical.indexOf(e) > -1 || n.functions.indexOf(e) > -1 || n.var.indexOf(e) > -1, n.lexical.push(e), this.inModule && n.flags & ks &&
      delete this.undefinedExports[e];
    } else if (t === fE) {
      var o = this.currentScope();
      o.lexical.push(e);
    } else if (t === hE) {
      var a = this.currentScope();
      this.treatFunctionsAsVar ? i = a.lexical.indexOf(e) > -1 : i = a.lexical.indexOf(e) > -1 || a.var.indexOf(e) > -1, a.functions.push(e);
    } else
      for (var u = this.scopeStack.length - 1; u >= 0; --u) {
        var l = this.scopeStack[u];
        if (l.lexical.indexOf(e) > -1 && !(l.flags & cE && l.lexical[0] === e) || !this.treatFunctionsAsVarInScope(l) && l.functions.indexOf(
        e) > -1) {
          i = !0;
          break;
        }
        if (l.var.push(e), this.inModule && l.flags & ks && delete this.undefinedExports[e], l.flags & Aa)
          break;
      }
    i && this.raiseRecoverable(r, "Identifier '" + e + "' has already been declared");
  };
  gi.checkLocalExport = function(e) {
    this.scopeStack[0].lexical.indexOf(e.name) === -1 && this.scopeStack[0].var.indexOf(e.name) === -1 && (this.undefinedExports[e.name] = e);
  };
  gi.currentScope = function() {
    return this.scopeStack[this.scopeStack.length - 1];
  };
  gi.currentVarScope = function() {
    for (var e = this.scopeStack.length - 1; ; e--) {
      var t = this.scopeStack[e];
      if (t.flags & (Aa | Ts | $i))
        return t;
    }
  };
  gi.currentThisScope = function() {
    for (var e = this.scopeStack.length - 1; ; e--) {
      var t = this.scopeStack[e];
      if (t.flags & (Aa | Ts | $i) && !(t.flags & th))
        return t;
    }
  };
  Fa = /* @__PURE__ */ s(function(t, r, i) {
    this.type = "", this.start = r, this.end = 0, t.options.locations && (this.loc = new Ca(t, i)), t.options.directSourceFile && (this.sourceFile =
    t.options.directSourceFile), t.options.ranges && (this.range = [r, 0]);
  }, "Node"), Bs = nt.prototype;
  Bs.startNode = function() {
    return new Fa(this, this.start, this.startLoc);
  };
  Bs.startNodeAt = function(e, t) {
    return new Fa(this, e, t);
  };
  s(DE, "finishNodeAt");
  Bs.finishNode = function(e, t) {
    return DE.call(this, e, t, this.lastTokEnd, this.lastTokEndLoc);
  };
  Bs.finishNodeAt = function(e, t, r, i) {
    return DE.call(this, e, t, r, i);
  };
  Bs.copyNode = function(e) {
    var t = new Fa(this, e.start, this.startLoc);
    for (var r in e)
      t[r] = e[r];
    return t;
  };
  f9 = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tu\
lu_Tigalari Tutg Unknown Zzzz", yE = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case\
_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF\
 Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Compo\
nent Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binar\
y_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowe\
rcase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indic\
ator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White\
_Space space XID_Continue XIDC XID_Start XIDS", xE = yE + " Extended_Pictographic", EE = xE, bE = EE + " EBase EComp EMod EPres ExtPict", vE =
  bE, d9 = vE, m9 = {
    9: yE,
    10: xE,
    11: EE,
    12: bE,
    13: vE,
    14: d9
  }, g9 = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequen\
ce RGI_Emoji", D9 = {
    9: "",
    10: "",
    11: "",
    12: "",
    13: "",
    14: g9
  }, tE = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Num\
ber Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_L\
etter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C \
Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z S\
pace_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", CE = "Adlam Adlm Ahom Anatol\
ian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks B\
opomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham\
 Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egypti\
an_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru\
 Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phl\
i Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khud\
awadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam \
Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hierog\
lyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Og\
ham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old\
_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahl\
avi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Som\
peng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri\
 Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wa\
ra Yi Yiii Zanabazar_Square Zanb", wE = CE + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian \
Sogo Sogdian Sogd", AE = wE + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", SE = AE + " Chorasmian Chrs Diak Div\
es_Akuru Khitan_Small_Script Kits Yezi Yezidi", FE = SE + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", y9 = FE + " " +
  f9, x9 = {
    9: CE,
    10: wE,
    11: AE,
    12: SE,
    13: FE,
    14: y9
  }, _E = {};
  s(E9, "buildUnicodeData");
  for (ya = 0, Gp = [9, 10, 11, 12, 13, 14]; ya < Gp.length; ya += 1)
    rE = Gp[ya], E9(rE);
  re = nt.prototype, va = /* @__PURE__ */ s(function(t, r) {
    this.parent = t, this.base = r || this;
  }, "BranchID");
  va.prototype.separatedFrom = /* @__PURE__ */ s(function(t) {
    for (var r = this; r; r = r.parent)
      for (var i = t; i; i = i.parent)
        if (r.base === i.base && r !== i)
          return !0;
    return !1;
  }, "separatedFrom");
  va.prototype.sibling = /* @__PURE__ */ s(function() {
    return new va(this.parent, this.base);
  }, "sibling");
  kr = /* @__PURE__ */ s(function(t) {
    this.parser = t, this.validFlags = "gim" + (t.options.ecmaVersion >= 6 ? "uy" : "") + (t.options.ecmaVersion >= 9 ? "s" : "") + (t.options.
    ecmaVersion >= 13 ? "d" : "") + (t.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = _E[t.options.ecmaVersion >= 14 ? 14 :
    t.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchV = !1, this.switchN = !1, this.
    pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference =
    0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;
  }, "RegExpValidationState");
  kr.prototype.reset = /* @__PURE__ */ s(function(t, r, i) {
    var n = i.indexOf("v") !== -1, o = i.indexOf("u") !== -1;
    this.start = t | 0, this.source = r + "", this.flags = i, n && this.parser.options.ecmaVersion >= 15 ? (this.switchU = !0, this.switchV =
    !0, this.switchN = !0) : (this.switchU = o && this.parser.options.ecmaVersion >= 6, this.switchV = !1, this.switchN = o && this.parser.options.
    ecmaVersion >= 9);
  }, "reset");
  kr.prototype.raise = /* @__PURE__ */ s(function(t) {
    this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + t);
  }, "raise");
  kr.prototype.at = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    var i = this.source, n = i.length;
    if (t >= n)
      return -1;
    var o = i.charCodeAt(t);
    if (!(r || this.switchU) || o <= 55295 || o >= 57344 || t + 1 >= n)
      return o;
    var a = i.charCodeAt(t + 1);
    return a >= 56320 && a <= 57343 ? (o << 10) + a - 56613888 : o;
  }, "at");
  kr.prototype.nextIndex = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    var i = this.source, n = i.length;
    if (t >= n)
      return n;
    var o = i.charCodeAt(t), a;
    return !(r || this.switchU) || o <= 55295 || o >= 57344 || t + 1 >= n || (a = i.charCodeAt(t + 1)) < 56320 || a > 57343 ? t + 1 : t + 2;
  }, "nextIndex");
  kr.prototype.current = /* @__PURE__ */ s(function(t) {
    return t === void 0 && (t = !1), this.at(this.pos, t);
  }, "current");
  kr.prototype.lookahead = /* @__PURE__ */ s(function(t) {
    return t === void 0 && (t = !1), this.at(this.nextIndex(this.pos, t), t);
  }, "lookahead");
  kr.prototype.advance = /* @__PURE__ */ s(function(t) {
    t === void 0 && (t = !1), this.pos = this.nextIndex(this.pos, t);
  }, "advance");
  kr.prototype.eat = /* @__PURE__ */ s(function(t, r) {
    return r === void 0 && (r = !1), this.current(r) === t ? (this.advance(r), !0) : !1;
  }, "eat");
  kr.prototype.eatChars = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    for (var i = this.pos, n = 0, o = t; n < o.length; n += 1) {
      var a = o[n], u = this.at(i, r);
      if (u === -1 || u !== a)
        return !1;
      i = this.nextIndex(i, r);
    }
    return this.pos = i, !0;
  }, "eatChars");
  re.validateRegExpFlags = function(e) {
    for (var t = e.validFlags, r = e.flags, i = !1, n = !1, o = 0; o < r.length; o++) {
      var a = r.charAt(o);
      t.indexOf(a) === -1 && this.raise(e.start, "Invalid regular expression flag"), r.indexOf(a, o + 1) > -1 && this.raise(e.start, "Duplic\
ate regular expression flag"), a === "u" && (i = !0), a === "v" && (n = !0);
    }
    this.options.ecmaVersion >= 15 && i && n && this.raise(e.start, "Invalid regular expression flag");
  };
  s(b9, "hasProp");
  re.validateRegExpPattern = function(e) {
    this.regexp_pattern(e), !e.switchN && this.options.ecmaVersion >= 9 && b9(e.groupNames) && (e.switchN = !0, this.regexp_pattern(e));
  };
  re.regexp_pattern = function(e) {
    e.pos = 0, e.lastIntValue = 0, e.lastStringValue = "", e.lastAssertionIsQuantifiable = !1, e.numCapturingParens = 0, e.maxBackReference =
    0, e.groupNames = /* @__PURE__ */ Object.create(null), e.backReferenceNames.length = 0, e.branchID = null, this.regexp_disjunction(e), e.
    pos !== e.source.length && (e.eat(
      41
      /* ) */
    ) && e.raise("Unmatched ')'"), (e.eat(
      93
      /* ] */
    ) || e.eat(
      125
      /* } */
    )) && e.raise("Lone quantifier brackets")), e.maxBackReference > e.numCapturingParens && e.raise("Invalid escape");
    for (var t = 0, r = e.backReferenceNames; t < r.length; t += 1) {
      var i = r[t];
      e.groupNames[i] || e.raise("Invalid named capture referenced");
    }
  };
  re.regexp_disjunction = function(e) {
    var t = this.options.ecmaVersion >= 16;
    for (t && (e.branchID = new va(e.branchID, null)), this.regexp_alternative(e); e.eat(
      124
      /* | */
    ); )
      t && (e.branchID = e.branchID.sibling()), this.regexp_alternative(e);
    t && (e.branchID = e.branchID.parent), this.regexp_eatQuantifier(e, !0) && e.raise("Nothing to repeat"), e.eat(
      123
      /* { */
    ) && e.raise("Lone quantifier brackets");
  };
  re.regexp_alternative = function(e) {
    for (; e.pos < e.source.length && this.regexp_eatTerm(e); )
      ;
  };
  re.regexp_eatTerm = function(e) {
    return this.regexp_eatAssertion(e) ? (e.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(e) && e.switchU && e.raise("Invalid qua\
ntifier"), !0) : (e.switchU ? this.regexp_eatAtom(e) : this.regexp_eatExtendedAtom(e)) ? (this.regexp_eatQuantifier(e), !0) : !1;
  };
  re.regexp_eatAssertion = function(e) {
    var t = e.pos;
    if (e.lastAssertionIsQuantifiable = !1, e.eat(
      94
      /* ^ */
    ) || e.eat(
      36
      /* $ */
    ))
      return !0;
    if (e.eat(
      92
      /* \ */
    )) {
      if (e.eat(
        66
        /* B */
      ) || e.eat(
        98
        /* b */
      ))
        return !0;
      e.pos = t;
    }
    if (e.eat(
      40
      /* ( */
    ) && e.eat(
      63
      /* ? */
    )) {
      var r = !1;
      if (this.options.ecmaVersion >= 9 && (r = e.eat(
        60
        /* < */
      )), e.eat(
        61
        /* = */
      ) || e.eat(
        33
        /* ! */
      ))
        return this.regexp_disjunction(e), e.eat(
          41
          /* ) */
        ) || e.raise("Unterminated group"), e.lastAssertionIsQuantifiable = !r, !0;
    }
    return e.pos = t, !1;
  };
  re.regexp_eatQuantifier = function(e, t) {
    return t === void 0 && (t = !1), this.regexp_eatQuantifierPrefix(e, t) ? (e.eat(
      63
      /* ? */
    ), !0) : !1;
  };
  re.regexp_eatQuantifierPrefix = function(e, t) {
    return e.eat(
      42
      /* * */
    ) || e.eat(
      43
      /* + */
    ) || e.eat(
      63
      /* ? */
    ) || this.regexp_eatBracedQuantifier(e, t);
  };
  re.regexp_eatBracedQuantifier = function(e, t) {
    var r = e.pos;
    if (e.eat(
      123
      /* { */
    )) {
      var i = 0, n = -1;
      if (this.regexp_eatDecimalDigits(e) && (i = e.lastIntValue, e.eat(
        44
        /* , */
      ) && this.regexp_eatDecimalDigits(e) && (n = e.lastIntValue), e.eat(
        125
        /* } */
      )))
        return n !== -1 && n < i && !t && e.raise("numbers out of order in {} quantifier"), !0;
      e.switchU && !t && e.raise("Incomplete quantifier"), e.pos = r;
    }
    return !1;
  };
  re.regexp_eatAtom = function(e) {
    return this.regexp_eatPatternCharacters(e) || e.eat(
      46
      /* . */
    ) || this.regexp_eatReverseSolidusAtomEscape(e) || this.regexp_eatCharacterClass(e) || this.regexp_eatUncapturingGroup(e) || this.regexp_eatCapturingGroup(
    e);
  };
  re.regexp_eatReverseSolidusAtomEscape = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    )) {
      if (this.regexp_eatAtomEscape(e))
        return !0;
      e.pos = t;
    }
    return !1;
  };
  re.regexp_eatUncapturingGroup = function(e) {
    var t = e.pos;
    if (e.eat(
      40
      /* ( */
    )) {
      if (e.eat(
        63
        /* ? */
      )) {
        if (this.options.ecmaVersion >= 16) {
          var r = this.regexp_eatModifiers(e), i = e.eat(
            45
            /* - */
          );
          if (r || i) {
            for (var n = 0; n < r.length; n++) {
              var o = r.charAt(n);
              r.indexOf(o, n + 1) > -1 && e.raise("Duplicate regular expression modifiers");
            }
            if (i) {
              var a = this.regexp_eatModifiers(e);
              !r && !a && e.current() === 58 && e.raise("Invalid regular expression modifiers");
              for (var u = 0; u < a.length; u++) {
                var l = a.charAt(u);
                (a.indexOf(l, u + 1) > -1 || r.indexOf(l) > -1) && e.raise("Duplicate regular expression modifiers");
              }
            }
          }
        }
        if (e.eat(
          58
          /* : */
        )) {
          if (this.regexp_disjunction(e), e.eat(
            41
            /* ) */
          ))
            return !0;
          e.raise("Unterminated group");
        }
      }
      e.pos = t;
    }
    return !1;
  };
  re.regexp_eatCapturingGroup = function(e) {
    if (e.eat(
      40
      /* ( */
    )) {
      if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(e) : e.current() === 63 && e.raise("Invalid group"), this.regexp_disjunction(
      e), e.eat(
        41
        /* ) */
      ))
        return e.numCapturingParens += 1, !0;
      e.raise("Unterminated group");
    }
    return !1;
  };
  re.regexp_eatModifiers = function(e) {
    for (var t = "", r = 0; (r = e.current()) !== -1 && v9(r); )
      t += Hr(r), e.advance();
    return t;
  };
  s(v9, "isRegularExpressionModifier");
  re.regexp_eatExtendedAtom = function(e) {
    return e.eat(
      46
      /* . */
    ) || this.regexp_eatReverseSolidusAtomEscape(e) || this.regexp_eatCharacterClass(e) || this.regexp_eatUncapturingGroup(e) || this.regexp_eatCapturingGroup(
    e) || this.regexp_eatInvalidBracedQuantifier(e) || this.regexp_eatExtendedPatternCharacter(e);
  };
  re.regexp_eatInvalidBracedQuantifier = function(e) {
    return this.regexp_eatBracedQuantifier(e, !0) && e.raise("Nothing to repeat"), !1;
  };
  re.regexp_eatSyntaxCharacter = function(e) {
    var t = e.current();
    return kE(t) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  s(kE, "isSyntaxCharacter");
  re.regexp_eatPatternCharacters = function(e) {
    for (var t = e.pos, r = 0; (r = e.current()) !== -1 && !kE(r); )
      e.advance();
    return e.pos !== t;
  };
  re.regexp_eatExtendedPatternCharacter = function(e) {
    var t = e.current();
    return t !== -1 && t !== 36 && !(t >= 40 && t <= 43) && t !== 46 && t !== 63 && t !== 91 && t !== 94 && t !== 124 ? (e.advance(), !0) : !1;
  };
  re.regexp_groupSpecifier = function(e) {
    if (e.eat(
      63
      /* ? */
    )) {
      this.regexp_eatGroupName(e) || e.raise("Invalid group");
      var t = this.options.ecmaVersion >= 16, r = e.groupNames[e.lastStringValue];
      if (r)
        if (t)
          for (var i = 0, n = r; i < n.length; i += 1) {
            var o = n[i];
            o.separatedFrom(e.branchID) || e.raise("Duplicate capture group name");
          }
        else
          e.raise("Duplicate capture group name");
      t ? (r || (e.groupNames[e.lastStringValue] = [])).push(e.branchID) : e.groupNames[e.lastStringValue] = !0;
    }
  };
  re.regexp_eatGroupName = function(e) {
    if (e.lastStringValue = "", e.eat(
      60
      /* < */
    )) {
      if (this.regexp_eatRegExpIdentifierName(e) && e.eat(
        62
        /* > */
      ))
        return !0;
      e.raise("Invalid capture group name");
    }
    return !1;
  };
  re.regexp_eatRegExpIdentifierName = function(e) {
    if (e.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(e)) {
      for (e.lastStringValue += Hr(e.lastIntValue); this.regexp_eatRegExpIdentifierPart(e); )
        e.lastStringValue += Hr(e.lastIntValue);
      return !0;
    }
    return !1;
  };
  re.regexp_eatRegExpIdentifierStart = function(e) {
    var t = e.pos, r = this.options.ecmaVersion >= 11, i = e.current(r);
    return e.advance(r), i === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e, r) && (i = e.lastIntValue), C9(i) ? (e.lastIntValue = i, !0) :
    (e.pos = t, !1);
  };
  s(C9, "isRegExpIdentifierStart");
  re.regexp_eatRegExpIdentifierPart = function(e) {
    var t = e.pos, r = this.options.ecmaVersion >= 11, i = e.current(r);
    return e.advance(r), i === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e, r) && (i = e.lastIntValue), w9(i) ? (e.lastIntValue = i, !0) :
    (e.pos = t, !1);
  };
  s(w9, "isRegExpIdentifierPart");
  re.regexp_eatAtomEscape = function(e) {
    return this.regexp_eatBackReference(e) || this.regexp_eatCharacterClassEscape(e) || this.regexp_eatCharacterEscape(e) || e.switchN && this.
    regexp_eatKGroupName(e) ? !0 : (e.switchU && (e.current() === 99 && e.raise("Invalid unicode escape"), e.raise("Invalid escape")), !1);
  };
  re.regexp_eatBackReference = function(e) {
    var t = e.pos;
    if (this.regexp_eatDecimalEscape(e)) {
      var r = e.lastIntValue;
      if (e.switchU)
        return r > e.maxBackReference && (e.maxBackReference = r), !0;
      if (r <= e.numCapturingParens)
        return !0;
      e.pos = t;
    }
    return !1;
  };
  re.regexp_eatKGroupName = function(e) {
    if (e.eat(
      107
      /* k */
    )) {
      if (this.regexp_eatGroupName(e))
        return e.backReferenceNames.push(e.lastStringValue), !0;
      e.raise("Invalid named reference");
    }
    return !1;
  };
  re.regexp_eatCharacterEscape = function(e) {
    return this.regexp_eatControlEscape(e) || this.regexp_eatCControlLetter(e) || this.regexp_eatZero(e) || this.regexp_eatHexEscapeSequence(
    e) || this.regexp_eatRegExpUnicodeEscapeSequence(e, !1) || !e.switchU && this.regexp_eatLegacyOctalEscapeSequence(e) || this.regexp_eatIdentityEscape(
    e);
  };
  re.regexp_eatCControlLetter = function(e) {
    var t = e.pos;
    if (e.eat(
      99
      /* c */
    )) {
      if (this.regexp_eatControlLetter(e))
        return !0;
      e.pos = t;
    }
    return !1;
  };
  re.regexp_eatZero = function(e) {
    return e.current() === 48 && !_a(e.lookahead()) ? (e.lastIntValue = 0, e.advance(), !0) : !1;
  };
  re.regexp_eatControlEscape = function(e) {
    var t = e.current();
    return t === 116 ? (e.lastIntValue = 9, e.advance(), !0) : t === 110 ? (e.lastIntValue = 10, e.advance(), !0) : t === 118 ? (e.lastIntValue =
    11, e.advance(), !0) : t === 102 ? (e.lastIntValue = 12, e.advance(), !0) : t === 114 ? (e.lastIntValue = 13, e.advance(), !0) : !1;
  };
  re.regexp_eatControlLetter = function(e) {
    var t = e.current();
    return TE(t) ? (e.lastIntValue = t % 32, e.advance(), !0) : !1;
  };
  s(TE, "isControlLetter");
  re.regexp_eatRegExpUnicodeEscapeSequence = function(e, t) {
    t === void 0 && (t = !1);
    var r = e.pos, i = t || e.switchU;
    if (e.eat(
      117
      /* u */
    )) {
      if (this.regexp_eatFixedHexDigits(e, 4)) {
        var n = e.lastIntValue;
        if (i && n >= 55296 && n <= 56319) {
          var o = e.pos;
          if (e.eat(
            92
            /* \ */
          ) && e.eat(
            117
            /* u */
          ) && this.regexp_eatFixedHexDigits(e, 4)) {
            var a = e.lastIntValue;
            if (a >= 56320 && a <= 57343)
              return e.lastIntValue = (n - 55296) * 1024 + (a - 56320) + 65536, !0;
          }
          e.pos = o, e.lastIntValue = n;
        }
        return !0;
      }
      if (i && e.eat(
        123
        /* { */
      ) && this.regexp_eatHexDigits(e) && e.eat(
        125
        /* } */
      ) && A9(e.lastIntValue))
        return !0;
      i && e.raise("Invalid unicode escape"), e.pos = r;
    }
    return !1;
  };
  s(A9, "isValidUnicode");
  re.regexp_eatIdentityEscape = function(e) {
    if (e.switchU)
      return this.regexp_eatSyntaxCharacter(e) ? !0 : e.eat(
        47
        /* / */
      ) ? (e.lastIntValue = 47, !0) : !1;
    var t = e.current();
    return t !== 99 && (!e.switchN || t !== 107) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  re.regexp_eatDecimalEscape = function(e) {
    e.lastIntValue = 0;
    var t = e.current();
    if (t >= 49 && t <= 57) {
      do
        e.lastIntValue = 10 * e.lastIntValue + (t - 48), e.advance();
      while ((t = e.current()) >= 48 && t <= 57);
      return !0;
    }
    return !1;
  };
  BE = 0, Jr = 1, Zt = 2;
  re.regexp_eatCharacterClassEscape = function(e) {
    var t = e.current();
    if (S9(t))
      return e.lastIntValue = -1, e.advance(), Jr;
    var r = !1;
    if (e.switchU && this.options.ecmaVersion >= 9 && ((r = t === 80) || t === 112)) {
      e.lastIntValue = -1, e.advance();
      var i;
      if (e.eat(
        123
        /* { */
      ) && (i = this.regexp_eatUnicodePropertyValueExpression(e)) && e.eat(
        125
        /* } */
      ))
        return r && i === Zt && e.raise("Invalid property name"), i;
      e.raise("Invalid property name");
    }
    return BE;
  };
  s(S9, "isCharacterClassEscape");
  re.regexp_eatUnicodePropertyValueExpression = function(e) {
    var t = e.pos;
    if (this.regexp_eatUnicodePropertyName(e) && e.eat(
      61
      /* = */
    )) {
      var r = e.lastStringValue;
      if (this.regexp_eatUnicodePropertyValue(e)) {
        var i = e.lastStringValue;
        return this.regexp_validateUnicodePropertyNameAndValue(e, r, i), Jr;
      }
    }
    if (e.pos = t, this.regexp_eatLoneUnicodePropertyNameOrValue(e)) {
      var n = e.lastStringValue;
      return this.regexp_validateUnicodePropertyNameOrValue(e, n);
    }
    return BE;
  };
  re.regexp_validateUnicodePropertyNameAndValue = function(e, t, r) {
    Cn(e.unicodeProperties.nonBinary, t) || e.raise("Invalid property name"), e.unicodeProperties.nonBinary[t].test(r) || e.raise("Invalid p\
roperty value");
  };
  re.regexp_validateUnicodePropertyNameOrValue = function(e, t) {
    if (e.unicodeProperties.binary.test(t))
      return Jr;
    if (e.switchV && e.unicodeProperties.binaryOfStrings.test(t))
      return Zt;
    e.raise("Invalid property name");
  };
  re.regexp_eatUnicodePropertyName = function(e) {
    var t = 0;
    for (e.lastStringValue = ""; IE(t = e.current()); )
      e.lastStringValue += Hr(t), e.advance();
    return e.lastStringValue !== "";
  };
  s(IE, "isUnicodePropertyNameCharacter");
  re.regexp_eatUnicodePropertyValue = function(e) {
    var t = 0;
    for (e.lastStringValue = ""; F9(t = e.current()); )
      e.lastStringValue += Hr(t), e.advance();
    return e.lastStringValue !== "";
  };
  s(F9, "isUnicodePropertyValueCharacter");
  re.regexp_eatLoneUnicodePropertyNameOrValue = function(e) {
    return this.regexp_eatUnicodePropertyValue(e);
  };
  re.regexp_eatCharacterClass = function(e) {
    if (e.eat(
      91
      /* [ */
    )) {
      var t = e.eat(
        94
        /* ^ */
      ), r = this.regexp_classContents(e);
      return e.eat(
        93
        /* ] */
      ) || e.raise("Unterminated character class"), t && r === Zt && e.raise("Negated character class may contain strings"), !0;
    }
    return !1;
  };
  re.regexp_classContents = function(e) {
    return e.current() === 93 ? Jr : e.switchV ? this.regexp_classSetExpression(e) : (this.regexp_nonEmptyClassRanges(e), Jr);
  };
  re.regexp_nonEmptyClassRanges = function(e) {
    for (; this.regexp_eatClassAtom(e); ) {
      var t = e.lastIntValue;
      if (e.eat(
        45
        /* - */
      ) && this.regexp_eatClassAtom(e)) {
        var r = e.lastIntValue;
        e.switchU && (t === -1 || r === -1) && e.raise("Invalid character class"), t !== -1 && r !== -1 && t > r && e.raise("Range out of or\
der in character class");
      }
    }
  };
  re.regexp_eatClassAtom = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    )) {
      if (this.regexp_eatClassEscape(e))
        return !0;
      if (e.switchU) {
        var r = e.current();
        (r === 99 || RE(r)) && e.raise("Invalid class escape"), e.raise("Invalid escape");
      }
      e.pos = t;
    }
    var i = e.current();
    return i !== 93 ? (e.lastIntValue = i, e.advance(), !0) : !1;
  };
  re.regexp_eatClassEscape = function(e) {
    var t = e.pos;
    if (e.eat(
      98
      /* b */
    ))
      return e.lastIntValue = 8, !0;
    if (e.switchU && e.eat(
      45
      /* - */
    ))
      return e.lastIntValue = 45, !0;
    if (!e.switchU && e.eat(
      99
      /* c */
    )) {
      if (this.regexp_eatClassControlLetter(e))
        return !0;
      e.pos = t;
    }
    return this.regexp_eatCharacterClassEscape(e) || this.regexp_eatCharacterEscape(e);
  };
  re.regexp_classSetExpression = function(e) {
    var t = Jr, r;
    if (!this.regexp_eatClassSetRange(e)) if (r = this.regexp_eatClassSetOperand(e)) {
      r === Zt && (t = Zt);
      for (var i = e.pos; e.eatChars(
        [38, 38]
        /* && */
      ); ) {
        if (e.current() !== 38 && (r = this.regexp_eatClassSetOperand(e))) {
          r !== Zt && (t = Jr);
          continue;
        }
        e.raise("Invalid character in character class");
      }
      if (i !== e.pos)
        return t;
      for (; e.eatChars(
        [45, 45]
        /* -- */
      ); )
        this.regexp_eatClassSetOperand(e) || e.raise("Invalid character in character class");
      if (i !== e.pos)
        return t;
    } else
      e.raise("Invalid character in character class");
    for (; ; )
      if (!this.regexp_eatClassSetRange(e)) {
        if (r = this.regexp_eatClassSetOperand(e), !r)
          return t;
        r === Zt && (t = Zt);
      }
  };
  re.regexp_eatClassSetRange = function(e) {
    var t = e.pos;
    if (this.regexp_eatClassSetCharacter(e)) {
      var r = e.lastIntValue;
      if (e.eat(
        45
        /* - */
      ) && this.regexp_eatClassSetCharacter(e)) {
        var i = e.lastIntValue;
        return r !== -1 && i !== -1 && r > i && e.raise("Range out of order in character class"), !0;
      }
      e.pos = t;
    }
    return !1;
  };
  re.regexp_eatClassSetOperand = function(e) {
    return this.regexp_eatClassSetCharacter(e) ? Jr : this.regexp_eatClassStringDisjunction(e) || this.regexp_eatNestedClass(e);
  };
  re.regexp_eatNestedClass = function(e) {
    var t = e.pos;
    if (e.eat(
      91
      /* [ */
    )) {
      var r = e.eat(
        94
        /* ^ */
      ), i = this.regexp_classContents(e);
      if (e.eat(
        93
        /* ] */
      ))
        return r && i === Zt && e.raise("Negated character class may contain strings"), i;
      e.pos = t;
    }
    if (e.eat(
      92
      /* \ */
    )) {
      var n = this.regexp_eatCharacterClassEscape(e);
      if (n)
        return n;
      e.pos = t;
    }
    return null;
  };
  re.regexp_eatClassStringDisjunction = function(e) {
    var t = e.pos;
    if (e.eatChars(
      [92, 113]
      /* \q */
    )) {
      if (e.eat(
        123
        /* { */
      )) {
        var r = this.regexp_classStringDisjunctionContents(e);
        if (e.eat(
          125
          /* } */
        ))
          return r;
      } else
        e.raise("Invalid escape");
      e.pos = t;
    }
    return null;
  };
  re.regexp_classStringDisjunctionContents = function(e) {
    for (var t = this.regexp_classString(e); e.eat(
      124
      /* | */
    ); )
      this.regexp_classString(e) === Zt && (t = Zt);
    return t;
  };
  re.regexp_classString = function(e) {
    for (var t = 0; this.regexp_eatClassSetCharacter(e); )
      t++;
    return t === 1 ? Jr : Zt;
  };
  re.regexp_eatClassSetCharacter = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    ))
      return this.regexp_eatCharacterEscape(e) || this.regexp_eatClassSetReservedPunctuator(e) ? !0 : e.eat(
        98
        /* b */
      ) ? (e.lastIntValue = 8, !0) : (e.pos = t, !1);
    var r = e.current();
    return r < 0 || r === e.lookahead() && _9(r) || k9(r) ? !1 : (e.advance(), e.lastIntValue = r, !0);
  };
  s(_9, "isClassSetReservedDoublePunctuatorCharacter");
  s(k9, "isClassSetSyntaxCharacter");
  re.regexp_eatClassSetReservedPunctuator = function(e) {
    var t = e.current();
    return T9(t) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  s(T9, "isClassSetReservedPunctuator");
  re.regexp_eatClassControlLetter = function(e) {
    var t = e.current();
    return _a(t) || t === 95 ? (e.lastIntValue = t % 32, e.advance(), !0) : !1;
  };
  re.regexp_eatHexEscapeSequence = function(e) {
    var t = e.pos;
    if (e.eat(
      120
      /* x */
    )) {
      if (this.regexp_eatFixedHexDigits(e, 2))
        return !0;
      e.switchU && e.raise("Invalid escape"), e.pos = t;
    }
    return !1;
  };
  re.regexp_eatDecimalDigits = function(e) {
    var t = e.pos, r = 0;
    for (e.lastIntValue = 0; _a(r = e.current()); )
      e.lastIntValue = 10 * e.lastIntValue + (r - 48), e.advance();
    return e.pos !== t;
  };
  s(_a, "isDecimalDigit");
  re.regexp_eatHexDigits = function(e) {
    var t = e.pos, r = 0;
    for (e.lastIntValue = 0; PE(r = e.current()); )
      e.lastIntValue = 16 * e.lastIntValue + OE(r), e.advance();
    return e.pos !== t;
  };
  s(PE, "isHexDigit");
  s(OE, "hexToInt");
  re.regexp_eatLegacyOctalEscapeSequence = function(e) {
    if (this.regexp_eatOctalDigit(e)) {
      var t = e.lastIntValue;
      if (this.regexp_eatOctalDigit(e)) {
        var r = e.lastIntValue;
        t <= 3 && this.regexp_eatOctalDigit(e) ? e.lastIntValue = t * 64 + r * 8 + e.lastIntValue : e.lastIntValue = t * 8 + r;
      } else
        e.lastIntValue = t;
      return !0;
    }
    return !1;
  };
  re.regexp_eatOctalDigit = function(e) {
    var t = e.current();
    return RE(t) ? (e.lastIntValue = t - 48, e.advance(), !0) : (e.lastIntValue = 0, !1);
  };
  s(RE, "isOctalDigit");
  re.regexp_eatFixedHexDigits = function(e, t) {
    var r = e.pos;
    e.lastIntValue = 0;
    for (var i = 0; i < t; ++i) {
      var n = e.current();
      if (!PE(n))
        return e.pos = r, !1;
      e.lastIntValue = 16 * e.lastIntValue + OE(n), e.advance();
    }
    return !0;
  };
  sh = /* @__PURE__ */ s(function(t) {
    this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, t.options.locations && (this.loc = new Ca(t, t.startLoc,
    t.endLoc)), t.options.ranges && (this.range = [t.start, t.end]);
  }, "Token"), Ae = nt.prototype;
  Ae.next = function(e) {
    !e && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.
    options.onToken && this.options.onToken(new sh(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.
    endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
  };
  Ae.getToken = function() {
    return this.next(), new sh(this);
  };
  typeof Symbol < "u" && (Ae[Symbol.iterator] = function() {
    var e = this;
    return {
      next: /* @__PURE__ */ s(function() {
        var t = e.getToken();
        return {
          done: t.type === A.eof,
          value: t
        };
      }, "next")
    };
  });
  Ae.nextToken = function() {
    var e = this.curContext();
    if ((!e || !e.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()),
    this.pos >= this.input.length)
      return this.finishToken(A.eof);
    if (e.override)
      return e.override(this);
    this.readToken(this.fullCharCodeAtPos());
  };
  Ae.readToken = function(e) {
    return zr(e, this.options.ecmaVersion >= 6) || e === 92 ? this.readWord() : this.getTokenFromCode(e);
  };
  Ae.fullCharCodeAtPos = function() {
    var e = this.input.charCodeAt(this.pos);
    if (e <= 55295 || e >= 56320)
      return e;
    var t = this.input.charCodeAt(this.pos + 1);
    return t <= 56319 || t >= 57344 ? e : (e << 10) + t - 56613888;
  };
  Ae.skipBlockComment = function() {
    var e = this.options.onComment && this.curPosition(), t = this.pos, r = this.input.indexOf("*/", this.pos += 2);
    if (r === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = r + 2, this.options.locations)
      for (var i = void 0, n = t; (i = sE(this.input, n, this.pos)) > -1; )
        ++this.curLine, n = this.lineStart = i;
    this.options.onComment && this.options.onComment(
      !0,
      this.input.slice(t + 2, r),
      t,
      this.pos,
      e,
      this.curPosition()
    );
  };
  Ae.skipLineComment = function(e) {
    for (var t = this.pos, r = this.options.onComment && this.curPosition(), i = this.input.charCodeAt(this.pos += e); this.pos < this.input.
    length && !vn(i); )
      i = this.input.charCodeAt(++this.pos);
    this.options.onComment && this.options.onComment(
      !1,
      this.input.slice(t + e, this.pos),
      t,
      this.pos,
      r,
      this.curPosition()
    );
  };
  Ae.skipSpace = function() {
    e: for (; this.pos < this.input.length; ) {
      var e = this.input.charCodeAt(this.pos);
      switch (e) {
        case 32:
        case 160:
          ++this.pos;
          break;
        case 13:
          this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;
        case 10:
        case 8232:
        case 8233:
          ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
          break;
        case 47:
          switch (this.input.charCodeAt(this.pos + 1)) {
            case 42:
              this.skipBlockComment();
              break;
            case 47:
              this.skipLineComment(2);
              break;
            default:
              break e;
          }
          break;
        default:
          if (e > 8 && e < 14 || e >= 5760 && oE.test(String.fromCharCode(e)))
            ++this.pos;
          else
            break e;
      }
    }
  };
  Ae.finishToken = function(e, t) {
    this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
    var r = this.type;
    this.type = e, this.value = t, this.updateContext(r);
  };
  Ae.readToken_dot = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    if (e >= 48 && e <= 57)
      return this.readNumber(!0);
    var t = this.input.charCodeAt(this.pos + 2);
    return this.options.ecmaVersion >= 6 && e === 46 && t === 46 ? (this.pos += 3, this.finishToken(A.ellipsis)) : (++this.pos, this.finishToken(
    A.dot));
  };
  Ae.readToken_slash = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    return this.exprAllowed ? (++this.pos, this.readRegexp()) : e === 61 ? this.finishOp(A.assign, 2) : this.finishOp(A.slash, 1);
  };
  Ae.readToken_mult_modulo_exp = function(e) {
    var t = this.input.charCodeAt(this.pos + 1), r = 1, i = e === 42 ? A.star : A.modulo;
    return this.options.ecmaVersion >= 7 && e === 42 && t === 42 && (++r, i = A.starstar, t = this.input.charCodeAt(this.pos + 2)), t === 61 ?
    this.finishOp(A.assign, r + 1) : this.finishOp(i, r);
  };
  Ae.readToken_pipe_amp = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    if (t === e) {
      if (this.options.ecmaVersion >= 12) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r === 61)
          return this.finishOp(A.assign, 3);
      }
      return this.finishOp(e === 124 ? A.logicalOR : A.logicalAND, 2);
    }
    return t === 61 ? this.finishOp(A.assign, 2) : this.finishOp(e === 124 ? A.bitwiseOR : A.bitwiseAND, 1);
  };
  Ae.readToken_caret = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    return e === 61 ? this.finishOp(A.assign, 2) : this.finishOp(A.bitwiseXOR, 1);
  };
  Ae.readToken_plus_min = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    return t === e ? t === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || er.test(this.input.
    slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(A.incDec, 2) : t === 61 ?
    this.finishOp(A.assign, 2) : this.finishOp(A.plusMin, 1);
  };
  Ae.readToken_lt_gt = function(e) {
    var t = this.input.charCodeAt(this.pos + 1), r = 1;
    return t === e ? (r = e === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + r) === 61 ? this.
    finishOp(A.assign, r + 1) : this.finishOp(A.bitShift, r)) : t === 33 && e === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) ===
    45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (t === 61 && (r = 2),
    this.finishOp(A.relational, r));
  };
  Ae.readToken_eq_excl = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    return t === 61 ? this.finishOp(A.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : e === 61 && t === 62 && this.options.ecmaVersion >=
    6 ? (this.pos += 2, this.finishToken(A.arrow)) : this.finishOp(e === 61 ? A.eq : A.prefix, 1);
  };
  Ae.readToken_question = function() {
    var e = this.options.ecmaVersion;
    if (e >= 11) {
      var t = this.input.charCodeAt(this.pos + 1);
      if (t === 46) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r < 48 || r > 57)
          return this.finishOp(A.questionDot, 2);
      }
      if (t === 63) {
        if (e >= 12) {
          var i = this.input.charCodeAt(this.pos + 2);
          if (i === 61)
            return this.finishOp(A.assign, 3);
        }
        return this.finishOp(A.coalesce, 2);
      }
    }
    return this.finishOp(A.question, 1);
  };
  Ae.readToken_numberSign = function() {
    var e = this.options.ecmaVersion, t = 35;
    if (e >= 13 && (++this.pos, t = this.fullCharCodeAtPos(), zr(t, !0) || t === 92))
      return this.finishToken(A.privateId, this.readWord1());
    this.raise(this.pos, "Unexpected character '" + Hr(t) + "'");
  };
  Ae.getTokenFromCode = function(e) {
    switch (e) {
      // The interpretation of a dot depends on whether it is followed
      // by a digit or another two dots.
      case 46:
        return this.readToken_dot();
      // Punctuation tokens.
      case 40:
        return ++this.pos, this.finishToken(A.parenL);
      case 41:
        return ++this.pos, this.finishToken(A.parenR);
      case 59:
        return ++this.pos, this.finishToken(A.semi);
      case 44:
        return ++this.pos, this.finishToken(A.comma);
      case 91:
        return ++this.pos, this.finishToken(A.bracketL);
      case 93:
        return ++this.pos, this.finishToken(A.bracketR);
      case 123:
        return ++this.pos, this.finishToken(A.braceL);
      case 125:
        return ++this.pos, this.finishToken(A.braceR);
      case 58:
        return ++this.pos, this.finishToken(A.colon);
      case 96:
        if (this.options.ecmaVersion < 6)
          break;
        return ++this.pos, this.finishToken(A.backQuote);
      case 48:
        var t = this.input.charCodeAt(this.pos + 1);
        if (t === 120 || t === 88)
          return this.readRadixNumber(16);
        if (this.options.ecmaVersion >= 6) {
          if (t === 111 || t === 79)
            return this.readRadixNumber(8);
          if (t === 98 || t === 66)
            return this.readRadixNumber(2);
        }
      // Anything else beginning with a digit is an integer, octal
      // number, or float.
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return this.readNumber(!1);
      // Quotes produce strings.
      case 34:
      case 39:
        return this.readString(e);
      // Operators are parsed inline in tiny state machines. '=' (61) is
      // often referred to. `finishOp` simply skips the amount of
      // characters it is given as second argument, and returns a token
      // of the type given by its first argument.
      case 47:
        return this.readToken_slash();
      case 37:
      case 42:
        return this.readToken_mult_modulo_exp(e);
      case 124:
      case 38:
        return this.readToken_pipe_amp(e);
      case 94:
        return this.readToken_caret();
      case 43:
      case 45:
        return this.readToken_plus_min(e);
      case 60:
      case 62:
        return this.readToken_lt_gt(e);
      case 61:
      case 33:
        return this.readToken_eq_excl(e);
      case 63:
        return this.readToken_question();
      case 126:
        return this.finishOp(A.prefix, 1);
      case 35:
        return this.readToken_numberSign();
    }
    this.raise(this.pos, "Unexpected character '" + Hr(e) + "'");
  };
  Ae.finishOp = function(e, t) {
    var r = this.input.slice(this.pos, this.pos + t);
    return this.pos += t, this.finishToken(e, r);
  };
  Ae.readRegexp = function() {
    for (var e, t, r = this.pos; ; ) {
      this.pos >= this.input.length && this.raise(r, "Unterminated regular expression");
      var i = this.input.charAt(this.pos);
      if (er.test(i) && this.raise(r, "Unterminated regular expression"), e)
        e = !1;
      else {
        if (i === "[")
          t = !0;
        else if (i === "]" && t)
          t = !1;
        else if (i === "/" && !t)
          break;
        e = i === "\\";
      }
      ++this.pos;
    }
    var n = this.input.slice(r, this.pos);
    ++this.pos;
    var o = this.pos, a = this.readWord1();
    this.containsEsc && this.unexpected(o);
    var u = this.regexpState || (this.regexpState = new kr(this));
    u.reset(r, n, a), this.validateRegExpFlags(u), this.validateRegExpPattern(u);
    var l = null;
    try {
      l = new RegExp(n, a);
    } catch {
    }
    return this.finishToken(A.regexp, { pattern: n, flags: a, value: l });
  };
  Ae.readInt = function(e, t, r) {
    for (var i = this.options.ecmaVersion >= 12 && t === void 0, n = r && this.input.charCodeAt(this.pos) === 48, o = this.pos, a = 0, u = 0,
    l = 0, c = t ?? 1 / 0; l < c; ++l, ++this.pos) {
      var p = this.input.charCodeAt(this.pos), h = void 0;
      if (i && p === 95) {
        n && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), u === 95 && this.raiseRecoverable(
        this.pos, "Numeric separator must be exactly one underscore"), l === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not \
allowed at the first of digits"), u = p;
        continue;
      }
      if (p >= 97 ? h = p - 97 + 10 : p >= 65 ? h = p - 65 + 10 : p >= 48 && p <= 57 ? h = p - 48 : h = 1 / 0, h >= e)
        break;
      u = p, a = a * e + h;
    }
    return i && u === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === o ||
    t != null && this.pos - o !== t ? null : a;
  };
  s(B9, "stringToNumber");
  s(NE, "stringToBigInt");
  Ae.readRadixNumber = function(e) {
    var t = this.pos;
    this.pos += 2;
    var r = this.readInt(e);
    return r == null && this.raise(this.start + 2, "Expected number in radix " + e), this.options.ecmaVersion >= 11 && this.input.charCodeAt(
    this.pos) === 110 ? (r = NE(this.input.slice(t, this.pos)), ++this.pos) : zr(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifi\
er directly after number"), this.finishToken(A.num, r);
  };
  Ae.readNumber = function(e) {
    var t = this.pos;
    !e && this.readInt(10, void 0, !0) === null && this.raise(t, "Invalid number");
    var r = this.pos - t >= 2 && this.input.charCodeAt(t) === 48;
    r && this.strict && this.raise(t, "Invalid number");
    var i = this.input.charCodeAt(this.pos);
    if (!r && !e && this.options.ecmaVersion >= 11 && i === 110) {
      var n = NE(this.input.slice(t, this.pos));
      return ++this.pos, zr(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(A.num, n);
    }
    r && /[89]/.test(this.input.slice(t, this.pos)) && (r = !1), i === 46 && !r && (++this.pos, this.readInt(10), i = this.input.charCodeAt(
    this.pos)), (i === 69 || i === 101) && !r && (i = this.input.charCodeAt(++this.pos), (i === 43 || i === 45) && ++this.pos, this.readInt(
    10) === null && this.raise(t, "Invalid number")), zr(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
    var o = B9(this.input.slice(t, this.pos), r);
    return this.finishToken(A.num, o);
  };
  Ae.readCodePoint = function() {
    var e = this.input.charCodeAt(this.pos), t;
    if (e === 123) {
      this.options.ecmaVersion < 6 && this.unexpected();
      var r = ++this.pos;
      t = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, t > 1114111 && this.invalidStringToken(r, "Code point \
out of bounds");
    } else
      t = this.readHexChar(4);
    return t;
  };
  Ae.readString = function(e) {
    for (var t = "", r = ++this.pos; ; ) {
      this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
      var i = this.input.charCodeAt(this.pos);
      if (i === e)
        break;
      i === 92 ? (t += this.input.slice(r, this.pos), t += this.readEscapedChar(!1), r = this.pos) : i === 8232 || i === 8233 ? (this.options.
      ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.
      lineStart = this.pos)) : (vn(i) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
    }
    return t += this.input.slice(r, this.pos++), this.finishToken(A.string, t);
  };
  LE = {};
  Ae.tryReadTemplateToken = function() {
    this.inTemplateElement = !0;
    try {
      this.readTmplToken();
    } catch (e) {
      if (e === LE)
        this.readInvalidTemplateToken();
      else
        throw e;
    }
    this.inTemplateElement = !1;
  };
  Ae.invalidStringToken = function(e, t) {
    if (this.inTemplateElement && this.options.ecmaVersion >= 9)
      throw LE;
    this.raise(e, t);
  };
  Ae.readTmplToken = function() {
    for (var e = "", t = this.pos; ; ) {
      this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
      var r = this.input.charCodeAt(this.pos);
      if (r === 96 || r === 36 && this.input.charCodeAt(this.pos + 1) === 123)
        return this.pos === this.start && (this.type === A.template || this.type === A.invalidTemplate) ? r === 36 ? (this.pos += 2, this.finishToken(
        A.dollarBraceL)) : (++this.pos, this.finishToken(A.backQuote)) : (e += this.input.slice(t, this.pos), this.finishToken(A.template, e));
      if (r === 92)
        e += this.input.slice(t, this.pos), e += this.readEscapedChar(!0), t = this.pos;
      else if (vn(r)) {
        switch (e += this.input.slice(t, this.pos), ++this.pos, r) {
          case 13:
            this.input.charCodeAt(this.pos) === 10 && ++this.pos;
          case 10:
            e += `
`;
            break;
          default:
            e += String.fromCharCode(r);
            break;
        }
        this.options.locations && (++this.curLine, this.lineStart = this.pos), t = this.pos;
      } else
        ++this.pos;
    }
  };
  Ae.readInvalidTemplateToken = function() {
    for (; this.pos < this.input.length; this.pos++)
      switch (this.input[this.pos]) {
        case "\\":
          ++this.pos;
          break;
        case "$":
          if (this.input[this.pos + 1] !== "{")
            break;
        // fall through
        case "`":
          return this.finishToken(A.invalidTemplate, this.input.slice(this.start, this.pos));
        case "\r":
          this.input[this.pos + 1] === `
` && ++this.pos;
        // fall through
        case `
`:
        case "\u2028":
        case "\u2029":
          ++this.curLine, this.lineStart = this.pos + 1;
          break;
      }
    this.raise(this.start, "Unterminated template");
  };
  Ae.readEscapedChar = function(e) {
    var t = this.input.charCodeAt(++this.pos);
    switch (++this.pos, t) {
      case 110:
        return `
`;
      // 'n' -> '\n'
      case 114:
        return "\r";
      // 'r' -> '\r'
      case 120:
        return String.fromCharCode(this.readHexChar(2));
      // 'x'
      case 117:
        return Hr(this.readCodePoint());
      // 'u'
      case 116:
        return "	";
      // 't' -> '\t'
      case 98:
        return "\b";
      // 'b' -> '\b'
      case 118:
        return "\v";
      // 'v' -> '\u000b'
      case 102:
        return "\f";
      // 'f' -> '\f'
      case 13:
        this.input.charCodeAt(this.pos) === 10 && ++this.pos;
      // '\r\n'
      case 10:
        return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
      case 56:
      case 57:
        if (this.strict && this.invalidStringToken(
          this.pos - 1,
          "Invalid escape sequence"
        ), e) {
          var r = this.pos - 1;
          this.invalidStringToken(
            r,
            "Invalid escape sequence in template string"
          );
        }
      default:
        if (t >= 48 && t <= 55) {
          var i = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], n = parseInt(i, 8);
          return n > 255 && (i = i.slice(0, -1), n = parseInt(i, 8)), this.pos += i.length - 1, t = this.input.charCodeAt(this.pos), (i !== "\
0" || t === 56 || t === 57) && (this.strict || e) && this.invalidStringToken(
            this.pos - 1 - i.length,
            e ? "Octal literal in template string" : "Octal literal in strict mode"
          ), String.fromCharCode(n);
        }
        return vn(t) ? (this.options.locations && (this.lineStart = this.pos, ++this.curLine), "") : String.fromCharCode(t);
    }
  };
  Ae.readHexChar = function(e) {
    var t = this.pos, r = this.readInt(16, e);
    return r === null && this.invalidStringToken(t, "Bad character escape sequence"), r;
  };
  Ae.readWord1 = function() {
    this.containsEsc = !1;
    for (var e = "", t = !0, r = this.pos, i = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {
      var n = this.fullCharCodeAtPos();
      if (bn(n, i))
        this.pos += n <= 65535 ? 1 : 2;
      else if (n === 92) {
        this.containsEsc = !0, e += this.input.slice(r, this.pos);
        var o = this.pos;
        this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.
        pos;
        var a = this.readCodePoint();
        (t ? zr : bn)(a, i) || this.invalidStringToken(o, "Invalid Unicode escape"), e += Hr(a), r = this.pos;
      } else
        break;
      t = !1;
    }
    return e + this.input.slice(r, this.pos);
  };
  Ae.readWord = function() {
    var e = this.readWord1(), t = A.name;
    return this.keywords.test(e) && (t = Zp[e]), this.finishToken(t, e);
  };
  I9 = "8.14.1";
  nt.acorn = {
    Parser: nt,
    version: I9,
    defaultOptions: Kp,
    Position: _s,
    SourceLocation: Ca,
    getLineInfo: uE,
    Node: Fa,
    TokenType: _e,
    tokTypes: A,
    keywordTypes: Zp,
    TokContext: dr,
    tokContexts: Ue,
    isIdentifierChar: bn,
    isIdentifierStart: zr,
    Token: sh,
    isNewLine: vn,
    lineBreak: er,
    lineBreakG: t9,
    nonASCIIwhitespace: oE
  };
});

// ../node_modules/@storybook/docs-mdx/dist/mdx-N42X6CFJ.js
var _1 = {};
Pi(_1, {
  compile: () => w1,
  compileSync: () => A1,
  createProcessor: () => Nh,
  evaluate: () => V7,
  evaluateSync: () => U7,
  nodeTypes: () => C1,
  run: () => Lh,
  runSync: () => F1
});
import { default as Tr } from "path";
import { default as N9 } from "process";
import { fileURLToPath as L9 } from "url";
function ir(e) {
  return !e || typeof e != "object" ? "" : "position" in e || "type" in e ? jE(e.position) : "start" in e || "end" in e ? jE(e) : "line" in e ||
  "column" in e ? bh(e) : "";
}
function bh(e) {
  return qE(e && e.line) + ":" + qE(e && e.column);
}
function jE(e) {
  return bh(e && e.start) + "-" + bh(e && e.end);
}
function qE(e) {
  return e && typeof e == "number" ? e : 1;
}
function $E(e) {
  return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && // @ts-expect-error: indexing is fine.
  e.auth === void 0);
}
function ah(e, t) {
  if (e && e.includes(Tr.sep))
    throw new Error(
      "`" + t + "` cannot be a path: did not expect `" + Tr.sep + "`"
    );
}
function uh(e, t) {
  if (!e)
    throw new Error("`" + t + "` cannot be empty");
}
function VE(e, t) {
  if (!e)
    throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function M9(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
function qb(e, t) {
  let r = V9(e) ? e : new jb(e), { format: i, ...n } = t || {};
  return {
    file: r,
    options: {
      format: i === "md" || i === "mdx" ? i : r.extname && (n.mdExtensions || $9).includes(r.extname) ? "md" : "mdx",
      ...n
    }
  };
}
function V9(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function U9() {
  return {
    enter: {
      mdxFlowExpression: z9,
      mdxTextExpression: H9
    },
    exit: {
      mdxFlowExpression: UE,
      mdxFlowExpressionChunk: WE,
      mdxTextExpression: UE,
      mdxTextExpressionChunk: WE
    }
  };
}
function W9() {
  return {
    handlers: {
      mdxFlowExpression: zE,
      mdxTextExpression: zE
    },
    unsafe: [
      { character: "{", inConstruct: ["phrasing"] },
      { atBreak: !0, character: "{" }
    ]
  };
}
function z9(e) {
  this.enter({ type: "mdxFlowExpression", value: "" }, e), this.buffer();
}
function H9(e) {
  this.enter({ type: "mdxTextExpression", value: "" }, e), this.buffer();
}
function UE(e) {
  let t = this.resume(), r = e.estree, i = this.stack[this.stack.length - 1];
  i.type === "mdxFlowExpression" || i.type, this.exit(e), i.value = t, r && (i.data = { estree: r });
}
function WE(e) {
  this.config.enter.data.call(this, e), this.config.exit.data.call(this, e);
}
function zE(e) {
  return "{" + (e.value || "") + "}";
}
function HE(e, t) {
  let r = String(e);
  if (typeof t != "string")
    throw new TypeError("Expected character");
  let i = 0, n = r.indexOf(t);
  for (; n !== -1; )
    i++, n = r.indexOf(t, n + t.length);
  return i;
}
function $b(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 48 && t <= 57;
}
function G9(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 102 || t >= 65 && t <= 70 || t >= 48 && t <= 57;
}
function X9(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 122 || t >= 65 && t <= 90;
}
function GE(e) {
  return X9(e) || $b(e);
}
function Rs(e) {
  return K9.call(XE, e) ? XE[e] : !1;
}
function Q9(e, t = {}) {
  let r = typeof t.additional == "string" ? t.additional.charCodeAt(0) : t.additional, i = [], n = 0, o = -1, a = "", u, l;
  t.position && ("start" in t.position || "indent" in t.position ? (l = t.position.indent, u = t.position.start) : u = t.position);
  let c = (u ? u.line : 0) || 1, p = (u ? u.column : 0) || 1, h = d(), f;
  for (n--; ++n <= e.length; )
    if (f === 10 && (p = (l ? l[o] : 0) || 1), f = e.charCodeAt(n), f === 38) {
      let b = e.charCodeAt(n + 1);
      if (b === 9 || b === 10 || b === 12 || b === 32 || b === 38 || b === 60 || Number.isNaN(b) || r && b === r) {
        a += Sn(f), p++;
        continue;
      }
      let D = n + 1, v = D, S = D, k;
      if (b === 35) {
        S = ++v;
        let $ = e.charCodeAt(S);
        $ === 88 || $ === 120 ? (k = "hexadecimal", S = ++v) : k = "decimal";
      } else
        k = "named";
      let L = "", C = "", w = "", T = k === "named" ? GE : k === "decimal" ? $b : G9;
      for (S--; ++S <= e.length; ) {
        let $ = e.charCodeAt(S);
        if (!T($))
          break;
        w += Sn($), k === "named" && J9.includes(w) && (L = w, C = Rs(w));
      }
      let _ = e.charCodeAt(S) === 59;
      if (_) {
        S++;
        let $ = k === "named" ? Rs(w) : !1;
        $ && (L = w, C = $);
      }
      let q = 1 + S - D, O = "";
      if (!(!_ && t.nonTerminated === !1))
        if (!w)
          k !== "named" && m(4, q);
        else if (k === "named") {
          if (_ && !C)
            m(5, 1);
          else if (L !== w && (S = v + L.length, q = 1 + S - v, _ = !1), !_) {
            let $ = L ? 1 : 3;
            if (t.attribute) {
              let V = e.charCodeAt(S);
              V === 61 ? (m($, q), C = "") : GE(V) ? C = "" : m($, q);
            } else
              m($, q);
          }
          O = C;
        } else {
          _ || m(2, q);
          let $ = Number.parseInt(
            w,
            k === "hexadecimal" ? 16 : 10
          );
          if (Z9($))
            m(7, q), O = Sn(
              65533
              /* `�` */
            );
          else if ($ in JE)
            m(6, q), O = JE[$];
          else {
            let V = "";
            eR($) && m(6, q), $ > 65535 && ($ -= 65536, V += Sn($ >>> 10 | 55296), $ = 56320 | $ & 1023), O = V + Sn($);
          }
        }
      if (O) {
        g(), h = d(), n = S - 1, p += S - D + 1, i.push(O);
        let $ = d();
        $.offset++, t.reference && t.reference.call(
          t.referenceContext,
          O,
          { start: h, end: $ },
          e.slice(D - 1, S)
        ), h = $;
      } else
        w = e.slice(D - 1, S), a += w, p += w.length, n = S - 1;
    } else
      f === 10 && (c++, o++, p = 0), Number.isNaN(f) ? g() : (a += Sn(f), p++);
  return i.join("");
  function d() {
    return {
      line: c,
      column: p,
      offset: n + ((u ? u.offset : 0) || 0)
    };
  }
  function m(b, D) {
    let v;
    t.warning && (v = d(), v.column += D, v.offset += D, t.warning.call(
      t.warningContext,
      Y9[b],
      v,
      b
    ));
  }
  function g() {
    a && (i.push(a), t.text && t.text.call(t.textContext, a, {
      start: h,
      end: d()
    }), a = "");
  }
}
function Z9(e) {
  return e >= 55296 && e <= 57343 || e > 1114111;
}
function eR(e) {
  return e >= 1 && e <= 8 || e === 11 || e >= 13 && e <= 31 || e >= 127 && e <= 159 || e >= 64976 && e <= 65007 || (e & 65535) === 65535 || (e &
  65535) === 65534;
}
function tR(e, t) {
  if (e = e.replace(
    t.subset ? rR(t.subset) : /["&'<>`]/g,
    i
  ), t.subset || t.escapeOnly)
    return e;
  return e.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, r).replace(
    // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
    /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
    i
  );
  function r(n, o, a) {
    return t.format(
      (n.charCodeAt(0) - 55296) * 1024 + n.charCodeAt(1) - 56320 + 65536,
      a.charCodeAt(o + 2),
      t
    );
  }
  function i(n, o, a) {
    return t.format(
      n.charCodeAt(0),
      a.charCodeAt(o + 1),
      t
    );
  }
}
function rR(e) {
  let t = [], r = -1;
  for (; ++r < e.length; )
    t.push(e[r].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  return new RegExp("(?:" + t.join("|") + ")", "g");
}
function iR(e) {
  return "&#x" + e.toString(16).toUpperCase() + ";";
}
function nR(e, t) {
  return tR(e, Object.assign({ format: iR }, t));
}
function sR() {
  return {
    canContainEols: ["mdxJsxTextElement"],
    enter: {
      mdxJsxFlowTag: r,
      mdxJsxFlowTagClosingMarker: i,
      mdxJsxFlowTagAttribute: p,
      mdxJsxFlowTagExpressionAttribute: h,
      mdxJsxFlowTagAttributeValueLiteral: e,
      mdxJsxFlowTagAttributeValueExpression: e,
      mdxJsxFlowTagSelfClosingMarker: o,
      mdxJsxTextTag: r,
      mdxJsxTextTagClosingMarker: i,
      mdxJsxTextTagAttribute: p,
      mdxJsxTextTagExpressionAttribute: h,
      mdxJsxTextTagAttributeValueLiteral: e,
      mdxJsxTextTagAttributeValueExpression: e,
      mdxJsxTextTagSelfClosingMarker: o
    },
    exit: {
      mdxJsxFlowTagClosingMarker: a,
      mdxJsxFlowTagNamePrimary: u,
      mdxJsxFlowTagNameMember: l,
      mdxJsxFlowTagNameLocal: c,
      mdxJsxFlowTagExpressionAttribute: f,
      mdxJsxFlowTagExpressionAttributeValue: t,
      mdxJsxFlowTagAttributeNamePrimary: d,
      mdxJsxFlowTagAttributeNameLocal: m,
      mdxJsxFlowTagAttributeValueLiteral: g,
      mdxJsxFlowTagAttributeValueLiteralValue: t,
      mdxJsxFlowTagAttributeValueExpression: b,
      mdxJsxFlowTagAttributeValueExpressionValue: t,
      mdxJsxFlowTagSelfClosingMarker: D,
      mdxJsxFlowTag: v,
      mdxJsxTextTagClosingMarker: a,
      mdxJsxTextTagNamePrimary: u,
      mdxJsxTextTagNameMember: l,
      mdxJsxTextTagNameLocal: c,
      mdxJsxTextTagExpressionAttribute: f,
      mdxJsxTextTagExpressionAttributeValue: t,
      mdxJsxTextTagAttributeNamePrimary: d,
      mdxJsxTextTagAttributeNameLocal: m,
      mdxJsxTextTagAttributeValueLiteral: g,
      mdxJsxTextTagAttributeValueLiteralValue: t,
      mdxJsxTextTagAttributeValueExpression: b,
      mdxJsxTextTagAttributeValueExpressionValue: t,
      mdxJsxTextTagSelfClosingMarker: D,
      mdxJsxTextTag: v
    }
  };
  function e() {
    this.buffer();
  }
  function t(C) {
    this.config.enter.data.call(this, C), this.config.exit.data.call(this, C);
  }
  function r(C) {
    let w = {
      name: void 0,
      attributes: [],
      close: !1,
      selfClosing: !1,
      start: C.start,
      end: C.end
    };
    this.data.mdxJsxTagStack || (this.data.mdxJsxTagStack = []), this.data.mdxJsxTag = w, this.buffer();
  }
  function i(C) {
    let w = this.data.mdxJsxTagStack;
    if (w.length === 0)
      throw new ke(
        "Unexpected closing slash `/` in tag, expected an open tag first",
        { start: C.start, end: C.end },
        "mdast-util-mdx-jsx:unexpected-closing-slash"
      );
  }
  function n(C) {
    let w = this.data.mdxJsxTag;
    if (w.close)
      throw new ke(
        "Unexpected attribute in closing tag, expected the end of the tag",
        { start: C.start, end: C.end },
        "mdast-util-mdx-jsx:unexpected-attribute"
      );
  }
  function o(C) {
    let w = this.data.mdxJsxTag;
    if (w.close)
      throw new ke(
        "Unexpected self-closing slash `/` in closing tag, expected the end of the tag",
        { start: C.start, end: C.end },
        "mdast-util-mdx-jsx:unexpected-self-closing-slash"
      );
  }
  function a() {
    let C = this.data.mdxJsxTag;
    C.close = !0;
  }
  function u(C) {
    let w = this.data.mdxJsxTag;
    w.name = this.sliceSerialize(C);
  }
  function l(C) {
    let w = this.data.mdxJsxTag;
    w.name += "." + this.sliceSerialize(C);
  }
  function c(C) {
    let w = this.data.mdxJsxTag;
    w.name += ":" + this.sliceSerialize(C);
  }
  function p(C) {
    let w = this.data.mdxJsxTag;
    n.call(this, C), w.attributes.push({ type: "mdxJsxAttribute", name: "", value: null });
  }
  function h(C) {
    let w = this.data.mdxJsxTag;
    n.call(this, C), w.attributes.push({ type: "mdxJsxExpressionAttribute", value: "" }), this.buffer();
  }
  function f(C) {
    let w = this.data.mdxJsxTag;
    let T = w.attributes[w.attributes.length - 1];
    T.type;
    let _ = C.estree;
    T.value = this.resume(), _ && (T.data = { estree: _ });
  }
  function d(C) {
    let w = this.data.mdxJsxTag;
    let T = w.attributes[w.attributes.length - 1];
    T.type, T.name = this.sliceSerialize(C);
  }
  function m(C) {
    let w = this.data.mdxJsxTag;
    let T = w.attributes[w.attributes.length - 1];
    T.type, T.name += ":" + this.sliceSerialize(C);
  }
  function g() {
    let C = this.data.mdxJsxTag;
    C.attributes[C.attributes.length - 1].value = Q9(
      this.resume(),
      { nonTerminated: !1 }
    );
  }
  function b(C) {
    let w = this.data.mdxJsxTag;
    let T = w.attributes[w.attributes.length - 1];
    T.type;
    let _ = { type: "mdxJsxAttributeValueExpression", value: this.resume() }, q = C.estree;
    q && (_.data = { estree: q }), T.value = _;
  }
  function D() {
    let C = this.data.mdxJsxTag;
    C.selfClosing = !0;
  }
  function v(C) {
    let w = this.data.mdxJsxTag;
    let T = this.data.mdxJsxTagStack;
    let _ = T[T.length - 1];
    if (w.close && _.name !== w.name)
      throw new ke(
        "Unexpected closing tag `" + L(w) + "`, expected corresponding closing tag for `" + L(_) + "` (" + ir(_) + ")",
        { start: C.start, end: C.end },
        "mdast-util-mdx-jsx:end-tag-mismatch"
      );
    this.resume(), w.close ? T.pop() : this.enter(
      {
        type: C.type === "mdxJsxTextTag" ? "mdxJsxTextElement" : "mdxJsxFlowElement",
        name: w.name || null,
        attributes: w.attributes,
        children: []
      },
      C,
      S
    ), w.selfClosing || w.close ? this.exit(C, k) : T.push(w);
  }
  function S(C, w) {
    let T = this.data.mdxJsxTag;
    let _ = C ? " before the end of `" + C.type + "`" : "", q = C ? { start: C.start, end: C.end } : void 0;
    throw new ke(
      "Expected a closing tag for `" + L(T) + "` (" + ir({ start: w.start, end: w.end }) + ")" + _,
      q,
      "mdast-util-mdx-jsx:end-tag-mismatch"
    );
  }
  function k(C, w) {
    let T = this.data.mdxJsxTag;
    throw new ke(
      "Expected the closing tag `" + L(T) + "` either after the end of `" + w.type + "` (" + ir(w.end) + ") or another opening tag after the\
 start of `" + w.type + "` (" + ir(w.start) + ")",
      { start: C.start, end: C.end },
      "mdast-util-mdx-jsx:end-tag-mismatch"
    );
  }
  function L(C) {
    return "<" + (C.close ? "/" : "") + (C.name || "") + ">";
  }
}
function oR(e) {
  let t = e || {}, r = t.quote || '"', i = t.quoteSmart || !1, n = t.tightSelfClosing || !1, o = t.printWidth || Number.POSITIVE_INFINITY, a = r ===
  '"' ? "'" : '"';
  if (r !== '"' && r !== "'")
    throw new Error(
      "Cannot serialize attribute values with `" + r + "` for `options.quote`, expected `\"`, or `'`"
    );
  return u.peek = uR, {
    handlers: {
      mdxJsxFlowElement: u,
      mdxJsxTextElement: u
    },
    unsafe: [
      { character: "<", inConstruct: ["phrasing"] },
      { atBreak: !0, character: "<" }
    ],
    // Always generate fenced code (never indented code).
    fences: !0,
    // Always generate links with resources (never autolinks).
    resourceLink: !0
  };
  function u(l, c, p, h) {
    let f = l.type === "mdxJsxFlowElement", d = l.name ? !l.children || l.children.length === 0 : !1, m = Ub(p), g = Wb(m), b = p.createTracker(
    h), D = p.createTracker(h), v = [], S = (f ? g : "") + "<" + (l.name || ""), k = p.enter(l.type);
    if (b.move(S), D.move(S), l.attributes && l.attributes.length > 0) {
      if (!l.name)
        throw new Error("Cannot serialize fragment w/ attributes");
      let _ = -1;
      for (; ++_ < l.attributes.length; ) {
        let q = l.attributes[_], O;
        if (q.type === "mdxJsxExpressionAttribute")
          O = "{" + (q.value || "") + "}";
        else {
          if (!q.name)
            throw new Error("Cannot serialize attribute w/o name");
          let $ = q.value, V = q.name, K = "";
          if ($ != null)
            if (typeof $ == "object")
              K = "{" + ($.value || "") + "}";
            else {
              let M = i && HE($, r) > HE($, a) ? a : r;
              K = M + nR($, { subset: [M] }) + M;
            }
          O = V + (K ? "=" : "") + K;
        }
        v.push(O);
      }
    }
    let L = !1, C = v.join(" ");
    // Block:
    f && // Including a line ending (expressions).
    (/\r?\n|\r/.test(C) || // Current position (including `<tag`).
    b.current().now.column + // -1 because columns, +1 for ` ` before attributes.
    // Attributes joined by spaces.
    C.length + // ` />`.
    (d ? n ? 2 : 3 : 1) > o) && (L = !0);
    let w = b, T = S;
    if (L) {
      w = D;
      let _ = -1;
      for (; ++_ < v.length; )
        v[_] = g + Vb + v[_];
      T += w.move(
        `
` + v.join(`
`) + `
` + g
      );
    } else C && (T += w.move(" " + C));
    return d && (T += w.move(
      (n || L ? "" : " ") + "/"
    )), T += w.move(">"), l.children && l.children.length > 0 && (l.type === "mdxJsxTextElement" ? T += w.move(
      // @ts-expect-error: `containerPhrasing` is typed correctly, but TS
      // generates *hardcoded* types, which means that our dynamically added
      // directives are not present.
      // At some point, TS should fix that, and `from-markdown` should be fine.
      p.containerPhrasing(l, {
        ...w.current(),
        before: ">",
        after: "<"
      })
    ) : (w.shift(2), T += w.move(`
`), T += w.move(aR(l, p, w.current())), T += w.move(`
`))), d || (T += w.move(
      (f ? g : "") + "</" + (l.name || "") + ">"
    )), k(), T;
  }
  s(u, "mdxElement");
}
function aR(e, t, r) {
  let i = t.indexStack, n = e.children, o = t.createTracker(r), a = Wb(Ub(t)), u = [], l = -1;
  for (i.push(-1); ++l < n.length; ) {
    let c = n[l];
    i[i.length - 1] = l;
    let p = { before: `
`, after: `
`, ...o.current() }, h = t.handle(c, e, t, p), f = c.type === "mdxJsxFlowElement" ? h : t.indentLines(h, function(d, m, g) {
      return (g ? "" : a) + d;
    });
    u.push(o.move(f)), c.type !== "list" && (t.bulletLastUsed = void 0), l < n.length - 1 && u.push(o.move(`

`));
  }
  return i.pop(), u.join("");
}
function Ub(e) {
  let t = 0;
  for (let r of e.stack)
    r === "mdxJsxFlowElement" && t++;
  return t;
}
function Wb(e) {
  return Vb.repeat(e);
}
function uR() {
  return "<";
}
function lR() {
  return {
    enter: { mdxjsEsm: pR },
    exit: { mdxjsEsm: hR, mdxjsEsmData: fR }
  };
}
function cR() {
  return { handlers: { mdxjsEsm: dR } };
}
function pR(e) {
  this.enter({ type: "mdxjsEsm", value: "" }, e), this.buffer();
}
function hR(e) {
  let t = this.resume(), r = this.stack[this.stack.length - 1];
  r.type, this.exit(e);
  let i = e.estree;
  r.value = t, i && (r.data = { estree: i });
}
function fR(e) {
  this.config.enter.data.call(this, e), this.config.exit.data.call(this, e);
}
function dR(e) {
  return e.value || "";
}
function mR() {
  return [
    U9(),
    sR(),
    lR()
  ];
}
function gR(e) {
  return {
    extensions: [
      W9(),
      oR(e),
      cR()
    ]
  };
}
function vh(e) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    e !== null && (e < 32 || e === 127)
  );
}
function ne(e) {
  return e !== null && e < -2;
}
function tt(e) {
  return e !== null && (e < 0 || e === 32);
}
function Fe(e) {
  return e === -2 || e === -1 || e === 32;
}
function bR(e) {
  return zb(e) || yR(e);
}
function Ei(e) {
  return t;
  function t(r) {
    return r !== null && r > -1 && e.test(String.fromCharCode(r));
  }
}
function vR(e) {
  return "\x1B[33m" + e + "\x1B[39m";
}
function SR(e, t) {
  let r, i;
  typeof t == "function" ? r = t : t && typeof t == "object" && (t.enter && (r = t.enter), t.leave && (i = t.leave)), n(e, void 0, void 0, [])();
  function n(o, a, u, l) {
    return ch(o) && (c.displayName = "node (" + vR(o.type) + ")"), c;
    function c() {
      let p = r ? KE(r(o, a, u, l)) : [];
      if (p[0] === lh)
        return p;
      if (p[0] !== AR) {
        let h;
        for (h in o)
          if (CR.call(o, h) && o[h] && typeof o[h] == "object" && // @ts-expect-error: custom esast extension.
          h !== "data" && // @ts-expect-error: custom esast extension.
          h !== "position") {
            let f = l.concat(o), d = o[h];
            if (Array.isArray(d)) {
              let m = (
                /** @type {Array<unknown>} */
                d
              ), g = 0;
              for (; g > -1 && g < m.length; ) {
                let b = m[g];
                if (ch(b)) {
                  let D = n(
                    b,
                    h,
                    g,
                    f
                  )();
                  if (D[0] === lh)
                    return D;
                  g = typeof D[1] == "number" ? D[1] : g + 1;
                } else
                  g++;
              }
            } else if (ch(d)) {
              let m = n(d, h, void 0, f)();
              if (m[0] === lh)
                return m;
            }
          }
      }
      return i ? KE(i(o, a, u, l)) : p;
    }
    s(c, "visit3");
  }
  s(n, "build");
}
function KE(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [wR, e] : [e];
}
function ch(e) {
  return !!(e && typeof e == "object" && "type" in e && typeof e.type == "string" && e.type.length > 0);
}
function Hb(e, t) {
  let r = t.prefix || "", i = t.suffix || "", n = Object.assign({}, t.acornOptions), o = [], a = [], u = n.onComment, l = n.onToken, c = !1,
  p, h, f = Object.assign({}, n, {
    onComment: o,
    preserveParens: !0
  });
  l && (f.onToken = a);
  let d = FR(e, t.tokenTypes), m = d.value, g = r + m + i, b = t.expression && YE(m);
  if (b && !t.allowEmpty)
    throw new ke("Unexpected empty expression", {
      place: v(0),
      ruleId: "unexpected-empty-expression",
      source: "micromark-extension-mdx-expression"
    });
  try {
    p = t.expression && !b ? t.acorn.parseExpressionAt(g, 0, f) : t.acorn.parse(g, f);
  } catch (S) {
    let k = (
      /** @type {AcornError} */
      S
    ), L = v(k.pos);
    k.message = String(k.message).replace(/ \(\d+:\d+\)$/, ""), k.pos = L.offset, k.loc = {
      line: L.line,
      column: L.column - 1
    }, h = k, c = k.raisedAt >= r.length + m.length || // Broken comments are raised at their start, not their end.
    k.message === "Unterminated comment";
  }
  if (p && t.expression && !b)
    if (YE(g.slice(p.end, g.length - i.length)))
      p = {
        type: "Program",
        start: 0,
        end: r.length + m.length,
        // @ts-expect-error: It’s good.
        body: [{
          type: "ExpressionStatement",
          expression: p,
          start: 0,
          end: r.length + m.length
        }],
        sourceType: "module",
        comments: []
      };
    else {
      let S = v(p.end), k = (
        /** @type {AcornError} */
        new Error("Unexpected content after expression")
      );
      k.pos = S.offset, k.loc = {
        line: S.line,
        column: S.column - 1
      }, h = k, p = void 0;
    }
  if (p) {
    if (p.comments = o, SR(p, function(S, k, L, C) {
      let w = (
        /** @type {AcornNode | Array<AcornNode>} */
        C[C.length - 1]
      ), T = k;
      S.type === "ParenthesizedExpression" && w && T && (typeof L == "number" && (w = w[T], T = L), w[T] = S.expression), D(S);
    }), Array.isArray(u))
      u.push(...o);
    else if (typeof u == "function")
      for (let S of o)
        u(S.type === "Block", S.value, S.start, S.end, S.loc.start, S.loc.end);
    for (let S of a)
      S.end <= r.length || S.start - r.length >= m.length || (D(S), Array.isArray(l) ? l.push(S) : l(S));
  }
  return {
    estree: p,
    error: h,
    swallow: c
  };
  function D(S) {
    let k = v(S.start), L = v(S.end);
    S.start = k.offset, S.end = L.offset, S.loc = {
      start: {
        line: k.line,
        column: k.column - 1,
        offset: k.offset
      },
      end: {
        line: L.line,
        column: L.column - 1,
        offset: L.offset
      }
    }, S.range = [S.start, S.end];
  }
  function v(S) {
    let k = S - r.length;
    k < 0 ? k = 0 : k > m.length && (k = m.length);
    let L = _R(d.stops, k);
    return L || (L = {
      line: t.start.line,
      column: t.start.column,
      offset: t.start.offset
    }), L;
  }
}
function YE(e) {
  return /^\s*$/.test(e.replace(/\/\*[\s\S]*?\*\//g, "").replace(/\/\/[^\r\n]*(\r\n|\n|\r)/g, ""));
}
function FR(e, t) {
  let r = {
    value: "",
    stops: []
  }, i = -1;
  for (; ++i < e.length; ) {
    let n = e[i];
    if (n[0] === "enter") {
      let o = n[1].type;
      if (o === "lineEnding" || t.includes(o)) {
        let a = n[2].sliceStream(n[1]);
        for (; a.length > 0 && a[0] === -1; )
          a.shift();
        let u = kR(a);
        r.stops.push([r.value.length, n[1].start]), r.value += u, r.stops.push([r.value.length, n[1].end]);
      }
    }
  }
  return r;
}
function _R(e, t) {
  let r = 0;
  for (; r < e.length && e[r][0] <= t; )
    r += 1;
  if (r === 0)
    return;
  let [i, n] = e[r - 1], o = t - i;
  return {
    line: n.line,
    column: n.column + o,
    offset: n.offset + o
  };
}
function kR(e) {
  let t = -1, r = [], i;
  for (; ++t < e.length; ) {
    let n = e[t], o;
    if (typeof n == "string")
      o = n;
    else
      switch (n) {
        case -5: {
          o = "\r";
          break;
        }
        case -4: {
          o = `
`;
          break;
        }
        case -3: {
          o = `\r
`;
          break;
        }
        case -2: {
          o = "	";
          break;
        }
        case -1: {
          if (i)
            continue;
          o = " ";
          break;
        }
        default:
          o = String.fromCharCode(n);
      }
    i = n === -2, r.push(o);
  }
  return r.join("");
}
function Kr(e) {
  let t = e || {}, r = t.loc || {}, i = t.range || [void 0, void 0], n = QE(r.start, i[0] || t.start), o = QE(r.end, i[1] || t.end);
  if (n && o)
    return { start: n, end: o };
}
function QE(e, t) {
  if (e && typeof e == "object") {
    let r = "line" in e ? ph(e.line) : void 0, i = "column" in e ? ph(e.column) : void 0;
    if (r && i !== void 0)
      return {
        line: r,
        column: i + 1,
        offset: ph(t)
      };
  }
}
function ph(e) {
  return typeof e == "number" && e > -1 ? e : void 0;
}
function Ra(e, t, r, i, n, o, a, u, l, c, p) {
  let h = this, f = this.events.length + 3, d = 0, m, g;
  return b;
  function b(k) {
    return e.enter(r), e.enter(i), e.consume(k), e.exit(i), m = h.now(), D;
  }
  function D(k) {
    if (k === null) {
      if (g)
        throw g;
      let L = new ke(
        "Unexpected end of file in expression, expected a corresponding closing brace for `{`",
        {
          place: h.now(),
          ruleId: "unexpected-eof",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw L.url = In + TR, L;
    }
    if (ne(k))
      return e.enter("lineEnding"), e.consume(k), e.exit("lineEnding"), S;
    if (k === 125 && d === 0) {
      let L = o ? OR.call(
        h,
        o,
        a,
        n,
        f,
        m,
        c || !1,
        l || !1
      ) : {
        type: "ok",
        estree: void 0
      };
      if (L.type === "ok") {
        e.enter(i), e.consume(k), e.exit(i);
        let C = e.exit(r);
        return u && L.estree && Object.assign(C, {
          estree: L.estree
        }), t;
      }
      return g = L.message, e.enter(n), e.consume(k), v;
    }
    return e.enter(n), v(k);
  }
  function v(k) {
    return k === 125 && d === 0 || k === null || ne(k) ? (e.exit(n), D(k)) : (k === 123 && !o ? d += 1 : k === 125 && (d -= 1), e.consume(k),
    v);
  }
  function S(k) {
    let L = h.now();
    if (L.line !== m.line && !p && h.parser.lazy[L.line]) {
      let C = new ke(
        "Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a \
list, etc",
        {
          place: h.now(),
          ruleId: "unexpected-lazy",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw C.url = In + BR, C;
    }
    return D(k);
  }
}
function OR(e, t, r, i, n, o, a) {
  let u = Hb(this.events.slice(i), {
    acorn: e,
    tokenTypes: [r],
    acornOptions: t,
    start: n,
    expression: !0,
    allowEmpty: o,
    prefix: a ? "({" : "",
    suffix: a ? "})" : ""
  }), l = u.estree;
  if (a && l) {
    let c = l.body[0];
    if (c.type !== "ExpressionStatement" || c.expression.type !== "ObjectExpression") {
      let p = Kr(c), h = new ke(
        "Unexpected `" + c.type + "` in code: expected an object spread (`{...spread}`)",
        {
          place: p.start,
          ruleId: "non-spread",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = In + ZE, h;
    }
    if (c.expression.properties[1]) {
      let p = Kr(c.expression.properties[1]), h = new ke(
        "Unexpected extra content in spread: only a single spread is supported",
        {
          place: p.start,
          ruleId: "spread-extra",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = In + IR, h;
    }
    if (c.expression.properties[0] && c.expression.properties[0].type !== "SpreadElement") {
      let p = Kr(c.expression.properties[0]), h = new ke(
        "Unexpected `" + c.expression.properties[0].type + "` in code: only spread elements are supported",
        {
          place: p.start,
          ruleId: "non-spread",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = In + ZE, h;
    }
  }
  if (u.error) {
    let c = new ke("Could not parse expression with acorn", {
      cause: u.error,
      place: {
        line: u.error.loc.line,
        column: u.error.loc.column + 1,
        offset: u.error.pos
      },
      ruleId: "acorn",
      source: "micromark-extension-mdx-expression"
    });
    return c.url = In + PR, {
      type: "nok",
      message: c
    };
  }
  return {
    type: "ok",
    estree: l
  };
}
function Ie(e, t, r, i) {
  let n = i ? i - 1 : Number.POSITIVE_INFINITY, o = 0;
  return a;
  function a(l) {
    return Fe(l) ? (e.enter(r), u(l)) : t(l);
  }
  function u(l) {
    return Fe(l) && o++ < n ? (e.consume(l), u) : (e.exit(r), t(l));
  }
}
function RR(e) {
  let t = e || {}, r = t.addResult, i = t.acorn, n = t.spread, o = t.allowEmpty, a;
  if (o == null && (o = !0), i) {
    if (!i.parseExpressionAt)
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    a = Object.assign({
      ecmaVersion: 2024,
      sourceType: "module"
    }, t.acornOptions);
  } else if (t.acornOptions || t.addResult)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  return {
    flow: {
      123: {
        name: "mdxFlowExpression",
        tokenize: u,
        concrete: !0
      }
    },
    text: {
      123: {
        name: "mdxTextExpression",
        tokenize: l
      }
    }
  };
  function u(c, p, h) {
    let f = this;
    return d;
    function d(D) {
      return m(D);
    }
    function m(D) {
      return Ra.call(f, c, g, "mdxFlowExpression", "mdxFlowExpressionMarker", "mdxFlowExpressionChunk", i, a, r, n, o)(D);
    }
    function g(D) {
      return Fe(D) ? Ie(c, b, "whitespace")(D) : b(D);
    }
    function b(D) {
      let v = f.parser.constructs.flow[60], k = (Array.isArray(v) ? v : (
        /* c8 ignore next 3 -- always a list when normalized. */
        v ? [v] : []
      )).find(function(L) {
        return L.name === "mdxJsxFlowTag";
      });
      return D === 60 && k ? c.attempt(k, b, h)(D) : D === null || ne(D) ? p(D) : h(D);
    }
  }
  function l(c, p) {
    let h = this;
    return f;
    function f(d) {
      return Ra.call(h, c, p, "mdxTextExpression", "mdxTextExpressionMarker", "mdxTextExpressionChunk", i, a, r, n, o, !0)(d);
    }
  }
}
function Jb(e, t, r, i, n, o, a, u, l, c, p, h, f, d, m, g, b, D, v, S, k, L, C, w, T, _, q, O, $, V, K, M) {
  let R = this, U, Y;
  return ee;
  function ee(E) {
    return e.enter(u), e.enter(l), e.consume(E), e.exit(l), I;
  }
  function I(E) {
    return tt(E) ? r(E) : (U = se, x(E));
  }
  function se(E) {
    if (E === 47)
      return e.enter(c), e.consume(E), e.exit(c), U = Me, x;
    if (E === 62)
      return Ve(E);
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(h), e.enter(f), e.consume(E), N;
    B(E, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (E === 33 ? " (note: to create a comment in MDX\
, use `{/* text */}`)" : ""));
  }
  function Me(E) {
    if (E === 62)
      return Ve(E);
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(h), e.enter(f), e.consume(E), N;
    B(E, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (E === 42 || E === 47 ? " (note: JS comments in\
 JSX tags are not supported in MDX)" : ""));
  }
  function N(E) {
    if (E !== null && E >= 0 && En(E, {
      jsx: !0
    }))
      return e.consume(E), N;
    if (E === 46 || E === 47 || E === 58 || E === 62 || E === 123 || tt(E) || Xr(E))
      return e.exit(f), U = Oe, x(E);
    B(E, "in name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (E === 64 ?
    " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function Oe(E) {
    if (E === 46)
      return e.enter(d), e.consume(E), e.exit(d), U = Pe, x;
    if (E === 58)
      return e.enter(g), e.consume(E), e.exit(g), U = Be, x;
    if (E === 47 || E === 62 || E === 123 || E !== null && E >= 0 && Xt(E))
      return e.exit(h), X(E);
    B(E, "after name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the en\
d of the tag");
  }
  function Pe(E) {
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(m), e.consume(E), ce;
    B(E, "before member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; o\
r the end of the tag");
  }
  function ce(E) {
    if (E !== null && E >= 0 && En(E, {
      jsx: !0
    }))
      return e.consume(E), ce;
    if (E === 46 || E === 47 || E === 62 || E === 123 || tt(E) || Xr(E))
      return e.exit(m), U = Dt, x(E);
    B(E, "in member name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (E ===
    64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function Dt(E) {
    if (E === 46)
      return e.enter(d), e.consume(E), e.exit(d), U = Pe, x;
    if (E === 47 || E === 62 || E === 123 || E !== null && E >= 0 && Xt(E))
      return e.exit(h), X(E);
    B(E, "after member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or\
 the end of the tag");
  }
  function Be(E) {
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(b), e.consume(E), Z;
    B(E, "before local name", "a character that can start a name, such as a letter, `$`, or `_`" + (E === 43 || E !== null && E > 46 && E < 58 ?
    " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function Z(E) {
    if (E !== null && E >= 0 && En(E, {
      jsx: !0
    }))
      return e.consume(E), Z;
    if (E === 47 || E === 62 || E === 123 || tt(E) || Xr(E))
      return e.exit(b), U = de, x(E);
    B(E, "in local name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function de(E) {
    if (E === 47 || E === 62 || E === 123 || E !== null && E >= 0 && Xt(E))
      return e.exit(h), X(E);
    B(E, "after local name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or \
the end of the tag");
  }
  function X(E) {
    if (E === 47)
      return e.enter(p), e.consume(E), e.exit(p), U = oe, x;
    if (E === 62)
      return Ve(E);
    if (E === 123)
      return Ra.call(R, e, te, D, v, S, i, n, o, !0, !1, a)(E);
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(k), e.enter(L), e.enter(C), e.consume(E), pe;
    B(E, "before attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes\
; or the end of the tag");
  }
  function te(E) {
    return U = X, x(E);
  }
  function pe(E) {
    if (E !== null && E >= 0 && En(E, {
      jsx: !0
    }))
      return e.consume(E), pe;
    if (E === 47 || E === 58 || E === 61 || E === 62 || E === 123 || tt(E) || Xr(E))
      return e.exit(C), U = me, x(E);
    B(E, "in attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace befor\
e attributes; or the end of the tag");
  }
  function me(E) {
    if (E === 58)
      return e.enter(w), e.consume(E), e.exit(w), U = De, x;
    if (E === 61)
      return e.exit(L), e.enter(_), e.consume(E), e.exit(_), U = Re, x;
    if (E === 47 || E === 62 || E === 123 || tt(E) || Xr(E) || E !== null && E >= 0 && Xt(E))
      return e.exit(L), e.exit(k), U = X, x(E);
    B(E, "after attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or\
 the end of the tag");
  }
  function De(E) {
    if (E !== null && E >= 0 && Xt(E))
      return e.enter(T), e.consume(E), He;
    B(E, "before local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a va\
lue; or the end of the tag");
  }
  function He(E) {
    if (E !== null && E >= 0 && En(E, {
      jsx: !0
    }))
      return e.consume(E), He;
    if (E === 47 || E === 61 || E === 62 || E === 123 || tt(E) || Xr(E))
      return e.exit(T), e.exit(L), U = pt, x(E);
    B(E, "in local attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace\
 before attributes; or the end of the tag");
  }
  function pt(E) {
    if (E === 61)
      return e.enter(_), e.consume(E), e.exit(_), U = Re, x;
    if (E === 47 || E === 62 || E === 123 || E !== null && E >= 0 && Xt(E))
      return e.exit(k), X(E);
    B(E, "after local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a val\
ue; or the end of the tag");
  }
  function Re(E) {
    if (E === 34 || E === 39)
      return e.enter(q), e.enter(O), e.consume(E), e.exit(O), Y = E, Ut;
    if (E === 123)
      return Ra.call(R, e, Vt, V, K, M, i, n, o, !1, !1, a)(E);
    B(E, "before attribute value", "a character that can start an attribute value, such as `\"`, `'`, or `{`" + (E === 60 ? " (note: to use \
an element or fragment as a prop value in MDX, use `{<element />}`)" : ""));
  }
  function Vt(E) {
    return e.exit(k), U = X, x(E);
  }
  function Ut(E) {
    return E === null && B(E, "in attribute value", "a corresponding closing quote `" + String.fromCodePoint(Y) + "`"), E === Y ? (e.enter(O),
    e.consume(E), e.exit(O), e.exit(q), e.exit(k), Y = void 0, U = X, x) : ne(E) ? (U = Ut, x(E)) : (e.enter($), ur(E));
  }
  function ur(E) {
    return E === null || E === Y || ne(E) ? (e.exit($), Ut(E)) : (e.consume(E), ur);
  }
  function oe(E) {
    if (E === 62)
      return Ve(E);
    B(E, "after self-closing slash", "`>` to end the tag" + (E === 42 || E === 47 ? " (note: JS comments in JSX tags are not supported in MD\
X)" : ""));
  }
  function Ve(E) {
    return e.enter(l), e.consume(E), e.exit(l), e.exit(u), t;
  }
  function x(E) {
    return ne(E) ? (e.enter("lineEnding"), e.consume(E), e.exit("lineEnding"), F) : Fe(E) || Xr(E) ? (e.enter("esWhitespace"), y(E)) : U(E);
  }
  function y(E) {
    return ne(E) ? (e.exit("esWhitespace"), x(E)) : Fe(E) || Xr(E) ? (e.consume(E), y) : (e.exit("esWhitespace"), U(E));
  }
  function F(E) {
    if (!a && R.parser.lazy[R.now().line]) {
      let j = new ke("Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a l\
ist, etc", R.now(), "micromark-extension-mdx-jsx:unexpected-lazy");
      throw j.url = eb + "#unexpected-lazy-line-in-container-expected-line-to-be", j;
    }
    return x(E);
  }
  function B(E, j, W) {
    let z = new ke("Unexpected " + (E === null ? "end of file" : "character `" + (E === 96 ? "` ` `" : String.fromCodePoint(E)) + "` (" + NR(
    E) + ")") + " " + j + ", expected " + W, R.now(), "micromark-extension-mdx-jsx:unexpected-" + (E === null ? "eof" : "character"));
    throw z.url = eb + (E === null ? "#unexpected-end-of-file-at-expected-expect" : "#unexpected-character-at-expected-expect"), z;
  }
}
function NR(e) {
  return "U+" + e.toString(16).toUpperCase().padStart(4, "0");
}
function LR(e, t) {
  return {
    name: "mdxJsxTextTag",
    tokenize: r
  };
  function r(i, n, o) {
    return Jb.call(this, i, n, o, e, t.acornOptions, t.addResult, !0, "mdxJsxTextTag", "mdxJsxTextTagMarker", "mdxJsxTextTagClosingMarker", "\
mdxJsxTextTagSelfClosingMarker", "mdxJsxTextTagName", "mdxJsxTextTagNamePrimary", "mdxJsxTextTagNameMemberMarker", "mdxJsxTextTagNameMember",
    "mdxJsxTextTagNamePrefixMarker", "mdxJsxTextTagNameLocal", "mdxJsxTextTagExpressionAttribute", "mdxJsxTextTagExpressionAttributeMarker",
    "mdxJsxTextTagExpressionAttributeValue", "mdxJsxTextTagAttribute", "mdxJsxTextTagAttributeName", "mdxJsxTextTagAttributeNamePrimary", "m\
dxJsxTextTagAttributeNamePrefixMarker", "mdxJsxTextTagAttributeNameLocal", "mdxJsxTextTagAttributeInitializerMarker", "mdxJsxTextTagAttribut\
eValueLiteral", "mdxJsxTextTagAttributeValueLiteralMarker", "mdxJsxTextTagAttributeValueLiteralValue", "mdxJsxTextTagAttributeValueExpressio\
n", "mdxJsxTextTagAttributeValueExpressionMarker", "mdxJsxTextTagAttributeValueExpressionValue");
  }
}
function MR(e, t) {
  return {
    name: "mdxJsxFlowTag",
    tokenize: r,
    concrete: !0
  };
  function r(i, n, o) {
    let a = this;
    return u;
    function u(h) {
      return l(h);
    }
    function l(h) {
      return Jb.call(a, i, c, o, e, t.acornOptions, t.addResult, !1, "mdxJsxFlowTag", "mdxJsxFlowTagMarker", "mdxJsxFlowTagClosingMarker", "\
mdxJsxFlowTagSelfClosingMarker", "mdxJsxFlowTagName", "mdxJsxFlowTagNamePrimary", "mdxJsxFlowTagNameMemberMarker", "mdxJsxFlowTagNameMember",
      "mdxJsxFlowTagNamePrefixMarker", "mdxJsxFlowTagNameLocal", "mdxJsxFlowTagExpressionAttribute", "mdxJsxFlowTagExpressionAttributeMarker",
      "mdxJsxFlowTagExpressionAttributeValue", "mdxJsxFlowTagAttribute", "mdxJsxFlowTagAttributeName", "mdxJsxFlowTagAttributeNamePrimary", "\
mdxJsxFlowTagAttributeNamePrefixMarker", "mdxJsxFlowTagAttributeNameLocal", "mdxJsxFlowTagAttributeInitializerMarker", "mdxJsxFlowTagAttribu\
teValueLiteral", "mdxJsxFlowTagAttributeValueLiteralMarker", "mdxJsxFlowTagAttributeValueLiteralValue", "mdxJsxFlowTagAttributeValueExpressi\
on", "mdxJsxFlowTagAttributeValueExpressionMarker", "mdxJsxFlowTagAttributeValueExpressionValue")(h);
    }
    function c(h) {
      return Fe(h) ? Ie(i, p, "whitespace")(h) : p(h);
    }
    function p(h) {
      let f = a.parser.constructs.flow[123], m = (Array.isArray(f) ? f : f ? [f] : []).find((g) => g.name === "mdxFlowExpression");
      return h === 60 ? (
        // We can’t just say: fine. Lines of blocks have to be parsed until an eol/eof.
        u(h)
      ) : h === 123 && m ? i.attempt(m, p, o)(h) : h === null || ne(h) ? n(h) : o(h);
    }
  }
}
function jR(e) {
  let t = e || {}, r = t.acorn, i;
  if (r) {
    if (!r.parse || !r.parseExpressionAt)
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    i = Object.assign({
      ecmaVersion: 2024,
      sourceType: "module"
    }, t.acornOptions, {
      locations: !0
    });
  } else if (t.acornOptions || t.addResult)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  return {
    flow: {
      60: MR(r || void 0, {
        acornOptions: i,
        addResult: t.addResult || void 0
      })
    },
    text: {
      60: LR(r || void 0, {
        acornOptions: i,
        addResult: t.addResult || void 0
      })
    }
  };
}
function qR() {
  return {
    disable: { null: ["autolink", "codeIndented", "htmlFlow", "htmlText"] }
  };
}
function Br(e, t, r, i) {
  let n = e.length, o = 0, a;
  if (t < 0 ? t = -t > n ? 0 : n + t : t = t > n ? n : t, r = r > 0 ? r : 0, i.length < 1e4)
    a = Array.from(i), a.unshift(t, r), e.splice(...a);
  else
    for (r && e.splice(t, r); o < i.length; )
      a = i.slice(o, o + 1e4), a.unshift(t, 0), e.splice(...a), o += 1e4, t += 1e4;
}
function rr(e, t) {
  return e.length > 0 ? (Br(e, e.length, 0, t), e) : t;
}
function tb(e) {
  if (e === null || tt(e) || Xr(e))
    return 1;
  if (bR(e))
    return 2;
}
function _h(e, t, r) {
  let i = [], n = -1;
  for (; ++n < e.length; ) {
    let o = e[n].resolveAll;
    o && !i.includes(o) && (t = o(t, r), i.push(o));
  }
  return t;
}
function $R(e, t) {
  let r = -1, i, n, o, a, u, l, c, p;
  for (; ++r < e.length; )
    if (e[r][0] === "enter" && e[r][1].type === "attentionSequence" && e[r][1]._close) {
      for (i = r; i--; )
        if (e[i][0] === "exit" && e[i][1].type === "attentionSequence" && e[i][1]._open && // If the markers are the same:
        t.sliceSerialize(e[i][1]).charCodeAt(0) === t.sliceSerialize(e[r][1]).charCodeAt(0)) {
          if ((e[i][1]._close || e[r][1]._open) && (e[r][1].end.offset - e[r][1].start.offset) % 3 && !((e[i][1].end.offset - e[i][1].start.
          offset + e[r][1].end.offset - e[r][1].start.offset) % 3))
            continue;
          l = e[i][1].end.offset - e[i][1].start.offset > 1 && e[r][1].end.offset - e[r][1].start.offset > 1 ? 2 : 1;
          let h = Object.assign({}, e[i][1].end), f = Object.assign({}, e[r][1].start);
          rb(h, -l), rb(f, l), a = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: h,
            end: Object.assign({}, e[i][1].end)
          }, u = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, e[r][1].start),
            end: f
          }, o = {
            type: l > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, e[i][1].end),
            end: Object.assign({}, e[r][1].start)
          }, n = {
            type: l > 1 ? "strong" : "emphasis",
            start: Object.assign({}, a.start),
            end: Object.assign({}, u.end)
          }, e[i][1].end = Object.assign({}, a.start), e[r][1].start = Object.assign({}, u.end), c = [], e[i][1].end.offset - e[i][1].start.
          offset && (c = rr(c, [
            ["enter", e[i][1], t],
            ["exit", e[i][1], t]
          ])), c = rr(c, [
            ["enter", n, t],
            ["enter", a, t],
            ["exit", a, t],
            ["enter", o, t]
          ]), c = rr(
            c,
            _h(
              t.parser.constructs.insideSpan.null,
              e.slice(i + 1, r),
              t
            )
          ), c = rr(c, [
            ["exit", o, t],
            ["enter", u, t],
            ["exit", u, t],
            ["exit", n, t]
          ]), e[r][1].end.offset - e[r][1].start.offset ? (p = 2, c = rr(c, [
            ["enter", e[r][1], t],
            ["exit", e[r][1], t]
          ])) : p = 0, Br(e, i - 1, r - i + 3, c), r = i + c.length - p - 2;
          break;
        }
    }
  for (r = -1; ++r < e.length; )
    e[r][1].type === "attentionSequence" && (e[r][1].type = "data");
  return e;
}
function VR(e, t) {
  let r = this.parser.constructs.attentionMarkers.null, i = this.previous, n = tb(i), o;
  return a;
  function a(l) {
    return o = l, e.enter("attentionSequence"), u(l);
  }
  function u(l) {
    if (l === o)
      return e.consume(l), u;
    let c = e.exit("attentionSequence"), p = tb(l), h = !p || p === 2 && n || r.includes(l), f = !n || n === 2 && p || r.includes(i);
    return c._open = !!(o === 42 ? h : h && (n || !f)), c._close = !!(o === 42 ? f : f && (p || !h)), t(l);
  }
}
function rb(e, t) {
  e.column += t, e.offset += t, e._bufferIndex += t;
}
function WR(e, t, r) {
  let i = 0;
  return n;
  function n(d) {
    return e.enter("autolink"), e.enter("autolinkMarker"), e.consume(d), e.exit("autolinkMarker"), e.enter("autolinkProtocol"), o;
  }
  function o(d) {
    return gr(d) ? (e.consume(d), a) : c(d);
  }
  function a(d) {
    return d === 43 || d === 45 || d === 46 || jt(d) ? (i = 1, u(d)) : c(d);
  }
  function u(d) {
    return d === 58 ? (e.consume(d), i = 0, l) : (d === 43 || d === 45 || d === 46 || jt(d)) && i++ < 32 ? (e.consume(d), u) : (i = 0, c(d));
  }
  function l(d) {
    return d === 62 ? (e.exit("autolinkProtocol"), e.enter("autolinkMarker"), e.consume(d), e.exit("autolinkMarker"), e.exit("autolink"), t) :
    d === null || d === 32 || d === 60 || vh(d) ? r(d) : (e.consume(d), l);
  }
  function c(d) {
    return d === 64 ? (e.consume(d), p) : xR(d) ? (e.consume(d), c) : r(d);
  }
  function p(d) {
    return jt(d) ? h(d) : r(d);
  }
  function h(d) {
    return d === 46 ? (e.consume(d), i = 0, p) : d === 62 ? (e.exit("autolinkProtocol").type = "autolinkEmail", e.enter("autolinkMarker"), e.
    consume(d), e.exit("autolinkMarker"), e.exit("autolink"), t) : f(d);
  }
  function f(d) {
    if ((d === 45 || jt(d)) && i++ < 63) {
      let m = d === 45 ? f : h;
      return e.consume(d), m;
    }
    return r(d);
  }
}
function zR(e, t, r) {
  return i;
  function i(o) {
    return Fe(o) ? Ie(e, n, "linePrefix")(o) : n(o);
  }
  function n(o) {
    return o === null || ne(o) ? t(o) : r(o);
  }
}
function HR(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    if (a === 62) {
      let u = i.containerState;
      return u.open || (e.enter("blockQuote", {
        _container: !0
      }), u.open = !0), e.enter("blockQuotePrefix"), e.enter("blockQuoteMarker"), e.consume(a), e.exit("blockQuoteMarker"), o;
    }
    return r(a);
  }
  function o(a) {
    return Fe(a) ? (e.enter("blockQuotePrefixWhitespace"), e.consume(a), e.exit("blockQuotePrefixWhitespace"), e.exit("blockQuotePrefix"), t) :
    (e.exit("blockQuotePrefix"), t(a));
  }
}
function JR(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return Fe(a) ? Ie(
      e,
      o,
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(a) : o(a);
  }
  function o(a) {
    return e.attempt(Gb, t, r)(a);
  }
}
function GR(e) {
  e.exit("blockQuote");
}
function XR(e, t, r) {
  return i;
  function i(o) {
    return e.enter("characterEscape"), e.enter("escapeMarker"), e.consume(o), e.exit("escapeMarker"), n;
  }
  function n(o) {
    return zb(o) ? (e.enter("characterEscapeValue"), e.consume(o), e.exit("characterEscapeValue"), e.exit("characterEscape"), t) : r(o);
  }
}
function KR(e, t, r) {
  let i = this, n = 0, o, a;
  return u;
  function u(h) {
    return e.enter("characterReference"), e.enter("characterReferenceMarker"), e.consume(h), e.exit("characterReferenceMarker"), l;
  }
  function l(h) {
    return h === 35 ? (e.enter("characterReferenceMarkerNumeric"), e.consume(h), e.exit("characterReferenceMarkerNumeric"), c) : (e.enter("c\
haracterReferenceValue"), o = 31, a = jt, p(h));
  }
  function c(h) {
    return h === 88 || h === 120 ? (e.enter("characterReferenceMarkerHexadecimal"), e.consume(h), e.exit("characterReferenceMarkerHexadecima\
l"), e.enter("characterReferenceValue"), o = 6, a = ER, p) : (e.enter("characterReferenceValue"), o = 7, a = Ch, p(h));
  }
  function p(h) {
    if (h === 59 && n) {
      let f = e.exit("characterReferenceValue");
      return a === jt && !Rs(i.sliceSerialize(f)) ? r(h) : (e.enter("characterReferenceMarker"), e.consume(h), e.exit("characterReferenceMar\
ker"), e.exit("characterReference"), t);
    }
    return a(h) && n++ < o ? (e.consume(h), p) : r(h);
  }
}
function YR(e, t, r) {
  let i = this, n = {
    tokenize: L,
    partial: !0
  }, o = 0, a = 0, u;
  return l;
  function l(C) {
    return c(C);
  }
  function c(C) {
    let w = i.events[i.events.length - 1];
    return o = w && w[1].type === "linePrefix" ? w[2].sliceSerialize(w[1], !0).length : 0, u = C, e.enter("codeFenced"), e.enter("codeFenced\
Fence"), e.enter("codeFencedFenceSequence"), p(C);
  }
  function p(C) {
    return C === u ? (a++, e.consume(C), p) : a < 3 ? r(C) : (e.exit("codeFencedFenceSequence"), Fe(C) ? Ie(e, h, "whitespace")(C) : h(C));
  }
  function h(C) {
    return C === null || ne(C) ? (e.exit("codeFencedFence"), i.interrupt ? t(C) : e.check(ib, g, k)(C)) : (e.enter("codeFencedFenceInfo"), e.
    enter("chunkString", {
      contentType: "string"
    }), f(C));
  }
  function f(C) {
    return C === null || ne(C) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), h(C)) : Fe(C) ? (e.exit("chunkString"), e.exit("code\
FencedFenceInfo"), Ie(e, d, "whitespace")(C)) : C === 96 && C === u ? r(C) : (e.consume(C), f);
  }
  function d(C) {
    return C === null || ne(C) ? h(C) : (e.enter("codeFencedFenceMeta"), e.enter("chunkString", {
      contentType: "string"
    }), m(C));
  }
  function m(C) {
    return C === null || ne(C) ? (e.exit("chunkString"), e.exit("codeFencedFenceMeta"), h(C)) : C === 96 && C === u ? r(C) : (e.consume(C), m);
  }
  function g(C) {
    return e.attempt(n, k, b)(C);
  }
  function b(C) {
    return e.enter("lineEnding"), e.consume(C), e.exit("lineEnding"), D;
  }
  function D(C) {
    return o > 0 && Fe(C) ? Ie(
      e,
      v,
      "linePrefix",
      o + 1
    )(C) : v(C);
  }
  function v(C) {
    return C === null || ne(C) ? e.check(ib, g, k)(C) : (e.enter("codeFlowValue"), S(C));
  }
  function S(C) {
    return C === null || ne(C) ? (e.exit("codeFlowValue"), v(C)) : (e.consume(C), S);
  }
  function k(C) {
    return e.exit("codeFenced"), t(C);
  }
  function L(C, w, T) {
    let _ = 0;
    return q;
    function q(M) {
      return C.enter("lineEnding"), C.consume(M), C.exit("lineEnding"), O;
    }
    function O(M) {
      return C.enter("codeFencedFence"), Fe(M) ? Ie(
        C,
        $,
        "linePrefix",
        i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
      )(M) : $(M);
    }
    function $(M) {
      return M === u ? (C.enter("codeFencedFenceSequence"), V(M)) : T(M);
    }
    function V(M) {
      return M === u ? (_++, C.consume(M), V) : _ >= a ? (C.exit("codeFencedFenceSequence"), Fe(M) ? Ie(C, K, "whitespace")(M) : K(M)) : T(M);
    }
    function K(M) {
      return M === null || ne(M) ? (C.exit("codeFencedFence"), w(M)) : T(M);
    }
  }
}
function QR(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return a === null ? r(a) : (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), o);
  }
  function o(a) {
    return i.parser.lazy[i.now().line] ? r(a) : t(a);
  }
}
function e4(e, t, r) {
  let i = this;
  return n;
  function n(c) {
    return e.enter("codeIndented"), Ie(e, o, "linePrefix", 5)(c);
  }
  function o(c) {
    let p = i.events[i.events.length - 1];
    return p && p[1].type === "linePrefix" && p[2].sliceSerialize(p[1], !0).length >= 4 ? a(c) : r(c);
  }
  function a(c) {
    return c === null ? l(c) : ne(c) ? e.attempt(ZR, a, l)(c) : (e.enter("codeFlowValue"), u(c));
  }
  function u(c) {
    return c === null || ne(c) ? (e.exit("codeFlowValue"), a(c)) : (e.consume(c), u);
  }
  function l(c) {
    return e.exit("codeIndented"), t(c);
  }
}
function t4(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return i.parser.lazy[i.now().line] ? r(a) : ne(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), n) : Ie(e, o, "linePrefi\
x", 5)(a);
  }
  function o(a) {
    let u = i.events[i.events.length - 1];
    return u && u[1].type === "linePrefix" && u[2].sliceSerialize(u[1], !0).length >= 4 ? t(a) : ne(a) ? n(a) : r(a);
  }
}
function i4(e) {
  let t = e.length - 4, r = 3, i, n;
  if ((e[r][1].type === "lineEnding" || e[r][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
    for (i = r; ++i < t; )
      if (e[i][1].type === "codeTextData") {
        e[r][1].type = "codeTextPadding", e[t][1].type = "codeTextPadding", r += 2, t -= 2;
        break;
      }
  }
  for (i = r - 1, t++; ++i <= t; )
    n === void 0 ? i !== t && e[i][1].type !== "lineEnding" && (n = i) : (i === t || e[i][1].type === "lineEnding") && (e[n][1].type = "code\
TextData", i !== n + 2 && (e[n][1].end = e[i - 1][1].end, e.splice(n + 2, i - n - 2), t -= i - n - 2, i = n + 2), n = void 0);
  return e;
}
function n4(e) {
  return e !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function s4(e, t, r) {
  let i = this, n = 0, o, a;
  return u;
  function u(f) {
    return e.enter("codeText"), e.enter("codeTextSequence"), l(f);
  }
  function l(f) {
    return f === 96 ? (e.consume(f), n++, l) : (e.exit("codeTextSequence"), c(f));
  }
  function c(f) {
    return f === null ? r(f) : f === 32 ? (e.enter("space"), e.consume(f), e.exit("space"), c) : f === 96 ? (a = e.enter("codeTextSequence"),
    o = 0, h(f)) : ne(f) ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), c) : (e.enter("codeTextData"), p(f));
  }
  function p(f) {
    return f === null || f === 32 || f === 96 || ne(f) ? (e.exit("codeTextData"), c(f)) : (e.consume(f), p);
  }
  function h(f) {
    return f === 96 ? (e.consume(f), o++, h) : o === n ? (e.exit("codeTextSequence"), e.exit("codeText"), t(f)) : (a.type = "codeTextData", p(
    f));
  }
}
function Yb(e) {
  let t = {}, r = -1, i, n, o, a, u, l, c;
  for (; ++r < e.length; ) {
    for (; r in t; )
      r = t[r];
    if (i = e[r], r && i[1].type === "chunkFlow" && e[r - 1][1].type === "listItemPrefix" && (l = i[1]._tokenizer.events, o = 0, o < l.length &&
    l[o][1].type === "lineEndingBlank" && (o += 2), o < l.length && l[o][1].type === "content"))
      for (; ++o < l.length && l[o][1].type !== "content"; )
        l[o][1].type === "chunkText" && (l[o][1]._isInFirstContentOfListItem = !0, o++);
    if (i[0] === "enter")
      i[1].contentType && (Object.assign(t, o4(e, r)), r = t[r], c = !0);
    else if (i[1]._container) {
      for (o = r, n = void 0; o-- && (a = e[o], a[1].type === "lineEnding" || a[1].type === "lineEndingBlank"); )
        a[0] === "enter" && (n && (e[n][1].type = "lineEndingBlank"), a[1].type = "lineEnding", n = o);
      n && (i[1].end = Object.assign({}, e[n][1].start), u = e.slice(n, r), u.unshift(i), Br(e, n, r - n + 1, u));
    }
  }
  return !c;
}
function o4(e, t) {
  let r = e[t][1], i = e[t][2], n = t - 1, o = [], a = r._tokenizer || i.parser[r.contentType](r.start), u = a.events, l = [], c = {}, p, h,
  f = -1, d = r, m = 0, g = 0, b = [g];
  for (; d; ) {
    for (; e[++n][1] !== d; )
      ;
    o.push(n), d._tokenizer || (p = i.sliceStream(d), d.next || p.push(null), h && a.defineSkip(d.start), d._isInFirstContentOfListItem && (a.
    _gfmTasklistFirstContentOfListItem = !0), a.write(p), d._isInFirstContentOfListItem && (a._gfmTasklistFirstContentOfListItem = void 0)),
    h = d, d = d.next;
  }
  for (d = r; ++f < u.length; )
    // Find a void token that includes a break.
    u[f][0] === "exit" && u[f - 1][0] === "enter" && u[f][1].type === u[f - 1][1].type && u[f][1].start.line !== u[f][1].end.line && (g = f +
    1, b.push(g), d._tokenizer = void 0, d.previous = void 0, d = d.next);
  for (a.events = [], d ? (d._tokenizer = void 0, d.previous = void 0) : b.pop(), f = b.length; f--; ) {
    let D = u.slice(b[f], b[f + 1]), v = o.pop();
    l.unshift([v, v + D.length - 1]), Br(e, v, 2, D);
  }
  for (f = -1; ++f < l.length; )
    c[m + l[f][0]] = m + l[f][1], m += l[f][1] - l[f][0] - 1;
  return c;
}
function l4(e) {
  return Yb(e), e;
}
function c4(e, t) {
  let r;
  return i;
  function i(u) {
    return e.enter("content"), r = e.enter("chunkContent", {
      contentType: "content"
    }), n(u);
  }
  function n(u) {
    return u === null ? o(u) : ne(u) ? e.check(
      u4,
      a,
      o
    )(u) : (e.consume(u), n);
  }
  function o(u) {
    return e.exit("chunkContent"), e.exit("content"), t(u);
  }
  function a(u) {
    return e.consume(u), e.exit("chunkContent"), r.next = e.enter("chunkContent", {
      contentType: "content",
      previous: r
    }), r = r.next, n;
  }
}
function p4(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return e.exit("chunkContent"), e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), Ie(e, o, "linePrefix");
  }
  function o(a) {
    if (a === null || ne(a))
      return r(a);
    let u = i.events[i.events.length - 1];
    return !i.parser.constructs.disable.null.includes("codeIndented") && u && u[1].type === "linePrefix" && u[2].sliceSerialize(u[1], !0).length >=
    4 ? t(a) : e.interrupt(i.parser.constructs.flow, r, t)(a);
  }
}
function Qb(e, t, r, i, n, o, a, u, l) {
  let c = l || Number.POSITIVE_INFINITY, p = 0;
  return h;
  function h(D) {
    return D === 60 ? (e.enter(i), e.enter(n), e.enter(o), e.consume(D), e.exit(o), f) : D === null || D === 32 || D === 41 || vh(D) ? r(D) :
    (e.enter(i), e.enter(a), e.enter(u), e.enter("chunkString", {
      contentType: "string"
    }), g(D));
  }
  function f(D) {
    return D === 62 ? (e.enter(o), e.consume(D), e.exit(o), e.exit(n), e.exit(i), t) : (e.enter(u), e.enter("chunkString", {
      contentType: "string"
    }), d(D));
  }
  function d(D) {
    return D === 62 ? (e.exit("chunkString"), e.exit(u), f(D)) : D === null || D === 60 || ne(D) ? r(D) : (e.consume(D), D === 92 ? m : d);
  }
  function m(D) {
    return D === 60 || D === 62 || D === 92 ? (e.consume(D), d) : d(D);
  }
  function g(D) {
    return !p && (D === null || D === 41 || tt(D)) ? (e.exit("chunkString"), e.exit(u), e.exit(a), e.exit(i), t(D)) : p < c && D === 40 ? (e.
    consume(D), p++, g) : D === 41 ? (e.consume(D), p--, g) : D === null || D === 32 || D === 40 || vh(D) ? r(D) : (e.consume(D), D === 92 ?
    b : g);
  }
  function b(D) {
    return D === 40 || D === 41 || D === 92 ? (e.consume(D), g) : g(D);
  }
}
function Zb(e, t, r, i, n, o) {
  let a = this, u = 0, l;
  return c;
  function c(d) {
    return e.enter(i), e.enter(n), e.consume(d), e.exit(n), e.enter(o), p;
  }
  function p(d) {
    return u > 999 || d === null || d === 91 || d === 93 && !l || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    d === 94 && !u && "_hiddenFootnoteSupport" in a.parser.constructs ? r(d) : d === 93 ? (e.exit(o), e.enter(n), e.consume(d), e.exit(n), e.
    exit(i), t) : ne(d) ? (e.enter("lineEnding"), e.consume(d), e.exit("lineEnding"), p) : (e.enter("chunkString", {
      contentType: "string"
    }), h(d));
  }
  function h(d) {
    return d === null || d === 91 || d === 93 || ne(d) || u++ > 999 ? (e.exit("chunkString"), p(d)) : (e.consume(d), l || (l = !Fe(d)), d ===
    92 ? f : h);
  }
  function f(d) {
    return d === 91 || d === 92 || d === 93 ? (e.consume(d), u++, h) : h(d);
  }
}
function e1(e, t, r, i, n, o) {
  let a;
  return u;
  function u(f) {
    return f === 34 || f === 39 || f === 40 ? (e.enter(i), e.enter(n), e.consume(f), e.exit(n), a = f === 40 ? 41 : f, l) : r(f);
  }
  function l(f) {
    return f === a ? (e.enter(n), e.consume(f), e.exit(n), e.exit(i), t) : (e.enter(o), c(f));
  }
  function c(f) {
    return f === a ? (e.exit(o), l(a)) : f === null ? r(f) : ne(f) ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), Ie(e, c, "l\
inePrefix")) : (e.enter("chunkString", {
      contentType: "string"
    }), p(f));
  }
  function p(f) {
    return f === a || f === null || ne(f) ? (e.exit("chunkString"), c(f)) : (e.consume(f), f === 92 ? h : p);
  }
  function h(f) {
    return f === a || f === 92 ? (e.consume(f), p) : p(f);
  }
}
function Ps(e, t) {
  let r;
  return i;
  function i(n) {
    return ne(n) ? (e.enter("lineEnding"), e.consume(n), e.exit("lineEnding"), r = !0, i) : Fe(n) ? Ie(
      e,
      i,
      r ? "linePrefix" : "lineSuffix"
    )(n) : t(n);
  }
}
function Pn(e) {
  return e.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
function d4(e, t, r) {
  let i = this, n;
  return o;
  function o(d) {
    return e.enter("definition"), a(d);
  }
  function a(d) {
    return Zb.call(
      i,
      e,
      u,
      // Note: we don’t need to reset the way `markdown-rs` does.
      r,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(d);
  }
  function u(d) {
    return n = Pn(
      i.sliceSerialize(i.events[i.events.length - 1][1]).slice(1, -1)
    ), d === 58 ? (e.enter("definitionMarker"), e.consume(d), e.exit("definitionMarker"), l) : r(d);
  }
  function l(d) {
    return tt(d) ? Ps(e, c)(d) : c(d);
  }
  function c(d) {
    return Qb(
      e,
      p,
      // Note: we don’t need to reset the way `markdown-rs` does.
      r,
      "definitionDestination",
      "definitionDestinationLiteral",
      "definitionDestinationLiteralMarker",
      "definitionDestinationRaw",
      "definitionDestinationString"
    )(d);
  }
  function p(d) {
    return e.attempt(f4, h, h)(d);
  }
  function h(d) {
    return Fe(d) ? Ie(e, f, "whitespace")(d) : f(d);
  }
  function f(d) {
    return d === null || ne(d) ? (e.exit("definition"), i.parser.defined.push(n), t(d)) : r(d);
  }
}
function m4(e, t, r) {
  return i;
  function i(u) {
    return tt(u) ? Ps(e, n)(u) : r(u);
  }
  function n(u) {
    return e1(
      e,
      o,
      r,
      "definitionTitle",
      "definitionTitleMarker",
      "definitionTitleString"
    )(u);
  }
  function o(u) {
    return Fe(u) ? Ie(e, a, "whitespace")(u) : a(u);
  }
  function a(u) {
    return u === null || ne(u) ? t(u) : r(u);
  }
}
function D4(e, t, r) {
  return i;
  function i(o) {
    return e.enter("hardBreakEscape"), e.consume(o), n;
  }
  function n(o) {
    return ne(o) ? (e.exit("hardBreakEscape"), t(o)) : r(o);
  }
}
function x4(e, t) {
  let r = e.length - 2, i = 3, n, o;
  return e[i][1].type === "whitespace" && (i += 2), r - 2 > i && e[r][1].type === "whitespace" && (r -= 2), e[r][1].type === "atxHeadingSequ\
ence" && (i === r - 1 || r - 4 > i && e[r - 2][1].type === "whitespace") && (r -= i + 1 === r ? 2 : 4), r > i && (n = {
    type: "atxHeadingText",
    start: e[i][1].start,
    end: e[r][1].end
  }, o = {
    type: "chunkText",
    start: e[i][1].start,
    end: e[r][1].end,
    contentType: "text"
  }, Br(e, i, r - i + 1, [
    ["enter", n, t],
    ["enter", o, t],
    ["exit", o, t],
    ["exit", n, t]
  ])), e;
}
function E4(e, t, r) {
  let i = 0;
  return n;
  function n(p) {
    return e.enter("atxHeading"), o(p);
  }
  function o(p) {
    return e.enter("atxHeadingSequence"), a(p);
  }
  function a(p) {
    return p === 35 && i++ < 6 ? (e.consume(p), a) : p === null || tt(p) ? (e.exit("atxHeadingSequence"), u(p)) : r(p);
  }
  function u(p) {
    return p === 35 ? (e.enter("atxHeadingSequence"), l(p)) : p === null || ne(p) ? (e.exit("atxHeading"), t(p)) : Fe(p) ? Ie(e, u, "whitesp\
ace")(p) : (e.enter("atxHeadingText"), c(p));
  }
  function l(p) {
    return p === 35 ? (e.consume(p), l) : (e.exit("atxHeadingSequence"), u(p));
  }
  function c(p) {
    return p === null || p === 35 || tt(p) ? (e.exit("atxHeadingText"), u(p)) : (e.consume(p), c);
  }
}
function A4(e) {
  let t = e.length;
  for (; t-- && !(e[t][0] === "enter" && e[t][1].type === "htmlFlow"); )
    ;
  return t > 1 && e[t - 2][1].type === "linePrefix" && (e[t][1].start = e[t - 2][1].start, e[t + 1][1].start = e[t - 2][1].start, e.splice(t -
  2, 2)), e;
}
function S4(e, t, r) {
  let i = this, n, o, a, u, l;
  return c;
  function c(N) {
    return p(N);
  }
  function p(N) {
    return e.enter("htmlFlow"), e.enter("htmlFlowData"), e.consume(N), h;
  }
  function h(N) {
    return N === 33 ? (e.consume(N), f) : N === 47 ? (e.consume(N), o = !0, g) : N === 63 ? (e.consume(N), n = 3, i.interrupt ? t : I) : gr(
    N) ? (e.consume(N), a = String.fromCharCode(N), b) : r(N);
  }
  function f(N) {
    return N === 45 ? (e.consume(N), n = 2, d) : N === 91 ? (e.consume(N), n = 5, u = 0, m) : gr(N) ? (e.consume(N), n = 4, i.interrupt ? t :
    I) : r(N);
  }
  function d(N) {
    return N === 45 ? (e.consume(N), i.interrupt ? t : I) : r(N);
  }
  function m(N) {
    let Oe = "CDATA[";
    return N === Oe.charCodeAt(u++) ? (e.consume(N), u === Oe.length ? i.interrupt ? t : $ : m) : r(N);
  }
  function g(N) {
    return gr(N) ? (e.consume(N), a = String.fromCharCode(N), b) : r(N);
  }
  function b(N) {
    if (N === null || N === 47 || N === 62 || tt(N)) {
      let Oe = N === 47, Pe = a.toLowerCase();
      return !Oe && !o && sb.includes(Pe) ? (n = 1, i.interrupt ? t(N) : $(N)) : b4.includes(a.toLowerCase()) ? (n = 6, Oe ? (e.consume(N), D) :
      i.interrupt ? t(N) : $(N)) : (n = 7, i.interrupt && !i.parser.lazy[i.now().line] ? r(N) : o ? v(N) : S(N));
    }
    return N === 45 || jt(N) ? (e.consume(N), a += String.fromCharCode(N), b) : r(N);
  }
  function D(N) {
    return N === 62 ? (e.consume(N), i.interrupt ? t : $) : r(N);
  }
  function v(N) {
    return Fe(N) ? (e.consume(N), v) : q(N);
  }
  function S(N) {
    return N === 47 ? (e.consume(N), q) : N === 58 || N === 95 || gr(N) ? (e.consume(N), k) : Fe(N) ? (e.consume(N), S) : q(N);
  }
  function k(N) {
    return N === 45 || N === 46 || N === 58 || N === 95 || jt(N) ? (e.consume(N), k) : L(N);
  }
  function L(N) {
    return N === 61 ? (e.consume(N), C) : Fe(N) ? (e.consume(N), L) : S(N);
  }
  function C(N) {
    return N === null || N === 60 || N === 61 || N === 62 || N === 96 ? r(N) : N === 34 || N === 39 ? (e.consume(N), l = N, w) : Fe(N) ? (e.
    consume(N), C) : T(N);
  }
  function w(N) {
    return N === l ? (e.consume(N), l = null, _) : N === null || ne(N) ? r(N) : (e.consume(N), w);
  }
  function T(N) {
    return N === null || N === 34 || N === 39 || N === 47 || N === 60 || N === 61 || N === 62 || N === 96 || tt(N) ? L(N) : (e.consume(N), T);
  }
  function _(N) {
    return N === 47 || N === 62 || Fe(N) ? S(N) : r(N);
  }
  function q(N) {
    return N === 62 ? (e.consume(N), O) : r(N);
  }
  function O(N) {
    return N === null || ne(N) ? $(N) : Fe(N) ? (e.consume(N), O) : r(N);
  }
  function $(N) {
    return N === 45 && n === 2 ? (e.consume(N), R) : N === 60 && n === 1 ? (e.consume(N), U) : N === 62 && n === 4 ? (e.consume(N), se) : N ===
    63 && n === 3 ? (e.consume(N), I) : N === 93 && n === 5 ? (e.consume(N), ee) : ne(N) && (n === 6 || n === 7) ? (e.exit("htmlFlowData"), e.
    check(
      C4,
      Me,
      V
    )(N)) : N === null || ne(N) ? (e.exit("htmlFlowData"), V(N)) : (e.consume(N), $);
  }
  function V(N) {
    return e.check(
      w4,
      K,
      Me
    )(N);
  }
  function K(N) {
    return e.enter("lineEnding"), e.consume(N), e.exit("lineEnding"), M;
  }
  function M(N) {
    return N === null || ne(N) ? V(N) : (e.enter("htmlFlowData"), $(N));
  }
  function R(N) {
    return N === 45 ? (e.consume(N), I) : $(N);
  }
  function U(N) {
    return N === 47 ? (e.consume(N), a = "", Y) : $(N);
  }
  function Y(N) {
    if (N === 62) {
      let Oe = a.toLowerCase();
      return sb.includes(Oe) ? (e.consume(N), se) : $(N);
    }
    return gr(N) && a.length < 8 ? (e.consume(N), a += String.fromCharCode(N), Y) : $(N);
  }
  function ee(N) {
    return N === 93 ? (e.consume(N), I) : $(N);
  }
  function I(N) {
    return N === 62 ? (e.consume(N), se) : N === 45 && n === 2 ? (e.consume(N), I) : $(N);
  }
  function se(N) {
    return N === null || ne(N) ? (e.exit("htmlFlowData"), Me(N)) : (e.consume(N), se);
  }
  function Me(N) {
    return e.exit("htmlFlow"), t(N);
  }
}
function F4(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return ne(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), o) : r(a);
  }
  function o(a) {
    return i.parser.lazy[i.now().line] ? r(a) : t(a);
  }
}
function _4(e, t, r) {
  return i;
  function i(n) {
    return e.enter("lineEnding"), e.consume(n), e.exit("lineEnding"), e.attempt(Ls, t, r);
  }
}
function T4(e, t, r) {
  let i = this, n, o, a;
  return u;
  function u(I) {
    return e.enter("htmlText"), e.enter("htmlTextData"), e.consume(I), l;
  }
  function l(I) {
    return I === 33 ? (e.consume(I), c) : I === 47 ? (e.consume(I), L) : I === 63 ? (e.consume(I), S) : gr(I) ? (e.consume(I), T) : r(I);
  }
  function c(I) {
    return I === 45 ? (e.consume(I), p) : I === 91 ? (e.consume(I), o = 0, m) : gr(I) ? (e.consume(I), v) : r(I);
  }
  function p(I) {
    return I === 45 ? (e.consume(I), d) : r(I);
  }
  function h(I) {
    return I === null ? r(I) : I === 45 ? (e.consume(I), f) : ne(I) ? (a = h, U(I)) : (e.consume(I), h);
  }
  function f(I) {
    return I === 45 ? (e.consume(I), d) : h(I);
  }
  function d(I) {
    return I === 62 ? R(I) : I === 45 ? f(I) : h(I);
  }
  function m(I) {
    let se = "CDATA[";
    return I === se.charCodeAt(o++) ? (e.consume(I), o === se.length ? g : m) : r(I);
  }
  function g(I) {
    return I === null ? r(I) : I === 93 ? (e.consume(I), b) : ne(I) ? (a = g, U(I)) : (e.consume(I), g);
  }
  function b(I) {
    return I === 93 ? (e.consume(I), D) : g(I);
  }
  function D(I) {
    return I === 62 ? R(I) : I === 93 ? (e.consume(I), D) : g(I);
  }
  function v(I) {
    return I === null || I === 62 ? R(I) : ne(I) ? (a = v, U(I)) : (e.consume(I), v);
  }
  function S(I) {
    return I === null ? r(I) : I === 63 ? (e.consume(I), k) : ne(I) ? (a = S, U(I)) : (e.consume(I), S);
  }
  function k(I) {
    return I === 62 ? R(I) : S(I);
  }
  function L(I) {
    return gr(I) ? (e.consume(I), C) : r(I);
  }
  function C(I) {
    return I === 45 || jt(I) ? (e.consume(I), C) : w(I);
  }
  function w(I) {
    return ne(I) ? (a = w, U(I)) : Fe(I) ? (e.consume(I), w) : R(I);
  }
  function T(I) {
    return I === 45 || jt(I) ? (e.consume(I), T) : I === 47 || I === 62 || tt(I) ? _(I) : r(I);
  }
  function _(I) {
    return I === 47 ? (e.consume(I), R) : I === 58 || I === 95 || gr(I) ? (e.consume(I), q) : ne(I) ? (a = _, U(I)) : Fe(I) ? (e.consume(I),
    _) : R(I);
  }
  function q(I) {
    return I === 45 || I === 46 || I === 58 || I === 95 || jt(I) ? (e.consume(I), q) : O(I);
  }
  function O(I) {
    return I === 61 ? (e.consume(I), $) : ne(I) ? (a = O, U(I)) : Fe(I) ? (e.consume(I), O) : _(I);
  }
  function $(I) {
    return I === null || I === 60 || I === 61 || I === 62 || I === 96 ? r(I) : I === 34 || I === 39 ? (e.consume(I), n = I, V) : ne(I) ? (a =
    $, U(I)) : Fe(I) ? (e.consume(I), $) : (e.consume(I), K);
  }
  function V(I) {
    return I === n ? (e.consume(I), n = void 0, M) : I === null ? r(I) : ne(I) ? (a = V, U(I)) : (e.consume(I), V);
  }
  function K(I) {
    return I === null || I === 34 || I === 39 || I === 60 || I === 61 || I === 96 ? r(I) : I === 47 || I === 62 || tt(I) ? _(I) : (e.consume(
    I), K);
  }
  function M(I) {
    return I === 47 || I === 62 || tt(I) ? _(I) : r(I);
  }
  function R(I) {
    return I === 62 ? (e.consume(I), e.exit("htmlTextData"), e.exit("htmlText"), t) : r(I);
  }
  function U(I) {
    return e.exit("htmlTextData"), e.enter("lineEnding"), e.consume(I), e.exit("lineEnding"), Y;
  }
  function Y(I) {
    return Fe(I) ? Ie(
      e,
      ee,
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(I) : ee(I);
  }
  function ee(I) {
    return e.enter("htmlTextData"), a(I);
  }
}
function O4(e) {
  let t = -1;
  for (; ++t < e.length; ) {
    let r = e[t][1];
    (r.type === "labelImage" || r.type === "labelLink" || r.type === "labelEnd") && (e.splice(t + 1, r.type === "labelImage" ? 4 : 2), r.type =
    "data", t++);
  }
  return e;
}
function R4(e, t) {
  let r = e.length, i = 0, n, o, a, u;
  for (; r--; )
    if (n = e[r][1], o) {
      if (n.type === "link" || n.type === "labelLink" && n._inactive)
        break;
      e[r][0] === "enter" && n.type === "labelLink" && (n._inactive = !0);
    } else if (a) {
      if (e[r][0] === "enter" && (n.type === "labelImage" || n.type === "labelLink") && !n._balanced && (o = r, n.type !== "labelLink")) {
        i = 2;
        break;
      }
    } else n.type === "labelEnd" && (a = r);
  let l = {
    type: e[o][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, e[o][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  }, c = {
    type: "label",
    start: Object.assign({}, e[o][1].start),
    end: Object.assign({}, e[a][1].end)
  }, p = {
    type: "labelText",
    start: Object.assign({}, e[o + i + 2][1].end),
    end: Object.assign({}, e[a - 2][1].start)
  };
  return u = [
    ["enter", l, t],
    ["enter", c, t]
  ], u = rr(u, e.slice(o + 1, o + i + 3)), u = rr(u, [["enter", p, t]]), u = rr(
    u,
    _h(
      t.parser.constructs.insideSpan.null,
      e.slice(o + i + 4, a - 3),
      t
    )
  ), u = rr(u, [
    ["exit", p, t],
    e[a - 2],
    e[a - 1],
    ["exit", c, t]
  ]), u = rr(u, e.slice(a + 1)), u = rr(u, [["exit", l, t]]), Br(e, o, e.length, u), e;
}
function N4(e, t, r) {
  let i = this, n = i.events.length, o, a;
  for (; n--; )
    if ((i.events[n][1].type === "labelImage" || i.events[n][1].type === "labelLink") && !i.events[n][1]._balanced) {
      o = i.events[n][1];
      break;
    }
  return u;
  function u(f) {
    return o ? o._inactive ? h(f) : (a = i.parser.defined.includes(
      Pn(
        i.sliceSerialize({
          start: o.end,
          end: i.now()
        })
      )
    ), e.enter("labelEnd"), e.enter("labelMarker"), e.consume(f), e.exit("labelMarker"), e.exit("labelEnd"), l) : r(f);
  }
  function l(f) {
    return f === 40 ? e.attempt(
      B4,
      p,
      a ? p : h
    )(f) : f === 91 ? e.attempt(
      I4,
      p,
      a ? c : h
    )(f) : a ? p(f) : h(f);
  }
  function c(f) {
    return e.attempt(
      P4,
      p,
      h
    )(f);
  }
  function p(f) {
    return t(f);
  }
  function h(f) {
    return o._balanced = !0, r(f);
  }
}
function L4(e, t, r) {
  return i;
  function i(h) {
    return e.enter("resource"), e.enter("resourceMarker"), e.consume(h), e.exit("resourceMarker"), n;
  }
  function n(h) {
    return tt(h) ? Ps(e, o)(h) : o(h);
  }
  function o(h) {
    return h === 41 ? p(h) : Qb(
      e,
      a,
      u,
      "resourceDestination",
      "resourceDestinationLiteral",
      "resourceDestinationLiteralMarker",
      "resourceDestinationRaw",
      "resourceDestinationString",
      32
    )(h);
  }
  function a(h) {
    return tt(h) ? Ps(e, l)(h) : p(h);
  }
  function u(h) {
    return r(h);
  }
  function l(h) {
    return h === 34 || h === 39 || h === 40 ? e1(
      e,
      c,
      r,
      "resourceTitle",
      "resourceTitleMarker",
      "resourceTitleString"
    )(h) : p(h);
  }
  function c(h) {
    return tt(h) ? Ps(e, p)(h) : p(h);
  }
  function p(h) {
    return h === 41 ? (e.enter("resourceMarker"), e.consume(h), e.exit("resourceMarker"), e.exit("resource"), t) : r(h);
  }
}
function M4(e, t, r) {
  let i = this;
  return n;
  function n(u) {
    return Zb.call(
      i,
      e,
      o,
      a,
      "reference",
      "referenceMarker",
      "referenceString"
    )(u);
  }
  function o(u) {
    return i.parser.defined.includes(
      Pn(
        i.sliceSerialize(i.events[i.events.length - 1][1]).slice(1, -1)
      )
    ) ? t(u) : r(u);
  }
  function a(u) {
    return r(u);
  }
}
function j4(e, t, r) {
  return i;
  function i(o) {
    return e.enter("reference"), e.enter("referenceMarker"), e.consume(o), e.exit("referenceMarker"), n;
  }
  function n(o) {
    return o === 93 ? (e.enter("referenceMarker"), e.consume(o), e.exit("referenceMarker"), e.exit("reference"), t) : r(o);
  }
}
function $4(e, t, r) {
  let i = this;
  return n;
  function n(u) {
    return e.enter("labelImage"), e.enter("labelImageMarker"), e.consume(u), e.exit("labelImageMarker"), o;
  }
  function o(u) {
    return u === 91 ? (e.enter("labelMarker"), e.consume(u), e.exit("labelMarker"), e.exit("labelImage"), a) : r(u);
  }
  function a(u) {
    return u === 94 && "_hiddenFootnoteSupport" in i.parser.constructs ? r(u) : t(u);
  }
}
function U4(e, t, r) {
  let i = this;
  return n;
  function n(a) {
    return e.enter("labelLink"), e.enter("labelMarker"), e.consume(a), e.exit("labelMarker"), e.exit("labelLink"), o;
  }
  function o(a) {
    return a === 94 && "_hiddenFootnoteSupport" in i.parser.constructs ? r(a) : t(a);
  }
}
function W4(e, t) {
  return r;
  function r(i) {
    return e.enter("lineEnding"), e.consume(i), e.exit("lineEnding"), Ie(e, t, "linePrefix");
  }
}
function z4(e, t, r) {
  let i = 0, n;
  return o;
  function o(c) {
    return e.enter("thematicBreak"), a(c);
  }
  function a(c) {
    return n = c, u(c);
  }
  function u(c) {
    return c === n ? (e.enter("thematicBreakSequence"), l(c)) : i >= 3 && (c === null || ne(c)) ? (e.exit("thematicBreak"), t(c)) : r(c);
  }
  function l(c) {
    return c === n ? (e.consume(c), i++, l) : (e.exit("thematicBreakSequence"), Fe(c) ? Ie(e, u, "whitespace")(c) : u(c));
  }
}
function G4(e, t, r) {
  let i = this, n = i.events[i.events.length - 1], o = n && n[1].type === "linePrefix" ? n[2].sliceSerialize(n[1], !0).length : 0, a = 0;
  return u;
  function u(d) {
    let m = i.containerState.type || (d === 42 || d === 43 || d === 45 ? "listUnordered" : "listOrdered");
    if (m === "listUnordered" ? !i.containerState.marker || d === i.containerState.marker : Ch(d)) {
      if (i.containerState.type || (i.containerState.type = m, e.enter(m, {
        _container: !0
      })), m === "listUnordered")
        return e.enter("listItemPrefix"), d === 42 || d === 45 ? e.check(Oa, r, c)(d) : c(d);
      if (!i.interrupt || d === 49)
        return e.enter("listItemPrefix"), e.enter("listItemValue"), l(d);
    }
    return r(d);
  }
  function l(d) {
    return Ch(d) && ++a < 10 ? (e.consume(d), l) : (!i.interrupt || a < 2) && (i.containerState.marker ? d === i.containerState.marker : d ===
    41 || d === 46) ? (e.exit("listItemValue"), c(d)) : r(d);
  }
  function c(d) {
    return e.enter("listItemMarker"), e.consume(d), e.exit("listItemMarker"), i.containerState.marker = i.containerState.marker || d, e.check(
      Ls,
      // Can’t be empty when interrupting.
      i.interrupt ? r : p,
      e.attempt(
        H4,
        f,
        h
      )
    );
  }
  function p(d) {
    return i.containerState.initialBlankLine = !0, o++, f(d);
  }
  function h(d) {
    return Fe(d) ? (e.enter("listItemPrefixWhitespace"), e.consume(d), e.exit("listItemPrefixWhitespace"), f) : r(d);
  }
  function f(d) {
    return i.containerState.size = o + i.sliceSerialize(e.exit("listItemPrefix"), !0).length, t(d);
  }
}
function X4(e, t, r) {
  let i = this;
  return i.containerState._closeFlow = void 0, e.check(Ls, n, o);
  function n(u) {
    return i.containerState.furtherBlankLines = i.containerState.furtherBlankLines || i.containerState.initialBlankLine, Ie(
      e,
      t,
      "listItemIndent",
      i.containerState.size + 1
    )(u);
  }
  s(n, "onBlank");
  function o(u) {
    return i.containerState.furtherBlankLines || !Fe(u) ? (i.containerState.furtherBlankLines = void 0, i.containerState.initialBlankLine = void 0,
    a(u)) : (i.containerState.furtherBlankLines = void 0, i.containerState.initialBlankLine = void 0, e.attempt(J4, t, a)(u));
  }
  s(o, "notBlank");
  function a(u) {
    return i.containerState._closeFlow = !0, i.interrupt = void 0, Ie(
      e,
      e.attempt(Bt, t, r),
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(u);
  }
  s(a, "notInCurrentItem");
}
function K4(e, t, r) {
  let i = this;
  return Ie(
    e,
    n,
    "listItemIndent",
    i.containerState.size + 1
  );
  function n(o) {
    let a = i.events[i.events.length - 1];
    return a && a[1].type === "listItemIndent" && a[2].sliceSerialize(a[1], !0).length === i.containerState.size ? t(o) : r(o);
  }
}
function Y4(e) {
  e.exit(this.containerState.type);
}
function Q4(e, t, r) {
  let i = this;
  return Ie(
    e,
    n,
    "listItemPrefixWhitespace",
    i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 5
  );
  function n(o) {
    let a = i.events[i.events.length - 1];
    return !Fe(o) && a && a[1].type === "listItemPrefixWhitespace" ? t(o) : r(o);
  }
}
function Z4(e, t) {
  let r = e.length, i, n, o;
  for (; r--; )
    if (e[r][0] === "enter") {
      if (e[r][1].type === "content") {
        i = r;
        break;
      }
      e[r][1].type === "paragraph" && (n = r);
    } else
      e[r][1].type === "content" && e.splice(r, 1), !o && e[r][1].type === "definition" && (o = r);
  let a = {
    type: "setextHeading",
    start: Object.assign({}, e[n][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  };
  return e[n][1].type = "setextHeadingText", o ? (e.splice(n, 0, ["enter", a, t]), e.splice(o + 1, 0, ["exit", e[i][1], t]), e[i][1].end = Object.
  assign({}, e[o][1].end)) : e[i][1] = a, e.push(["exit", a, t]), e;
}
function e5(e, t, r) {
  let i = this, n;
  return o;
  function o(c) {
    let p = i.events.length, h;
    for (; p--; )
      if (i.events[p][1].type !== "lineEnding" && i.events[p][1].type !== "linePrefix" && i.events[p][1].type !== "content") {
        h = i.events[p][1].type === "paragraph";
        break;
      }
    return !i.parser.lazy[i.now().line] && (i.interrupt || h) ? (e.enter("setextHeadingLine"), n = c, a(c)) : r(c);
  }
  function a(c) {
    return e.enter("setextHeadingLineSequence"), u(c);
  }
  function u(c) {
    return c === n ? (e.consume(c), u) : (e.exit("setextHeadingLineSequence"), Fe(c) ? Ie(e, l, "lineSuffix")(c) : l(c));
  }
  function l(c) {
    return c === null || ne(c) ? (e.exit("setextHeadingLine"), t(c)) : r(c);
  }
}
function i5(e) {
  let t = {
    tokenize: n,
    concrete: !0
  };
  if (!e || !e.acorn || !e.acorn.parse)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  let r = e.acorn, i = Object.assign({
    ecmaVersion: 2024,
    sourceType: "module"
  }, e.acornOptions, {
    locations: !0
  });
  return {
    flow: {
      101: t,
      105: t
    }
  };
  function n(o, a, u) {
    let l = this, c = l.parser.definedModuleSpecifiers || (l.parser.definedModuleSpecifiers = []), p = this.events.length + 1, h = "";
    return l.interrupt ? u : f;
    function f(v) {
      return l.now().column > 1 ? u(v) : (o.enter("mdxjsEsm"), o.enter("mdxjsEsmData"), o.consume(v), h += String.fromCharCode(v), d);
    }
    function d(v) {
      return gr(v) ? (o.consume(v), h += String.fromCharCode(v), d) : (h === "import" || h === "export") && v === 32 ? (o.consume(v), m) : u(
      v);
    }
    function m(v) {
      return v === null || ne(v) ? (o.exit("mdxjsEsmData"), g(v)) : (o.consume(v), m);
    }
    function g(v) {
      return v === null ? D(v) : ne(v) ? o.check(t5, D, b)(v) : (o.enter("mdxjsEsmData"), m(v));
    }
    function b(v) {
      return o.enter("lineEnding"), o.consume(v), o.exit("lineEnding"), g;
    }
    function D(v) {
      let S = Hb(l.events.slice(p), {
        acorn: r,
        acornOptions: i,
        tokenTypes: ["mdxjsEsmData"],
        prefix: c.length > 0 ? "var " + c.join(",") + `
` : ""
      });
      if (S.error) {
        if (v !== null && S.swallow)
          return b(v);
        let L = new ke("Could not parse import/exports with acorn", {
          cause: S.error,
          place: {
            line: S.error.loc.line,
            column: S.error.loc.column + 1,
            offset: S.error.pos
          },
          ruleId: "acorn",
          source: "micromark-extension-mdxjs-esm"
        });
        throw L.url = ab + "#could-not-parse-importexports-with-acorn", L;
      }
      if (c.length > 0) {
        let L = S.estree.body.shift();
      }
      let k = -1;
      for (; ++k < S.estree.body.length; ) {
        let L = S.estree.body[k];
        if (!r5.has(L.type)) {
          let C = new ke("Unexpected `" + L.type + "` in code: only import/exports are supported", {
            place: Kr(L),
            ruleId: "non-esm",
            source: "micromark-extension-mdxjs-esm"
          });
          throw C.url = ab + "#unexpected-type-in-code-only-importexports-are-supported", C;
        }
        if (L.type === "ImportDeclaration" && !l.interrupt) {
          let C = -1;
          for (; ++C < L.specifiers.length; ) {
            let w = L.specifiers[C];
            c.push(w.local.name);
          }
        }
      }
      return Object.assign(o.exit("mdxjsEsm"), e.addResult ? {
        estree: S.estree
      } : void 0), a(v);
    }
  }
}
function n5(e, t, r) {
  return i;
  function i(n) {
    return e.enter("lineEndingBlank"), e.consume(n), e.exit("lineEndingBlank"), e.attempt(Ls, t, r);
  }
}
function t1(e) {
  let t = {}, r = -1;
  for (; ++r < e.length; )
    s5(t, e[r]);
  return t;
}
function s5(e, t) {
  let r;
  for (r in t) {
    let n = (ub.call(e, r) ? e[r] : void 0) || (e[r] = {}), o = t[r], a;
    if (o)
      for (a in o) {
        ub.call(n, a) || (n[a] = []);
        let u = o[a];
        o5(
          // @ts-expect-error Looks like a list.
          n[a],
          Array.isArray(u) ? u : u ? [u] : []
        );
      }
  }
}
function o5(e, t) {
  let r = -1, i = [];
  for (; ++r < t.length; )
    (t[r].add === "after" ? e : i).push(t[r]);
  Br(e, 0, 0, i);
}
function a5(e) {
  let t = Object.assign(
    {
      acorn: nt.extend((0, DR.default)()),
      acornOptions: { ecmaVersion: 2024, sourceType: "module" },
      addResult: !0
    },
    e
  );
  return t1([
    i5(t),
    RR(t),
    jR(t),
    qR()
  ]);
}
function l5(e) {
  let t = (
    /** @type {Processor} */
    this
  ), r = e || u5, i = t.data(), n = i.micromarkExtensions || (i.micromarkExtensions = []), o = i.fromMarkdownExtensions || (i.fromMarkdownExtensions =
  []), a = i.toMarkdownExtensions || (i.toMarkdownExtensions = []);
  n.push(a5(r)), o.push(mR()), a.push(gR(r));
}
function p5(e, t) {
  let r = t || c5, i = typeof r.includeImageAlt == "boolean" ? r.includeImageAlt : !0, n = typeof r.includeHtml == "boolean" ? r.includeHtml :
  !0;
  return r1(e, i, n);
}
function r1(e, t, r) {
  if (h5(e)) {
    if ("value" in e)
      return e.type === "html" && !r ? "" : e.value;
    if (t && "alt" in e && e.alt)
      return e.alt;
    if ("children" in e)
      return lb(e.children, t, r);
  }
  return Array.isArray(e) ? lb(e, t, r) : "";
}
function lb(e, t, r) {
  let i = [], n = -1;
  for (; ++n < e.length; )
    i[n] = r1(e[n], t, r);
  return i.join("");
}
function h5(e) {
  return !!(e && typeof e == "object");
}
function i1(e, t) {
  let r = Number.parseInt(e, t);
  return (
    // C0 except for HT, LF, FF, CR, space.
    r < 9 || r === 11 || r > 13 && r < 32 || // Control character (DEL) of C0, and C1 controls.
    r > 126 && r < 160 || // Lone high surrogates and low surrogates.
    r > 55295 && r < 57344 || // Noncharacters.
    r > 64975 && r < 65008 || /* eslint-disable no-bitwise */
    (r & 65535) === 65535 || (r & 65535) === 65534 || /* eslint-enable no-bitwise */
    // Out of range
    r > 1114111 ? "\uFFFD" : String.fromCodePoint(r)
  );
}
function On(e) {
  let t = [], r = -1, i = 0, n = 0;
  for (; ++r < e.length; ) {
    let o = e.charCodeAt(r), a = "";
    if (o === 37 && jt(e.charCodeAt(r + 1)) && jt(e.charCodeAt(r + 2)))
      n = 2;
    else if (o < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(o)) || (a = String.fromCharCode(o));
    else if (o > 55295 && o < 57344) {
      let u = e.charCodeAt(r + 1);
      o < 56320 && u > 56319 && u < 57344 ? (a = String.fromCharCode(o, u), n = 1) : a = "\uFFFD";
    } else
      a = String.fromCharCode(o);
    a && (t.push(e.slice(i, r), encodeURIComponent(a)), i = r + n + 1, a = ""), n && (r += n, n = 0);
  }
  return t.join("") + e.slice(i);
}
function d5(e) {
  let t = e.attempt(
    this.parser.constructs.contentInitial,
    i,
    n
  ), r;
  return t;
  function i(u) {
    if (u === null) {
      e.consume(u);
      return;
    }
    return e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), Ie(e, t, "linePrefix");
  }
  function n(u) {
    return e.enter("paragraph"), o(u);
  }
  function o(u) {
    let l = e.enter("chunkText", {
      contentType: "text",
      previous: r
    });
    return r && (r.next = l), r = l, a(u);
  }
  function a(u) {
    if (u === null) {
      e.exit("chunkText"), e.exit("paragraph"), e.consume(u);
      return;
    }
    return ne(u) ? (e.consume(u), e.exit("chunkText"), o) : (e.consume(u), a);
  }
}
function g5(e) {
  let t = this, r = [], i = 0, n, o, a;
  return u;
  function u(S) {
    if (i < r.length) {
      let k = r[i];
      return t.containerState = k[1], e.attempt(
        k[0].continuation,
        l,
        c
      )(S);
    }
    return c(S);
  }
  function l(S) {
    if (i++, t.containerState._closeFlow) {
      t.containerState._closeFlow = void 0, n && v();
      let k = t.events.length, L = k, C;
      for (; L--; )
        if (t.events[L][0] === "exit" && t.events[L][1].type === "chunkFlow") {
          C = t.events[L][1].end;
          break;
        }
      D(i);
      let w = k;
      for (; w < t.events.length; )
        t.events[w][1].end = Object.assign({}, C), w++;
      return Br(
        t.events,
        L + 1,
        0,
        t.events.slice(k)
      ), t.events.length = w, c(S);
    }
    return u(S);
  }
  function c(S) {
    if (i === r.length) {
      if (!n)
        return f(S);
      if (n.currentConstruct && n.currentConstruct.concrete)
        return m(S);
      t.interrupt = !!(n.currentConstruct && !n._gfmTableDynamicInterruptHack);
    }
    return t.containerState = {}, e.check(
      cb,
      p,
      h
    )(S);
  }
  function p(S) {
    return n && v(), D(i), f(S);
  }
  function h(S) {
    return t.parser.lazy[t.now().line] = i !== r.length, a = t.now().offset, m(S);
  }
  function f(S) {
    return t.containerState = {}, e.attempt(
      cb,
      d,
      m
    )(S);
  }
  function d(S) {
    return i++, r.push([t.currentConstruct, t.containerState]), f(S);
  }
  function m(S) {
    if (S === null) {
      n && v(), D(0), e.consume(S);
      return;
    }
    return n = n || t.parser.flow(t.now()), e.enter("chunkFlow", {
      contentType: "flow",
      previous: o,
      _tokenizer: n
    }), g(S);
  }
  function g(S) {
    if (S === null) {
      b(e.exit("chunkFlow"), !0), D(0), e.consume(S);
      return;
    }
    return ne(S) ? (e.consume(S), b(e.exit("chunkFlow")), i = 0, t.interrupt = void 0, u) : (e.consume(S), g);
  }
  function b(S, k) {
    let L = t.sliceStream(S);
    if (k && L.push(null), S.previous = o, o && (o.next = S), o = S, n.defineSkip(S.start), n.write(L), t.parser.lazy[S.start.line]) {
      let C = n.events.length;
      for (; C--; )
        if (
          // The token starts before the line ending…
          n.events[C][1].start.offset < a && // …and either is not ended yet…
          (!n.events[C][1].end || // …or ends after it.
          n.events[C][1].end.offset > a)
        )
          return;
      let w = t.events.length, T = w, _, q;
      for (; T--; )
        if (t.events[T][0] === "exit" && t.events[T][1].type === "chunkFlow") {
          if (_) {
            q = t.events[T][1].end;
            break;
          }
          _ = !0;
        }
      for (D(i), C = w; C < t.events.length; )
        t.events[C][1].end = Object.assign({}, q), C++;
      Br(
        t.events,
        T + 1,
        0,
        t.events.slice(w)
      ), t.events.length = C;
    }
  }
  function D(S) {
    let k = r.length;
    for (; k-- > S; ) {
      let L = r[k];
      t.containerState = L[1], L[0].exit.call(t, e);
    }
    r.length = S;
  }
  function v() {
    n.write([null]), o = void 0, n = void 0, t.containerState._closeFlow = void 0;
  }
}
function D5(e, t, r) {
  return Ie(
    e,
    e.attempt(this.parser.constructs.document, t, r),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
function x5(e) {
  let t = this, r = e.attempt(
    // Try to parse a blank line.
    Ls,
    i,
    // Try to parse initial flow (essentially, only code).
    e.attempt(
      this.parser.constructs.flowInitial,
      n,
      Ie(
        e,
        e.attempt(
          this.parser.constructs.flow,
          n,
          e.attempt(a4, n)
        ),
        "linePrefix"
      )
    )
  );
  return r;
  function i(o) {
    if (o === null) {
      e.consume(o);
      return;
    }
    return e.enter("lineEndingBlank"), e.consume(o), e.exit("lineEndingBlank"), t.currentConstruct = void 0, r;
  }
  function n(o) {
    if (o === null) {
      e.consume(o);
      return;
    }
    return e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), t.currentConstruct = void 0, r;
  }
}
function n1(e) {
  return {
    tokenize: t,
    resolveAll: s1(
      e === "text" ? C5 : void 0
    )
  };
  function t(r) {
    let i = this, n = this.parser.constructs[e], o = r.attempt(n, a, u);
    return a;
    function a(p) {
      return c(p) ? o(p) : u(p);
    }
    function u(p) {
      if (p === null) {
        r.consume(p);
        return;
      }
      return r.enter("data"), r.consume(p), l;
    }
    function l(p) {
      return c(p) ? (r.exit("data"), o(p)) : (r.consume(p), l);
    }
    function c(p) {
      if (p === null)
        return !0;
      let h = n[p], f = -1;
      if (h)
        for (; ++f < h.length; ) {
          let d = h[f];
          if (!d.previous || d.previous.call(i, i.previous))
            return !0;
        }
      return !1;
    }
  }
}
function s1(e) {
  return t;
  function t(r, i) {
    let n = -1, o;
    for (; ++n <= r.length; )
      o === void 0 ? r[n] && r[n][1].type === "data" && (o = n, n++) : (!r[n] || r[n][1].type !== "data") && (n !== o + 2 && (r[o][1].end = r[n -
      1][1].end, r.splice(o + 2, n - o - 2), n = o + 2), o = void 0);
    return e ? e(r, i) : r;
  }
}
function C5(e, t) {
  let r = 0;
  for (; ++r <= e.length; )
    if ((r === e.length || e[r][1].type === "lineEnding") && e[r - 1][1].type === "data") {
      let i = e[r - 1][1], n = t.sliceStream(i), o = n.length, a = -1, u = 0, l;
      for (; o--; ) {
        let c = n[o];
        if (typeof c == "string") {
          for (a = c.length; c.charCodeAt(a - 1) === 32; )
            u++, a--;
          if (a)
            break;
          a = -1;
        } else if (c === -2)
          l = !0, u++;
        else if (c !== -1) {
          o++;
          break;
        }
      }
      if (u) {
        let c = {
          type: r === e.length || l || u < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: i.end.line,
            column: i.end.column - u,
            offset: i.end.offset - u,
            _index: i.start._index + o,
            _bufferIndex: o ? a : i.start._bufferIndex + a
          },
          end: Object.assign({}, i.end)
        };
        i.end = Object.assign({}, c.start), i.start.offset === i.end.offset ? Object.assign(i, c) : (e.splice(
          r,
          0,
          ["enter", c, t],
          ["exit", c, t]
        ), r += 2);
      }
      r++;
    }
  return e;
}
function w5(e, t, r) {
  let i = Object.assign(
    r ? Object.assign({}, r) : {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  ), n = {}, o = [], a = [], u = [], l = !0, c = {
    consume: k,
    enter: L,
    exit: C,
    attempt: _(w),
    check: _(T),
    interrupt: _(T, {
      interrupt: !0
    })
  }, p = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser: e,
    sliceStream: g,
    sliceSerialize: m,
    now: b,
    defineSkip: D,
    write: d
  }, h = t.tokenize.call(p, c), f;
  return t.resolveAll && o.push(t), p;
  function d(V) {
    return a = rr(a, V), v(), a[a.length - 1] !== null ? [] : (q(t, 0), p.events = _h(o, p.events, p), p.events);
  }
  s(d, "write");
  function m(V, K) {
    return S5(g(V), K);
  }
  s(m, "sliceSerialize");
  function g(V) {
    return A5(a, V);
  }
  s(g, "sliceStream");
  function b() {
    let { line: V, column: K, offset: M, _index: R, _bufferIndex: U } = i;
    return {
      line: V,
      column: K,
      offset: M,
      _index: R,
      _bufferIndex: U
    };
  }
  s(b, "now");
  function D(V) {
    n[V.line] = V.column, $();
  }
  s(D, "defineSkip");
  function v() {
    let V;
    for (; i._index < a.length; ) {
      let K = a[i._index];
      if (typeof K == "string")
        for (V = i._index, i._bufferIndex < 0 && (i._bufferIndex = 0); i._index === V && i._bufferIndex < K.length; )
          S(K.charCodeAt(i._bufferIndex));
      else
        S(K);
    }
  }
  s(v, "main");
  function S(V) {
    l = void 0, f = V, h = h(V);
  }
  s(S, "go");
  function k(V) {
    ne(V) ? (i.line++, i.column = 1, i.offset += V === -3 ? 2 : 1, $()) : V !== -1 && (i.column++, i.offset++), i._bufferIndex < 0 ? i._index++ :
    (i._bufferIndex++, i._bufferIndex === a[i._index].length && (i._bufferIndex = -1, i._index++)), p.previous = V, l = !0;
  }
  s(k, "consume");
  function L(V, K) {
    let M = K || {};
    return M.type = V, M.start = b(), p.events.push(["enter", M, p]), u.push(M), M;
  }
  s(L, "enter");
  function C(V) {
    let K = u.pop();
    return K.end = b(), p.events.push(["exit", K, p]), K;
  }
  s(C, "exit2");
  function w(V, K) {
    q(V, K.from);
  }
  s(w, "onsuccessfulconstruct");
  function T(V, K) {
    K.restore();
  }
  s(T, "onsuccessfulcheck");
  function _(V, K) {
    return M;
    function M(R, U, Y) {
      let ee, I, se, Me;
      return Array.isArray(R) ? Oe(R) : "tokenize" in R ? (
        // @ts-expect-error Looks like a construct.
        Oe([R])
      ) : N(R);
      function N(Be) {
        return Z;
        function Z(de) {
          let X = de !== null && Be[de], te = de !== null && Be.null, pe = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(X) ? X : X ? [X] : [],
            ...Array.isArray(te) ? te : te ? [te] : []
          ];
          return Oe(pe)(de);
        }
      }
      function Oe(Be) {
        return ee = Be, I = 0, Be.length === 0 ? Y : Pe(Be[I]);
      }
      function Pe(Be) {
        return Z;
        function Z(de) {
          return Me = O(), se = Be, Be.partial || (p.currentConstruct = Be), Be.name && p.parser.constructs.disable.null.includes(Be.name) ?
          Dt(de) : Be.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            K ? Object.assign(Object.create(p), K) : p,
            c,
            ce,
            Dt
          )(de);
        }
      }
      function ce(Be) {
        return l = !0, V(se, Me), U;
      }
      function Dt(Be) {
        return l = !0, Me.restore(), ++I < ee.length ? Pe(ee[I]) : Y;
      }
    }
  }
  s(_, "constructFactory");
  function q(V, K) {
    V.resolveAll && !o.includes(V) && o.push(V), V.resolve && Br(
      p.events,
      K,
      p.events.length - K,
      V.resolve(p.events.slice(K), p)
    ), V.resolveTo && (p.events = V.resolveTo(p.events, p));
  }
  s(q, "addResult");
  function O() {
    let V = b(), K = p.previous, M = p.currentConstruct, R = p.events.length, U = Array.from(u);
    return {
      restore: Y,
      from: R
    };
    function Y() {
      i = V, p.previous = K, p.currentConstruct = M, p.events.length = R, u = U, $();
    }
  }
  s(O, "store");
  function $() {
    i.line in n && i.column < 2 && (i.column = n[i.line], i.offset += n[i.line] - 1);
  }
  s($, "accountForPotentialSkip");
}
function A5(e, t) {
  let r = t.start._index, i = t.start._bufferIndex, n = t.end._index, o = t.end._bufferIndex, a;
  if (r === n)
    a = [e[r].slice(i, o)];
  else {
    if (a = e.slice(r, n), i > -1) {
      let u = a[0];
      typeof u == "string" ? a[0] = u.slice(i) : a.shift();
    }
    o > 0 && a.push(e[n].slice(0, o));
  }
  return a;
}
function S5(e, t) {
  let r = -1, i = [], n;
  for (; ++r < e.length; ) {
    let o = e[r], a;
    if (typeof o == "string")
      a = o;
    else
      switch (o) {
        case -5: {
          a = "\r";
          break;
        }
        case -4: {
          a = `
`;
          break;
        }
        case -3: {
          a = `\r
`;
          break;
        }
        case -2: {
          a = t ? " " : "	";
          break;
        }
        case -1: {
          if (!t && n)
            continue;
          a = " ";
          break;
        }
        default:
          a = String.fromCharCode(o);
      }
    n = o === -2, i.push(a);
  }
  return i.join("");
}
function N5(e) {
  let r = (
    /** @type {FullNormalizedExtension} */
    t1([o1, ...(e || {}).extensions || []])
  ), i = {
    defined: [],
    lazy: {},
    constructs: r,
    content: n(f5),
    document: n(m5),
    flow: n(y5),
    string: n(b5),
    text: n(v5)
  };
  return i;
  function n(o) {
    return a;
    function a(u) {
      return w5(i, o, u);
    }
  }
}
function L5(e) {
  for (; !Yb(e); )
    ;
  return e;
}
function M5() {
  let e = 1, t = "", r = !0, i;
  return n;
  function n(o, a, u) {
    let l = [], c, p, h, f, d;
    for (o = t + (typeof o == "string" ? o.toString() : new TextDecoder(a || void 0).decode(o)), h = 0, t = "", r && (o.charCodeAt(0) === 65279 &&
    h++, r = void 0); h < o.length; ) {
      if (pb.lastIndex = h, c = pb.exec(o), f = c && c.index !== void 0 ? c.index : o.length, d = o.charCodeAt(f), !c) {
        t = o.slice(h);
        break;
      }
      if (d === 10 && h === f && i)
        l.push(-3), i = void 0;
      else
        switch (i && (l.push(-5), i = void 0), h < f && (l.push(o.slice(h, f)), e += f - h), d) {
          case 0: {
            l.push(65533), e++;
            break;
          }
          case 9: {
            for (p = Math.ceil(e / 4) * 4, l.push(-2); e++ < p; )
              l.push(-1);
            break;
          }
          case 10: {
            l.push(-4), e = 1;
            break;
          }
          default:
            i = !0, e = 1;
        }
      h = f + 1;
    }
    return u && (i && l.push(-5), t && l.push(t), l.push(null)), l;
  }
}
function q5(e) {
  return e.replace(j5, $5);
}
function $5(e, t, r) {
  if (t)
    return t;
  if (r.charCodeAt(0) === 35) {
    let n = r.charCodeAt(1), o = n === 120 || n === 88;
    return i1(r.slice(o ? 2 : 1), o ? 16 : 10);
  }
  return Rs(r) || e;
}
function V5(e, t, r) {
  return typeof t != "string" && (r = t, t = void 0), U5(r)(
    L5(
      N5(r).document().write(M5()(e, t, !0))
    )
  );
}
function U5(e) {
  let t = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: o(Re),
      autolinkProtocol: _,
      autolinkEmail: _,
      atxHeading: o(me),
      blockQuote: o(Z),
      characterEscape: _,
      characterReference: _,
      codeFenced: o(de),
      codeFencedFenceInfo: a,
      codeFencedFenceMeta: a,
      codeIndented: o(de, a),
      codeText: o(X, a),
      codeTextData: _,
      data: _,
      codeFlowValue: _,
      definition: o(te),
      definitionDestinationString: a,
      definitionLabelString: a,
      definitionTitleString: a,
      emphasis: o(pe),
      hardBreakEscape: o(De),
      hardBreakTrailing: o(De),
      htmlFlow: o(He, a),
      htmlFlowData: _,
      htmlText: o(He, a),
      htmlTextData: _,
      image: o(pt),
      label: a,
      link: o(Re),
      listItem: o(Ut),
      listItemValue: f,
      listOrdered: o(Vt, h),
      listUnordered: o(Vt),
      paragraph: o(ur),
      reference: N,
      referenceString: a,
      resourceDestinationString: a,
      resourceTitleString: a,
      setextHeading: o(me),
      strong: o(oe),
      thematicBreak: o(x)
    },
    exit: {
      atxHeading: l(),
      atxHeadingSequence: L,
      autolink: l(),
      autolinkEmail: Be,
      autolinkProtocol: Dt,
      blockQuote: l(),
      characterEscapeValue: q,
      characterReferenceMarkerHexadecimal: Pe,
      characterReferenceMarkerNumeric: Pe,
      characterReferenceValue: ce,
      codeFenced: l(b),
      codeFencedFence: g,
      codeFencedFenceInfo: d,
      codeFencedFenceMeta: m,
      codeFlowValue: q,
      codeIndented: l(D),
      codeText: l(M),
      codeTextData: q,
      data: q,
      definition: l(),
      definitionDestinationString: k,
      definitionLabelString: v,
      definitionTitleString: S,
      emphasis: l(),
      hardBreakEscape: l($),
      hardBreakTrailing: l($),
      htmlFlow: l(V),
      htmlFlowData: q,
      htmlText: l(K),
      htmlTextData: q,
      image: l(U),
      label: ee,
      labelText: Y,
      lineEnding: O,
      link: l(R),
      listItem: l(),
      listOrdered: l(),
      listUnordered: l(),
      paragraph: l(),
      referenceString: Oe,
      resourceDestinationString: I,
      resourceTitleString: se,
      resource: Me,
      setextHeading: l(T),
      setextHeadingLineSequence: w,
      setextHeadingText: C,
      strong: l(),
      thematicBreak: l()
    }
  };
  u1(t, (e || {}).mdastExtensions || []);
  let r = {};
  return i;
  function i(y) {
    let F = {
      type: "root",
      children: []
    }, B = {
      stack: [F],
      tokenStack: [],
      config: t,
      enter: u,
      exit: c,
      buffer: a,
      resume: p,
      data: r
    }, E = [], j = -1;
    for (; ++j < y.length; )
      if (y[j][1].type === "listOrdered" || y[j][1].type === "listUnordered")
        if (y[j][0] === "enter")
          E.push(j);
        else {
          let W = E.pop();
          j = n(y, W, j);
        }
    for (j = -1; ++j < y.length; ) {
      let W = t[y[j][0]];
      a1.call(W, y[j][1].type) && W[y[j][1].type].call(
        Object.assign(
          {
            sliceSerialize: y[j][2].sliceSerialize
          },
          B
        ),
        y[j][1]
      );
    }
    if (B.tokenStack.length > 0) {
      let W = B.tokenStack[B.tokenStack.length - 1];
      (W[1] || hb).call(B, void 0, W[0]);
    }
    for (F.position = {
      start: Di(
        y.length > 0 ? y[0][1].start : {
          line: 1,
          column: 1,
          offset: 0
        }
      ),
      end: Di(
        y.length > 0 ? y[y.length - 2][1].end : {
          line: 1,
          column: 1,
          offset: 0
        }
      )
    }, j = -1; ++j < t.transforms.length; )
      F = t.transforms[j](F) || F;
    return F;
  }
  function n(y, F, B) {
    let E = F - 1, j = -1, W = !1, z, J, ue, xe;
    for (; ++E <= B; ) {
      let ae = y[E];
      switch (ae[1].type) {
        case "listUnordered":
        case "listOrdered":
        case "blockQuote": {
          ae[0] === "enter" ? j++ : j--, xe = void 0;
          break;
        }
        case "lineEndingBlank": {
          ae[0] === "enter" && (z && !xe && !j && !ue && (ue = E), xe = void 0);
          break;
        }
        case "linePrefix":
        case "listItemValue":
        case "listItemMarker":
        case "listItemPrefix":
        case "listItemPrefixWhitespace":
          break;
        default:
          xe = void 0;
      }
      if (!j && ae[0] === "enter" && ae[1].type === "listItemPrefix" || j === -1 && ae[0] === "exit" && (ae[1].type === "listUnordered" || ae[1].
      type === "listOrdered")) {
        if (z) {
          let ve = E;
          for (J = void 0; ve--; ) {
            let Je = y[ve];
            if (Je[1].type === "lineEnding" || Je[1].type === "lineEndingBlank") {
              if (Je[0] === "exit")
                continue;
              J && (y[J][1].type = "lineEndingBlank", W = !0), Je[1].type = "lineEnding", J = ve;
            } else if (!(Je[1].type === "linePrefix" || Je[1].type === "blockQuotePrefix" || Je[1].type === "blockQuotePrefixWhitespace" || Je[1].
            type === "blockQuoteMarker" || Je[1].type === "listItemIndent"))
              break;
          }
          ue && (!J || ue < J) && (z._spread = !0), z.end = Object.assign(
            {},
            J ? y[J][1].start : ae[1].end
          ), y.splice(J || E, 0, ["exit", z, ae[2]]), E++, B++;
        }
        if (ae[1].type === "listItemPrefix") {
          let ve = {
            type: "listItem",
            _spread: !1,
            start: Object.assign({}, ae[1].start),
            // @ts-expect-error: we’ll add `end` in a second.
            end: void 0
          };
          z = ve, y.splice(E, 0, ["enter", ve, ae[2]]), E++, B++, ue = void 0, xe = !0;
        }
      }
    }
    return y[F][1]._spread = W, B;
  }
  function o(y, F) {
    return B;
    function B(E) {
      u.call(this, y(E), E), F && F.call(this, E);
    }
  }
  function a() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function u(y, F, B) {
    this.stack[this.stack.length - 1].children.push(y), this.stack.push(y), this.tokenStack.push([F, B]), y.position = {
      start: Di(F.start),
      // @ts-expect-error: `end` will be patched later.
      end: void 0
    };
  }
  function l(y) {
    return F;
    function F(B) {
      y && y.call(this, B), c.call(this, B);
    }
  }
  function c(y, F) {
    let B = this.stack.pop(), E = this.tokenStack.pop();
    if (E)
      E[0].type !== y.type && (F ? F.call(this, y, E[0]) : (E[1] || hb).call(this, y, E[0]));
    else throw new Error(
      "Cannot close `" + y.type + "` (" + ir({
        start: y.start,
        end: y.end
      }) + "): it\u2019s not open"
    );
    B.position.end = Di(y.end);
  }
  function p() {
    return p5(this.stack.pop());
  }
  function h() {
    this.data.expectingFirstListItemValue = !0;
  }
  function f(y) {
    if (this.data.expectingFirstListItemValue) {
      let F = this.stack[this.stack.length - 2];
      F.start = Number.parseInt(this.sliceSerialize(y), 10), this.data.expectingFirstListItemValue = void 0;
    }
  }
  function d() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.lang = y;
  }
  function m() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.meta = y;
  }
  function g() {
    this.data.flowCodeInside || (this.buffer(), this.data.flowCodeInside = !0);
  }
  function b() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.value = y.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), this.data.flowCodeInside = void 0;
  }
  function D() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.value = y.replace(/(\r?\n|\r)$/g, "");
  }
  function v(y) {
    let F = this.resume(), B = this.stack[this.stack.length - 1];
    B.label = F, B.identifier = Pn(
      this.sliceSerialize(y)
    ).toLowerCase();
  }
  function S() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.title = y;
  }
  function k() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.url = y;
  }
  function L(y) {
    let F = this.stack[this.stack.length - 1];
    if (!F.depth) {
      let B = this.sliceSerialize(y).length;
      F.depth = B;
    }
  }
  function C() {
    this.data.setextHeadingSlurpLineEnding = !0;
  }
  function w(y) {
    let F = this.stack[this.stack.length - 1];
    F.depth = this.sliceSerialize(y).codePointAt(0) === 61 ? 1 : 2;
  }
  function T() {
    this.data.setextHeadingSlurpLineEnding = void 0;
  }
  function _(y) {
    let B = this.stack[this.stack.length - 1].children, E = B[B.length - 1];
    (!E || E.type !== "text") && (E = Ve(), E.position = {
      start: Di(y.start),
      // @ts-expect-error: we’ll add `end` later.
      end: void 0
    }, B.push(E)), this.stack.push(E);
  }
  function q(y) {
    let F = this.stack.pop();
    F.value += this.sliceSerialize(y), F.position.end = Di(y.end);
  }
  function O(y) {
    let F = this.stack[this.stack.length - 1];
    if (this.data.atHardBreak) {
      let B = F.children[F.children.length - 1];
      B.position.end = Di(y.end), this.data.atHardBreak = void 0;
      return;
    }
    !this.data.setextHeadingSlurpLineEnding && t.canContainEols.includes(F.type) && (_.call(this, y), q.call(this, y));
  }
  function $() {
    this.data.atHardBreak = !0;
  }
  function V() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.value = y;
  }
  function K() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.value = y;
  }
  function M() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.value = y;
  }
  function R() {
    let y = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      let F = this.data.referenceType || "shortcut";
      y.type += "Reference", y.referenceType = F, delete y.url, delete y.title;
    } else
      delete y.identifier, delete y.label;
    this.data.referenceType = void 0;
  }
  function U() {
    let y = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      let F = this.data.referenceType || "shortcut";
      y.type += "Reference", y.referenceType = F, delete y.url, delete y.title;
    } else
      delete y.identifier, delete y.label;
    this.data.referenceType = void 0;
  }
  function Y(y) {
    let F = this.sliceSerialize(y), B = this.stack[this.stack.length - 2];
    B.label = q5(F), B.identifier = Pn(F).toLowerCase();
  }
  function ee() {
    let y = this.stack[this.stack.length - 1], F = this.resume(), B = this.stack[this.stack.length - 1];
    if (this.data.inReference = !0, B.type === "link") {
      let E = y.children;
      B.children = E;
    } else
      B.alt = F;
  }
  function I() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.url = y;
  }
  function se() {
    let y = this.resume(), F = this.stack[this.stack.length - 1];
    F.title = y;
  }
  function Me() {
    this.data.inReference = void 0;
  }
  function N() {
    this.data.referenceType = "collapsed";
  }
  function Oe(y) {
    let F = this.resume(), B = this.stack[this.stack.length - 1];
    B.label = F, B.identifier = Pn(
      this.sliceSerialize(y)
    ).toLowerCase(), this.data.referenceType = "full";
  }
  function Pe(y) {
    this.data.characterReferenceType = y.type;
  }
  function ce(y) {
    let F = this.sliceSerialize(y), B = this.data.characterReferenceType, E;
    B ? (E = i1(
      F,
      B === "characterReferenceMarkerNumeric" ? 10 : 16
    ), this.data.characterReferenceType = void 0) : E = Rs(F);
    let j = this.stack.pop();
    j.value += E, j.position.end = Di(y.end);
  }
  function Dt(y) {
    q.call(this, y);
    let F = this.stack[this.stack.length - 1];
    F.url = this.sliceSerialize(y);
  }
  function Be(y) {
    q.call(this, y);
    let F = this.stack[this.stack.length - 1];
    F.url = "mailto:" + this.sliceSerialize(y);
  }
  function Z() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function de() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function X() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function te() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function pe() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function me() {
    return {
      type: "heading",
      // @ts-expect-error `depth` will be set later.
      depth: 0,
      children: []
    };
  }
  function De() {
    return {
      type: "break"
    };
  }
  function He() {
    return {
      type: "html",
      value: ""
    };
  }
  function pt() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function Re() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function Vt(y) {
    return {
      type: "list",
      ordered: y.type === "listOrdered",
      start: null,
      spread: y._spread,
      children: []
    };
  }
  function Ut(y) {
    return {
      type: "listItem",
      spread: y._spread,
      checked: null,
      children: []
    };
  }
  function ur() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function oe() {
    return {
      type: "strong",
      children: []
    };
  }
  function Ve() {
    return {
      type: "text",
      value: ""
    };
  }
  function x() {
    return {
      type: "thematicBreak"
    };
  }
}
function Di(e) {
  return {
    line: e.line,
    column: e.column,
    offset: e.offset
  };
}
function u1(e, t) {
  let r = -1;
  for (; ++r < t.length; ) {
    let i = t[r];
    Array.isArray(i) ? u1(e, i) : W5(e, i);
  }
}
function W5(e, t) {
  let r;
  for (r in t)
    if (a1.call(t, r))
      switch (r) {
        case "canContainEols": {
          let i = t[r];
          i && e[r].push(...i);
          break;
        }
        case "transforms": {
          let i = t[r];
          i && e[r].push(...i);
          break;
        }
        case "enter":
        case "exit": {
          let i = t[r];
          i && Object.assign(e[r], i);
          break;
        }
      }
}
function hb(e, t) {
  throw e ? new Error(
    "Cannot close `" + e.type + "` (" + ir({
      start: e.start,
      end: e.end
    }) + "): a different token (`" + t.type + "`, " + ir({
      start: t.start,
      end: t.end
    }) + ") is open"
  ) : new Error(
    "Cannot close document, a token (`" + t.type + "`, " + ir({
      start: t.start,
      end: t.end
    }) + ") is still open"
  );
}
function z5(e) {
  let t = this;
  t.parser = r;
  function r(i) {
    return V5(i, {
      ...t.data("settings"),
      ...e,
      // Note: these options are not in the readme.
      // The goal is for them to be set by plugins on `data` instead of being
      // passed by users.
      extensions: t.data("micromarkExtensions") || [],
      mdastExtensions: t.data("fromMarkdownExtensions") || []
    });
  }
  s(r, "parser");
}
function H5(e, t) {
  let r = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: e.wrap(e.all(t), !0)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function J5(e, t) {
  let r = { type: "element", tagName: "br", properties: {}, children: [] };
  return e.patch(t, r), [e.applyData(t, r), { type: "text", value: `
` }];
}
function G5(e, t) {
  let r = t.value ? t.value + `
` : "", i = {};
  t.lang && (i.className = ["language-" + t.lang]);
  let n = {
    type: "element",
    tagName: "code",
    properties: i,
    children: [{ type: "text", value: r }]
  };
  return t.meta && (n.data = { meta: t.meta }), e.patch(t, n), n = e.applyData(t, n), n = { type: "element", tagName: "pre", properties: {},
  children: [n] }, e.patch(t, n), n;
}
function X5(e, t) {
  let r = {
    type: "element",
    tagName: "del",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function K5(e, t) {
  let r = {
    type: "element",
    tagName: "em",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function Y5(e, t) {
  let r = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", i = String(t.identifier).toUpperCase(), n = On(
  i.toLowerCase()), o = e.footnoteOrder.indexOf(i), a, u = e.footnoteCounts.get(i);
  u === void 0 ? (u = 0, e.footnoteOrder.push(i), a = e.footnoteOrder.length) : a = o + 1, u += 1, e.footnoteCounts.set(i, u);
  let l = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + r + "fn-" + n,
      id: r + "fnref-" + n + (u > 1 ? "-" + u : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(a) }]
  };
  e.patch(t, l);
  let c = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [l]
  };
  return e.patch(t, c), e.applyData(t, c);
}
function Q5(e, t) {
  let r = {
    type: "element",
    tagName: "h" + t.depth,
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function Z5(e, t) {
  if (e.options.allowDangerousHtml) {
    let r = { type: "raw", value: t.value };
    return e.patch(t, r), e.applyData(t, r);
  }
}
function l1(e, t) {
  let r = t.referenceType, i = "]";
  if (r === "collapsed" ? i += "[]" : r === "full" && (i += "[" + (t.label || t.identifier) + "]"), t.type === "imageReference")
    return [{ type: "text", value: "![" + t.alt + i }];
  let n = e.all(t), o = n[0];
  o && o.type === "text" ? o.value = "[" + o.value : n.unshift({ type: "text", value: "[" });
  let a = n[n.length - 1];
  return a && a.type === "text" ? a.value += i : n.push({ type: "text", value: i }), n;
}
function eN(e, t) {
  let r = String(t.identifier).toUpperCase(), i = e.definitionById.get(r);
  if (!i)
    return l1(e, t);
  let n = { src: On(i.url || ""), alt: t.alt };
  i.title !== null && i.title !== void 0 && (n.title = i.title);
  let o = { type: "element", tagName: "img", properties: n, children: [] };
  return e.patch(t, o), e.applyData(t, o);
}
function tN(e, t) {
  let r = { src: On(t.url) };
  t.alt !== null && t.alt !== void 0 && (r.alt = t.alt), t.title !== null && t.title !== void 0 && (r.title = t.title);
  let i = { type: "element", tagName: "img", properties: r, children: [] };
  return e.patch(t, i), e.applyData(t, i);
}
function rN(e, t) {
  let r = { type: "text", value: t.value.replace(/\r?\n|\r/g, " ") };
  e.patch(t, r);
  let i = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [r]
  };
  return e.patch(t, i), e.applyData(t, i);
}
function iN(e, t) {
  let r = String(t.identifier).toUpperCase(), i = e.definitionById.get(r);
  if (!i)
    return l1(e, t);
  let n = { href: On(i.url || "") };
  i.title !== null && i.title !== void 0 && (n.title = i.title);
  let o = {
    type: "element",
    tagName: "a",
    properties: n,
    children: e.all(t)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function nN(e, t) {
  let r = { href: On(t.url) };
  t.title !== null && t.title !== void 0 && (r.title = t.title);
  let i = {
    type: "element",
    tagName: "a",
    properties: r,
    children: e.all(t)
  };
  return e.patch(t, i), e.applyData(t, i);
}
function sN(e, t, r) {
  let i = e.all(t), n = r ? oN(r) : c1(t), o = {}, a = [];
  if (typeof t.checked == "boolean") {
    let p = i[0], h;
    p && p.type === "element" && p.tagName === "p" ? h = p : (h = { type: "element", tagName: "p", properties: {}, children: [] }, i.unshift(
    h)), h.children.length > 0 && h.children.unshift({ type: "text", value: " " }), h.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: t.checked, disabled: !0 },
      children: []
    }), o.className = ["task-list-item"];
  }
  let u = -1;
  for (; ++u < i.length; ) {
    let p = i[u];
    (n || u !== 0 || p.type !== "element" || p.tagName !== "p") && a.push({ type: "text", value: `
` }), p.type === "element" && p.tagName === "p" && !n ? a.push(...p.children) : a.push(p);
  }
  let l = i[i.length - 1];
  l && (n || l.type !== "element" || l.tagName !== "p") && a.push({ type: "text", value: `
` });
  let c = { type: "element", tagName: "li", properties: o, children: a };
  return e.patch(t, c), e.applyData(t, c);
}
function oN(e) {
  let t = !1;
  if (e.type === "list") {
    t = e.spread || !1;
    let r = e.children, i = -1;
    for (; !t && ++i < r.length; )
      t = c1(r[i]);
  }
  return t;
}
function c1(e) {
  let t = e.spread;
  return t ?? e.children.length > 1;
}
function aN(e, t) {
  let r = {}, i = e.all(t), n = -1;
  for (typeof t.start == "number" && t.start !== 1 && (r.start = t.start); ++n < i.length; ) {
    let a = i[n];
    if (a.type === "element" && a.tagName === "li" && a.properties && Array.isArray(a.properties.className) && a.properties.className.includes(
    "task-list-item")) {
      r.className = ["contains-task-list"];
      break;
    }
  }
  let o = {
    type: "element",
    tagName: t.ordered ? "ol" : "ul",
    properties: r,
    children: e.wrap(i, !0)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function uN(e, t) {
  let r = {
    type: "element",
    tagName: "p",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function lN(e, t) {
  let r = { type: "root", children: e.wrap(e.all(t)) };
  return e.patch(t, r), e.applyData(t, r);
}
function cN(e, t) {
  let r = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function pN(e, t) {
  let r = e.all(t), i = r.shift(), n = [];
  if (i) {
    let a = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: e.wrap([i], !0)
    };
    e.patch(t.children[0], a), n.push(a);
  }
  if (r.length > 0) {
    let a = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: e.wrap(r, !0)
    }, u = Vp(t.children[1]), l = $p(t.children[t.children.length - 1]);
    u && l && (a.position = { start: u, end: l }), n.push(a);
  }
  let o = {
    type: "element",
    tagName: "table",
    properties: {},
    children: e.wrap(n, !0)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function hN(e, t, r) {
  let i = r ? r.children : void 0, o = (i ? i.indexOf(t) : 1) === 0 ? "th" : "td", a = r && r.type === "table" ? r.align : void 0, u = a ? a.
  length : t.children.length, l = -1, c = [];
  for (; ++l < u; ) {
    let h = t.children[l], f = {}, d = a ? a[l] : void 0;
    d && (f.align = d);
    let m = { type: "element", tagName: o, properties: f, children: [] };
    h && (m.children = e.all(h), e.patch(h, m), m = e.applyData(h, m)), c.push(m);
  }
  let p = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: e.wrap(c, !0)
  };
  return e.patch(t, p), e.applyData(t, p);
}
function fN(e, t) {
  let r = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function dN(e) {
  let t = String(e), r = /\r?\n|\r/g, i = r.exec(t), n = 0, o = [];
  for (; i; )
    o.push(
      mb(t.slice(n, i.index), n > 0, !0),
      i[0]
    ), n = i.index + i[0].length, i = r.exec(t);
  return o.push(mb(t.slice(n), n > 0, !1)), o.join("");
}
function mb(e, t, r) {
  let i = 0, n = e.length;
  if (t) {
    let o = e.codePointAt(i);
    for (; o === fb || o === db; )
      i++, o = e.codePointAt(i);
  }
  if (r) {
    let o = e.codePointAt(n - 1);
    for (; o === fb || o === db; )
      n--, o = e.codePointAt(n - 1);
  }
  return n > i ? e.slice(i, n) : "";
}
function mN(e, t) {
  let r = { type: "text", value: dN(String(t.value)) };
  return e.patch(t, r), e.applyData(t, r);
}
function gN(e, t) {
  let r = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return e.patch(t, r), e.applyData(t, r);
}
function ka() {
}
function vN(e, t) {
  let r = [{ type: "text", value: "\u21A9" }];
  return t > 1 && r.push({
    type: "element",
    tagName: "sup",
    properties: {},
    children: [{ type: "text", value: String(t) }]
  }), r;
}
function CN(e, t) {
  return "Back to reference " + (e + 1) + (t > 1 ? "-" + t : "");
}
function wN(e) {
  let t = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", r = e.options.footnoteBackContent || vN, i = e.
  options.footnoteBackLabel || CN, n = e.options.footnoteLabel || "Footnotes", o = e.options.footnoteLabelTagName || "h2", a = e.options.footnoteLabelProperties ||
  {
    className: ["sr-only"]
  }, u = [], l = -1;
  for (; ++l < e.footnoteOrder.length; ) {
    let c = e.footnoteById.get(e.footnoteOrder[l]);
    if (!c)
      continue;
    let p = e.all(c), h = String(c.identifier).toUpperCase(), f = On(h.toLowerCase()), d = 0, m = [], g = e.footnoteCounts.get(h);
    for (; g !== void 0 && ++d <= g; ) {
      m.length > 0 && m.push({ type: "text", value: " " });
      let v = typeof r == "string" ? r : r(l, d);
      typeof v == "string" && (v = { type: "text", value: v }), m.push({
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t + "fnref-" + f + (d > 1 ? "-" + d : ""),
          dataFootnoteBackref: "",
          ariaLabel: typeof i == "string" ? i : i(l, d),
          className: ["data-footnote-backref"]
        },
        children: Array.isArray(v) ? v : [v]
      });
    }
    let b = p[p.length - 1];
    if (b && b.type === "element" && b.tagName === "p") {
      let v = b.children[b.children.length - 1];
      v && v.type === "text" ? v.value += " " : b.children.push({ type: "text", value: " " }), b.children.push(...m);
    } else
      p.push(...m);
    let D = {
      type: "element",
      tagName: "li",
      properties: { id: t + "fn-" + f },
      children: e.wrap(p, !0)
    };
    e.patch(c, D), u.push(D);
  }
  if (u.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: o,
          properties: {
            ...Ma(a),
            id: "footnote-label"
          },
          children: [{ type: "text", value: n }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: e.wrap(u, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
function AN(e) {
  let t = [], r = -1;
  for (; ++r < e.length; )
    t[r] = d1(e[r]);
  return $a(i);
  function i(...n) {
    let o = -1;
    for (; ++o < t.length; )
      if (t[o].apply(this, n))
        return !0;
    return !1;
  }
}
function SN(e) {
  let t = (
    /** @type {Record<string, unknown>} */
    e
  );
  return $a(r);
  function r(i) {
    let n = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      i
    ), o;
    for (o in e)
      if (n[o] !== t[o])
        return !1;
    return !0;
  }
}
function FN(e) {
  return $a(t);
  function t(r) {
    return r && r.type === e;
  }
}
function $a(e) {
  return t;
  function t(r, i, n) {
    return !!(kN(r) && e.call(
      this,
      r,
      typeof i == "number" ? i : void 0,
      n || void 0
    ));
  }
}
function _N() {
  return !0;
}
function kN(e) {
  return e !== null && typeof e == "object" && "type" in e;
}
function TN(e) {
  return "\x1B[33m" + e + "\x1B[39m";
}
function PN(e, t, r, i) {
  let n;
  typeof t == "function" && typeof r != "function" ? (i = r, r = t) : n = t;
  let o = d1(n), a = i ? -1 : 1;
  u(e, void 0, [])();
  function u(l, c, p) {
    let h = (
      /** @type {Record<string, unknown>} */
      l && typeof l == "object" ? l : {}
    );
    if (typeof h.type == "string") {
      let d = (
        // `hast`
        typeof h.tagName == "string" ? h.tagName : (
          // `xast`
          typeof h.name == "string" ? h.name : void 0
        )
      );
      Object.defineProperty(f, "name", {
        value: "node (" + TN(l.type + (d ? "<" + d + ">" : "")) + ")"
      });
    }
    return f;
    function f() {
      let d = m1, m, g, b;
      if ((!t || o(l, c, p[p.length - 1] || void 0)) && (d = ON(r(l, p)), d[0] === xb))
        return d;
      if ("children" in l && l.children) {
        let D = (
          /** @type {UnistParent} */
          l
        );
        if (D.children && d[0] !== IN)
          for (g = (i ? D.children.length : -1) + a, b = p.concat(D); g > -1 && g < D.children.length; ) {
            let v = D.children[g];
            if (m = u(v, g, b)(), m[0] === xb)
              return m;
            g = typeof m[1] == "number" ? m[1] : g + a;
          }
      }
      return d;
    }
  }
  s(u, "factory");
}
function ON(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [BN, e] : e == null ? m1 : [e];
}
function Oh(e, t, r, i) {
  let n, o, a;
  typeof t == "function" && typeof r != "function" ? (o = void 0, a = t, n = r) : (o = t, a = r, n = i), PN(e, o, u, n);
  function u(l, c) {
    let p = c[c.length - 1], h = p ? p.children.indexOf(l) : void 0;
    return a(l, h, p);
  }
  s(u, "overload");
}
function NN(e, t) {
  let r = t || RN, i = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), a = { ...DN, ...r.handlers },
  u = {
    all: c,
    applyData: MN,
    definitionById: i,
    footnoteById: n,
    footnoteCounts: o,
    footnoteOrder: [],
    handlers: a,
    one: l,
    options: r,
    patch: LN,
    wrap: qN
  };
  return Oh(e, function(p) {
    if (p.type === "definition" || p.type === "footnoteDefinition") {
      let h = p.type === "definition" ? i : n, f = String(p.identifier).toUpperCase();
      h.has(f) || h.set(f, p);
    }
  }), u;
  function l(p, h) {
    let f = p.type, d = u.handlers[f];
    if (Ah.call(u.handlers, f) && d)
      return d(u, p, h);
    if (u.options.passThrough && u.options.passThrough.includes(f)) {
      if ("children" in p) {
        let { children: g, ...b } = p, D = Ma(b);
        return D.children = u.all(p), D;
      }
      return Ma(p);
    }
    return (u.options.unknownHandler || jN)(u, p, h);
  }
  s(l, "one2");
  function c(p) {
    let h = [];
    if ("children" in p) {
      let f = p.children, d = -1;
      for (; ++d < f.length; ) {
        let m = u.one(f[d], p);
        if (m) {
          if (d && f[d - 1].type === "break" && (!Array.isArray(m) && m.type === "text" && (m.value = Eb(m.value)), !Array.isArray(m) && m.type ===
          "element")) {
            let g = m.children[0];
            g && g.type === "text" && (g.value = Eb(g.value));
          }
          Array.isArray(m) ? h.push(...m) : h.push(m);
        }
      }
    }
    return h;
  }
  s(c, "all2");
}
function LN(e, t) {
  e.position && (t.position = Up(e));
}
function MN(e, t) {
  let r = t;
  if (e && e.data) {
    let i = e.data.hName, n = e.data.hChildren, o = e.data.hProperties;
    if (typeof i == "string")
      if (r.type === "element")
        r.tagName = i;
      else {
        let a = "children" in r ? r.children : [r];
        r = { type: "element", tagName: i, properties: {}, children: a };
      }
    r.type === "element" && o && Object.assign(r.properties, Ma(o)), "children" in r && r.children && n !== null && n !== void 0 && (r.children =
    n);
  }
  return r;
}
function jN(e, t) {
  let r = t.data || {}, i = "value" in t && !(Ah.call(r, "hProperties") || Ah.call(r, "hChildren")) ? { type: "text", value: t.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, i), e.applyData(t, i);
}
function qN(e, t) {
  let r = [], i = -1;
  for (t && r.push({ type: "text", value: `
` }); ++i < e.length; )
    i && r.push({ type: "text", value: `
` }), r.push(e[i]);
  return t && e.length > 0 && r.push({ type: "text", value: `
` }), r;
}
function Eb(e) {
  let t = 0, r = e.charCodeAt(t);
  for (; r === 9 || r === 32; )
    t++, r = e.charCodeAt(t);
  return e.slice(t);
}
function bb(e, t) {
  let r = NN(e, t), i = r.one(e, void 0), n = wN(r), o = Array.isArray(i) ? { type: "root", children: i } : i || { type: "root", children: [] };
  return n && ("children" in o, o.children.push({ type: "text", value: `
` }, n)), o;
}
function $N(e, t) {
  return e && "run" in e ? async function(r, i) {
    let n = (
      /** @type {HastRoot} */
      bb(r, t)
    );
    await e.run(n, i);
  } : function(r) {
    return (
      /** @type {HastRoot} */
      bb(r, t || e)
    );
  };
}
function vb(e) {
  if (e)
    throw e;
}
function Sh(e) {
  if (typeof e != "object" || e === null)
    return !1;
  let t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function VN() {
  let e = [], t = { run: r, use: i };
  return t;
  function r(...n) {
    let o = -1, a = n.pop();
    if (typeof a != "function")
      throw new TypeError("Expected function as last argument, not " + a);
    u(null, ...n);
    function u(l, ...c) {
      let p = e[++o], h = -1;
      if (l) {
        a(l);
        return;
      }
      for (; ++h < n.length; )
        (c[h] === null || c[h] === void 0) && (c[h] = n[h]);
      n = c, p ? UN(p, u)(...c) : a(null, ...c);
    }
    s(u, "next");
  }
  function i(n) {
    if (typeof n != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + n
      );
    return e.push(n), t;
  }
}
function UN(e, t) {
  let r;
  return i;
  function i(...a) {
    let u = e.length > a.length, l;
    u && a.push(n);
    try {
      l = e.apply(this, a);
    } catch (c) {
      let p = (
        /** @type {Error} */
        c
      );
      if (u && r)
        throw p;
      return n(p);
    }
    u || (l instanceof Promise ? l.then(o, n) : l instanceof Error ? n(l) : o(l));
  }
  function n(a, ...u) {
    r || (r = !0, t(a, ...u));
  }
  function o(a) {
    n(null, a);
  }
}
function mh(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `parser`");
}
function gh(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `compiler`");
}
function Dh(e, t) {
  if (t)
    throw new Error(
      "Cannot call `" + e + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function Cb(e) {
  if (!Sh(e) || typeof e.type != "string")
    throw new TypeError("Expected node, got `" + e + "`");
}
function wb(e, t, r) {
  if (!r)
    throw new Error(
      "`" + e + "` finished async. Use `" + t + "` instead"
    );
}
function Ba(e) {
  return JN(e) ? e : new jb(e);
}
function JN(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function GN(e) {
  return typeof e == "string" || XN(e);
}
function XN(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
function Ab(e) {
  return e !== null && typeof e == "object" && "type" in e && typeof e.type == "string";
}
function Ns(e, { enter: t, leave: r }) {
  return new YN(t, r).visit(e, null);
}
function D1(e, t) {
  if (e.type === "MemberExpression")
    return !e.computed && D1(e.object, e);
  if (e.type === "Identifier") {
    if (!t)
      return !0;
    switch (t.type) {
      case "MemberExpression":
        return t.computed || e === t.object;
      case "MethodDefinition":
        return t.computed;
      case "PropertyDefinition":
        return t.computed || e === t.value;
      case "Property":
        return t.computed || e === t.value;
      case "ExportSpecifier":
      case "ImportSpecifier":
        return e === t.local;
      case "LabeledStatement":
      case "BreakStatement":
      case "ContinueStatement":
        return !1;
      default:
        return !0;
    }
  }
  return !1;
}
function y1(e) {
  let t = /* @__PURE__ */ new WeakMap(), r = /* @__PURE__ */ new Map(), i = new _n(null, !1), n = [], o = i;
  Ns(e, {
    enter(a, u) {
      switch (a.type) {
        case "Identifier":
          u && D1(a, u) && n.push([o, a]);
          break;
        case "ImportDeclaration":
          a.specifiers.forEach((l) => {
            o.declarations.set(l.local.name, l);
          });
          break;
        case "FunctionExpression":
        case "FunctionDeclaration":
        case "ArrowFunctionExpression":
          a.type === "FunctionDeclaration" ? (a.id && o.declarations.set(a.id.name, a), t.set(a, o = new _n(o, !1))) : (t.set(a, o = new _n(
          o, !1)), a.type === "FunctionExpression" && a.id && o.declarations.set(a.id.name, a)), a.params.forEach((l) => {
            Fh(l).forEach((c) => {
              o.declarations.set(c, a);
            });
          });
          break;
        case "ForStatement":
        case "ForInStatement":
        case "ForOfStatement":
          t.set(a, o = new _n(o, !0));
          break;
        case "BlockStatement":
          t.set(a, o = new _n(o, !0));
          break;
        case "ClassDeclaration":
        case "VariableDeclaration":
          o.add_declaration(a);
          break;
        case "CatchClause":
          t.set(a, o = new _n(o, !0)), a.param && Fh(a.param).forEach((l) => {
            a.param && o.declarations.set(l, a.param);
          });
          break;
      }
    },
    leave(a) {
      t.has(a) && o !== null && o.parent && (o = o.parent);
    }
  });
  for (let a = n.length - 1; a >= 0; --a) {
    let [u, l] = n[a];
    u.references.has(l.name) || x1(u, l.name), u.find_owner(l.name) || r.set(l.name, l);
  }
  return { map: t, scope: i, globals: r };
}
function x1(e, t) {
  e.references.add(t), e.parent && x1(e.parent, t);
}
function Fh(e) {
  return Bn(e).map((t) => t.name);
}
function Bn(e, t = []) {
  switch (e.type) {
    case "Identifier":
      t.push(e);
      break;
    case "MemberExpression":
      let r = e;
      for (; r.type === "MemberExpression"; )
        r = /** @type {any} */
        r.object;
      t.push(
        /** @type {any} */
        r
      );
      break;
    case "ObjectPattern":
      let i = /* @__PURE__ */ s((o) => {
        o.type === "RestElement" ? Bn(o.argument, t) : Bn(o.value, t);
      }, "handle_prop");
      e.properties.forEach(i);
      break;
    case "ArrayPattern":
      let n = /* @__PURE__ */ s((o) => {
        o && Bn(o, t);
      }, "handle_element");
      e.elements.forEach((o) => {
        o && n(o);
      });
      break;
    case "RestElement":
      Bn(e.argument, t);
      break;
    case "AssignmentPattern":
      Bn(e.left, t);
      break;
  }
  return t;
}
function yi(e, t) {
  let r = ["start", "end", "loc", "range", "comments"], i = -1;
  for (; ++i < r.length; ) {
    let n = r[i];
    n in e && (t[n] = e[n]);
  }
}
function QN(e) {
  return e.type === "FunctionDeclaration" ? { ...e, type: "FunctionExpression" } : (e.type, { ...e, type: "ClassExpression" });
}
function ZN(e) {
  return e.type === "FunctionDeclaration" || e.type === "ClassDeclaration" || e.type === "VariableDeclaration";
}
function Rh(e, t) {
  let r = -1, i = [], n = [], o;
  for (; ++r < e.length; ) {
    let a = e[r];
    a.type === "ImportNamespaceSpecifier" ? o = a : n.push(a);
  }
  if (o) {
    let a = {
      type: "VariableDeclarator",
      id: o.local,
      init: t
    };
    yi(o, a), i.push(a);
  }
  return i.push({
    type: "VariableDeclarator",
    id: {
      type: "ObjectPattern",
      properties: n.map(function(a) {
        let u = a.type === "ImportSpecifier" ? a.imported : a.type === "ExportSpecifier" ? a.exported : { type: "Identifier", name: "default" },
        l = a.local;
        a.type === "ExportSpecifier" && (l = u, u = a.local);
        let c = {
          type: "Property",
          kind: "init",
          shorthand: u.name === l.name,
          method: !1,
          computed: !1,
          key: u,
          value: l
        };
        return yi(a, c), c;
      })
    },
    init: o ? { type: "Identifier", name: o.local.name } : t
  }), i;
}
function xi(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let i = e[t], n = typeof i == "string" && fr(i) ? { type: "Identifier", name: i } : { type: "Literal", value: i };
    r = r ? {
      type: "MemberExpression",
      object: r,
      property: n,
      computed: n.type === "Literal",
      optional: !1
    } : n;
  }
  return r.type, r;
}
function Sb(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let i = e[t];
    typeof i == "string" && fr(i, { jsx: !0 }), "" + i;
    let n = { type: "JSXIdentifier", name: i };
    r = r ? { type: "JSXMemberExpression", object: r, property: n } : n;
  }
  return r;
}
function e7(e) {
  let t = e.baseUrl || void 0, r = typeof t == "object" ? t.href : t, i = e.outputFormat || "program", n = e.pragma === void 0 ? "React.crea\
teElement" : e.pragma, o = e.pragmaFrag === void 0 ? "React.Fragment" : e.pragmaFrag, a = e.pragmaImportSource || "react", u = e.jsxImportSource ||
  "react", l = e.jsxRuntime || "automatic";
  return function(p, h) {
    let f = [], d = [], m = [], g = 0, b, D, v;
    if (l && m.push("@jsxRuntime " + l), l === "automatic" && u && m.push("@jsxImportSource " + u), l === "classic" && n && m.push("@jsx " +
    n), l === "classic" && o && m.push("@jsxFrag " + o), p.comments || (p.comments = []), m.length > 0 && p.comments.unshift({
      type: "Block",
      value: m.join(" "),
      data: { _mdxIsPragmaComment: !0 }
    }), l === "classic" && a) {
      if (!n)
        throw new Error(
          "Missing `pragma` in classic runtime with `pragmaImportSource`"
        );
      C({
        type: "ImportDeclaration",
        specifiers: [
          {
            type: "ImportDefaultSpecifier",
            local: { type: "Identifier", name: n.split(".")[0] }
          }
        ],
        source: { type: "Literal", value: a }
      });
    }
    for (v of p.body)
      if (v.type === "ExportDefaultDeclaration")
        b && h.fail(
          "Unexpected duplicate layout, expected a single layout (previous: " + ir(Kr(b)) + ")",
          {
            ancestors: [p, v],
            place: Kr(v),
            ruleId: "duplicate-layout",
            source: "recma-document"
          }
        ), b = v, d.push({
          type: "VariableDeclaration",
          kind: "const",
          declarations: [
            {
              type: "VariableDeclarator",
              id: { type: "Identifier", name: "MDXLayout" },
              init: ZN(v.declaration) ? QN(v.declaration) : v.declaration
            }
          ]
        });
      else if (v.type === "ExportNamedDeclaration" && v.source) {
        let w = (
          /** @type {SimpleLiteral} */
          v.source
        );
        v.specifiers = v.specifiers.filter(function(T) {
          if (T.exported.name === "default") {
            b && h.fail(
              "Unexpected duplicate layout, expected a single layout (previous: " + ir(Kr(b)) + ")",
              {
                ancestors: [p, v, T],
                place: Kr(v),
                ruleId: "duplicate-layout",
                source: "recma-document"
              }
            ), b = T;
            let _ = [];
            if (T.local.name === "default")
              _.push({
                type: "ImportDefaultSpecifier",
                local: { type: "Identifier", name: "MDXLayout" }
              });
            else {
              let $ = {
                type: "ImportSpecifier",
                imported: T.local,
                local: { type: "Identifier", name: "MDXLayout" }
              };
              yi(T.local, $), _.push($);
            }
            let q = { type: "Literal", value: w.value };
            yi(w, q);
            let O = {
              type: "ImportDeclaration",
              specifiers: _,
              source: q
            };
            return yi(T, O), C(O), !1;
          }
          return !0;
        }), v.specifiers.length > 0 && L(v);
      } else v.type === "ExportNamedDeclaration" || v.type === "ExportAllDeclaration" ? L(v) : v.type === "ImportDeclaration" ? C(v) : v.type ===
      "ExpressionStatement" && (v.expression.type === "JSXElement" || // @ts-expect-error: `estree-jsx` does not register `JSXFragment` as an expression.
      v.expression.type === "JSXFragment") ? (D = !0, d.push(
        ...c(v.expression, i, !!b)
      )) : d.push(v);
    D || d.push(
      ...c(void 0, i, !!b)
    ), f.push(["MDXContent", "default"]), i === "function-body" && d.push({
      type: "ReturnStatement",
      argument: {
        type: "ObjectExpression",
        properties: [
          ...Array.from({ length: g }).map(
            /**
             * @param {undefined} _
             *   Nothing.
             * @param {number} index
             *   Index.
             * @returns {SpreadElement}
             *   Node.
             */
            function(w, T) {
              return {
                type: "SpreadElement",
                argument: {
                  type: "Identifier",
                  name: "_exportAll" + (T + 1)
                }
              };
            }
          ),
          ...f.map(function(w) {
            return {
              type: "Property",
              kind: "init",
              method: !1,
              computed: !1,
              shorthand: typeof w == "string",
              key: {
                type: "Identifier",
                name: typeof w == "string" ? w : w[1]
              },
              value: {
                type: "Identifier",
                name: typeof w == "string" ? w : w[0]
              }
            };
          })
        ]
      }
    }), p.body = d;
    let S = !1, k = !1;
    (r || i === "function-body") && Ns(p, {
      enter(w) {
        if ((w.type === "ExportAllDeclaration" || w.type === "ExportNamedDeclaration" || w.type === "ImportDeclaration") && w.source) {
          let T = w.source.value;
          try {
            new URL(T);
          } catch {
            (T.startsWith("/") || T.startsWith("./") || T.startsWith("../")) && (T = new URL(T, r).href);
          }
          let _ = { type: "Literal", value: T };
          yi(w.source, _), w.source = _;
          return;
        }
        if (w.type === "ImportExpression") {
          k = !0;
          let T = {
            type: "CallExpression",
            callee: { type: "Identifier", name: "_resolveDynamicMdxSpecifier" },
            arguments: [w.source],
            optional: !1
          };
          w.source = T;
          return;
        }
        if (w.type === "MemberExpression" && "object" in w && w.object.type === "MetaProperty" && w.property.type === "Identifier" && w.object.
        meta.name === "import" && w.object.property.name === "meta" && w.property.name === "url") {
          S = !0;
          let T = { type: "Identifier", name: "_importMetaUrl" };
          yi(w, T), this.replace(T);
        }
      }
    }), k && (r || (S = !0), p.body.push(
      t7(
        r ? { type: "Literal", value: r } : { type: "Identifier", name: "_importMetaUrl" }
      )
    )), S && p.body.unshift(...r7());
    function L(w) {
      if (w.type === "ExportNamedDeclaration") {
        w.declaration && f.push(
          ...y1(w.declaration).scope.declarations.keys()
        );
        for (v of w.specifiers)
          f.push(v.exported.name);
      }
      C(w);
    }
    s(L, "handleExport");
    function C(w) {
      let T, _;
      if (i === "function-body")
        if (
          // Always have a source:
          w.type === "ImportDeclaration" || w.type === "ExportAllDeclaration" || // Source optional:
          w.type === "ExportNamedDeclaration" && w.source
        ) {
          w.source;
          let q = { type: "ImportExpression", source: w.source };
          yi(w, q), _ = { type: "AwaitExpression", argument: q }, (w.type === "ImportDeclaration" || w.type === "ExportNamedDeclaration") &&
          w.specifiers.length === 0 ? T = { type: "ExpressionStatement", expression: _ } : T = {
            type: "VariableDeclaration",
            kind: "const",
            declarations: w.type === "ExportAllDeclaration" ? [
              {
                type: "VariableDeclarator",
                id: {
                  type: "Identifier",
                  name: "_exportAll" + ++g
                },
                init: _
              }
            ] : Rh(w.specifiers, _)
          };
        } else if (w.declaration)
          T = w.declaration;
        else {
          let q = w.specifiers.filter(function(O) {
            return O.local.name !== O.exported.name;
          }).map(function(O) {
            return {
              type: "VariableDeclarator",
              id: O.exported,
              init: O.local
            };
          });
          q.length > 0 && (T = {
            type: "VariableDeclaration",
            kind: "const",
            declarations: q
          });
        }
      else
        T = w;
      T && d.push(T);
    }
    s(C, "handleEsm");
  };
  function c(p, h, f) {
    let m = {
      type: "JSXElement",
      openingElement: {
        type: "JSXOpeningElement",
        name: { type: "JSXIdentifier", name: "MDXLayout" },
        attributes: [
          {
            type: "JSXSpreadAttribute",
            argument: { type: "Identifier", name: "props" }
          }
        ],
        selfClosing: !1
      },
      closingElement: {
        type: "JSXClosingElement",
        name: { type: "JSXIdentifier", name: "MDXLayout" }
      },
      children: [
        {
          type: "JSXElement",
          openingElement: {
            type: "JSXOpeningElement",
            name: { type: "JSXIdentifier", name: "_createMdxContent" },
            attributes: [
              {
                type: "JSXSpreadAttribute",
                argument: { type: "Identifier", name: "props" }
              }
            ],
            selfClosing: !0
          },
          closingElement: null,
          children: []
        }
      ]
    };
    f || (m = {
      type: "ConditionalExpression",
      test: { type: "Identifier", name: "MDXLayout" },
      consequent: m,
      alternate: {
        type: "CallExpression",
        callee: { type: "Identifier", name: "_createMdxContent" },
        arguments: [{ type: "Identifier", name: "props" }],
        optional: !1
      }
    });
    let g = (
      // Cast because TS otherwise does not think `JSXFragment`s are expressions.
      /** @type {Readonly<Expression> | Readonly<JSXFragment>} */
      p || { type: "Identifier", name: "undefined" }
    );
    g.type === "JSXFragment" && g.children.length === 1 && g.children[0].type === "JSXElement" && (g = g.children[0]);
    let b = !1;
    Ns(g, {
      enter(v) {
        if (v.type === "ArrowFunctionExpression" || v.type === "FunctionDeclaration" || v.type === "FunctionExpression")
          return this.skip();
        (v.type === "AwaitExpression" || /* c8 ignore next 2 -- can only occur in a function (which then can
        * only be async, so skipped it) */
        v.type === "ForOfStatement" && v.await) && (b = !0);
      }
    });
    let D = {
      type: "FunctionDeclaration",
      id: { type: "Identifier", name: "MDXContent" },
      params: [
        {
          type: "AssignmentPattern",
          left: { type: "Identifier", name: "props" },
          right: { type: "ObjectExpression", properties: [] }
        }
      ],
      body: {
        type: "BlockStatement",
        body: [{ type: "ReturnStatement", argument: m }]
      }
    };
    return [
      {
        type: "FunctionDeclaration",
        async: b,
        id: { type: "Identifier", name: "_createMdxContent" },
        params: [{ type: "Identifier", name: "props" }],
        body: {
          type: "BlockStatement",
          body: [
            {
              type: "ReturnStatement",
              // Cast because TS doesn’t think `JSXFragment` is an expression.
              // eslint-disable-next-line object-shorthand
              argument: (
                /** @type {Expression} */
                g
              )
            }
          ]
        }
      },
      h === "program" ? { type: "ExportDefaultDeclaration", declaration: D } : D
    ];
  }
}
function t7(e) {
  return {
    type: "FunctionDeclaration",
    id: { type: "Identifier", name: "_resolveDynamicMdxSpecifier" },
    generator: !1,
    async: !1,
    params: [{ type: "Identifier", name: "d" }],
    body: {
      type: "BlockStatement",
      body: [
        {
          type: "IfStatement",
          test: {
            type: "BinaryExpression",
            left: {
              type: "UnaryExpression",
              operator: "typeof",
              prefix: !0,
              argument: { type: "Identifier", name: "d" }
            },
            operator: "!==",
            right: { type: "Literal", value: "string" }
          },
          consequent: {
            type: "ReturnStatement",
            argument: { type: "Identifier", name: "d" }
          },
          alternate: null
        },
        // To do: use `URL.canParse` when widely supported (see commented
        // out code below).
        {
          type: "TryStatement",
          block: {
            type: "BlockStatement",
            body: [
              {
                type: "ExpressionStatement",
                expression: {
                  type: "NewExpression",
                  callee: { type: "Identifier", name: "URL" },
                  arguments: [{ type: "Identifier", name: "d" }]
                }
              },
              {
                type: "ReturnStatement",
                argument: { type: "Identifier", name: "d" }
              }
            ]
          },
          handler: {
            type: "CatchClause",
            param: null,
            body: { type: "BlockStatement", body: [] }
          },
          finalizer: null
        },
        // To do: use `URL.canParse` when widely supported.
        // {
        //   type: 'IfStatement',
        //   test: {
        //     type: 'CallExpression',
        //     callee: toIdOrMemberExpression(['URL', 'canParse']),
        //     arguments: [{type: 'Identifier', name: 'd'}],
        //     optional: false
        //   },
        //   consequent: {
        //     type: 'ReturnStatement',
        //     argument: {type: 'Identifier', name: 'd'}
        //   },
        //   alternate: null
        // },
        {
          type: "IfStatement",
          test: {
            type: "LogicalExpression",
            left: {
              type: "LogicalExpression",
              left: {
                type: "CallExpression",
                callee: xi(["d", "startsWith"]),
                arguments: [{ type: "Literal", value: "/" }],
                optional: !1
              },
              operator: "||",
              right: {
                type: "CallExpression",
                callee: xi(["d", "startsWith"]),
                arguments: [{ type: "Literal", value: "./" }],
                optional: !1
              }
            },
            operator: "||",
            right: {
              type: "CallExpression",
              callee: xi(["d", "startsWith"]),
              arguments: [{ type: "Literal", value: "../" }],
              optional: !1
            }
          },
          consequent: {
            type: "ReturnStatement",
            argument: {
              type: "MemberExpression",
              object: {
                type: "NewExpression",
                callee: { type: "Identifier", name: "URL" },
                arguments: [{ type: "Identifier", name: "d" }, e]
              },
              property: { type: "Identifier", name: "href" },
              computed: !1,
              optional: !1
            }
          },
          alternate: null
        },
        {
          type: "ReturnStatement",
          argument: { type: "Identifier", name: "d" }
        }
      ]
    }
  };
}
function r7() {
  return [
    {
      type: "VariableDeclaration",
      declarations: [
        {
          type: "VariableDeclarator",
          id: { type: "Identifier", name: "_importMetaUrl" },
          init: xi(["arguments", 0, "baseUrl"])
        }
      ],
      kind: "const"
    },
    {
      type: "IfStatement",
      test: {
        type: "UnaryExpression",
        operator: "!",
        prefix: !0,
        argument: { type: "Identifier", name: "_importMetaUrl" }
      },
      consequent: {
        type: "ThrowStatement",
        argument: {
          type: "NewExpression",
          callee: { type: "Identifier", name: "Error" },
          arguments: [
            {
              type: "Literal",
              value: "Unexpected missing `options.baseUrl` needed to support `export \u2026 from`, `import`, or `import.meta.url` when generating\
 `function-body`"
            }
          ]
        }
      },
      alternate: null
    }
  ];
}
function i7(e, t) {
  let r = t || {}, i = r.runtime === "automatic", n = {}, o = {};
  Ns(e, {
    enter(a) {
      if (a.type === "Program") {
        let u = a.comments || [], l = -1;
        for (; ++l < u.length; ) {
          yh.lastIndex = 0;
          let c = yh.exec(u[l].value);
          for (; c; )
            n[c[1]] = c[2], c = yh.exec(u[l].value);
        }
        if (n.jsxRuntime)
          if (n.jsxRuntime === "automatic") {
            if (i = !0, n.jsx)
              throw new Error("Unexpected `@jsx` pragma w/ automatic runtime");
            if (n.jsxFrag)
              throw new Error(
                "Unexpected `@jsxFrag` pragma w/ automatic runtime"
              );
          } else if (n.jsxRuntime === "classic") {
            if (i = !1, n.jsxImportSource)
              throw new Error(
                "Unexpected `@jsxImportSource` w/ classic runtime"
              );
          } else
            throw new Error(
              "Unexpected `jsxRuntime` `" + n.jsxRuntime + "`, expected `automatic` or `classic`"
            );
      }
    },
    // eslint-disable-next-line complexity
    leave(a) {
      if (a.type === "Program") {
        let g = [];
        if (o.fragment && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "Fragment" },
          local: { type: "Identifier", name: "_Fragment" }
        }), o.jsx && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsx" },
          local: { type: "Identifier", name: "_jsx" }
        }), o.jsxs && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsxs" },
          local: { type: "Identifier", name: "_jsxs" }
        }), o.jsxDEV && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsxDEV" },
          local: { type: "Identifier", name: "_jsxDEV" }
        }), g.length > 0) {
          let b = 0;
          for (; b < a.body.length; ) {
            let D = a.body[b];
            if ("directive" in D && D.directive)
              b++;
            else
              break;
          }
          a.body.splice(b, 0, {
            type: "ImportDeclaration",
            specifiers: g,
            source: {
              type: "Literal",
              value: (n.jsxImportSource || r.importSource || "react") + (r.development ? "/jsx-dev-runtime" : "/jsx-runtime")
            }
          });
        }
      }
      if (a.type !== "JSXElement" && a.type !== "JSXFragment")
        return;
      let u = [], l = -1;
      for (; ++l < a.children.length; ) {
        let g = a.children[l];
        if (g.type === "JSXExpressionContainer")
          g.expression.type !== "JSXEmptyExpression" && u.push(g.expression);
        else if (g.type === "JSXText") {
          let b = g.value.replace(/\t/g, " ").replace(/ *(\r?\n|\r) */g, `
`).replace(/\n+/g, `
`).replace(/\n+$/, "").replace(/^\n+/, "").replace(/\n/g, " ");
          if (b) {
            let D = { type: "Literal", value: b };
            Os(g, D), u.push(D);
          }
        } else
          g.type !== "JSXElement" && g.type !== "JSXFragment" && g.type, u.push(g);
      }
      let c, p = [], h = [], f;
      if (a.type === "JSXElement") {
        if (c = ja(a.openingElement.name), c.type === "Identifier" && /^[a-z]/.test(c.name)) {
          let v = { type: "Literal", value: c.name };
          Os(c, v), c = v;
        }
        let g, b = a.openingElement.attributes, D = -1;
        for (; ++D < b.length; ) {
          let v = b[D];
          if (v.type === "JSXSpreadAttribute")
            v.argument.type === "ObjectExpression" ? p.push(...v.argument.properties) : p.push({ type: "SpreadElement", argument: v.argument }),
            g = !0;
          else {
            let S = n7(v);
            if (i && S.key.type === "Identifier" && S.key.name === "key") {
              if (g)
                throw new Error(
                  "Expected `key` to come before any spread expressions"
                );
              let k = S.value;
              k.type !== "AssignmentPattern" && k.type !== "ArrayPattern" && k.type !== "ObjectPattern" && k.type, f = k;
            } else
              p.push(S);
          }
        }
      } else i ? (o.fragment = !0, c = { type: "Identifier", name: "_Fragment" }) : c = Fb(
        n.jsxFrag || r.pragmaFrag || "React.Fragment"
      );
      i ? u.length > 0 && p.push({
        type: "Property",
        key: { type: "Identifier", name: "children" },
        value: u.length > 1 ? { type: "ArrayExpression", elements: u } : u[0],
        kind: "init",
        method: !1,
        shorthand: !1,
        computed: !1
      }) : h = u;
      let d;
      if (i) {
        h.push({ type: "ObjectExpression", properties: p }), f ? h.push(f) : r.development && h.push({ type: "Identifier", name: "undefined" });
        let g = u.length > 1;
        if (r.development) {
          o.jsxDEV = !0, d = {
            type: "Identifier",
            name: "_jsxDEV"
          }, h.push({ type: "Literal", value: g });
          let b = {
            type: "ObjectExpression",
            properties: [
              {
                type: "Property",
                method: !1,
                shorthand: !1,
                computed: !1,
                kind: "init",
                key: { type: "Identifier", name: "fileName" },
                value: {
                  type: "Literal",
                  value: r.filePath || "<source.js>"
                }
              }
            ]
          };
          a.loc && b.properties.push(
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              kind: "init",
              key: { type: "Identifier", name: "lineNumber" },
              value: { type: "Literal", value: a.loc.start.line }
            },
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              kind: "init",
              key: { type: "Identifier", name: "columnNumber" },
              value: { type: "Literal", value: a.loc.start.column + 1 }
            }
          ), h.push(b, { type: "ThisExpression" });
        } else g ? (o.jsxs = !0, d = { type: "Identifier", name: "_jsxs" }) : (o.jsx = !0, d = { type: "Identifier", name: "_jsx" });
      } else
        p.length > 0 ? h.unshift({ type: "ObjectExpression", properties: p }) : h.length > 0 && h.unshift({ type: "Literal", value: null }),
        d = Fb(
          n.jsx || r.pragma || "React.createElement"
        );
      h.unshift(c);
      let m = {
        type: "CallExpression",
        callee: d,
        arguments: h,
        optional: !1
      };
      Os(a, m), this.replace(m);
    }
  });
}
function n7(e) {
  let t;
  if (e.value)
    if (e.value.type === "JSXExpressionContainer") {
      let i = e.value.expression;
      i.type, t = i;
    } else {
      let i = e.value;
      i.type !== "JSXElement" && i.type, t = i, delete t.raw;
    }
  else
    t = { type: "Literal", value: !0 };
  let r = {
    type: "Property",
    key: ja(e.name),
    value: t,
    kind: "init",
    method: !1,
    shorthand: !1,
    computed: !1
  };
  return Os(e, r), r;
}
function ja(e) {
  let t;
  if (e.type === "JSXMemberExpression") {
    let r = ja(e.property);
    t = {
      type: "MemberExpression",
      object: ja(e.object),
      property: r,
      computed: r.type === "Literal",
      optional: !1
    };
  } else e.type === "JSXNamespacedName" ? t = {
    type: "Literal",
    value: e.namespace.name + ":" + e.name.name
  } : t = fr(e.name) ? { type: "Identifier", name: e.name } : { type: "Literal", value: e.name };
  return Os(e, t), t;
}
function Fb(e) {
  let t = e.split("."), r = -1, i;
  for (; ++r < t.length; ) {
    let n = fr(t[r]) ? { type: "Identifier", name: t[r] } : { type: "Literal", value: t[r] };
    i = i ? {
      type: "MemberExpression",
      object: i,
      property: n,
      computed: !!(r && n.type === "Literal"),
      optional: !1
    } : n;
  }
  return i;
}
function Os(e, t) {
  let r = ["start", "end", "loc", "range", "comments"], i = -1;
  for (; ++i < r.length; ) {
    let n = r[i];
    n in e && (t[n] = e[n]);
  }
}
function s7(e) {
  let { development: t, outputFormat: r } = e || {};
  return function(i, n) {
    if (i7(i, { development: t, filePath: n.history[0] }), i.comments && i.comments[0].type === "Block" && i.comments[0].data && i.comments[0].
    data._mdxIsPragmaComment && i.comments.shift(), r === "function-body") {
      let o = 0;
      for (; o < i.body.length; ) {
        let u = i.body[o];
        if ("directive" in u && u.directive)
          o++;
        else
          break;
      }
      let a = i.body[o];
      a && a.type === "ImportDeclaration" && typeof a.source.value == "string" && /\/jsx-(dev-)?runtime$/.test(a.source.value) && (i.body[o] =
      {
        type: "VariableDeclaration",
        kind: "const",
        declarations: Rh(
          a.specifiers,
          xi(["arguments", 0])
        )
      });
    }
  };
}
function _b(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let i = e[t];
    r = r ? { type: "BinaryExpression", left: r, operator: "+", right: i } : i;
  }
  return r;
}
function o7(e) {
  let { development: t, outputFormat: r, providerImportSource: i } = e;
  return function(n, o) {
    let a = y1(n), u = [], l = !1, c = !1, p;
    if (Ns(n, {
      enter(h) {
        let f = (
          /** @type {Scope | undefined} */
          a.map.get(h)
        );
        (h.type === "FunctionDeclaration" || h.type === "FunctionExpression" || h.type === "ArrowFunctionExpression") && (u.push({
          components: [],
          idToInvalidComponentName: /* @__PURE__ */ new Map(),
          node: h,
          objects: [],
          references: {},
          tags: []
        }), kn(h, "MDXContent") && f && !xh(f, "MDXLayout") && u[0].components.push("MDXLayout"));
        let d = u[0];
        if (!(!d || !kn(d.node, "_createMdxContent") && !i) && (f && (f.node = h, p = f), p && h.type === "JSXElement")) {
          let m = h.openingElement.name;
          if (m.type === "JSXMemberExpression") {
            let g = [];
            for (; m.type === "JSXMemberExpression"; )
              g.unshift(m.property.name), m = m.object;
            g.unshift(m.name);
            let b = g.join("."), D = m.name, v = xh(p, D);
            if (!Object.hasOwn(d.references, b)) {
              let S = (
                /** @type {Scope | undefined} */
                p.parent
              );
              (!v || // If the parent scope is `_createMdxContent`, then this
              // references a component we can add a check statement for.
              S && S.node.type === "FunctionDeclaration" && kn(S.node, "_createMdxContent")) && (d.references[b] = { component: !0, node: h });
            }
            !d.objects.includes(D) && !v && d.objects.push(D);
          } else if (m.type !== "JSXNamespacedName") {
            if (fr(m.name) && !/^[a-z]/.test(m.name)) {
              let g = m.name;
              xh(p, g) || (g !== "MDXLayout" && !Object.hasOwn(d.references, g) && (d.references[g] = { component: !0, node: h }), d.components.
              includes(g) || d.components.push(g));
            } else if (!(h.data && h.data._mdxExplicitJsx)) {
              let g = m.name;
              d.tags.includes(g) || d.tags.push(g);
              let b = ["_components", g];
              if (fr(g) === !1) {
                let D = d.idToInvalidComponentName.get(g);
                D === void 0 && (D = `_component${d.idToInvalidComponentName.size}`, d.idToInvalidComponentName.set(g, D)), b = [D];
              }
              h.openingElement.name = Sb(b), h.closingElement && (h.closingElement.name = Sb(b));
            }
          }
        }
      },
      leave(h) {
        let f = [], d = [], m = [], g = [];
        if (p && p.node === h && (p = /** @type {Scope} */
        p.parent), h.type === "FunctionDeclaration" || h.type === "FunctionExpression" || h.type === "ArrowFunctionExpression") {
          let b = h, D = u[u.length - 1], v;
          for (v of D.tags.sort())
            f.push({
              type: "Property",
              kind: "init",
              key: fr(v) ? { type: "Identifier", name: v } : { type: "Literal", value: v },
              value: { type: "Literal", value: v },
              method: !1,
              shorthand: !1,
              computed: !1
            });
          d.push(...D.components);
          for (v of D.objects)
            d.includes(v) || d.push(v);
          d.sort();
          let S = [];
          if (f.length > 0 || d.length > 0 || D.idToInvalidComponentName.size > 0) {
            if (i && (l = !0, m.push({
              type: "CallExpression",
              callee: { type: "Identifier", name: "_provideComponents" },
              arguments: [],
              optional: !1
            })), (kn(D.node, "MDXContent") || kn(D.node, "_createMdxContent")) && m.push(xi(["props", "components"])), f.length > 0 || m.length >
            1)
              for (let _ of m)
                f.push({ type: "SpreadElement", argument: _ });
            let w = f.length > 0 ? { type: "ObjectExpression", properties: f } : (
              // If we’re only getting components from `props.components`,
              // make sure it’s defined.
              {
                type: "LogicalExpression",
                operator: "||",
                left: m[0],
                right: { type: "ObjectExpression", properties: [] }
              }
            ), T;
            if (d.length > 0 && (T = {
              type: "ObjectPattern",
              properties: d.map(function(_) {
                return {
                  type: "Property",
                  kind: "init",
                  key: {
                    type: "Identifier",
                    name: _ === "MDXLayout" ? "wrapper" : _
                  },
                  value: { type: "Identifier", name: _ },
                  method: !1,
                  shorthand: _ !== "MDXLayout",
                  computed: !1
                };
              })
            }), D.tags.length > 0 && (g.push({
              type: "VariableDeclarator",
              id: { type: "Identifier", name: "_components" },
              init: w
            }), w = { type: "Identifier", name: "_components" }), kn(D.node, "_createMdxContent"))
              for (let [_, q] of [
                ...D.idToInvalidComponentName
              ].sort(function([O], [$]) {
                return O.localeCompare($);
              }))
                g.push({
                  type: "VariableDeclarator",
                  id: {
                    type: "Identifier",
                    name: q
                  },
                  init: {
                    type: "MemberExpression",
                    object: { type: "Identifier", name: "_components" },
                    property: { type: "Literal", value: _ },
                    computed: !0,
                    optional: !1
                  }
                });
            T && g.push({
              type: "VariableDeclarator",
              id: T,
              init: w
            }), g.length > 0 && S.push({
              type: "VariableDeclaration",
              kind: "const",
              declarations: g
            });
          }
          let k;
          for (k in D.references)
            if (Object.hasOwn(D.references, k)) {
              let w = k.split("."), T = 0;
              for (; ++T < w.length; ) {
                let _ = w.slice(0, T).join(".");
                Object.hasOwn(D.references, _) || (D.references[_] = {
                  component: !1,
                  node: D.references[k].node
                });
              }
            }
          let L = Object.keys(D.references).sort(), C = -1;
          for (; ++C < L.length; ) {
            let w = L[C], T = D.references[w], _ = ir(Kr(T.node)), q = [
              { type: "Literal", value: w },
              { type: "Literal", value: T.component }
            ];
            c = !0, t && _ && q.push({ type: "Literal", value: _ }), S.push({
              type: "IfStatement",
              test: {
                type: "UnaryExpression",
                operator: "!",
                prefix: !0,
                argument: xi(w.split("."))
              },
              consequent: {
                type: "ExpressionStatement",
                expression: {
                  type: "CallExpression",
                  callee: { type: "Identifier", name: "_missingMdxReference" },
                  arguments: q,
                  optional: !1
                }
              },
              alternate: void 0
            });
          }
          S.length > 0 && (b.body.type !== "BlockStatement" && (b.body = {
            type: "BlockStatement",
            body: [{ type: "ReturnStatement", argument: b.body }]
          }), b.body.body.unshift(...S)), u.pop();
        }
      }
    }), l && i && n.body.unshift(
      a7(i, r)
    ), c) {
      let h = [
        { type: "Literal", value: "Expected " },
        {
          type: "ConditionalExpression",
          test: { type: "Identifier", name: "component" },
          consequent: { type: "Literal", value: "component" },
          alternate: { type: "Literal", value: "object" }
        },
        { type: "Literal", value: " `" },
        { type: "Identifier", name: "id" },
        {
          type: "Literal",
          value: "` to be defined: you likely forgot to import, pass, or provide it."
        }
      ], f = [
        { type: "Identifier", name: "id" },
        { type: "Identifier", name: "component" }
      ];
      t && (h.push({
        type: "ConditionalExpression",
        test: { type: "Identifier", name: "place" },
        consequent: _b([
          { type: "Literal", value: "\nIt\u2019s referenced in your code at `" },
          { type: "Identifier", name: "place" },
          {
            type: "Literal",
            value: (o.path ? "` in `" + o.path : "") + "`"
          }
        ]),
        alternate: { type: "Literal", value: "" }
      }), f.push({ type: "Identifier", name: "place" })), n.body.push({
        type: "FunctionDeclaration",
        id: { type: "Identifier", name: "_missingMdxReference" },
        generator: !1,
        async: !1,
        params: f,
        body: {
          type: "BlockStatement",
          body: [
            {
              type: "ThrowStatement",
              argument: {
                type: "NewExpression",
                callee: { type: "Identifier", name: "Error" },
                arguments: [_b(h)]
              }
            }
          ]
        }
      });
    }
    r === "function-body" && n.body.unshift({
      type: "ExpressionStatement",
      expression: { type: "Literal", value: "use strict" },
      directive: "use strict"
    });
  };
}
function a7(e, t) {
  let r = [
    {
      type: "ImportSpecifier",
      imported: { type: "Identifier", name: "useMDXComponents" },
      local: { type: "Identifier", name: "_provideComponents" }
    }
  ];
  return t === "function-body" ? {
    type: "VariableDeclaration",
    kind: "const",
    declarations: Rh(
      r,
      xi(["arguments", 0])
    )
  } : {
    type: "ImportDeclaration",
    specifiers: r,
    source: { type: "Literal", value: e }
  };
}
function kn(e, t) {
  return !!(e && "id" in e && e.id && e.id.name === t);
}
function xh(e, t) {
  let r = e;
  for (; r; ) {
    if (r.declarations.has(t))
      return !0;
    r = /** @type {Scope | undefined} */
    r.parent || void 0;
  }
  return !1;
}
function Tn(e, t) {
  let { generator: r } = e;
  if (e.write("("), t != null && t.length > 0) {
    r[t[0].type](t[0], e);
    let { length: i } = t;
    for (let n = 1; n < i; n++) {
      let o = t[n];
      e.write(", "), r[o.type](o, e);
    }
  }
  e.write(")");
}
function E1(e, t, r, i) {
  let n = e.expressionsPrecedence[t.type];
  if (n === mr)
    return !0;
  let o = e.expressionsPrecedence[r.type];
  return n !== o ? !i && n === 15 && o === 14 && r.operator === "**" || n < o : n !== 13 && n !== 14 ? !1 : t.operator === "**" && r.operator ===
  "**" ? !i : n === 13 && o === 13 && (t.operator === "??" || r.operator === "??") ? !0 : i ? Ia[t.operator] <= Ia[r.operator] : Ia[t.operator] <
  Ia[r.operator];
}
function Pa(e, t, r, i) {
  let { generator: n } = e;
  E1(e, t, r, i) ? (e.write("("), n[t.type](t, e), e.write(")")) : n[t.type](t, e);
}
function c7(e, t, r, i) {
  let n = t.split(`
`), o = n.length - 1;
  if (e.write(n[0].trim()), o > 0) {
    e.write(i);
    for (let a = 1; a < o; a++)
      e.write(r + n[a].trim() + i);
    e.write(r + n[o].trim());
  }
}
function bt(e, t, r, i) {
  let { length: n } = t;
  for (let o = 0; o < n; o++) {
    let a = t[o];
    e.write(r), a.type[0] === "L" ? e.write("// " + a.value.trim() + `
`, a) : (e.write("/*"), c7(e, a.value, r, i), e.write("*/" + i));
  }
}
function p7(e) {
  let t = e;
  for (; t != null; ) {
    let { type: r } = t;
    if (r[0] === "C" && r[1] === "a")
      return !0;
    if (r[0] === "M" && r[1] === "e" && r[2] === "m")
      t = t.object;
    else
      return !1;
  }
}
function Eh(e, t) {
  let { generator: r } = e, { declarations: i } = t;
  e.write(t.kind + " ");
  let { length: n } = i;
  if (n > 0) {
    r.VariableDeclarator(i[0], e);
    for (let o = 1; o < n; o++)
      e.write(", "), r.VariableDeclarator(i[o], e);
  }
}
function d7(e, t) {
  let r = new f7(t);
  return r.generator[e.type](e, r), r.output;
}
function Rb(e, t) {
  let { SourceMapGenerator: r, filePath: i, handlers: n } = t || m7, o = r ? new r({ file: i || "<unknown>.js" }) : void 0, a = d7(
    e,
    // @ts-expect-error: `sourceMap` can be undefined, `astring` types are buggy.
    {
      comments: !0,
      generator: { ...b1, ...n },
      sourceMap: o || void 0
    }
  ), u = o ? o.toJSON() : void 0;
  return { value: a, map: u };
}
function g7(e, t) {
  this[e.name.type](e.name, t), e.value !== null && e.value !== void 0 && (t.write("="), e.value.type === "Literal" ? t.write(
    '"' + v1(String(e.value.value)).replace(/"/g, "&quot;") + '"',
    e
  ) : this[e.value.type](e.value, t));
}
function D7(e, t) {
  t.write("</"), this[e.name.type](e.name, t), t.write(">");
}
function y7(e, t) {
  t.write("</>", e);
}
function x7(e, t) {
  let r = -1;
  if (this[e.openingElement.type](e.openingElement, t), e.children)
    for (; ++r < e.children.length; ) {
      let i = e.children[r];
      if (i.type === "JSXSpreadChild")
        throw new Error("JSX spread children are not supported");
      this[i.type](i, t);
    }
  e.closingElement && this[e.closingElement.type](e.closingElement, t);
}
function E7() {
}
function b7(e, t) {
  t.write("{"), this[e.expression.type](e.expression, t), t.write("}");
}
function v7(e, t) {
  let r = -1;
  if (this[e.openingFragment.type](e.openingFragment, t), e.children)
    for (; ++r < e.children.length; ) {
      let i = e.children[r];
      if (i.type === "JSXSpreadChild")
        throw new Error("JSX spread children are not supported");
      this[i.type](i, t);
    }
  this[e.closingFragment.type](e.closingFragment, t);
}
function C7(e, t) {
  t.write(e.name, e);
}
function w7(e, t) {
  this[e.object.type](e.object, t), t.write("."), this[e.property.type](e.property, t);
}
function A7(e, t) {
  this[e.namespace.type](e.namespace, t), t.write(":"), this[e.name.type](e.name, t);
}
function S7(e, t) {
  let r = -1;
  if (t.write("<"), this[e.name.type](e.name, t), e.attributes)
    for (; ++r < e.attributes.length; )
      t.write(" "), this[e.attributes[r].type](e.attributes[r], t);
  t.write(e.selfClosing ? " />" : ">");
}
function F7(e, t) {
  t.write("<>", e);
}
function _7(e, t) {
  t.write("{"), this.SpreadElement(e, t), t.write("}");
}
function k7(e, t) {
  t.write(v1(e.value).replace(/[<>{}]/g, T7), e);
}
function v1(e) {
  return e.replace(/&(?=[#a-z])/gi, "&amp;");
}
function T7(e) {
  return e === "<" ? "&lt;" : e === ">" ? "&gt;" : e === "{" ? "&#123;" : "&#125;";
}
function B7(e) {
  let t = (
    /** @type {Processor} */
    this
  ), { SourceMapGenerator: r } = e;
  t.compiler = i;
  function i(n, o) {
    let a = r ? Rb(n, {
      SourceMapGenerator: r,
      filePath: o.path || "unknown.mdx",
      handlers: Nb
    }) : Rb(n, { handlers: Nb });
    return o.map = a.map, a.value;
  }
  s(i, "compiler2");
}
function I7(e) {
  return function(t) {
    return Da(t, e);
  };
}
function P7() {
  return function(e) {
    Oh(e, "raw", function(t, r, i) {
      if (i && typeof r == "number")
        return i.children.splice(r, 1), r;
    });
  };
}
function N7(e, t) {
  t ? typeof t == "string" && (t = { style: t }) : t = {};
  let r = t.preserveLineEndings ? L7 : M7;
  return String(e).replace(
    t.style === "html" ? R7 : O7,
    t.trim ? j7(r) : r
  );
}
function L7(e) {
  let t = /\r?\n|\r/.exec(e);
  return t ? t[0] : " ";
}
function M7() {
  return " ";
}
function j7(e) {
  return t;
  function t(r, i, n) {
    return i === 0 || i + r.length === n.length ? "" : e(r);
  }
}
function q7() {
  return function(e) {
    Oh(e, function(t, r, i) {
      let n = -1, o = !0, a = !1;
      if (i && typeof r == "number" && t.type === "paragraph") {
        let u = t.children;
        for (; ++n < u.length; ) {
          let l = u[n];
          if (l.type === "mdxJsxTextElement" || l.type === "mdxTextExpression")
            a = !0;
          else if (!(l.type === "text" && N7(l.value, { style: "html", trim: !0 }) === "")) {
            o = !1;
            break;
          }
        }
        if (o && a) {
          n = -1;
          let l = [];
          for (; ++n < u.length; ) {
            let c = u[n];
            c.type === "mdxJsxTextElement" && (c.type = "mdxJsxFlowElement"), c.type === "mdxTextExpression" && (c.type = "mdxFlowExpression"),
            c.type === "text" && /^[\t\r\n ]+$/.test(String(c.value)) || l.push(c);
          }
          return i.children.splice(r, 1, ...l), r;
        }
      }
      if (t.type === "mdxJsxFlowElement" || t.type === "mdxJsxTextElement") {
        let u = t.data || (t.data = {});
        u._mdxExplicitJsx = !0;
      }
    });
  };
}
function Nh(e) {
  let t = e || {}, r = -1;
  for (; ++r < Lb.length; ) {
    let o = Lb[r];
    o in t && ("" + o, void 0);
  }
  t.format === "detect" && void 0, (t.jsxRuntime === "classic" || t.pragma || t.pragmaFrag || t.pragmaImportSource) && !Mb && (Mb = !0, console.
  warn(
    "Unexpected deprecated option `jsxRuntime: 'classic'`, `pragma`, `pragmaFrag`, or `pragmaImportSource`; see <https://mdxjs.com/migrating\
/v3/> on how to migrate"
  ));
  let i = HN().use(z5);
  t.format !== "md" && i.use(l5);
  let n = t.remarkRehypeOptions || {};
  return i.use(q7).use(t.remarkPlugins || []).use($N, {
    ...n,
    allowDangerousHtml: !0,
    passThrough: [...n.passThrough || [], ...C1]
  }).use(t.rehypePlugins || []), t.format === "md" && i.use(P7), i.use(I7, t).use(e7, t).use(o7, t), t.jsx || i.use(s7, t), i.use(B7, t).use(
  t.recmaPlugins || []), i;
}
function w1(e, t) {
  let { file: r, options: i } = qb(e, t);
  return Nh(i).process(r);
}
function A1(e, t) {
  let { file: r, options: i } = qb(e, t);
  return Nh(i).processSync(r);
}
function S1(e) {
  let {
    Fragment: t,
    baseUrl: r,
    development: i,
    jsx: n,
    jsxDEV: o,
    jsxs: a,
    useMDXComponents: u,
    ...l
  } = e || {};
  if (!t)
    throw new Error("Expected `Fragment` given to `evaluate`");
  if (i) {
    if (!o)
      throw new Error("Expected `jsxDEV` given to `evaluate`");
  } else {
    if (!n)
      throw new Error("Expected `jsx` given to `evaluate`");
    if (!a)
      throw new Error("Expected `jsxs` given to `evaluate`");
  }
  return {
    compiletime: {
      ...l,
      development: i,
      outputFormat: "function-body",
      providerImportSource: u ? "#" : void 0
    },
    runtime: { Fragment: t, baseUrl: r, jsx: n, jsxDEV: o, jsxs: a, useMDXComponents: u }
  };
}
async function Lh(e, t) {
  return new $7(String(e))(t);
}
function F1(e, t) {
  return new Function(String(e))(t);
}
async function V7(e, t) {
  let { compiletime: r, runtime: i } = S1(t);
  return Lh(await w1(e, r), i);
}
function U7(e, t) {
  let { compiletime: r, runtime: i } = S1(t);
  return F1(A1(e, r), i);
}
var P9, O9, R9, ke, oh, jb, j9, q9, $9, J9, JE, XE, K9, Sn, Y9, Vb, DR, yR, gr, jt, xR, Ch, ER, zb, Xr, CR, wR, lh, AR, In, TR, BR, ZE, IR, PR,
eb, wh, UR, Ls, Gb, Xb, Kb, ib, nb, hh, ZR, r4, a4, u4, h4, f4, g4, y4, b4, sb, v4, C4, w4, k4, kh, B4, I4, P4, q4, V4, fh, Oa, Bt, H4, J4, ob,
t5, ab, r5, ub, u5, c5, f5, m5, cb, y5, E5, b5, v5, o1, F5, _5, k5, T5, B5, I5, P5, O5, R5, pb, j5, a1, fb, db, DN, p1, qa, Na, La, Th, Bh, Ih,
Ph, h1, f1, gb, yN, Db, Fn, xN, EN, Is, Ta, bN, yb, Ma, d1, m1, BN, xb, IN, Ah, RN, dh, WN, zN, g1, HN, KN, YN, _n, yh, u7, Ia, mr, l7, kb, Tb,
Bb, Ib, Pb, Ob, b1, h7, f7, m7, Nb, O7, R7, C1, Lb, Mb, $7, k1 = ft(() => {
  zp();
  ME();
  P9 = yn({
    "node_modules/micromark-extension-mdxjs/node_modules/acorn-jsx/xhtml.js"(e, t) {
      t.exports = {
        quot: '"',
        amp: "&",
        apos: "'",
        lt: "<",
        gt: ">",
        nbsp: "\xA0",
        iexcl: "\xA1",
        cent: "\xA2",
        pound: "\xA3",
        curren: "\xA4",
        yen: "\xA5",
        brvbar: "\xA6",
        sect: "\xA7",
        uml: "\xA8",
        copy: "\xA9",
        ordf: "\xAA",
        laquo: "\xAB",
        not: "\xAC",
        shy: "\xAD",
        reg: "\xAE",
        macr: "\xAF",
        deg: "\xB0",
        plusmn: "\xB1",
        sup2: "\xB2",
        sup3: "\xB3",
        acute: "\xB4",
        micro: "\xB5",
        para: "\xB6",
        middot: "\xB7",
        cedil: "\xB8",
        sup1: "\xB9",
        ordm: "\xBA",
        raquo: "\xBB",
        frac14: "\xBC",
        frac12: "\xBD",
        frac34: "\xBE",
        iquest: "\xBF",
        Agrave: "\xC0",
        Aacute: "\xC1",
        Acirc: "\xC2",
        Atilde: "\xC3",
        Auml: "\xC4",
        Aring: "\xC5",
        AElig: "\xC6",
        Ccedil: "\xC7",
        Egrave: "\xC8",
        Eacute: "\xC9",
        Ecirc: "\xCA",
        Euml: "\xCB",
        Igrave: "\xCC",
        Iacute: "\xCD",
        Icirc: "\xCE",
        Iuml: "\xCF",
        ETH: "\xD0",
        Ntilde: "\xD1",
        Ograve: "\xD2",
        Oacute: "\xD3",
        Ocirc: "\xD4",
        Otilde: "\xD5",
        Ouml: "\xD6",
        times: "\xD7",
        Oslash: "\xD8",
        Ugrave: "\xD9",
        Uacute: "\xDA",
        Ucirc: "\xDB",
        Uuml: "\xDC",
        Yacute: "\xDD",
        THORN: "\xDE",
        szlig: "\xDF",
        agrave: "\xE0",
        aacute: "\xE1",
        acirc: "\xE2",
        atilde: "\xE3",
        auml: "\xE4",
        aring: "\xE5",
        aelig: "\xE6",
        ccedil: "\xE7",
        egrave: "\xE8",
        eacute: "\xE9",
        ecirc: "\xEA",
        euml: "\xEB",
        igrave: "\xEC",
        iacute: "\xED",
        icirc: "\xEE",
        iuml: "\xEF",
        eth: "\xF0",
        ntilde: "\xF1",
        ograve: "\xF2",
        oacute: "\xF3",
        ocirc: "\xF4",
        otilde: "\xF5",
        ouml: "\xF6",
        divide: "\xF7",
        oslash: "\xF8",
        ugrave: "\xF9",
        uacute: "\xFA",
        ucirc: "\xFB",
        uuml: "\xFC",
        yacute: "\xFD",
        thorn: "\xFE",
        yuml: "\xFF",
        OElig: "\u0152",
        oelig: "\u0153",
        Scaron: "\u0160",
        scaron: "\u0161",
        Yuml: "\u0178",
        fnof: "\u0192",
        circ: "\u02C6",
        tilde: "\u02DC",
        Alpha: "\u0391",
        Beta: "\u0392",
        Gamma: "\u0393",
        Delta: "\u0394",
        Epsilon: "\u0395",
        Zeta: "\u0396",
        Eta: "\u0397",
        Theta: "\u0398",
        Iota: "\u0399",
        Kappa: "\u039A",
        Lambda: "\u039B",
        Mu: "\u039C",
        Nu: "\u039D",
        Xi: "\u039E",
        Omicron: "\u039F",
        Pi: "\u03A0",
        Rho: "\u03A1",
        Sigma: "\u03A3",
        Tau: "\u03A4",
        Upsilon: "\u03A5",
        Phi: "\u03A6",
        Chi: "\u03A7",
        Psi: "\u03A8",
        Omega: "\u03A9",
        alpha: "\u03B1",
        beta: "\u03B2",
        gamma: "\u03B3",
        delta: "\u03B4",
        epsilon: "\u03B5",
        zeta: "\u03B6",
        eta: "\u03B7",
        theta: "\u03B8",
        iota: "\u03B9",
        kappa: "\u03BA",
        lambda: "\u03BB",
        mu: "\u03BC",
        nu: "\u03BD",
        xi: "\u03BE",
        omicron: "\u03BF",
        pi: "\u03C0",
        rho: "\u03C1",
        sigmaf: "\u03C2",
        sigma: "\u03C3",
        tau: "\u03C4",
        upsilon: "\u03C5",
        phi: "\u03C6",
        chi: "\u03C7",
        psi: "\u03C8",
        omega: "\u03C9",
        thetasym: "\u03D1",
        upsih: "\u03D2",
        piv: "\u03D6",
        ensp: "\u2002",
        emsp: "\u2003",
        thinsp: "\u2009",
        zwnj: "\u200C",
        zwj: "\u200D",
        lrm: "\u200E",
        rlm: "\u200F",
        ndash: "\u2013",
        mdash: "\u2014",
        lsquo: "\u2018",
        rsquo: "\u2019",
        sbquo: "\u201A",
        ldquo: "\u201C",
        rdquo: "\u201D",
        bdquo: "\u201E",
        dagger: "\u2020",
        Dagger: "\u2021",
        bull: "\u2022",
        hellip: "\u2026",
        permil: "\u2030",
        prime: "\u2032",
        Prime: "\u2033",
        lsaquo: "\u2039",
        rsaquo: "\u203A",
        oline: "\u203E",
        frasl: "\u2044",
        euro: "\u20AC",
        image: "\u2111",
        weierp: "\u2118",
        real: "\u211C",
        trade: "\u2122",
        alefsym: "\u2135",
        larr: "\u2190",
        uarr: "\u2191",
        rarr: "\u2192",
        darr: "\u2193",
        harr: "\u2194",
        crarr: "\u21B5",
        lArr: "\u21D0",
        uArr: "\u21D1",
        rArr: "\u21D2",
        dArr: "\u21D3",
        hArr: "\u21D4",
        forall: "\u2200",
        part: "\u2202",
        exist: "\u2203",
        empty: "\u2205",
        nabla: "\u2207",
        isin: "\u2208",
        notin: "\u2209",
        ni: "\u220B",
        prod: "\u220F",
        sum: "\u2211",
        minus: "\u2212",
        lowast: "\u2217",
        radic: "\u221A",
        prop: "\u221D",
        infin: "\u221E",
        ang: "\u2220",
        and: "\u2227",
        or: "\u2228",
        cap: "\u2229",
        cup: "\u222A",
        int: "\u222B",
        there4: "\u2234",
        sim: "\u223C",
        cong: "\u2245",
        asymp: "\u2248",
        ne: "\u2260",
        equiv: "\u2261",
        le: "\u2264",
        ge: "\u2265",
        sub: "\u2282",
        sup: "\u2283",
        nsub: "\u2284",
        sube: "\u2286",
        supe: "\u2287",
        oplus: "\u2295",
        otimes: "\u2297",
        perp: "\u22A5",
        sdot: "\u22C5",
        lceil: "\u2308",
        rceil: "\u2309",
        lfloor: "\u230A",
        rfloor: "\u230B",
        lang: "\u2329",
        rang: "\u232A",
        loz: "\u25CA",
        spades: "\u2660",
        clubs: "\u2663",
        hearts: "\u2665",
        diams: "\u2666"
      };
    }
  }), O9 = yn({
    "node_modules/micromark-extension-mdxjs/node_modules/acorn-jsx/index.js"(e, t) {
      "use strict";
      var r = P9(), i = /^[\da-fA-F]+$/, n = /^\d+$/, o = /* @__PURE__ */ new WeakMap();
      function a(c) {
        c = c.Parser.acorn || c;
        let p = o.get(c);
        if (!p) {
          let h = c.tokTypes, f = c.TokContext, d = c.TokenType, m = new f("<tag", !1), g = new f("</tag", !1), b = new f("<tag>...</tag>", !0,
          !0), D = {
            tc_oTag: m,
            tc_cTag: g,
            tc_expr: b
          }, v = {
            jsxName: new d("jsxName"),
            jsxText: new d("jsxText", { beforeExpr: !0 }),
            jsxTagStart: new d("jsxTagStart", { startsExpr: !0 }),
            jsxTagEnd: new d("jsxTagEnd")
          };
          v.jsxTagStart.updateContext = function() {
            this.context.push(b), this.context.push(m), this.exprAllowed = !1;
          }, v.jsxTagEnd.updateContext = function(S) {
            let k = this.context.pop();
            k === m && S === h.slash || k === g ? (this.context.pop(), this.exprAllowed = this.curContext() === b) : this.exprAllowed = !0;
          }, p = { tokContexts: D, tokTypes: v }, o.set(c, p);
        }
        return p;
      }
      s(a, "getJsxTokens");
      function u(c) {
        if (!c)
          return c;
        if (c.type === "JSXIdentifier")
          return c.name;
        if (c.type === "JSXNamespacedName")
          return c.namespace.name + ":" + c.name.name;
        if (c.type === "JSXMemberExpression")
          return u(c.object) + "." + u(c.property);
      }
      s(u, "getQualifiedJSXName"), t.exports = function(c) {
        return c = c || {}, function(p) {
          return l({
            allowNamespaces: c.allowNamespaces !== !1,
            allowNamespacedObjects: !!c.allowNamespacedObjects
          }, p);
        };
      }, Object.defineProperty(t.exports, "tokTypes", {
        get: /* @__PURE__ */ s(function() {
          return a(Lp("acorn")).tokTypes;
        }, "get_tokTypes"),
        configurable: !0,
        enumerable: !0
      });
      function l(c, p) {
        let h = p.acorn || Lp("acorn"), f = a(h), d = h.tokTypes, m = f.tokTypes, g = h.tokContexts, b = f.tokContexts.tc_oTag, D = f.tokContexts.
        tc_cTag, v = f.tokContexts.tc_expr, S = h.isNewLine, k = h.isIdentifierStart, L = h.isIdentifierChar;
        return class extends p {
          // Expose actual `tokTypes` and `tokContexts` to other plugins.
          static get acornJsx() {
            return f;
          }
          // Reads inline JSX contents token.
          jsx_readToken() {
            let C = "", w = this.pos;
            for (; ; ) {
              this.pos >= this.input.length && this.raise(this.start, "Unterminated JSX contents");
              let T = this.input.charCodeAt(this.pos);
              switch (T) {
                case 60:
                case 123:
                  return this.pos === this.start ? T === 60 && this.exprAllowed ? (++this.pos, this.finishToken(m.jsxTagStart)) : this.getTokenFromCode(
                  T) : (C += this.input.slice(w, this.pos), this.finishToken(m.jsxText, C));
                case 38:
                  C += this.input.slice(w, this.pos), C += this.jsx_readEntity(), w = this.pos;
                  break;
                case 62:
                case 125:
                  this.raise(
                    this.pos,
                    "Unexpected token `" + this.input[this.pos] + "`. Did you mean `" + (T === 62 ? "&gt;" : "&rbrace;") + '` or `{"' + this.
                    input[this.pos] + '"}`?'
                  );
                default:
                  S(T) ? (C += this.input.slice(w, this.pos), C += this.jsx_readNewLine(!0), w = this.pos) : ++this.pos;
              }
            }
          }
          jsx_readNewLine(C) {
            let w = this.input.charCodeAt(this.pos), T;
            return ++this.pos, w === 13 && this.input.charCodeAt(this.pos) === 10 ? (++this.pos, T = C ? `
` : `\r
`) : T = String.fromCharCode(w), this.options.locations && (++this.curLine, this.lineStart = this.pos), T;
          }
          jsx_readString(C) {
            let w = "", T = ++this.pos;
            for (; ; ) {
              this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
              let _ = this.input.charCodeAt(this.pos);
              if (_ === C)
                break;
              _ === 38 ? (w += this.input.slice(T, this.pos), w += this.jsx_readEntity(), T = this.pos) : S(_) ? (w += this.input.slice(T, this.
              pos), w += this.jsx_readNewLine(!1), T = this.pos) : ++this.pos;
            }
            return w += this.input.slice(T, this.pos++), this.finishToken(d.string, w);
          }
          jsx_readEntity() {
            let C = "", w = 0, T, _ = this.input[this.pos];
            _ !== "&" && this.raise(this.pos, "Entity must start with an ampersand");
            let q = ++this.pos;
            for (; this.pos < this.input.length && w++ < 10; ) {
              if (_ = this.input[this.pos++], _ === ";") {
                C[0] === "#" ? C[1] === "x" ? (C = C.substr(2), i.test(C) && (T = String.fromCharCode(parseInt(C, 16)))) : (C = C.substr(1),
                n.test(C) && (T = String.fromCharCode(parseInt(C, 10)))) : T = r[C];
                break;
              }
              C += _;
            }
            return T || (this.pos = q, "&");
          }
          // Read a JSX identifier (valid tag or attribute name).
          //
          // Optimized version since JSX identifiers can't contain
          // escape characters and so can be read as single slice.
          // Also assumes that first character was already checked
          // by isIdentifierStart in readToken.
          jsx_readWord() {
            let C, w = this.pos;
            do
              C = this.input.charCodeAt(++this.pos);
            while (L(C) || C === 45);
            return this.finishToken(m.jsxName, this.input.slice(w, this.pos));
          }
          // Parse next token as JSX identifier
          jsx_parseIdentifier() {
            let C = this.startNode();
            return this.type === m.jsxName ? C.name = this.value : this.type.keyword ? C.name = this.type.keyword : this.unexpected(), this.
            next(), this.finishNode(C, "JSXIdentifier");
          }
          // Parse namespaced identifier.
          jsx_parseNamespacedName() {
            let C = this.start, w = this.startLoc, T = this.jsx_parseIdentifier();
            if (!c.allowNamespaces || !this.eat(d.colon))
              return T;
            var _ = this.startNodeAt(C, w);
            return _.namespace = T, _.name = this.jsx_parseIdentifier(), this.finishNode(_, "JSXNamespacedName");
          }
          // Parses element name in any form - namespaced, member
          // or single identifier.
          jsx_parseElementName() {
            if (this.type === m.jsxTagEnd)
              return "";
            let C = this.start, w = this.startLoc, T = this.jsx_parseNamespacedName();
            for (this.type === d.dot && T.type === "JSXNamespacedName" && !c.allowNamespacedObjects && this.unexpected(); this.eat(d.dot); ) {
              let _ = this.startNodeAt(C, w);
              _.object = T, _.property = this.jsx_parseIdentifier(), T = this.finishNode(_, "JSXMemberExpression");
            }
            return T;
          }
          // Parses any type of JSX attribute value.
          jsx_parseAttributeValue() {
            switch (this.type) {
              case d.braceL:
                let C = this.jsx_parseExpressionContainer();
                return C.expression.type === "JSXEmptyExpression" && this.raise(C.start, "JSX attributes must only be assigned a non-empty e\
xpression"), C;
              case m.jsxTagStart:
              case d.string:
                return this.parseExprAtom();
              default:
                this.raise(this.start, "JSX value should be either an expression or a quoted JSX text");
            }
          }
          // JSXEmptyExpression is unique type since it doesn't actually parse anything,
          // and so it should start at the end of last read token (left brace) and finish
          // at the beginning of the next one (right brace).
          jsx_parseEmptyExpression() {
            let C = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
            return this.finishNodeAt(C, "JSXEmptyExpression", this.start, this.startLoc);
          }
          // Parses JSX expression enclosed into curly brackets.
          jsx_parseExpressionContainer() {
            let C = this.startNode();
            return this.next(), C.expression = this.type === d.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression(), this.expect(
            d.braceR), this.finishNode(C, "JSXExpressionContainer");
          }
          // Parses following JSX attribute name-value pair.
          jsx_parseAttribute() {
            let C = this.startNode();
            return this.eat(d.braceL) ? (this.expect(d.ellipsis), C.argument = this.parseMaybeAssign(), this.expect(d.braceR), this.finishNode(
            C, "JSXSpreadAttribute")) : (C.name = this.jsx_parseNamespacedName(), C.value = this.eat(d.eq) ? this.jsx_parseAttributeValue() :
            null, this.finishNode(C, "JSXAttribute"));
          }
          // Parses JSX opening tag starting after '<'.
          jsx_parseOpeningElementAt(C, w) {
            let T = this.startNodeAt(C, w);
            T.attributes = [];
            let _ = this.jsx_parseElementName();
            for (_ && (T.name = _); this.type !== d.slash && this.type !== m.jsxTagEnd; )
              T.attributes.push(this.jsx_parseAttribute());
            return T.selfClosing = this.eat(d.slash), this.expect(m.jsxTagEnd), this.finishNode(T, _ ? "JSXOpeningElement" : "JSXOpeningFrag\
ment");
          }
          // Parses JSX closing tag starting after '</'.
          jsx_parseClosingElementAt(C, w) {
            let T = this.startNodeAt(C, w), _ = this.jsx_parseElementName();
            return _ && (T.name = _), this.expect(m.jsxTagEnd), this.finishNode(T, _ ? "JSXClosingElement" : "JSXClosingFragment");
          }
          // Parses entire JSX element, including it's opening tag
          // (starting after '<'), attributes, contents and closing tag.
          jsx_parseElementAt(C, w) {
            let T = this.startNodeAt(C, w), _ = [], q = this.jsx_parseOpeningElementAt(C, w), O = null;
            if (!q.selfClosing) {
              e:
                for (; ; )
                  switch (this.type) {
                    case m.jsxTagStart:
                      if (C = this.start, w = this.startLoc, this.next(), this.eat(d.slash)) {
                        O = this.jsx_parseClosingElementAt(C, w);
                        break e;
                      }
                      _.push(this.jsx_parseElementAt(C, w));
                      break;
                    case m.jsxText:
                      _.push(this.parseExprAtom());
                      break;
                    case d.braceL:
                      _.push(this.jsx_parseExpressionContainer());
                      break;
                    default:
                      this.unexpected();
                  }
              u(O.name) !== u(q.name) && this.raise(
                O.start,
                "Expected corresponding JSX closing tag for <" + u(q.name) + ">"
              );
            }
            let $ = q.name ? "Element" : "Fragment";
            return T["opening" + $] = q, T["closing" + $] = O, T.children = _, this.type === d.relational && this.value === "<" && this.raise(
            this.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(T, "JSX" + $);
          }
          // Parse JSX text
          jsx_parseText() {
            let C = this.parseLiteral(this.value);
            return C.type = "JSXText", C;
          }
          // Parses entire JSX element from current position.
          jsx_parseElement() {
            let C = this.start, w = this.startLoc;
            return this.next(), this.jsx_parseElementAt(C, w);
          }
          parseExprAtom(C) {
            return this.type === m.jsxText ? this.jsx_parseText() : this.type === m.jsxTagStart ? this.jsx_parseElement() : super.parseExprAtom(
            C);
          }
          readToken(C) {
            let w = this.curContext();
            if (w === v)
              return this.jsx_readToken();
            if (w === b || w === D) {
              if (k(C))
                return this.jsx_readWord();
              if (C == 62)
                return ++this.pos, this.finishToken(m.jsxTagEnd);
              if ((C === 34 || C === 39) && w == b)
                return this.jsx_readString(C);
            }
            return C === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33 ? (++this.pos, this.finishToken(m.jsxTagStart)) :
            super.readToken(C);
          }
          updateContext(C) {
            if (this.type == d.braceL) {
              var w = this.curContext();
              w == b ? this.context.push(g.b_expr) : w == v ? this.context.push(g.b_tmpl) : super.updateContext(C), this.exprAllowed = !0;
            } else if (this.type === d.slash && C === m.jsxTagStart)
              this.context.length -= 2, this.context.push(D), this.exprAllowed = !1;
            else
              return super.updateContext(C);
          }
        };
      }
      s(l, "plugin");
    }
  }), R9 = yn({
    "node_modules/extend/index.js"(e, t) {
      "use strict";
      var r = Object.prototype.hasOwnProperty, i = Object.prototype.toString, n = Object.defineProperty, o = Object.getOwnPropertyDescriptor,
      a = /* @__PURE__ */ s(function(h) {
        return typeof Array.isArray == "function" ? Array.isArray(h) : i.call(h) === "[object Array]";
      }, "isArray2"), u = /* @__PURE__ */ s(function(h) {
        if (!h || i.call(h) !== "[object Object]")
          return !1;
        var f = r.call(h, "constructor"), d = h.constructor && h.constructor.prototype && r.call(h.constructor.prototype, "isPrototypeOf");
        if (h.constructor && !f && !d)
          return !1;
        var m;
        for (m in h)
          ;
        return typeof m > "u" || r.call(h, m);
      }, "isPlainObject3"), l = /* @__PURE__ */ s(function(h, f) {
        n && f.name === "__proto__" ? n(h, f.name, {
          enumerable: !0,
          configurable: !0,
          value: f.newValue,
          writable: !0
        }) : h[f.name] = f.newValue;
      }, "setProperty2"), c = /* @__PURE__ */ s(function(h, f) {
        if (f === "__proto__")
          if (r.call(h, f)) {
            if (o)
              return o(h, f).value;
          } else return;
        return h[f];
      }, "getProperty2");
      t.exports = /* @__PURE__ */ s(function p() {
        var h, f, d, m, g, b, D = arguments[0], v = 1, S = arguments.length, k = !1;
        for (typeof D == "boolean" && (k = D, D = arguments[1] || {}, v = 2), (D == null || typeof D != "object" && typeof D != "function") &&
        (D = {}); v < S; ++v)
          if (h = arguments[v], h != null)
            for (f in h)
              d = c(D, f), m = c(h, f), D !== m && (k && m && (u(m) || (g = a(m))) ? (g ? (g = !1, b = d && a(d) ? d : []) : b = d && u(d) ?
              d : {}, l(D, { name: f, newValue: p(k, b, m) })) : typeof m < "u" && l(D, { name: f, newValue: m }));
        return D;
      }, "extend2");
    }
  });
  s(ir, "stringifyPosition");
  s(bh, "point");
  s(jE, "position2");
  s(qE, "index");
  ke = class extends Error {
    static {
      s(this, "VFileMessage");
    }
    /**
     * Create a message for `reason`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {Options | null | undefined} [options]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns
     *   Instance of `VFileMessage`.
     */
    // eslint-disable-next-line complexity
    constructor(e, t, r) {
      super(), typeof t == "string" && (r = t, t = void 0);
      let i = "", n = {}, o = !1;
      if (t && ("line" in t && "column" in t ? n = { place: t } : "start" in t && "end" in t ? n = { place: t } : "type" in t ? n = {
        ancestors: [t],
        place: t.position
      } : n = { ...t }), typeof e == "string" ? i = e : !n.cause && e && (o = !0, i = e.message, n.cause = e), !n.ruleId && !n.source && typeof r ==
      "string") {
        let u = r.indexOf(":");
        u === -1 ? n.ruleId = r : (n.source = r.slice(0, u), n.ruleId = r.slice(u + 1));
      }
      if (!n.place && n.ancestors && n.ancestors) {
        let u = n.ancestors[n.ancestors.length - 1];
        u && (n.place = u.position);
      }
      let a = n.place && "start" in n.place ? n.place.start : n.place;
      this.ancestors = n.ancestors || void 0, this.cause = n.cause || void 0, this.column = a ? a.column : void 0, this.fatal = void 0, this.
      file, this.message = i, this.line = a ? a.line : void 0, this.name = ir(n.place) || "1:1", this.place = n.place || void 0, this.reason =
      this.message, this.ruleId = n.ruleId || void 0, this.source = n.source || void 0, this.stack = o && n.cause && typeof n.cause.stack ==
      "string" ? n.cause.stack : "", this.actual, this.expected, this.note, this.url;
    }
  };
  ke.prototype.file = "";
  ke.prototype.name = "";
  ke.prototype.reason = "";
  ke.prototype.message = "";
  ke.prototype.stack = "";
  ke.prototype.column = void 0;
  ke.prototype.line = void 0;
  ke.prototype.ancestors = void 0;
  ke.prototype.cause = void 0;
  ke.prototype.fatal = void 0;
  ke.prototype.place = void 0;
  ke.prototype.ruleId = void 0;
  ke.prototype.source = void 0;
  s($E, "isUrl");
  oh = /** @type {const} */
  [
    "history",
    "path",
    "basename",
    "stem",
    "extname",
    "dirname"
  ], jb = class {
    static {
      s(this, "VFile");
    }
    /**
     * Create a new virtual file.
     *
     * `options` is treated as:
     *
     * *   `string` or `Uint8Array` — `{value: options}`
     * *   `URL` — `{path: options}`
     * *   `VFile` — shallow copies its data over to the new file
     * *   `object` — all fields are shallow copied over to the new file
     *
     * Path related fields are set in the following order (least specific to
     * most specific): `history`, `path`, `basename`, `stem`, `extname`,
     * `dirname`.
     *
     * You cannot set `dirname` or `extname` without setting either `history`,
     * `path`, `basename`, or `stem` too.
     *
     * @param {Compatible | null | undefined} [value]
     *   File value.
     * @returns
     *   New instance.
     */
    constructor(e) {
      let t;
      e ? $E(e) ? t = { path: e } : typeof e == "string" || M9(e) ? t = { value: e } : t = e : t = {}, this.cwd = N9.cwd(), this.data = {}, this.
      history = [], this.messages = [], this.value, this.map, this.result, this.stored;
      let r = -1;
      for (; ++r < oh.length; ) {
        let n = oh[r];
        n in t && t[n] !== void 0 && t[n] !== null && (this[n] = n === "history" ? [...t[n]] : t[n]);
      }
      let i;
      for (i in t)
        oh.includes(i) || (this[i] = t[i]);
    }
    /**
     * Get the basename (including extname) (example: `'index.min.js'`).
     *
     * @returns {string | undefined}
     *   Basename.
     */
    get basename() {
      return typeof this.path == "string" ? Tr.basename(this.path) : void 0;
    }
    /**
     * Set basename (including extname) (`'index.min.js'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be nullified (use `file.path = file.dirname` instead).
     *
     * @param {string} basename
     *   Basename.
     * @returns {undefined}
     *   Nothing.
     */
    set basename(e) {
      uh(e, "basename"), ah(e, "basename"), this.path = Tr.join(this.dirname || "", e);
    }
    /**
     * Get the parent path (example: `'~'`).
     *
     * @returns {string | undefined}
     *   Dirname.
     */
    get dirname() {
      return typeof this.path == "string" ? Tr.dirname(this.path) : void 0;
    }
    /**
     * Set the parent path (example: `'~'`).
     *
     * Cannot be set if there’s no `path` yet.
     *
     * @param {string | undefined} dirname
     *   Dirname.
     * @returns {undefined}
     *   Nothing.
     */
    set dirname(e) {
      VE(this.basename, "dirname"), this.path = Tr.join(e || "", this.basename);
    }
    /**
     * Get the extname (including dot) (example: `'.js'`).
     *
     * @returns {string | undefined}
     *   Extname.
     */
    get extname() {
      return typeof this.path == "string" ? Tr.extname(this.path) : void 0;
    }
    /**
     * Set the extname (including dot) (example: `'.js'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be set if there’s no `path` yet.
     *
     * @param {string | undefined} extname
     *   Extname.
     * @returns {undefined}
     *   Nothing.
     */
    set extname(e) {
      if (ah(e, "extname"), VE(this.dirname, "extname"), e) {
        if (e.codePointAt(0) !== 46)
          throw new Error("`extname` must start with `.`");
        if (e.includes(".", 1))
          throw new Error("`extname` cannot contain multiple dots");
      }
      this.path = Tr.join(this.dirname, this.stem + (e || ""));
    }
    /**
     * Get the full path (example: `'~/index.min.js'`).
     *
     * @returns {string}
     *   Path.
     */
    get path() {
      return this.history[this.history.length - 1];
    }
    /**
     * Set the full path (example: `'~/index.min.js'`).
     *
     * Cannot be nullified.
     * You can set a file URL (a `URL` object with a `file:` protocol) which will
     * be turned into a path with `url.fileURLToPath`.
     *
     * @param {URL | string} path
     *   Path.
     * @returns {undefined}
     *   Nothing.
     */
    set path(e) {
      $E(e) && (e = L9(e)), uh(e, "path"), this.path !== e && this.history.push(e);
    }
    /**
     * Get the stem (basename w/o extname) (example: `'index.min'`).
     *
     * @returns {string | undefined}
     *   Stem.
     */
    get stem() {
      return typeof this.path == "string" ? Tr.basename(this.path, this.extname) : void 0;
    }
    /**
     * Set the stem (basename w/o extname) (example: `'index.min'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be nullified (use `file.path = file.dirname` instead).
     *
     * @param {string} stem
     *   Stem.
     * @returns {undefined}
     *   Nothing.
     */
    set stem(e) {
      uh(e, "stem"), ah(e, "stem"), this.path = Tr.join(this.dirname || "", e + (this.extname || ""));
    }
    // Normal prototypal methods.
    /**
     * Create a fatal message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `true` (error; file not usable)
     * and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {never}
     *   Never.
     * @throws {VFileMessage}
     *   Message.
     */
    fail(e, t, r) {
      let i = this.message(e, t, r);
      throw i.fatal = !0, i;
    }
    /**
     * Create an info message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `undefined` (info; change
     * likely not needed) and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {VFileMessage}
     *   Message.
     */
    info(e, t, r) {
      let i = this.message(e, t, r);
      return i.fatal = void 0, i;
    }
    /**
     * Create a message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `false` (warning; change may be
     * needed) and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {VFileMessage}
     *   Message.
     */
    message(e, t, r) {
      let i = new ke(
        // @ts-expect-error: the overloads are fine.
        e,
        t,
        r
      );
      return this.path && (i.name = this.path + ":" + i.name, i.file = this.path), i.fatal = !1, this.messages.push(i), i;
    }
    /**
     * Serialize the file.
     *
     * > **Note**: which encodings are supported depends on the engine.
     * > For info on Node.js, see:
     * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.
     *
     * @param {string | null | undefined} [encoding='utf8']
     *   Character encoding to understand `value` as when it’s a `Uint8Array`
     *   (default: `'utf-8'`).
     * @returns {string}
     *   Serialized file.
     */
    toString(e) {
      return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(e || void 0).decode(this.value);
    }
  };
  s(ah, "assertPart");
  s(uh, "assertNonEmpty");
  s(VE, "assertPath");
  s(M9, "isUint8Array");
  j9 = [
    "md",
    "markdown",
    "mdown",
    "mkdn",
    "mkd",
    "mdwn",
    "mkdown",
    "ron"
  ], q9 = j9, $9 = q9.map(function(e) {
    return "." + e;
  });
  s(qb, "resolveFileAndOptions");
  s(V9, "looksLikeAVFile");
  s(U9, "mdxExpressionFromMarkdown");
  s(W9, "mdxExpressionToMarkdown");
  s(z9, "enterMdxFlowExpression");
  s(H9, "enterMdxTextExpression");
  s(UE, "exitMdxExpression");
  s(WE, "exitMdxExpressionData");
  s(zE, "handleMdxExpression");
  s(HE, "ccount");
  J9 = [
    "AElig",
    "AMP",
    "Aacute",
    "Acirc",
    "Agrave",
    "Aring",
    "Atilde",
    "Auml",
    "COPY",
    "Ccedil",
    "ETH",
    "Eacute",
    "Ecirc",
    "Egrave",
    "Euml",
    "GT",
    "Iacute",
    "Icirc",
    "Igrave",
    "Iuml",
    "LT",
    "Ntilde",
    "Oacute",
    "Ocirc",
    "Ograve",
    "Oslash",
    "Otilde",
    "Ouml",
    "QUOT",
    "REG",
    "THORN",
    "Uacute",
    "Ucirc",
    "Ugrave",
    "Uuml",
    "Yacute",
    "aacute",
    "acirc",
    "acute",
    "aelig",
    "agrave",
    "amp",
    "aring",
    "atilde",
    "auml",
    "brvbar",
    "ccedil",
    "cedil",
    "cent",
    "copy",
    "curren",
    "deg",
    "divide",
    "eacute",
    "ecirc",
    "egrave",
    "eth",
    "euml",
    "frac12",
    "frac14",
    "frac34",
    "gt",
    "iacute",
    "icirc",
    "iexcl",
    "igrave",
    "iquest",
    "iuml",
    "laquo",
    "lt",
    "macr",
    "micro",
    "middot",
    "nbsp",
    "not",
    "ntilde",
    "oacute",
    "ocirc",
    "ograve",
    "ordf",
    "ordm",
    "oslash",
    "otilde",
    "ouml",
    "para",
    "plusmn",
    "pound",
    "quot",
    "raquo",
    "reg",
    "sect",
    "shy",
    "sup1",
    "sup2",
    "sup3",
    "szlig",
    "thorn",
    "times",
    "uacute",
    "ucirc",
    "ugrave",
    "uml",
    "uuml",
    "yacute",
    "yen",
    "yuml"
  ], JE = {
    0: "\uFFFD",
    128: "\u20AC",
    130: "\u201A",
    131: "\u0192",
    132: "\u201E",
    133: "\u2026",
    134: "\u2020",
    135: "\u2021",
    136: "\u02C6",
    137: "\u2030",
    138: "\u0160",
    139: "\u2039",
    140: "\u0152",
    142: "\u017D",
    145: "\u2018",
    146: "\u2019",
    147: "\u201C",
    148: "\u201D",
    149: "\u2022",
    150: "\u2013",
    151: "\u2014",
    152: "\u02DC",
    153: "\u2122",
    154: "\u0161",
    155: "\u203A",
    156: "\u0153",
    158: "\u017E",
    159: "\u0178"
  };
  s($b, "isDecimal");
  s(G9, "isHexadecimal");
  s(X9, "isAlphabetical");
  s(GE, "isAlphanumerical");
  XE = {
    AElig: "\xC6",
    AMP: "&",
    Aacute: "\xC1",
    Abreve: "\u0102",
    Acirc: "\xC2",
    Acy: "\u0410",
    Afr: "\u{1D504}",
    Agrave: "\xC0",
    Alpha: "\u0391",
    Amacr: "\u0100",
    And: "\u2A53",
    Aogon: "\u0104",
    Aopf: "\u{1D538}",
    ApplyFunction: "\u2061",
    Aring: "\xC5",
    Ascr: "\u{1D49C}",
    Assign: "\u2254",
    Atilde: "\xC3",
    Auml: "\xC4",
    Backslash: "\u2216",
    Barv: "\u2AE7",
    Barwed: "\u2306",
    Bcy: "\u0411",
    Because: "\u2235",
    Bernoullis: "\u212C",
    Beta: "\u0392",
    Bfr: "\u{1D505}",
    Bopf: "\u{1D539}",
    Breve: "\u02D8",
    Bscr: "\u212C",
    Bumpeq: "\u224E",
    CHcy: "\u0427",
    COPY: "\xA9",
    Cacute: "\u0106",
    Cap: "\u22D2",
    CapitalDifferentialD: "\u2145",
    Cayleys: "\u212D",
    Ccaron: "\u010C",
    Ccedil: "\xC7",
    Ccirc: "\u0108",
    Cconint: "\u2230",
    Cdot: "\u010A",
    Cedilla: "\xB8",
    CenterDot: "\xB7",
    Cfr: "\u212D",
    Chi: "\u03A7",
    CircleDot: "\u2299",
    CircleMinus: "\u2296",
    CirclePlus: "\u2295",
    CircleTimes: "\u2297",
    ClockwiseContourIntegral: "\u2232",
    CloseCurlyDoubleQuote: "\u201D",
    CloseCurlyQuote: "\u2019",
    Colon: "\u2237",
    Colone: "\u2A74",
    Congruent: "\u2261",
    Conint: "\u222F",
    ContourIntegral: "\u222E",
    Copf: "\u2102",
    Coproduct: "\u2210",
    CounterClockwiseContourIntegral: "\u2233",
    Cross: "\u2A2F",
    Cscr: "\u{1D49E}",
    Cup: "\u22D3",
    CupCap: "\u224D",
    DD: "\u2145",
    DDotrahd: "\u2911",
    DJcy: "\u0402",
    DScy: "\u0405",
    DZcy: "\u040F",
    Dagger: "\u2021",
    Darr: "\u21A1",
    Dashv: "\u2AE4",
    Dcaron: "\u010E",
    Dcy: "\u0414",
    Del: "\u2207",
    Delta: "\u0394",
    Dfr: "\u{1D507}",
    DiacriticalAcute: "\xB4",
    DiacriticalDot: "\u02D9",
    DiacriticalDoubleAcute: "\u02DD",
    DiacriticalGrave: "`",
    DiacriticalTilde: "\u02DC",
    Diamond: "\u22C4",
    DifferentialD: "\u2146",
    Dopf: "\u{1D53B}",
    Dot: "\xA8",
    DotDot: "\u20DC",
    DotEqual: "\u2250",
    DoubleContourIntegral: "\u222F",
    DoubleDot: "\xA8",
    DoubleDownArrow: "\u21D3",
    DoubleLeftArrow: "\u21D0",
    DoubleLeftRightArrow: "\u21D4",
    DoubleLeftTee: "\u2AE4",
    DoubleLongLeftArrow: "\u27F8",
    DoubleLongLeftRightArrow: "\u27FA",
    DoubleLongRightArrow: "\u27F9",
    DoubleRightArrow: "\u21D2",
    DoubleRightTee: "\u22A8",
    DoubleUpArrow: "\u21D1",
    DoubleUpDownArrow: "\u21D5",
    DoubleVerticalBar: "\u2225",
    DownArrow: "\u2193",
    DownArrowBar: "\u2913",
    DownArrowUpArrow: "\u21F5",
    DownBreve: "\u0311",
    DownLeftRightVector: "\u2950",
    DownLeftTeeVector: "\u295E",
    DownLeftVector: "\u21BD",
    DownLeftVectorBar: "\u2956",
    DownRightTeeVector: "\u295F",
    DownRightVector: "\u21C1",
    DownRightVectorBar: "\u2957",
    DownTee: "\u22A4",
    DownTeeArrow: "\u21A7",
    Downarrow: "\u21D3",
    Dscr: "\u{1D49F}",
    Dstrok: "\u0110",
    ENG: "\u014A",
    ETH: "\xD0",
    Eacute: "\xC9",
    Ecaron: "\u011A",
    Ecirc: "\xCA",
    Ecy: "\u042D",
    Edot: "\u0116",
    Efr: "\u{1D508}",
    Egrave: "\xC8",
    Element: "\u2208",
    Emacr: "\u0112",
    EmptySmallSquare: "\u25FB",
    EmptyVerySmallSquare: "\u25AB",
    Eogon: "\u0118",
    Eopf: "\u{1D53C}",
    Epsilon: "\u0395",
    Equal: "\u2A75",
    EqualTilde: "\u2242",
    Equilibrium: "\u21CC",
    Escr: "\u2130",
    Esim: "\u2A73",
    Eta: "\u0397",
    Euml: "\xCB",
    Exists: "\u2203",
    ExponentialE: "\u2147",
    Fcy: "\u0424",
    Ffr: "\u{1D509}",
    FilledSmallSquare: "\u25FC",
    FilledVerySmallSquare: "\u25AA",
    Fopf: "\u{1D53D}",
    ForAll: "\u2200",
    Fouriertrf: "\u2131",
    Fscr: "\u2131",
    GJcy: "\u0403",
    GT: ">",
    Gamma: "\u0393",
    Gammad: "\u03DC",
    Gbreve: "\u011E",
    Gcedil: "\u0122",
    Gcirc: "\u011C",
    Gcy: "\u0413",
    Gdot: "\u0120",
    Gfr: "\u{1D50A}",
    Gg: "\u22D9",
    Gopf: "\u{1D53E}",
    GreaterEqual: "\u2265",
    GreaterEqualLess: "\u22DB",
    GreaterFullEqual: "\u2267",
    GreaterGreater: "\u2AA2",
    GreaterLess: "\u2277",
    GreaterSlantEqual: "\u2A7E",
    GreaterTilde: "\u2273",
    Gscr: "\u{1D4A2}",
    Gt: "\u226B",
    HARDcy: "\u042A",
    Hacek: "\u02C7",
    Hat: "^",
    Hcirc: "\u0124",
    Hfr: "\u210C",
    HilbertSpace: "\u210B",
    Hopf: "\u210D",
    HorizontalLine: "\u2500",
    Hscr: "\u210B",
    Hstrok: "\u0126",
    HumpDownHump: "\u224E",
    HumpEqual: "\u224F",
    IEcy: "\u0415",
    IJlig: "\u0132",
    IOcy: "\u0401",
    Iacute: "\xCD",
    Icirc: "\xCE",
    Icy: "\u0418",
    Idot: "\u0130",
    Ifr: "\u2111",
    Igrave: "\xCC",
    Im: "\u2111",
    Imacr: "\u012A",
    ImaginaryI: "\u2148",
    Implies: "\u21D2",
    Int: "\u222C",
    Integral: "\u222B",
    Intersection: "\u22C2",
    InvisibleComma: "\u2063",
    InvisibleTimes: "\u2062",
    Iogon: "\u012E",
    Iopf: "\u{1D540}",
    Iota: "\u0399",
    Iscr: "\u2110",
    Itilde: "\u0128",
    Iukcy: "\u0406",
    Iuml: "\xCF",
    Jcirc: "\u0134",
    Jcy: "\u0419",
    Jfr: "\u{1D50D}",
    Jopf: "\u{1D541}",
    Jscr: "\u{1D4A5}",
    Jsercy: "\u0408",
    Jukcy: "\u0404",
    KHcy: "\u0425",
    KJcy: "\u040C",
    Kappa: "\u039A",
    Kcedil: "\u0136",
    Kcy: "\u041A",
    Kfr: "\u{1D50E}",
    Kopf: "\u{1D542}",
    Kscr: "\u{1D4A6}",
    LJcy: "\u0409",
    LT: "<",
    Lacute: "\u0139",
    Lambda: "\u039B",
    Lang: "\u27EA",
    Laplacetrf: "\u2112",
    Larr: "\u219E",
    Lcaron: "\u013D",
    Lcedil: "\u013B",
    Lcy: "\u041B",
    LeftAngleBracket: "\u27E8",
    LeftArrow: "\u2190",
    LeftArrowBar: "\u21E4",
    LeftArrowRightArrow: "\u21C6",
    LeftCeiling: "\u2308",
    LeftDoubleBracket: "\u27E6",
    LeftDownTeeVector: "\u2961",
    LeftDownVector: "\u21C3",
    LeftDownVectorBar: "\u2959",
    LeftFloor: "\u230A",
    LeftRightArrow: "\u2194",
    LeftRightVector: "\u294E",
    LeftTee: "\u22A3",
    LeftTeeArrow: "\u21A4",
    LeftTeeVector: "\u295A",
    LeftTriangle: "\u22B2",
    LeftTriangleBar: "\u29CF",
    LeftTriangleEqual: "\u22B4",
    LeftUpDownVector: "\u2951",
    LeftUpTeeVector: "\u2960",
    LeftUpVector: "\u21BF",
    LeftUpVectorBar: "\u2958",
    LeftVector: "\u21BC",
    LeftVectorBar: "\u2952",
    Leftarrow: "\u21D0",
    Leftrightarrow: "\u21D4",
    LessEqualGreater: "\u22DA",
    LessFullEqual: "\u2266",
    LessGreater: "\u2276",
    LessLess: "\u2AA1",
    LessSlantEqual: "\u2A7D",
    LessTilde: "\u2272",
    Lfr: "\u{1D50F}",
    Ll: "\u22D8",
    Lleftarrow: "\u21DA",
    Lmidot: "\u013F",
    LongLeftArrow: "\u27F5",
    LongLeftRightArrow: "\u27F7",
    LongRightArrow: "\u27F6",
    Longleftarrow: "\u27F8",
    Longleftrightarrow: "\u27FA",
    Longrightarrow: "\u27F9",
    Lopf: "\u{1D543}",
    LowerLeftArrow: "\u2199",
    LowerRightArrow: "\u2198",
    Lscr: "\u2112",
    Lsh: "\u21B0",
    Lstrok: "\u0141",
    Lt: "\u226A",
    Map: "\u2905",
    Mcy: "\u041C",
    MediumSpace: "\u205F",
    Mellintrf: "\u2133",
    Mfr: "\u{1D510}",
    MinusPlus: "\u2213",
    Mopf: "\u{1D544}",
    Mscr: "\u2133",
    Mu: "\u039C",
    NJcy: "\u040A",
    Nacute: "\u0143",
    Ncaron: "\u0147",
    Ncedil: "\u0145",
    Ncy: "\u041D",
    NegativeMediumSpace: "\u200B",
    NegativeThickSpace: "\u200B",
    NegativeThinSpace: "\u200B",
    NegativeVeryThinSpace: "\u200B",
    NestedGreaterGreater: "\u226B",
    NestedLessLess: "\u226A",
    NewLine: `
`,
    Nfr: "\u{1D511}",
    NoBreak: "\u2060",
    NonBreakingSpace: "\xA0",
    Nopf: "\u2115",
    Not: "\u2AEC",
    NotCongruent: "\u2262",
    NotCupCap: "\u226D",
    NotDoubleVerticalBar: "\u2226",
    NotElement: "\u2209",
    NotEqual: "\u2260",
    NotEqualTilde: "\u2242\u0338",
    NotExists: "\u2204",
    NotGreater: "\u226F",
    NotGreaterEqual: "\u2271",
    NotGreaterFullEqual: "\u2267\u0338",
    NotGreaterGreater: "\u226B\u0338",
    NotGreaterLess: "\u2279",
    NotGreaterSlantEqual: "\u2A7E\u0338",
    NotGreaterTilde: "\u2275",
    NotHumpDownHump: "\u224E\u0338",
    NotHumpEqual: "\u224F\u0338",
    NotLeftTriangle: "\u22EA",
    NotLeftTriangleBar: "\u29CF\u0338",
    NotLeftTriangleEqual: "\u22EC",
    NotLess: "\u226E",
    NotLessEqual: "\u2270",
    NotLessGreater: "\u2278",
    NotLessLess: "\u226A\u0338",
    NotLessSlantEqual: "\u2A7D\u0338",
    NotLessTilde: "\u2274",
    NotNestedGreaterGreater: "\u2AA2\u0338",
    NotNestedLessLess: "\u2AA1\u0338",
    NotPrecedes: "\u2280",
    NotPrecedesEqual: "\u2AAF\u0338",
    NotPrecedesSlantEqual: "\u22E0",
    NotReverseElement: "\u220C",
    NotRightTriangle: "\u22EB",
    NotRightTriangleBar: "\u29D0\u0338",
    NotRightTriangleEqual: "\u22ED",
    NotSquareSubset: "\u228F\u0338",
    NotSquareSubsetEqual: "\u22E2",
    NotSquareSuperset: "\u2290\u0338",
    NotSquareSupersetEqual: "\u22E3",
    NotSubset: "\u2282\u20D2",
    NotSubsetEqual: "\u2288",
    NotSucceeds: "\u2281",
    NotSucceedsEqual: "\u2AB0\u0338",
    NotSucceedsSlantEqual: "\u22E1",
    NotSucceedsTilde: "\u227F\u0338",
    NotSuperset: "\u2283\u20D2",
    NotSupersetEqual: "\u2289",
    NotTilde: "\u2241",
    NotTildeEqual: "\u2244",
    NotTildeFullEqual: "\u2247",
    NotTildeTilde: "\u2249",
    NotVerticalBar: "\u2224",
    Nscr: "\u{1D4A9}",
    Ntilde: "\xD1",
    Nu: "\u039D",
    OElig: "\u0152",
    Oacute: "\xD3",
    Ocirc: "\xD4",
    Ocy: "\u041E",
    Odblac: "\u0150",
    Ofr: "\u{1D512}",
    Ograve: "\xD2",
    Omacr: "\u014C",
    Omega: "\u03A9",
    Omicron: "\u039F",
    Oopf: "\u{1D546}",
    OpenCurlyDoubleQuote: "\u201C",
    OpenCurlyQuote: "\u2018",
    Or: "\u2A54",
    Oscr: "\u{1D4AA}",
    Oslash: "\xD8",
    Otilde: "\xD5",
    Otimes: "\u2A37",
    Ouml: "\xD6",
    OverBar: "\u203E",
    OverBrace: "\u23DE",
    OverBracket: "\u23B4",
    OverParenthesis: "\u23DC",
    PartialD: "\u2202",
    Pcy: "\u041F",
    Pfr: "\u{1D513}",
    Phi: "\u03A6",
    Pi: "\u03A0",
    PlusMinus: "\xB1",
    Poincareplane: "\u210C",
    Popf: "\u2119",
    Pr: "\u2ABB",
    Precedes: "\u227A",
    PrecedesEqual: "\u2AAF",
    PrecedesSlantEqual: "\u227C",
    PrecedesTilde: "\u227E",
    Prime: "\u2033",
    Product: "\u220F",
    Proportion: "\u2237",
    Proportional: "\u221D",
    Pscr: "\u{1D4AB}",
    Psi: "\u03A8",
    QUOT: '"',
    Qfr: "\u{1D514}",
    Qopf: "\u211A",
    Qscr: "\u{1D4AC}",
    RBarr: "\u2910",
    REG: "\xAE",
    Racute: "\u0154",
    Rang: "\u27EB",
    Rarr: "\u21A0",
    Rarrtl: "\u2916",
    Rcaron: "\u0158",
    Rcedil: "\u0156",
    Rcy: "\u0420",
    Re: "\u211C",
    ReverseElement: "\u220B",
    ReverseEquilibrium: "\u21CB",
    ReverseUpEquilibrium: "\u296F",
    Rfr: "\u211C",
    Rho: "\u03A1",
    RightAngleBracket: "\u27E9",
    RightArrow: "\u2192",
    RightArrowBar: "\u21E5",
    RightArrowLeftArrow: "\u21C4",
    RightCeiling: "\u2309",
    RightDoubleBracket: "\u27E7",
    RightDownTeeVector: "\u295D",
    RightDownVector: "\u21C2",
    RightDownVectorBar: "\u2955",
    RightFloor: "\u230B",
    RightTee: "\u22A2",
    RightTeeArrow: "\u21A6",
    RightTeeVector: "\u295B",
    RightTriangle: "\u22B3",
    RightTriangleBar: "\u29D0",
    RightTriangleEqual: "\u22B5",
    RightUpDownVector: "\u294F",
    RightUpTeeVector: "\u295C",
    RightUpVector: "\u21BE",
    RightUpVectorBar: "\u2954",
    RightVector: "\u21C0",
    RightVectorBar: "\u2953",
    Rightarrow: "\u21D2",
    Ropf: "\u211D",
    RoundImplies: "\u2970",
    Rrightarrow: "\u21DB",
    Rscr: "\u211B",
    Rsh: "\u21B1",
    RuleDelayed: "\u29F4",
    SHCHcy: "\u0429",
    SHcy: "\u0428",
    SOFTcy: "\u042C",
    Sacute: "\u015A",
    Sc: "\u2ABC",
    Scaron: "\u0160",
    Scedil: "\u015E",
    Scirc: "\u015C",
    Scy: "\u0421",
    Sfr: "\u{1D516}",
    ShortDownArrow: "\u2193",
    ShortLeftArrow: "\u2190",
    ShortRightArrow: "\u2192",
    ShortUpArrow: "\u2191",
    Sigma: "\u03A3",
    SmallCircle: "\u2218",
    Sopf: "\u{1D54A}",
    Sqrt: "\u221A",
    Square: "\u25A1",
    SquareIntersection: "\u2293",
    SquareSubset: "\u228F",
    SquareSubsetEqual: "\u2291",
    SquareSuperset: "\u2290",
    SquareSupersetEqual: "\u2292",
    SquareUnion: "\u2294",
    Sscr: "\u{1D4AE}",
    Star: "\u22C6",
    Sub: "\u22D0",
    Subset: "\u22D0",
    SubsetEqual: "\u2286",
    Succeeds: "\u227B",
    SucceedsEqual: "\u2AB0",
    SucceedsSlantEqual: "\u227D",
    SucceedsTilde: "\u227F",
    SuchThat: "\u220B",
    Sum: "\u2211",
    Sup: "\u22D1",
    Superset: "\u2283",
    SupersetEqual: "\u2287",
    Supset: "\u22D1",
    THORN: "\xDE",
    TRADE: "\u2122",
    TSHcy: "\u040B",
    TScy: "\u0426",
    Tab: "	",
    Tau: "\u03A4",
    Tcaron: "\u0164",
    Tcedil: "\u0162",
    Tcy: "\u0422",
    Tfr: "\u{1D517}",
    Therefore: "\u2234",
    Theta: "\u0398",
    ThickSpace: "\u205F\u200A",
    ThinSpace: "\u2009",
    Tilde: "\u223C",
    TildeEqual: "\u2243",
    TildeFullEqual: "\u2245",
    TildeTilde: "\u2248",
    Topf: "\u{1D54B}",
    TripleDot: "\u20DB",
    Tscr: "\u{1D4AF}",
    Tstrok: "\u0166",
    Uacute: "\xDA",
    Uarr: "\u219F",
    Uarrocir: "\u2949",
    Ubrcy: "\u040E",
    Ubreve: "\u016C",
    Ucirc: "\xDB",
    Ucy: "\u0423",
    Udblac: "\u0170",
    Ufr: "\u{1D518}",
    Ugrave: "\xD9",
    Umacr: "\u016A",
    UnderBar: "_",
    UnderBrace: "\u23DF",
    UnderBracket: "\u23B5",
    UnderParenthesis: "\u23DD",
    Union: "\u22C3",
    UnionPlus: "\u228E",
    Uogon: "\u0172",
    Uopf: "\u{1D54C}",
    UpArrow: "\u2191",
    UpArrowBar: "\u2912",
    UpArrowDownArrow: "\u21C5",
    UpDownArrow: "\u2195",
    UpEquilibrium: "\u296E",
    UpTee: "\u22A5",
    UpTeeArrow: "\u21A5",
    Uparrow: "\u21D1",
    Updownarrow: "\u21D5",
    UpperLeftArrow: "\u2196",
    UpperRightArrow: "\u2197",
    Upsi: "\u03D2",
    Upsilon: "\u03A5",
    Uring: "\u016E",
    Uscr: "\u{1D4B0}",
    Utilde: "\u0168",
    Uuml: "\xDC",
    VDash: "\u22AB",
    Vbar: "\u2AEB",
    Vcy: "\u0412",
    Vdash: "\u22A9",
    Vdashl: "\u2AE6",
    Vee: "\u22C1",
    Verbar: "\u2016",
    Vert: "\u2016",
    VerticalBar: "\u2223",
    VerticalLine: "|",
    VerticalSeparator: "\u2758",
    VerticalTilde: "\u2240",
    VeryThinSpace: "\u200A",
    Vfr: "\u{1D519}",
    Vopf: "\u{1D54D}",
    Vscr: "\u{1D4B1}",
    Vvdash: "\u22AA",
    Wcirc: "\u0174",
    Wedge: "\u22C0",
    Wfr: "\u{1D51A}",
    Wopf: "\u{1D54E}",
    Wscr: "\u{1D4B2}",
    Xfr: "\u{1D51B}",
    Xi: "\u039E",
    Xopf: "\u{1D54F}",
    Xscr: "\u{1D4B3}",
    YAcy: "\u042F",
    YIcy: "\u0407",
    YUcy: "\u042E",
    Yacute: "\xDD",
    Ycirc: "\u0176",
    Ycy: "\u042B",
    Yfr: "\u{1D51C}",
    Yopf: "\u{1D550}",
    Yscr: "\u{1D4B4}",
    Yuml: "\u0178",
    ZHcy: "\u0416",
    Zacute: "\u0179",
    Zcaron: "\u017D",
    Zcy: "\u0417",
    Zdot: "\u017B",
    ZeroWidthSpace: "\u200B",
    Zeta: "\u0396",
    Zfr: "\u2128",
    Zopf: "\u2124",
    Zscr: "\u{1D4B5}",
    aacute: "\xE1",
    abreve: "\u0103",
    ac: "\u223E",
    acE: "\u223E\u0333",
    acd: "\u223F",
    acirc: "\xE2",
    acute: "\xB4",
    acy: "\u0430",
    aelig: "\xE6",
    af: "\u2061",
    afr: "\u{1D51E}",
    agrave: "\xE0",
    alefsym: "\u2135",
    aleph: "\u2135",
    alpha: "\u03B1",
    amacr: "\u0101",
    amalg: "\u2A3F",
    amp: "&",
    and: "\u2227",
    andand: "\u2A55",
    andd: "\u2A5C",
    andslope: "\u2A58",
    andv: "\u2A5A",
    ang: "\u2220",
    ange: "\u29A4",
    angle: "\u2220",
    angmsd: "\u2221",
    angmsdaa: "\u29A8",
    angmsdab: "\u29A9",
    angmsdac: "\u29AA",
    angmsdad: "\u29AB",
    angmsdae: "\u29AC",
    angmsdaf: "\u29AD",
    angmsdag: "\u29AE",
    angmsdah: "\u29AF",
    angrt: "\u221F",
    angrtvb: "\u22BE",
    angrtvbd: "\u299D",
    angsph: "\u2222",
    angst: "\xC5",
    angzarr: "\u237C",
    aogon: "\u0105",
    aopf: "\u{1D552}",
    ap: "\u2248",
    apE: "\u2A70",
    apacir: "\u2A6F",
    ape: "\u224A",
    apid: "\u224B",
    apos: "'",
    approx: "\u2248",
    approxeq: "\u224A",
    aring: "\xE5",
    ascr: "\u{1D4B6}",
    ast: "*",
    asymp: "\u2248",
    asympeq: "\u224D",
    atilde: "\xE3",
    auml: "\xE4",
    awconint: "\u2233",
    awint: "\u2A11",
    bNot: "\u2AED",
    backcong: "\u224C",
    backepsilon: "\u03F6",
    backprime: "\u2035",
    backsim: "\u223D",
    backsimeq: "\u22CD",
    barvee: "\u22BD",
    barwed: "\u2305",
    barwedge: "\u2305",
    bbrk: "\u23B5",
    bbrktbrk: "\u23B6",
    bcong: "\u224C",
    bcy: "\u0431",
    bdquo: "\u201E",
    becaus: "\u2235",
    because: "\u2235",
    bemptyv: "\u29B0",
    bepsi: "\u03F6",
    bernou: "\u212C",
    beta: "\u03B2",
    beth: "\u2136",
    between: "\u226C",
    bfr: "\u{1D51F}",
    bigcap: "\u22C2",
    bigcirc: "\u25EF",
    bigcup: "\u22C3",
    bigodot: "\u2A00",
    bigoplus: "\u2A01",
    bigotimes: "\u2A02",
    bigsqcup: "\u2A06",
    bigstar: "\u2605",
    bigtriangledown: "\u25BD",
    bigtriangleup: "\u25B3",
    biguplus: "\u2A04",
    bigvee: "\u22C1",
    bigwedge: "\u22C0",
    bkarow: "\u290D",
    blacklozenge: "\u29EB",
    blacksquare: "\u25AA",
    blacktriangle: "\u25B4",
    blacktriangledown: "\u25BE",
    blacktriangleleft: "\u25C2",
    blacktriangleright: "\u25B8",
    blank: "\u2423",
    blk12: "\u2592",
    blk14: "\u2591",
    blk34: "\u2593",
    block: "\u2588",
    bne: "=\u20E5",
    bnequiv: "\u2261\u20E5",
    bnot: "\u2310",
    bopf: "\u{1D553}",
    bot: "\u22A5",
    bottom: "\u22A5",
    bowtie: "\u22C8",
    boxDL: "\u2557",
    boxDR: "\u2554",
    boxDl: "\u2556",
    boxDr: "\u2553",
    boxH: "\u2550",
    boxHD: "\u2566",
    boxHU: "\u2569",
    boxHd: "\u2564",
    boxHu: "\u2567",
    boxUL: "\u255D",
    boxUR: "\u255A",
    boxUl: "\u255C",
    boxUr: "\u2559",
    boxV: "\u2551",
    boxVH: "\u256C",
    boxVL: "\u2563",
    boxVR: "\u2560",
    boxVh: "\u256B",
    boxVl: "\u2562",
    boxVr: "\u255F",
    boxbox: "\u29C9",
    boxdL: "\u2555",
    boxdR: "\u2552",
    boxdl: "\u2510",
    boxdr: "\u250C",
    boxh: "\u2500",
    boxhD: "\u2565",
    boxhU: "\u2568",
    boxhd: "\u252C",
    boxhu: "\u2534",
    boxminus: "\u229F",
    boxplus: "\u229E",
    boxtimes: "\u22A0",
    boxuL: "\u255B",
    boxuR: "\u2558",
    boxul: "\u2518",
    boxur: "\u2514",
    boxv: "\u2502",
    boxvH: "\u256A",
    boxvL: "\u2561",
    boxvR: "\u255E",
    boxvh: "\u253C",
    boxvl: "\u2524",
    boxvr: "\u251C",
    bprime: "\u2035",
    breve: "\u02D8",
    brvbar: "\xA6",
    bscr: "\u{1D4B7}",
    bsemi: "\u204F",
    bsim: "\u223D",
    bsime: "\u22CD",
    bsol: "\\",
    bsolb: "\u29C5",
    bsolhsub: "\u27C8",
    bull: "\u2022",
    bullet: "\u2022",
    bump: "\u224E",
    bumpE: "\u2AAE",
    bumpe: "\u224F",
    bumpeq: "\u224F",
    cacute: "\u0107",
    cap: "\u2229",
    capand: "\u2A44",
    capbrcup: "\u2A49",
    capcap: "\u2A4B",
    capcup: "\u2A47",
    capdot: "\u2A40",
    caps: "\u2229\uFE00",
    caret: "\u2041",
    caron: "\u02C7",
    ccaps: "\u2A4D",
    ccaron: "\u010D",
    ccedil: "\xE7",
    ccirc: "\u0109",
    ccups: "\u2A4C",
    ccupssm: "\u2A50",
    cdot: "\u010B",
    cedil: "\xB8",
    cemptyv: "\u29B2",
    cent: "\xA2",
    centerdot: "\xB7",
    cfr: "\u{1D520}",
    chcy: "\u0447",
    check: "\u2713",
    checkmark: "\u2713",
    chi: "\u03C7",
    cir: "\u25CB",
    cirE: "\u29C3",
    circ: "\u02C6",
    circeq: "\u2257",
    circlearrowleft: "\u21BA",
    circlearrowright: "\u21BB",
    circledR: "\xAE",
    circledS: "\u24C8",
    circledast: "\u229B",
    circledcirc: "\u229A",
    circleddash: "\u229D",
    cire: "\u2257",
    cirfnint: "\u2A10",
    cirmid: "\u2AEF",
    cirscir: "\u29C2",
    clubs: "\u2663",
    clubsuit: "\u2663",
    colon: ":",
    colone: "\u2254",
    coloneq: "\u2254",
    comma: ",",
    commat: "@",
    comp: "\u2201",
    compfn: "\u2218",
    complement: "\u2201",
    complexes: "\u2102",
    cong: "\u2245",
    congdot: "\u2A6D",
    conint: "\u222E",
    copf: "\u{1D554}",
    coprod: "\u2210",
    copy: "\xA9",
    copysr: "\u2117",
    crarr: "\u21B5",
    cross: "\u2717",
    cscr: "\u{1D4B8}",
    csub: "\u2ACF",
    csube: "\u2AD1",
    csup: "\u2AD0",
    csupe: "\u2AD2",
    ctdot: "\u22EF",
    cudarrl: "\u2938",
    cudarrr: "\u2935",
    cuepr: "\u22DE",
    cuesc: "\u22DF",
    cularr: "\u21B6",
    cularrp: "\u293D",
    cup: "\u222A",
    cupbrcap: "\u2A48",
    cupcap: "\u2A46",
    cupcup: "\u2A4A",
    cupdot: "\u228D",
    cupor: "\u2A45",
    cups: "\u222A\uFE00",
    curarr: "\u21B7",
    curarrm: "\u293C",
    curlyeqprec: "\u22DE",
    curlyeqsucc: "\u22DF",
    curlyvee: "\u22CE",
    curlywedge: "\u22CF",
    curren: "\xA4",
    curvearrowleft: "\u21B6",
    curvearrowright: "\u21B7",
    cuvee: "\u22CE",
    cuwed: "\u22CF",
    cwconint: "\u2232",
    cwint: "\u2231",
    cylcty: "\u232D",
    dArr: "\u21D3",
    dHar: "\u2965",
    dagger: "\u2020",
    daleth: "\u2138",
    darr: "\u2193",
    dash: "\u2010",
    dashv: "\u22A3",
    dbkarow: "\u290F",
    dblac: "\u02DD",
    dcaron: "\u010F",
    dcy: "\u0434",
    dd: "\u2146",
    ddagger: "\u2021",
    ddarr: "\u21CA",
    ddotseq: "\u2A77",
    deg: "\xB0",
    delta: "\u03B4",
    demptyv: "\u29B1",
    dfisht: "\u297F",
    dfr: "\u{1D521}",
    dharl: "\u21C3",
    dharr: "\u21C2",
    diam: "\u22C4",
    diamond: "\u22C4",
    diamondsuit: "\u2666",
    diams: "\u2666",
    die: "\xA8",
    digamma: "\u03DD",
    disin: "\u22F2",
    div: "\xF7",
    divide: "\xF7",
    divideontimes: "\u22C7",
    divonx: "\u22C7",
    djcy: "\u0452",
    dlcorn: "\u231E",
    dlcrop: "\u230D",
    dollar: "$",
    dopf: "\u{1D555}",
    dot: "\u02D9",
    doteq: "\u2250",
    doteqdot: "\u2251",
    dotminus: "\u2238",
    dotplus: "\u2214",
    dotsquare: "\u22A1",
    doublebarwedge: "\u2306",
    downarrow: "\u2193",
    downdownarrows: "\u21CA",
    downharpoonleft: "\u21C3",
    downharpoonright: "\u21C2",
    drbkarow: "\u2910",
    drcorn: "\u231F",
    drcrop: "\u230C",
    dscr: "\u{1D4B9}",
    dscy: "\u0455",
    dsol: "\u29F6",
    dstrok: "\u0111",
    dtdot: "\u22F1",
    dtri: "\u25BF",
    dtrif: "\u25BE",
    duarr: "\u21F5",
    duhar: "\u296F",
    dwangle: "\u29A6",
    dzcy: "\u045F",
    dzigrarr: "\u27FF",
    eDDot: "\u2A77",
    eDot: "\u2251",
    eacute: "\xE9",
    easter: "\u2A6E",
    ecaron: "\u011B",
    ecir: "\u2256",
    ecirc: "\xEA",
    ecolon: "\u2255",
    ecy: "\u044D",
    edot: "\u0117",
    ee: "\u2147",
    efDot: "\u2252",
    efr: "\u{1D522}",
    eg: "\u2A9A",
    egrave: "\xE8",
    egs: "\u2A96",
    egsdot: "\u2A98",
    el: "\u2A99",
    elinters: "\u23E7",
    ell: "\u2113",
    els: "\u2A95",
    elsdot: "\u2A97",
    emacr: "\u0113",
    empty: "\u2205",
    emptyset: "\u2205",
    emptyv: "\u2205",
    emsp13: "\u2004",
    emsp14: "\u2005",
    emsp: "\u2003",
    eng: "\u014B",
    ensp: "\u2002",
    eogon: "\u0119",
    eopf: "\u{1D556}",
    epar: "\u22D5",
    eparsl: "\u29E3",
    eplus: "\u2A71",
    epsi: "\u03B5",
    epsilon: "\u03B5",
    epsiv: "\u03F5",
    eqcirc: "\u2256",
    eqcolon: "\u2255",
    eqsim: "\u2242",
    eqslantgtr: "\u2A96",
    eqslantless: "\u2A95",
    equals: "=",
    equest: "\u225F",
    equiv: "\u2261",
    equivDD: "\u2A78",
    eqvparsl: "\u29E5",
    erDot: "\u2253",
    erarr: "\u2971",
    escr: "\u212F",
    esdot: "\u2250",
    esim: "\u2242",
    eta: "\u03B7",
    eth: "\xF0",
    euml: "\xEB",
    euro: "\u20AC",
    excl: "!",
    exist: "\u2203",
    expectation: "\u2130",
    exponentiale: "\u2147",
    fallingdotseq: "\u2252",
    fcy: "\u0444",
    female: "\u2640",
    ffilig: "\uFB03",
    fflig: "\uFB00",
    ffllig: "\uFB04",
    ffr: "\u{1D523}",
    filig: "\uFB01",
    fjlig: "fj",
    flat: "\u266D",
    fllig: "\uFB02",
    fltns: "\u25B1",
    fnof: "\u0192",
    fopf: "\u{1D557}",
    forall: "\u2200",
    fork: "\u22D4",
    forkv: "\u2AD9",
    fpartint: "\u2A0D",
    frac12: "\xBD",
    frac13: "\u2153",
    frac14: "\xBC",
    frac15: "\u2155",
    frac16: "\u2159",
    frac18: "\u215B",
    frac23: "\u2154",
    frac25: "\u2156",
    frac34: "\xBE",
    frac35: "\u2157",
    frac38: "\u215C",
    frac45: "\u2158",
    frac56: "\u215A",
    frac58: "\u215D",
    frac78: "\u215E",
    frasl: "\u2044",
    frown: "\u2322",
    fscr: "\u{1D4BB}",
    gE: "\u2267",
    gEl: "\u2A8C",
    gacute: "\u01F5",
    gamma: "\u03B3",
    gammad: "\u03DD",
    gap: "\u2A86",
    gbreve: "\u011F",
    gcirc: "\u011D",
    gcy: "\u0433",
    gdot: "\u0121",
    ge: "\u2265",
    gel: "\u22DB",
    geq: "\u2265",
    geqq: "\u2267",
    geqslant: "\u2A7E",
    ges: "\u2A7E",
    gescc: "\u2AA9",
    gesdot: "\u2A80",
    gesdoto: "\u2A82",
    gesdotol: "\u2A84",
    gesl: "\u22DB\uFE00",
    gesles: "\u2A94",
    gfr: "\u{1D524}",
    gg: "\u226B",
    ggg: "\u22D9",
    gimel: "\u2137",
    gjcy: "\u0453",
    gl: "\u2277",
    glE: "\u2A92",
    gla: "\u2AA5",
    glj: "\u2AA4",
    gnE: "\u2269",
    gnap: "\u2A8A",
    gnapprox: "\u2A8A",
    gne: "\u2A88",
    gneq: "\u2A88",
    gneqq: "\u2269",
    gnsim: "\u22E7",
    gopf: "\u{1D558}",
    grave: "`",
    gscr: "\u210A",
    gsim: "\u2273",
    gsime: "\u2A8E",
    gsiml: "\u2A90",
    gt: ">",
    gtcc: "\u2AA7",
    gtcir: "\u2A7A",
    gtdot: "\u22D7",
    gtlPar: "\u2995",
    gtquest: "\u2A7C",
    gtrapprox: "\u2A86",
    gtrarr: "\u2978",
    gtrdot: "\u22D7",
    gtreqless: "\u22DB",
    gtreqqless: "\u2A8C",
    gtrless: "\u2277",
    gtrsim: "\u2273",
    gvertneqq: "\u2269\uFE00",
    gvnE: "\u2269\uFE00",
    hArr: "\u21D4",
    hairsp: "\u200A",
    half: "\xBD",
    hamilt: "\u210B",
    hardcy: "\u044A",
    harr: "\u2194",
    harrcir: "\u2948",
    harrw: "\u21AD",
    hbar: "\u210F",
    hcirc: "\u0125",
    hearts: "\u2665",
    heartsuit: "\u2665",
    hellip: "\u2026",
    hercon: "\u22B9",
    hfr: "\u{1D525}",
    hksearow: "\u2925",
    hkswarow: "\u2926",
    hoarr: "\u21FF",
    homtht: "\u223B",
    hookleftarrow: "\u21A9",
    hookrightarrow: "\u21AA",
    hopf: "\u{1D559}",
    horbar: "\u2015",
    hscr: "\u{1D4BD}",
    hslash: "\u210F",
    hstrok: "\u0127",
    hybull: "\u2043",
    hyphen: "\u2010",
    iacute: "\xED",
    ic: "\u2063",
    icirc: "\xEE",
    icy: "\u0438",
    iecy: "\u0435",
    iexcl: "\xA1",
    iff: "\u21D4",
    ifr: "\u{1D526}",
    igrave: "\xEC",
    ii: "\u2148",
    iiiint: "\u2A0C",
    iiint: "\u222D",
    iinfin: "\u29DC",
    iiota: "\u2129",
    ijlig: "\u0133",
    imacr: "\u012B",
    image: "\u2111",
    imagline: "\u2110",
    imagpart: "\u2111",
    imath: "\u0131",
    imof: "\u22B7",
    imped: "\u01B5",
    in: "\u2208",
    incare: "\u2105",
    infin: "\u221E",
    infintie: "\u29DD",
    inodot: "\u0131",
    int: "\u222B",
    intcal: "\u22BA",
    integers: "\u2124",
    intercal: "\u22BA",
    intlarhk: "\u2A17",
    intprod: "\u2A3C",
    iocy: "\u0451",
    iogon: "\u012F",
    iopf: "\u{1D55A}",
    iota: "\u03B9",
    iprod: "\u2A3C",
    iquest: "\xBF",
    iscr: "\u{1D4BE}",
    isin: "\u2208",
    isinE: "\u22F9",
    isindot: "\u22F5",
    isins: "\u22F4",
    isinsv: "\u22F3",
    isinv: "\u2208",
    it: "\u2062",
    itilde: "\u0129",
    iukcy: "\u0456",
    iuml: "\xEF",
    jcirc: "\u0135",
    jcy: "\u0439",
    jfr: "\u{1D527}",
    jmath: "\u0237",
    jopf: "\u{1D55B}",
    jscr: "\u{1D4BF}",
    jsercy: "\u0458",
    jukcy: "\u0454",
    kappa: "\u03BA",
    kappav: "\u03F0",
    kcedil: "\u0137",
    kcy: "\u043A",
    kfr: "\u{1D528}",
    kgreen: "\u0138",
    khcy: "\u0445",
    kjcy: "\u045C",
    kopf: "\u{1D55C}",
    kscr: "\u{1D4C0}",
    lAarr: "\u21DA",
    lArr: "\u21D0",
    lAtail: "\u291B",
    lBarr: "\u290E",
    lE: "\u2266",
    lEg: "\u2A8B",
    lHar: "\u2962",
    lacute: "\u013A",
    laemptyv: "\u29B4",
    lagran: "\u2112",
    lambda: "\u03BB",
    lang: "\u27E8",
    langd: "\u2991",
    langle: "\u27E8",
    lap: "\u2A85",
    laquo: "\xAB",
    larr: "\u2190",
    larrb: "\u21E4",
    larrbfs: "\u291F",
    larrfs: "\u291D",
    larrhk: "\u21A9",
    larrlp: "\u21AB",
    larrpl: "\u2939",
    larrsim: "\u2973",
    larrtl: "\u21A2",
    lat: "\u2AAB",
    latail: "\u2919",
    late: "\u2AAD",
    lates: "\u2AAD\uFE00",
    lbarr: "\u290C",
    lbbrk: "\u2772",
    lbrace: "{",
    lbrack: "[",
    lbrke: "\u298B",
    lbrksld: "\u298F",
    lbrkslu: "\u298D",
    lcaron: "\u013E",
    lcedil: "\u013C",
    lceil: "\u2308",
    lcub: "{",
    lcy: "\u043B",
    ldca: "\u2936",
    ldquo: "\u201C",
    ldquor: "\u201E",
    ldrdhar: "\u2967",
    ldrushar: "\u294B",
    ldsh: "\u21B2",
    le: "\u2264",
    leftarrow: "\u2190",
    leftarrowtail: "\u21A2",
    leftharpoondown: "\u21BD",
    leftharpoonup: "\u21BC",
    leftleftarrows: "\u21C7",
    leftrightarrow: "\u2194",
    leftrightarrows: "\u21C6",
    leftrightharpoons: "\u21CB",
    leftrightsquigarrow: "\u21AD",
    leftthreetimes: "\u22CB",
    leg: "\u22DA",
    leq: "\u2264",
    leqq: "\u2266",
    leqslant: "\u2A7D",
    les: "\u2A7D",
    lescc: "\u2AA8",
    lesdot: "\u2A7F",
    lesdoto: "\u2A81",
    lesdotor: "\u2A83",
    lesg: "\u22DA\uFE00",
    lesges: "\u2A93",
    lessapprox: "\u2A85",
    lessdot: "\u22D6",
    lesseqgtr: "\u22DA",
    lesseqqgtr: "\u2A8B",
    lessgtr: "\u2276",
    lesssim: "\u2272",
    lfisht: "\u297C",
    lfloor: "\u230A",
    lfr: "\u{1D529}",
    lg: "\u2276",
    lgE: "\u2A91",
    lhard: "\u21BD",
    lharu: "\u21BC",
    lharul: "\u296A",
    lhblk: "\u2584",
    ljcy: "\u0459",
    ll: "\u226A",
    llarr: "\u21C7",
    llcorner: "\u231E",
    llhard: "\u296B",
    lltri: "\u25FA",
    lmidot: "\u0140",
    lmoust: "\u23B0",
    lmoustache: "\u23B0",
    lnE: "\u2268",
    lnap: "\u2A89",
    lnapprox: "\u2A89",
    lne: "\u2A87",
    lneq: "\u2A87",
    lneqq: "\u2268",
    lnsim: "\u22E6",
    loang: "\u27EC",
    loarr: "\u21FD",
    lobrk: "\u27E6",
    longleftarrow: "\u27F5",
    longleftrightarrow: "\u27F7",
    longmapsto: "\u27FC",
    longrightarrow: "\u27F6",
    looparrowleft: "\u21AB",
    looparrowright: "\u21AC",
    lopar: "\u2985",
    lopf: "\u{1D55D}",
    loplus: "\u2A2D",
    lotimes: "\u2A34",
    lowast: "\u2217",
    lowbar: "_",
    loz: "\u25CA",
    lozenge: "\u25CA",
    lozf: "\u29EB",
    lpar: "(",
    lparlt: "\u2993",
    lrarr: "\u21C6",
    lrcorner: "\u231F",
    lrhar: "\u21CB",
    lrhard: "\u296D",
    lrm: "\u200E",
    lrtri: "\u22BF",
    lsaquo: "\u2039",
    lscr: "\u{1D4C1}",
    lsh: "\u21B0",
    lsim: "\u2272",
    lsime: "\u2A8D",
    lsimg: "\u2A8F",
    lsqb: "[",
    lsquo: "\u2018",
    lsquor: "\u201A",
    lstrok: "\u0142",
    lt: "<",
    ltcc: "\u2AA6",
    ltcir: "\u2A79",
    ltdot: "\u22D6",
    lthree: "\u22CB",
    ltimes: "\u22C9",
    ltlarr: "\u2976",
    ltquest: "\u2A7B",
    ltrPar: "\u2996",
    ltri: "\u25C3",
    ltrie: "\u22B4",
    ltrif: "\u25C2",
    lurdshar: "\u294A",
    luruhar: "\u2966",
    lvertneqq: "\u2268\uFE00",
    lvnE: "\u2268\uFE00",
    mDDot: "\u223A",
    macr: "\xAF",
    male: "\u2642",
    malt: "\u2720",
    maltese: "\u2720",
    map: "\u21A6",
    mapsto: "\u21A6",
    mapstodown: "\u21A7",
    mapstoleft: "\u21A4",
    mapstoup: "\u21A5",
    marker: "\u25AE",
    mcomma: "\u2A29",
    mcy: "\u043C",
    mdash: "\u2014",
    measuredangle: "\u2221",
    mfr: "\u{1D52A}",
    mho: "\u2127",
    micro: "\xB5",
    mid: "\u2223",
    midast: "*",
    midcir: "\u2AF0",
    middot: "\xB7",
    minus: "\u2212",
    minusb: "\u229F",
    minusd: "\u2238",
    minusdu: "\u2A2A",
    mlcp: "\u2ADB",
    mldr: "\u2026",
    mnplus: "\u2213",
    models: "\u22A7",
    mopf: "\u{1D55E}",
    mp: "\u2213",
    mscr: "\u{1D4C2}",
    mstpos: "\u223E",
    mu: "\u03BC",
    multimap: "\u22B8",
    mumap: "\u22B8",
    nGg: "\u22D9\u0338",
    nGt: "\u226B\u20D2",
    nGtv: "\u226B\u0338",
    nLeftarrow: "\u21CD",
    nLeftrightarrow: "\u21CE",
    nLl: "\u22D8\u0338",
    nLt: "\u226A\u20D2",
    nLtv: "\u226A\u0338",
    nRightarrow: "\u21CF",
    nVDash: "\u22AF",
    nVdash: "\u22AE",
    nabla: "\u2207",
    nacute: "\u0144",
    nang: "\u2220\u20D2",
    nap: "\u2249",
    napE: "\u2A70\u0338",
    napid: "\u224B\u0338",
    napos: "\u0149",
    napprox: "\u2249",
    natur: "\u266E",
    natural: "\u266E",
    naturals: "\u2115",
    nbsp: "\xA0",
    nbump: "\u224E\u0338",
    nbumpe: "\u224F\u0338",
    ncap: "\u2A43",
    ncaron: "\u0148",
    ncedil: "\u0146",
    ncong: "\u2247",
    ncongdot: "\u2A6D\u0338",
    ncup: "\u2A42",
    ncy: "\u043D",
    ndash: "\u2013",
    ne: "\u2260",
    neArr: "\u21D7",
    nearhk: "\u2924",
    nearr: "\u2197",
    nearrow: "\u2197",
    nedot: "\u2250\u0338",
    nequiv: "\u2262",
    nesear: "\u2928",
    nesim: "\u2242\u0338",
    nexist: "\u2204",
    nexists: "\u2204",
    nfr: "\u{1D52B}",
    ngE: "\u2267\u0338",
    nge: "\u2271",
    ngeq: "\u2271",
    ngeqq: "\u2267\u0338",
    ngeqslant: "\u2A7E\u0338",
    nges: "\u2A7E\u0338",
    ngsim: "\u2275",
    ngt: "\u226F",
    ngtr: "\u226F",
    nhArr: "\u21CE",
    nharr: "\u21AE",
    nhpar: "\u2AF2",
    ni: "\u220B",
    nis: "\u22FC",
    nisd: "\u22FA",
    niv: "\u220B",
    njcy: "\u045A",
    nlArr: "\u21CD",
    nlE: "\u2266\u0338",
    nlarr: "\u219A",
    nldr: "\u2025",
    nle: "\u2270",
    nleftarrow: "\u219A",
    nleftrightarrow: "\u21AE",
    nleq: "\u2270",
    nleqq: "\u2266\u0338",
    nleqslant: "\u2A7D\u0338",
    nles: "\u2A7D\u0338",
    nless: "\u226E",
    nlsim: "\u2274",
    nlt: "\u226E",
    nltri: "\u22EA",
    nltrie: "\u22EC",
    nmid: "\u2224",
    nopf: "\u{1D55F}",
    not: "\xAC",
    notin: "\u2209",
    notinE: "\u22F9\u0338",
    notindot: "\u22F5\u0338",
    notinva: "\u2209",
    notinvb: "\u22F7",
    notinvc: "\u22F6",
    notni: "\u220C",
    notniva: "\u220C",
    notnivb: "\u22FE",
    notnivc: "\u22FD",
    npar: "\u2226",
    nparallel: "\u2226",
    nparsl: "\u2AFD\u20E5",
    npart: "\u2202\u0338",
    npolint: "\u2A14",
    npr: "\u2280",
    nprcue: "\u22E0",
    npre: "\u2AAF\u0338",
    nprec: "\u2280",
    npreceq: "\u2AAF\u0338",
    nrArr: "\u21CF",
    nrarr: "\u219B",
    nrarrc: "\u2933\u0338",
    nrarrw: "\u219D\u0338",
    nrightarrow: "\u219B",
    nrtri: "\u22EB",
    nrtrie: "\u22ED",
    nsc: "\u2281",
    nsccue: "\u22E1",
    nsce: "\u2AB0\u0338",
    nscr: "\u{1D4C3}",
    nshortmid: "\u2224",
    nshortparallel: "\u2226",
    nsim: "\u2241",
    nsime: "\u2244",
    nsimeq: "\u2244",
    nsmid: "\u2224",
    nspar: "\u2226",
    nsqsube: "\u22E2",
    nsqsupe: "\u22E3",
    nsub: "\u2284",
    nsubE: "\u2AC5\u0338",
    nsube: "\u2288",
    nsubset: "\u2282\u20D2",
    nsubseteq: "\u2288",
    nsubseteqq: "\u2AC5\u0338",
    nsucc: "\u2281",
    nsucceq: "\u2AB0\u0338",
    nsup: "\u2285",
    nsupE: "\u2AC6\u0338",
    nsupe: "\u2289",
    nsupset: "\u2283\u20D2",
    nsupseteq: "\u2289",
    nsupseteqq: "\u2AC6\u0338",
    ntgl: "\u2279",
    ntilde: "\xF1",
    ntlg: "\u2278",
    ntriangleleft: "\u22EA",
    ntrianglelefteq: "\u22EC",
    ntriangleright: "\u22EB",
    ntrianglerighteq: "\u22ED",
    nu: "\u03BD",
    num: "#",
    numero: "\u2116",
    numsp: "\u2007",
    nvDash: "\u22AD",
    nvHarr: "\u2904",
    nvap: "\u224D\u20D2",
    nvdash: "\u22AC",
    nvge: "\u2265\u20D2",
    nvgt: ">\u20D2",
    nvinfin: "\u29DE",
    nvlArr: "\u2902",
    nvle: "\u2264\u20D2",
    nvlt: "<\u20D2",
    nvltrie: "\u22B4\u20D2",
    nvrArr: "\u2903",
    nvrtrie: "\u22B5\u20D2",
    nvsim: "\u223C\u20D2",
    nwArr: "\u21D6",
    nwarhk: "\u2923",
    nwarr: "\u2196",
    nwarrow: "\u2196",
    nwnear: "\u2927",
    oS: "\u24C8",
    oacute: "\xF3",
    oast: "\u229B",
    ocir: "\u229A",
    ocirc: "\xF4",
    ocy: "\u043E",
    odash: "\u229D",
    odblac: "\u0151",
    odiv: "\u2A38",
    odot: "\u2299",
    odsold: "\u29BC",
    oelig: "\u0153",
    ofcir: "\u29BF",
    ofr: "\u{1D52C}",
    ogon: "\u02DB",
    ograve: "\xF2",
    ogt: "\u29C1",
    ohbar: "\u29B5",
    ohm: "\u03A9",
    oint: "\u222E",
    olarr: "\u21BA",
    olcir: "\u29BE",
    olcross: "\u29BB",
    oline: "\u203E",
    olt: "\u29C0",
    omacr: "\u014D",
    omega: "\u03C9",
    omicron: "\u03BF",
    omid: "\u29B6",
    ominus: "\u2296",
    oopf: "\u{1D560}",
    opar: "\u29B7",
    operp: "\u29B9",
    oplus: "\u2295",
    or: "\u2228",
    orarr: "\u21BB",
    ord: "\u2A5D",
    order: "\u2134",
    orderof: "\u2134",
    ordf: "\xAA",
    ordm: "\xBA",
    origof: "\u22B6",
    oror: "\u2A56",
    orslope: "\u2A57",
    orv: "\u2A5B",
    oscr: "\u2134",
    oslash: "\xF8",
    osol: "\u2298",
    otilde: "\xF5",
    otimes: "\u2297",
    otimesas: "\u2A36",
    ouml: "\xF6",
    ovbar: "\u233D",
    par: "\u2225",
    para: "\xB6",
    parallel: "\u2225",
    parsim: "\u2AF3",
    parsl: "\u2AFD",
    part: "\u2202",
    pcy: "\u043F",
    percnt: "%",
    period: ".",
    permil: "\u2030",
    perp: "\u22A5",
    pertenk: "\u2031",
    pfr: "\u{1D52D}",
    phi: "\u03C6",
    phiv: "\u03D5",
    phmmat: "\u2133",
    phone: "\u260E",
    pi: "\u03C0",
    pitchfork: "\u22D4",
    piv: "\u03D6",
    planck: "\u210F",
    planckh: "\u210E",
    plankv: "\u210F",
    plus: "+",
    plusacir: "\u2A23",
    plusb: "\u229E",
    pluscir: "\u2A22",
    plusdo: "\u2214",
    plusdu: "\u2A25",
    pluse: "\u2A72",
    plusmn: "\xB1",
    plussim: "\u2A26",
    plustwo: "\u2A27",
    pm: "\xB1",
    pointint: "\u2A15",
    popf: "\u{1D561}",
    pound: "\xA3",
    pr: "\u227A",
    prE: "\u2AB3",
    prap: "\u2AB7",
    prcue: "\u227C",
    pre: "\u2AAF",
    prec: "\u227A",
    precapprox: "\u2AB7",
    preccurlyeq: "\u227C",
    preceq: "\u2AAF",
    precnapprox: "\u2AB9",
    precneqq: "\u2AB5",
    precnsim: "\u22E8",
    precsim: "\u227E",
    prime: "\u2032",
    primes: "\u2119",
    prnE: "\u2AB5",
    prnap: "\u2AB9",
    prnsim: "\u22E8",
    prod: "\u220F",
    profalar: "\u232E",
    profline: "\u2312",
    profsurf: "\u2313",
    prop: "\u221D",
    propto: "\u221D",
    prsim: "\u227E",
    prurel: "\u22B0",
    pscr: "\u{1D4C5}",
    psi: "\u03C8",
    puncsp: "\u2008",
    qfr: "\u{1D52E}",
    qint: "\u2A0C",
    qopf: "\u{1D562}",
    qprime: "\u2057",
    qscr: "\u{1D4C6}",
    quaternions: "\u210D",
    quatint: "\u2A16",
    quest: "?",
    questeq: "\u225F",
    quot: '"',
    rAarr: "\u21DB",
    rArr: "\u21D2",
    rAtail: "\u291C",
    rBarr: "\u290F",
    rHar: "\u2964",
    race: "\u223D\u0331",
    racute: "\u0155",
    radic: "\u221A",
    raemptyv: "\u29B3",
    rang: "\u27E9",
    rangd: "\u2992",
    range: "\u29A5",
    rangle: "\u27E9",
    raquo: "\xBB",
    rarr: "\u2192",
    rarrap: "\u2975",
    rarrb: "\u21E5",
    rarrbfs: "\u2920",
    rarrc: "\u2933",
    rarrfs: "\u291E",
    rarrhk: "\u21AA",
    rarrlp: "\u21AC",
    rarrpl: "\u2945",
    rarrsim: "\u2974",
    rarrtl: "\u21A3",
    rarrw: "\u219D",
    ratail: "\u291A",
    ratio: "\u2236",
    rationals: "\u211A",
    rbarr: "\u290D",
    rbbrk: "\u2773",
    rbrace: "}",
    rbrack: "]",
    rbrke: "\u298C",
    rbrksld: "\u298E",
    rbrkslu: "\u2990",
    rcaron: "\u0159",
    rcedil: "\u0157",
    rceil: "\u2309",
    rcub: "}",
    rcy: "\u0440",
    rdca: "\u2937",
    rdldhar: "\u2969",
    rdquo: "\u201D",
    rdquor: "\u201D",
    rdsh: "\u21B3",
    real: "\u211C",
    realine: "\u211B",
    realpart: "\u211C",
    reals: "\u211D",
    rect: "\u25AD",
    reg: "\xAE",
    rfisht: "\u297D",
    rfloor: "\u230B",
    rfr: "\u{1D52F}",
    rhard: "\u21C1",
    rharu: "\u21C0",
    rharul: "\u296C",
    rho: "\u03C1",
    rhov: "\u03F1",
    rightarrow: "\u2192",
    rightarrowtail: "\u21A3",
    rightharpoondown: "\u21C1",
    rightharpoonup: "\u21C0",
    rightleftarrows: "\u21C4",
    rightleftharpoons: "\u21CC",
    rightrightarrows: "\u21C9",
    rightsquigarrow: "\u219D",
    rightthreetimes: "\u22CC",
    ring: "\u02DA",
    risingdotseq: "\u2253",
    rlarr: "\u21C4",
    rlhar: "\u21CC",
    rlm: "\u200F",
    rmoust: "\u23B1",
    rmoustache: "\u23B1",
    rnmid: "\u2AEE",
    roang: "\u27ED",
    roarr: "\u21FE",
    robrk: "\u27E7",
    ropar: "\u2986",
    ropf: "\u{1D563}",
    roplus: "\u2A2E",
    rotimes: "\u2A35",
    rpar: ")",
    rpargt: "\u2994",
    rppolint: "\u2A12",
    rrarr: "\u21C9",
    rsaquo: "\u203A",
    rscr: "\u{1D4C7}",
    rsh: "\u21B1",
    rsqb: "]",
    rsquo: "\u2019",
    rsquor: "\u2019",
    rthree: "\u22CC",
    rtimes: "\u22CA",
    rtri: "\u25B9",
    rtrie: "\u22B5",
    rtrif: "\u25B8",
    rtriltri: "\u29CE",
    ruluhar: "\u2968",
    rx: "\u211E",
    sacute: "\u015B",
    sbquo: "\u201A",
    sc: "\u227B",
    scE: "\u2AB4",
    scap: "\u2AB8",
    scaron: "\u0161",
    sccue: "\u227D",
    sce: "\u2AB0",
    scedil: "\u015F",
    scirc: "\u015D",
    scnE: "\u2AB6",
    scnap: "\u2ABA",
    scnsim: "\u22E9",
    scpolint: "\u2A13",
    scsim: "\u227F",
    scy: "\u0441",
    sdot: "\u22C5",
    sdotb: "\u22A1",
    sdote: "\u2A66",
    seArr: "\u21D8",
    searhk: "\u2925",
    searr: "\u2198",
    searrow: "\u2198",
    sect: "\xA7",
    semi: ";",
    seswar: "\u2929",
    setminus: "\u2216",
    setmn: "\u2216",
    sext: "\u2736",
    sfr: "\u{1D530}",
    sfrown: "\u2322",
    sharp: "\u266F",
    shchcy: "\u0449",
    shcy: "\u0448",
    shortmid: "\u2223",
    shortparallel: "\u2225",
    shy: "\xAD",
    sigma: "\u03C3",
    sigmaf: "\u03C2",
    sigmav: "\u03C2",
    sim: "\u223C",
    simdot: "\u2A6A",
    sime: "\u2243",
    simeq: "\u2243",
    simg: "\u2A9E",
    simgE: "\u2AA0",
    siml: "\u2A9D",
    simlE: "\u2A9F",
    simne: "\u2246",
    simplus: "\u2A24",
    simrarr: "\u2972",
    slarr: "\u2190",
    smallsetminus: "\u2216",
    smashp: "\u2A33",
    smeparsl: "\u29E4",
    smid: "\u2223",
    smile: "\u2323",
    smt: "\u2AAA",
    smte: "\u2AAC",
    smtes: "\u2AAC\uFE00",
    softcy: "\u044C",
    sol: "/",
    solb: "\u29C4",
    solbar: "\u233F",
    sopf: "\u{1D564}",
    spades: "\u2660",
    spadesuit: "\u2660",
    spar: "\u2225",
    sqcap: "\u2293",
    sqcaps: "\u2293\uFE00",
    sqcup: "\u2294",
    sqcups: "\u2294\uFE00",
    sqsub: "\u228F",
    sqsube: "\u2291",
    sqsubset: "\u228F",
    sqsubseteq: "\u2291",
    sqsup: "\u2290",
    sqsupe: "\u2292",
    sqsupset: "\u2290",
    sqsupseteq: "\u2292",
    squ: "\u25A1",
    square: "\u25A1",
    squarf: "\u25AA",
    squf: "\u25AA",
    srarr: "\u2192",
    sscr: "\u{1D4C8}",
    ssetmn: "\u2216",
    ssmile: "\u2323",
    sstarf: "\u22C6",
    star: "\u2606",
    starf: "\u2605",
    straightepsilon: "\u03F5",
    straightphi: "\u03D5",
    strns: "\xAF",
    sub: "\u2282",
    subE: "\u2AC5",
    subdot: "\u2ABD",
    sube: "\u2286",
    subedot: "\u2AC3",
    submult: "\u2AC1",
    subnE: "\u2ACB",
    subne: "\u228A",
    subplus: "\u2ABF",
    subrarr: "\u2979",
    subset: "\u2282",
    subseteq: "\u2286",
    subseteqq: "\u2AC5",
    subsetneq: "\u228A",
    subsetneqq: "\u2ACB",
    subsim: "\u2AC7",
    subsub: "\u2AD5",
    subsup: "\u2AD3",
    succ: "\u227B",
    succapprox: "\u2AB8",
    succcurlyeq: "\u227D",
    succeq: "\u2AB0",
    succnapprox: "\u2ABA",
    succneqq: "\u2AB6",
    succnsim: "\u22E9",
    succsim: "\u227F",
    sum: "\u2211",
    sung: "\u266A",
    sup1: "\xB9",
    sup2: "\xB2",
    sup3: "\xB3",
    sup: "\u2283",
    supE: "\u2AC6",
    supdot: "\u2ABE",
    supdsub: "\u2AD8",
    supe: "\u2287",
    supedot: "\u2AC4",
    suphsol: "\u27C9",
    suphsub: "\u2AD7",
    suplarr: "\u297B",
    supmult: "\u2AC2",
    supnE: "\u2ACC",
    supne: "\u228B",
    supplus: "\u2AC0",
    supset: "\u2283",
    supseteq: "\u2287",
    supseteqq: "\u2AC6",
    supsetneq: "\u228B",
    supsetneqq: "\u2ACC",
    supsim: "\u2AC8",
    supsub: "\u2AD4",
    supsup: "\u2AD6",
    swArr: "\u21D9",
    swarhk: "\u2926",
    swarr: "\u2199",
    swarrow: "\u2199",
    swnwar: "\u292A",
    szlig: "\xDF",
    target: "\u2316",
    tau: "\u03C4",
    tbrk: "\u23B4",
    tcaron: "\u0165",
    tcedil: "\u0163",
    tcy: "\u0442",
    tdot: "\u20DB",
    telrec: "\u2315",
    tfr: "\u{1D531}",
    there4: "\u2234",
    therefore: "\u2234",
    theta: "\u03B8",
    thetasym: "\u03D1",
    thetav: "\u03D1",
    thickapprox: "\u2248",
    thicksim: "\u223C",
    thinsp: "\u2009",
    thkap: "\u2248",
    thksim: "\u223C",
    thorn: "\xFE",
    tilde: "\u02DC",
    times: "\xD7",
    timesb: "\u22A0",
    timesbar: "\u2A31",
    timesd: "\u2A30",
    tint: "\u222D",
    toea: "\u2928",
    top: "\u22A4",
    topbot: "\u2336",
    topcir: "\u2AF1",
    topf: "\u{1D565}",
    topfork: "\u2ADA",
    tosa: "\u2929",
    tprime: "\u2034",
    trade: "\u2122",
    triangle: "\u25B5",
    triangledown: "\u25BF",
    triangleleft: "\u25C3",
    trianglelefteq: "\u22B4",
    triangleq: "\u225C",
    triangleright: "\u25B9",
    trianglerighteq: "\u22B5",
    tridot: "\u25EC",
    trie: "\u225C",
    triminus: "\u2A3A",
    triplus: "\u2A39",
    trisb: "\u29CD",
    tritime: "\u2A3B",
    trpezium: "\u23E2",
    tscr: "\u{1D4C9}",
    tscy: "\u0446",
    tshcy: "\u045B",
    tstrok: "\u0167",
    twixt: "\u226C",
    twoheadleftarrow: "\u219E",
    twoheadrightarrow: "\u21A0",
    uArr: "\u21D1",
    uHar: "\u2963",
    uacute: "\xFA",
    uarr: "\u2191",
    ubrcy: "\u045E",
    ubreve: "\u016D",
    ucirc: "\xFB",
    ucy: "\u0443",
    udarr: "\u21C5",
    udblac: "\u0171",
    udhar: "\u296E",
    ufisht: "\u297E",
    ufr: "\u{1D532}",
    ugrave: "\xF9",
    uharl: "\u21BF",
    uharr: "\u21BE",
    uhblk: "\u2580",
    ulcorn: "\u231C",
    ulcorner: "\u231C",
    ulcrop: "\u230F",
    ultri: "\u25F8",
    umacr: "\u016B",
    uml: "\xA8",
    uogon: "\u0173",
    uopf: "\u{1D566}",
    uparrow: "\u2191",
    updownarrow: "\u2195",
    upharpoonleft: "\u21BF",
    upharpoonright: "\u21BE",
    uplus: "\u228E",
    upsi: "\u03C5",
    upsih: "\u03D2",
    upsilon: "\u03C5",
    upuparrows: "\u21C8",
    urcorn: "\u231D",
    urcorner: "\u231D",
    urcrop: "\u230E",
    uring: "\u016F",
    urtri: "\u25F9",
    uscr: "\u{1D4CA}",
    utdot: "\u22F0",
    utilde: "\u0169",
    utri: "\u25B5",
    utrif: "\u25B4",
    uuarr: "\u21C8",
    uuml: "\xFC",
    uwangle: "\u29A7",
    vArr: "\u21D5",
    vBar: "\u2AE8",
    vBarv: "\u2AE9",
    vDash: "\u22A8",
    vangrt: "\u299C",
    varepsilon: "\u03F5",
    varkappa: "\u03F0",
    varnothing: "\u2205",
    varphi: "\u03D5",
    varpi: "\u03D6",
    varpropto: "\u221D",
    varr: "\u2195",
    varrho: "\u03F1",
    varsigma: "\u03C2",
    varsubsetneq: "\u228A\uFE00",
    varsubsetneqq: "\u2ACB\uFE00",
    varsupsetneq: "\u228B\uFE00",
    varsupsetneqq: "\u2ACC\uFE00",
    vartheta: "\u03D1",
    vartriangleleft: "\u22B2",
    vartriangleright: "\u22B3",
    vcy: "\u0432",
    vdash: "\u22A2",
    vee: "\u2228",
    veebar: "\u22BB",
    veeeq: "\u225A",
    vellip: "\u22EE",
    verbar: "|",
    vert: "|",
    vfr: "\u{1D533}",
    vltri: "\u22B2",
    vnsub: "\u2282\u20D2",
    vnsup: "\u2283\u20D2",
    vopf: "\u{1D567}",
    vprop: "\u221D",
    vrtri: "\u22B3",
    vscr: "\u{1D4CB}",
    vsubnE: "\u2ACB\uFE00",
    vsubne: "\u228A\uFE00",
    vsupnE: "\u2ACC\uFE00",
    vsupne: "\u228B\uFE00",
    vzigzag: "\u299A",
    wcirc: "\u0175",
    wedbar: "\u2A5F",
    wedge: "\u2227",
    wedgeq: "\u2259",
    weierp: "\u2118",
    wfr: "\u{1D534}",
    wopf: "\u{1D568}",
    wp: "\u2118",
    wr: "\u2240",
    wreath: "\u2240",
    wscr: "\u{1D4CC}",
    xcap: "\u22C2",
    xcirc: "\u25EF",
    xcup: "\u22C3",
    xdtri: "\u25BD",
    xfr: "\u{1D535}",
    xhArr: "\u27FA",
    xharr: "\u27F7",
    xi: "\u03BE",
    xlArr: "\u27F8",
    xlarr: "\u27F5",
    xmap: "\u27FC",
    xnis: "\u22FB",
    xodot: "\u2A00",
    xopf: "\u{1D569}",
    xoplus: "\u2A01",
    xotime: "\u2A02",
    xrArr: "\u27F9",
    xrarr: "\u27F6",
    xscr: "\u{1D4CD}",
    xsqcup: "\u2A06",
    xuplus: "\u2A04",
    xutri: "\u25B3",
    xvee: "\u22C1",
    xwedge: "\u22C0",
    yacute: "\xFD",
    yacy: "\u044F",
    ycirc: "\u0177",
    ycy: "\u044B",
    yen: "\xA5",
    yfr: "\u{1D536}",
    yicy: "\u0457",
    yopf: "\u{1D56A}",
    yscr: "\u{1D4CE}",
    yucy: "\u044E",
    yuml: "\xFF",
    zacute: "\u017A",
    zcaron: "\u017E",
    zcy: "\u0437",
    zdot: "\u017C",
    zeetrf: "\u2128",
    zeta: "\u03B6",
    zfr: "\u{1D537}",
    zhcy: "\u0436",
    zigrarr: "\u21DD",
    zopf: "\u{1D56B}",
    zscr: "\u{1D4CF}",
    zwj: "\u200D",
    zwnj: "\u200C"
  }, K9 = {}.hasOwnProperty;
  s(Rs, "decodeNamedCharacterReference");
  Sn = String.fromCharCode, Y9 = [
    "",
    /* 1: Non terminated (named) */
    "Named character references must be terminated by a semicolon",
    /* 2: Non terminated (numeric) */
    "Numeric character references must be terminated by a semicolon",
    /* 3: Empty (named) */
    "Named character references cannot be empty",
    /* 4: Empty (numeric) */
    "Numeric character references cannot be empty",
    /* 5: Unknown (named) */
    "Named character references must be known",
    /* 6: Disallowed (numeric) */
    "Numeric character references cannot be disallowed",
    /* 7: Prohibited (numeric) */
    "Numeric character references cannot be outside the permissible Unicode range"
  ];
  s(Q9, "parseEntities");
  s(Z9, "prohibited");
  s(eR, "disallowed");
  s(tR, "core");
  s(rR, "charactersToExpression");
  s(iR, "formatBasic");
  s(nR, "stringifyEntitiesLight");
  Vb = "  ";
  s(sR, "mdxJsxFromMarkdown");
  s(oR, "mdxJsxToMarkdown");
  s(aR, "containerFlow");
  s(Ub, "inferDepth");
  s(Wb, "createIndent");
  s(uR, "peekElement");
  s(lR, "mdxjsEsmFromMarkdown");
  s(cR, "mdxjsEsmToMarkdown");
  s(pR, "enterMdxjsEsm");
  s(hR, "exitMdxjsEsm");
  s(fR, "exitMdxjsEsmData");
  s(dR, "handleMdxjsEsm");
  s(mR, "mdxFromMarkdown");
  s(gR, "mdxToMarkdown");
  DR = ga(O9(), 1), yR = Ei(/\p{P}/u), gr = Ei(/[A-Za-z]/), jt = Ei(/[\dA-Za-z]/), xR = Ei(/[#-'*+\--9=?A-Z^-~]/);
  s(vh, "asciiControl");
  Ch = Ei(/\d/), ER = Ei(/[\dA-Fa-f]/), zb = Ei(/[!-/:-@[-`{-~]/);
  s(ne, "markdownLineEnding");
  s(tt, "markdownLineEndingOrSpace");
  s(Fe, "markdownSpace");
  s(bR, "unicodePunctuation");
  Xr = Ei(/\s/);
  s(Ei, "regexCheck");
  s(vR, "color");
  CR = {}.hasOwnProperty, wR = Symbol("continue"), lh = Symbol("exit"), AR = Symbol("skip");
  s(SR, "visit");
  s(KE, "toResult");
  s(ch, "nodelike");
  s(Hb, "eventsToAcorn");
  s(YE, "empty");
  s(FR, "collect");
  s(_R, "relativeToPoint");
  s(kR, "serializeChunks");
  s(Kr, "positionFromEstree");
  s(QE, "pointOrUndefined");
  s(ph, "numberOrUndefined");
  In = "https://github.com/micromark/micromark-extension-mdx-expression/tree/main/packages/micromark-extension-mdx-expression", TR = "#unexp\
ected-end-of-file-in-expression-expected-a-corresponding-closing-brace-for-", BR = "#unexpected-lazy-line-in-expression-in-container-expecte\
d-line-to-be-prefixed", ZE = "#unexpected-type-in-code-expected-an-object-spread-spread", IR = "#unexpected-extra-content-in-spread-only-a-s\
ingle-spread-is-supported", PR = "#could-not-parse-expression-with-acorn";
  s(Ra, "factoryMdxExpression");
  s(OR, "mdxExpressionParse");
  s(Ie, "factorySpace");
  s(RR, "mdxExpression");
  eb = "https://github.com/micromark/micromark-extension-mdx-jsx";
  s(Jb, "factoryTag");
  s(NR, "serializeCharCode");
  s(LR, "jsxText");
  s(MR, "jsxFlow");
  s(jR, "mdxJsx");
  s(qR, "mdxMd");
  s(Br, "splice");
  s(rr, "push");
  s(tb, "classifyCharacter");
  s(_h, "resolveAll");
  wh = {
    name: "attention",
    tokenize: VR,
    resolveAll: $R
  };
  s($R, "resolveAllAttention");
  s(VR, "tokenizeAttention");
  s(rb, "movePoint");
  UR = {
    name: "autolink",
    tokenize: WR
  };
  s(WR, "tokenizeAutolink");
  Ls = {
    tokenize: zR,
    partial: !0
  };
  s(zR, "tokenizeBlankLine");
  Gb = {
    name: "blockQuote",
    tokenize: HR,
    continuation: {
      tokenize: JR
    },
    exit: GR
  };
  s(HR, "tokenizeBlockQuoteStart");
  s(JR, "tokenizeBlockQuoteContinuation");
  s(GR, "exit");
  Xb = {
    name: "characterEscape",
    tokenize: XR
  };
  s(XR, "tokenizeCharacterEscape");
  Kb = {
    name: "characterReference",
    tokenize: KR
  };
  s(KR, "tokenizeCharacterReference");
  ib = {
    tokenize: QR,
    partial: !0
  }, nb = {
    name: "codeFenced",
    tokenize: YR,
    concrete: !0
  };
  s(YR, "tokenizeCodeFenced");
  s(QR, "tokenizeNonLazyContinuation");
  hh = {
    name: "codeIndented",
    tokenize: e4
  }, ZR = {
    tokenize: t4,
    partial: !0
  };
  s(e4, "tokenizeCodeIndented");
  s(t4, "tokenizeFurtherStart");
  r4 = {
    name: "codeText",
    tokenize: s4,
    resolve: i4,
    previous: n4
  };
  s(i4, "resolveCodeText");
  s(n4, "previous");
  s(s4, "tokenizeCodeText");
  s(Yb, "subtokenize");
  s(o4, "subcontent");
  a4 = {
    tokenize: c4,
    resolve: l4
  }, u4 = {
    tokenize: p4,
    partial: !0
  };
  s(l4, "resolveContent");
  s(c4, "tokenizeContent");
  s(p4, "tokenizeContinuation");
  s(Qb, "factoryDestination");
  s(Zb, "factoryLabel");
  s(e1, "factoryTitle");
  s(Ps, "factoryWhitespace");
  s(Pn, "normalizeIdentifier");
  h4 = {
    name: "definition",
    tokenize: d4
  }, f4 = {
    tokenize: m4,
    partial: !0
  };
  s(d4, "tokenizeDefinition");
  s(m4, "tokenizeTitleBefore");
  g4 = {
    name: "hardBreakEscape",
    tokenize: D4
  };
  s(D4, "tokenizeHardBreakEscape");
  y4 = {
    name: "headingAtx",
    tokenize: E4,
    resolve: x4
  };
  s(x4, "resolveHeadingAtx");
  s(E4, "tokenizeHeadingAtx");
  b4 = [
    "address",
    "article",
    "aside",
    "base",
    "basefont",
    "blockquote",
    "body",
    "caption",
    "center",
    "col",
    "colgroup",
    "dd",
    "details",
    "dialog",
    "dir",
    "div",
    "dl",
    "dt",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "frame",
    "frameset",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hr",
    "html",
    "iframe",
    "legend",
    "li",
    "link",
    "main",
    "menu",
    "menuitem",
    "nav",
    "noframes",
    "ol",
    "optgroup",
    "option",
    "p",
    "param",
    "search",
    "section",
    "summary",
    "table",
    "tbody",
    "td",
    "tfoot",
    "th",
    "thead",
    "title",
    "tr",
    "track",
    "ul"
  ], sb = ["pre", "script", "style", "textarea"], v4 = {
    name: "htmlFlow",
    tokenize: S4,
    resolveTo: A4,
    concrete: !0
  }, C4 = {
    tokenize: _4,
    partial: !0
  }, w4 = {
    tokenize: F4,
    partial: !0
  };
  s(A4, "resolveToHtmlFlow");
  s(S4, "tokenizeHtmlFlow");
  s(F4, "tokenizeNonLazyContinuationStart");
  s(_4, "tokenizeBlankLineBefore");
  k4 = {
    name: "htmlText",
    tokenize: T4
  };
  s(T4, "tokenizeHtmlText");
  kh = {
    name: "labelEnd",
    tokenize: N4,
    resolveTo: R4,
    resolveAll: O4
  }, B4 = {
    tokenize: L4
  }, I4 = {
    tokenize: M4
  }, P4 = {
    tokenize: j4
  };
  s(O4, "resolveAllLabelEnd");
  s(R4, "resolveToLabelEnd");
  s(N4, "tokenizeLabelEnd");
  s(L4, "tokenizeResource");
  s(M4, "tokenizeReferenceFull");
  s(j4, "tokenizeReferenceCollapsed");
  q4 = {
    name: "labelStartImage",
    tokenize: $4,
    resolveAll: kh.resolveAll
  };
  s($4, "tokenizeLabelStartImage");
  V4 = {
    name: "labelStartLink",
    tokenize: U4,
    resolveAll: kh.resolveAll
  };
  s(U4, "tokenizeLabelStartLink");
  fh = {
    name: "lineEnding",
    tokenize: W4
  };
  s(W4, "tokenizeLineEnding");
  Oa = {
    name: "thematicBreak",
    tokenize: z4
  };
  s(z4, "tokenizeThematicBreak");
  Bt = {
    name: "list",
    tokenize: G4,
    continuation: {
      tokenize: X4
    },
    exit: Y4
  }, H4 = {
    tokenize: Q4,
    partial: !0
  }, J4 = {
    tokenize: K4,
    partial: !0
  };
  s(G4, "tokenizeListStart");
  s(X4, "tokenizeListContinuation");
  s(K4, "tokenizeIndent");
  s(Y4, "tokenizeListEnd");
  s(Q4, "tokenizeListItemPrefixWhitespace");
  ob = {
    name: "setextUnderline",
    tokenize: e5,
    resolveTo: Z4
  };
  s(Z4, "resolveToSetextUnderline");
  s(e5, "tokenizeSetextUnderline");
  t5 = {
    tokenize: n5,
    partial: !0
  }, ab = "https://github.com/micromark/micromark-extension-mdxjs-esm", r5 = /* @__PURE__ */ new Set(["ExportAllDeclaration", "ExportDefault\
Declaration", "ExportNamedDeclaration", "ImportDeclaration"]);
  s(i5, "mdxjsEsm");
  s(n5, "tokenizeNextBlank");
  ub = {}.hasOwnProperty;
  s(t1, "combineExtensions");
  s(s5, "syntaxExtension");
  s(o5, "constructs");
  s(a5, "mdxjs");
  u5 = {};
  s(l5, "remarkMdx");
  c5 = {};
  s(p5, "toString");
  s(r1, "one");
  s(lb, "all");
  s(h5, "node");
  s(i1, "decodeNumericCharacterReference");
  s(On, "normalizeUri");
  f5 = {
    tokenize: d5
  };
  s(d5, "initializeContent");
  m5 = {
    tokenize: g5
  }, cb = {
    tokenize: D5
  };
  s(g5, "initializeDocument");
  s(D5, "tokenizeContainer");
  y5 = {
    tokenize: x5
  };
  s(x5, "initializeFlow");
  E5 = {
    resolveAll: s1()
  }, b5 = n1("string"), v5 = n1("text");
  s(n1, "initializeFactory");
  s(s1, "createResolver");
  s(C5, "resolveAllLineSuffixes");
  s(w5, "createTokenizer");
  s(A5, "sliceChunks");
  s(S5, "serializeChunks2");
  o1 = {};
  Mp(o1, {
    attentionMarkers: /* @__PURE__ */ s(() => O5, "attentionMarkers"),
    contentInitial: /* @__PURE__ */ s(() => _5, "contentInitial"),
    disable: /* @__PURE__ */ s(() => R5, "disable"),
    document: /* @__PURE__ */ s(() => F5, "document"),
    flow: /* @__PURE__ */ s(() => T5, "flow"),
    flowInitial: /* @__PURE__ */ s(() => k5, "flowInitial"),
    insideSpan: /* @__PURE__ */ s(() => P5, "insideSpan"),
    string: /* @__PURE__ */ s(() => B5, "string"),
    text: /* @__PURE__ */ s(() => I5, "text")
  });
  F5 = {
    42: Bt,
    43: Bt,
    45: Bt,
    48: Bt,
    49: Bt,
    50: Bt,
    51: Bt,
    52: Bt,
    53: Bt,
    54: Bt,
    55: Bt,
    56: Bt,
    57: Bt,
    62: Gb
  }, _5 = {
    91: h4
  }, k5 = {
    [-2]: hh,
    [-1]: hh,
    32: hh
  }, T5 = {
    35: y4,
    42: Oa,
    45: [ob, Oa],
    60: v4,
    61: ob,
    95: Oa,
    96: nb,
    126: nb
  }, B5 = {
    38: Kb,
    92: Xb
  }, I5 = {
    [-5]: fh,
    [-4]: fh,
    [-3]: fh,
    33: q4,
    38: Kb,
    42: wh,
    60: [UR, k4],
    91: V4,
    92: [g4, Xb],
    93: kh,
    95: wh,
    96: r4
  }, P5 = {
    null: [wh, E5]
  }, O5 = {
    null: [42, 95]
  }, R5 = {
    null: []
  };
  s(N5, "parse");
  s(L5, "postprocess");
  pb = /[\0\t\n\r]/g;
  s(M5, "preprocess");
  j5 = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
  s(q5, "decodeString");
  s($5, "decode");
  a1 = {}.hasOwnProperty;
  s(V5, "fromMarkdown");
  s(U5, "compiler");
  s(Di, "point2");
  s(u1, "configure");
  s(W5, "extension");
  s(hb, "defaultOnError");
  s(z5, "remarkParse");
  s(H5, "blockquote");
  s(J5, "hardBreak");
  s(G5, "code");
  s(X5, "strikethrough");
  s(K5, "emphasis");
  s(Y5, "footnoteReference");
  s(Q5, "heading");
  s(Z5, "html");
  s(l1, "revert");
  s(eN, "imageReference");
  s(tN, "image");
  s(rN, "inlineCode");
  s(iN, "linkReference");
  s(nN, "link");
  s(sN, "listItem");
  s(oN, "listLoose");
  s(c1, "listItemLoose");
  s(aN, "list2");
  s(uN, "paragraph");
  s(lN, "root");
  s(cN, "strong");
  s(pN, "table");
  s(hN, "tableRow");
  s(fN, "tableCell");
  fb = 9, db = 32;
  s(dN, "trimLines");
  s(mb, "trimLine");
  s(mN, "text3");
  s(gN, "thematicBreak2");
  DN = {
    blockquote: H5,
    break: J5,
    code: G5,
    delete: X5,
    emphasis: K5,
    footnoteReference: Y5,
    heading: Q5,
    html: Z5,
    imageReference: eN,
    image: tN,
    inlineCode: rN,
    linkReference: iN,
    link: nN,
    listItem: sN,
    list: aN,
    paragraph: uN,
    // @ts-expect-error: root is different, but hard to type.
    root: lN,
    strong: cN,
    table: pN,
    tableCell: fN,
    tableRow: hN,
    text: mN,
    thematicBreak: gN,
    toml: ka,
    yaml: ka,
    definition: ka,
    footnoteDefinition: ka
  };
  s(ka, "ignore");
  p1 = -1, qa = 0, Na = 1, La = 2, Th = 3, Bh = 4, Ih = 5, Ph = 6, h1 = 7, f1 = 8, gb = typeof self == "object" ? self : globalThis, yN = /* @__PURE__ */ s(
  (e, t) => {
    let r = /* @__PURE__ */ s((n, o) => (e.set(o, n), n), "as"), i = /* @__PURE__ */ s((n) => {
      if (e.has(n))
        return e.get(n);
      let [o, a] = t[n];
      switch (o) {
        case qa:
        case p1:
          return r(a, n);
        case Na: {
          let u = r([], n);
          for (let l of a)
            u.push(i(l));
          return u;
        }
        case La: {
          let u = r({}, n);
          for (let [l, c] of a)
            u[i(l)] = i(c);
          return u;
        }
        case Th:
          return r(new Date(a), n);
        case Bh: {
          let { source: u, flags: l } = a;
          return r(new RegExp(u, l), n);
        }
        case Ih: {
          let u = r(/* @__PURE__ */ new Map(), n);
          for (let [l, c] of a)
            u.set(i(l), i(c));
          return u;
        }
        case Ph: {
          let u = r(/* @__PURE__ */ new Set(), n);
          for (let l of a)
            u.add(i(l));
          return u;
        }
        case h1: {
          let { name: u, message: l } = a;
          return r(new gb[u](l), n);
        }
        case f1:
          return r(BigInt(a), n);
        case "BigInt":
          return r(Object(BigInt(a)), n);
      }
      return r(new gb[o](a), n);
    }, "unpair");
    return i;
  }, "deserializer"), Db = /* @__PURE__ */ s((e) => yN(/* @__PURE__ */ new Map(), e)(0), "deserialize"), Fn = "", { toString: xN } = {}, { keys: EN } =
  Object, Is = /* @__PURE__ */ s((e) => {
    let t = typeof e;
    if (t !== "object" || !e)
      return [qa, t];
    let r = xN.call(e).slice(8, -1);
    switch (r) {
      case "Array":
        return [Na, Fn];
      case "Object":
        return [La, Fn];
      case "Date":
        return [Th, Fn];
      case "RegExp":
        return [Bh, Fn];
      case "Map":
        return [Ih, Fn];
      case "Set":
        return [Ph, Fn];
    }
    return r.includes("Array") ? [Na, r] : r.includes("Error") ? [h1, r] : [La, r];
  }, "typeOf"), Ta = /* @__PURE__ */ s(([e, t]) => e === qa && (t === "function" || t === "symbol"), "shouldSkip"), bN = /* @__PURE__ */ s((e, t, r, i) => {
    let n = /* @__PURE__ */ s((a, u) => {
      let l = i.push(a) - 1;
      return r.set(u, l), l;
    }, "as"), o = /* @__PURE__ */ s((a) => {
      if (r.has(a))
        return r.get(a);
      let [u, l] = Is(a);
      switch (u) {
        case qa: {
          let p = a;
          switch (l) {
            case "bigint":
              u = f1, p = a.toString();
              break;
            case "function":
            case "symbol":
              if (e)
                throw new TypeError("unable to serialize " + l);
              p = null;
              break;
            case "undefined":
              return n([p1], a);
          }
          return n([u, p], a);
        }
        case Na: {
          if (l)
            return n([l, [...a]], a);
          let p = [], h = n([u, p], a);
          for (let f of a)
            p.push(o(f));
          return h;
        }
        case La: {
          if (l)
            switch (l) {
              case "BigInt":
                return n([l, a.toString()], a);
              case "Boolean":
              case "Number":
              case "String":
                return n([l, a.valueOf()], a);
            }
          if (t && "toJSON" in a)
            return o(a.toJSON());
          let p = [], h = n([u, p], a);
          for (let f of EN(a))
            (e || !Ta(Is(a[f]))) && p.push([o(f), o(a[f])]);
          return h;
        }
        case Th:
          return n([u, a.toISOString()], a);
        case Bh: {
          let { source: p, flags: h } = a;
          return n([u, { source: p, flags: h }], a);
        }
        case Ih: {
          let p = [], h = n([u, p], a);
          for (let [f, d] of a)
            (e || !(Ta(Is(f)) || Ta(Is(d)))) && p.push([o(f), o(d)]);
          return h;
        }
        case Ph: {
          let p = [], h = n([u, p], a);
          for (let f of a)
            (e || !Ta(Is(f))) && p.push(o(f));
          return h;
        }
      }
      let { message: c } = a;
      return n([u, { name: l, message: c }], a);
    }, "pair");
    return o;
  }, "serializer"), yb = /* @__PURE__ */ s((e, { json: t, lossy: r } = {}) => {
    let i = [];
    return bN(!(t || r), !!t, /* @__PURE__ */ new Map(), i)(e), i;
  }, "serialize"), Ma = typeof structuredClone == "function" ? (
    /* c8 ignore start */
    (e, t) => t && ("json" in t || "lossy" in t) ? Db(yb(e, t)) : structuredClone(e)
  ) : (e, t) => Db(yb(e, t));
  s(vN, "defaultFootnoteBackContent");
  s(CN, "defaultFootnoteBackLabel");
  s(wN, "footer");
  d1 = // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  /* @__PURE__ */ s(function(e) {
    if (e == null)
      return _N;
    if (typeof e == "function")
      return $a(e);
    if (typeof e == "object")
      return Array.isArray(e) ? AN(e) : SN(e);
    if (typeof e == "string")
      return FN(e);
    throw new Error("Expected function, string, or object as test");
  }, "convert");
  s(AN, "anyFactory");
  s(SN, "propsFactory");
  s(FN, "typeFactory");
  s($a, "castFactory");
  s(_N, "ok2");
  s(kN, "looksLikeANode");
  s(TN, "color2");
  m1 = [], BN = !0, xb = !1, IN = "skip";
  s(PN, "visitParents");
  s(ON, "toResult2");
  s(Oh, "visit2");
  Ah = {}.hasOwnProperty, RN = {};
  s(NN, "createState");
  s(LN, "patch");
  s(MN, "applyData");
  s(jN, "defaultUnknownHandler");
  s(qN, "wrap");
  s(Eb, "trimMarkdownSpaceStart");
  s(bb, "toHast");
  s($N, "remarkRehype");
  s(vb, "bail");
  dh = ga(R9(), 1);
  s(Sh, "isPlainObject");
  s(VN, "trough");
  s(UN, "wrap2");
  WN = /**
   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}
   */
  /** @type {unknown} */
  /**
   * @this {Function}
   * @param {string | symbol} property
   * @returns {(...parameters: Array<unknown>) => unknown}
   */
  /* @__PURE__ */ s(function(e) {
    let i = (
      /** @type {Record<string | symbol, Function>} */
      // Prototypes do exist.
      // type-coverage:ignore-next-line
      this.constructor.prototype
    ), n = i[e], o = /* @__PURE__ */ s(function() {
      return n.apply(o, arguments);
    }, "apply");
    Object.setPrototypeOf(o, i);
    let a = Object.getOwnPropertyNames(n);
    for (let u of a) {
      let l = Object.getOwnPropertyDescriptor(n, u);
      l && Object.defineProperty(o, u, l);
    }
    return o;
  }, "CallableInstance"), zN = {}.hasOwnProperty, g1 = class extends WN {
    static {
      s(this, "Processor");
    }
    /**
     * Create a processor.
     */
    constructor() {
      super("copy"), this.Compiler = void 0, this.Parser = void 0, this.attachers = [], this.compiler = void 0, this.freezeIndex = -1, this.
      frozen = void 0, this.namespace = {}, this.parser = void 0, this.transformers = VN();
    }
    /**
     * Copy a processor.
     *
     * @deprecated
     *   This is a private internal method and should not be used.
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   New *unfrozen* processor ({@link Processor `Processor`}) that is
     *   configured to work the same as its ancestor.
     *   When the descendant processor is configured in the future it does not
     *   affect the ancestral processor.
     */
    copy() {
      let e = (
        /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */
        new g1()
      ), t = -1;
      for (; ++t < this.attachers.length; ) {
        let r = this.attachers[t];
        e.use(...r);
      }
      return e.data((0, dh.default)(!0, {}, this.namespace)), e;
    }
    /**
     * Configure the processor with info available to all plugins.
     * Information is stored in an object.
     *
     * Typically, options can be given to a specific plugin, but sometimes it
     * makes sense to have information shared with several plugins.
     * For example, a list of HTML elements that are self-closing, which is
     * needed during all phases.
     *
     * > 👉 **Note**: setting information cannot occur on *frozen* processors.
     * > Call the processor first to create a new unfrozen processor.
     *
     * > 👉 **Note**: to register custom data in TypeScript, augment the
     * > {@link Data `Data`} interface.
     *
     * @example
     *   This example show how to get and set info:
     *
     *   ```js
     *   import {unified} from 'unified'
     *
     *   const processor = unified().data('alpha', 'bravo')
     *
     *   processor.data('alpha') // => 'bravo'
     *
     *   processor.data() // => {alpha: 'bravo'}
     *
     *   processor.data({charlie: 'delta'})
     *
     *   processor.data() // => {charlie: 'delta'}
     *   ```
     *
     * @template {keyof Data} Key
     *
     * @overload
     * @returns {Data}
     *
     * @overload
     * @param {Data} dataset
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {Key} key
     * @returns {Data[Key]}
     *
     * @overload
     * @param {Key} key
     * @param {Data[Key]} value
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @param {Data | Key} [key]
     *   Key to get or set, or entire dataset to set, or nothing to get the
     *   entire dataset (optional).
     * @param {Data[Key]} [value]
     *   Value to set (optional).
     * @returns {unknown}
     *   The current processor when setting, the value at `key` when getting, or
     *   the entire dataset when getting without key.
     */
    data(e, t) {
      return typeof e == "string" ? arguments.length === 2 ? (Dh("data", this.frozen), this.namespace[e] = t, this) : zN.call(this.namespace,
      e) && this.namespace[e] || void 0 : e ? (Dh("data", this.frozen), this.namespace = e, this) : this.namespace;
    }
    /**
     * Freeze a processor.
     *
     * Frozen processors are meant to be extended and not to be configured
     * directly.
     *
     * When a processor is frozen it cannot be unfrozen.
     * New processors working the same way can be created by calling the
     * processor.
     *
     * It’s possible to freeze processors explicitly by calling `.freeze()`.
     * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,
     * `.stringify()`, `.process()`, or `.processSync()` are called.
     *
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   The current processor.
     */
    freeze() {
      if (this.frozen)
        return this;
      let e = (
        /** @type {Processor} */
        /** @type {unknown} */
        this
      );
      for (; ++this.freezeIndex < this.attachers.length; ) {
        let [t, ...r] = this.attachers[this.freezeIndex];
        if (r[0] === !1)
          continue;
        r[0] === !0 && (r[0] = void 0);
        let i = t.call(e, ...r);
        typeof i == "function" && this.transformers.use(i);
      }
      return this.frozen = !0, this.freezeIndex = Number.POSITIVE_INFINITY, this;
    }
    /**
     * Parse text to a syntax tree.
     *
     * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other
     * > phases.
     *
     * @param {Compatible | undefined} [file]
     *   file to parse (optional); typically `string` or `VFile`; any value
     *   accepted as `x` in `new VFile(x)`.
     * @returns {ParseTree extends undefined ? Node : ParseTree}
     *   Syntax tree representing `file`.
     */
    parse(e) {
      this.freeze();
      let t = Ba(e), r = this.parser || this.Parser;
      return mh("parse", r), r(String(t), t);
    }
    /**
     * Process the given file as configured on the processor.
     *
     * > 👉 **Note**: `process` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `process` performs the parse, run, and stringify phases.
     *
     * @overload
     * @param {Compatible | undefined} file
     * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done
     * @returns {undefined}
     *
     * @overload
     * @param {Compatible | undefined} [file]
     * @returns {Promise<VFileWithOutput<CompileResult>>}
     *
     * @param {Compatible | undefined} [file]
     *   File (optional); typically `string` or `VFile`]; any value accepted as
     *   `x` in `new VFile(x)`.
     * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]
     *   Callback (optional).
     * @returns {Promise<VFile> | undefined}
     *   Nothing if `done` is given.
     *   Otherwise a promise, rejected with a fatal error or resolved with the
     *   processed file.
     *
     *   The parsed, transformed, and compiled value is available at
     *   `file.value` (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most
     *   > compilers return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    process(e, t) {
      let r = this;
      return this.freeze(), mh("process", this.parser || this.Parser), gh("process", this.compiler || this.Compiler), t ? i(void 0, t) : new Promise(
      i);
      function i(n, o) {
        let a = Ba(e), u = (
          /** @type {HeadTree extends undefined ? Node : HeadTree} */
          /** @type {unknown} */
          r.parse(a)
        );
        r.run(u, a, function(c, p, h) {
          if (c || !p || !h)
            return l(c);
          let f = (
            /** @type {CompileTree extends undefined ? Node : CompileTree} */
            /** @type {unknown} */
            p
          ), d = r.stringify(f, h);
          GN(d) ? h.value = d : h.result = d, l(
            c,
            /** @type {VFileWithOutput<CompileResult>} */
            h
          );
        });
        function l(c, p) {
          c || !p ? o(c) : n ? n(p) : t(void 0, p);
        }
        s(l, "realDone");
      }
      s(i, "executor");
    }
    /**
     * Process the given file as configured on the processor.
     *
     * An error is thrown if asynchronous transforms are configured.
     *
     * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.
     *
     * @param {Compatible | undefined} [file]
     *   File (optional); typically `string` or `VFile`; any value accepted as
     *   `x` in `new VFile(x)`.
     * @returns {VFileWithOutput<CompileResult>}
     *   The processed file.
     *
     *   The parsed, transformed, and compiled value is available at
     *   `file.value` (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most
     *   > compilers return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    processSync(e) {
      let t = !1, r;
      return this.freeze(), mh("processSync", this.parser || this.Parser), gh("processSync", this.compiler || this.Compiler), this.process(e,
      i), wb("processSync", "process", t), r;
      function i(n, o) {
        t = !0, vb(n), r = o;
      }
      s(i, "realDone");
    }
    /**
     * Run *transformers* on a syntax tree.
     *
     * > 👉 **Note**: `run` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `run` performs the run phase, not other phases.
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
     * @returns {undefined}
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {Compatible | undefined} file
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
     * @returns {undefined}
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {Compatible | undefined} [file]
     * @returns {Promise<TailTree extends undefined ? Node : TailTree>}
     *
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     *   Tree to transform and inspect.
     * @param {(
     *   RunCallback<TailTree extends undefined ? Node : TailTree> |
     *   Compatible
     * )} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]
     *   Callback (optional).
     * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}
     *   Nothing if `done` is given.
     *   Otherwise, a promise rejected with a fatal error or resolved with the
     *   transformed tree.
     */
    run(e, t, r) {
      Cb(e), this.freeze();
      let i = this.transformers;
      return !r && typeof t == "function" && (r = t, t = void 0), r ? n(void 0, r) : new Promise(n);
      function n(o, a) {
        let u = Ba(t);
        i.run(e, u, l);
        function l(c, p, h) {
          let f = (
            /** @type {TailTree extends undefined ? Node : TailTree} */
            p || e
          );
          c ? a(c) : o ? o(f) : r(void 0, f, h);
        }
        s(l, "realDone");
      }
      s(n, "executor");
    }
    /**
     * Run *transformers* on a syntax tree.
     *
     * An error is thrown if asynchronous transforms are configured.
     *
     * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `runSync` performs the run phase, not other phases.
     *
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     *   Tree to transform and inspect.
     * @param {Compatible | undefined} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @returns {TailTree extends undefined ? Node : TailTree}
     *   Transformed tree.
     */
    runSync(e, t) {
      let r = !1, i;
      return this.run(e, t, n), wb("runSync", "run", r), i;
      function n(o, a) {
        vb(o), i = a, r = !0;
      }
      s(n, "realDone");
    }
    /**
     * Compile a syntax tree.
     *
     * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase
     * > or other phases.
     *
     * @param {CompileTree extends undefined ? Node : CompileTree} tree
     *   Tree to compile.
     * @param {Compatible | undefined} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @returns {CompileResult extends undefined ? Value : CompileResult}
     *   Textual representation of the tree (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most compilers
     *   > return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    stringify(e, t) {
      this.freeze();
      let r = Ba(t), i = this.compiler || this.Compiler;
      return gh("stringify", i), Cb(e), i(e, r);
    }
    /**
     * Configure the processor to use a plugin, a list of usable values, or a
     * preset.
     *
     * If the processor is already using a plugin, the previous plugin
     * configuration is changed based on the options that are passed in.
     * In other words, the plugin is not added a second time.
     *
     * > 👉 **Note**: `use` cannot be called on *frozen* processors.
     * > Call the processor first to create a new unfrozen processor.
     *
     * @example
     *   There are many ways to pass plugins to `.use()`.
     *   This example gives an overview:
     *
     *   ```js
     *   import {unified} from 'unified'
     *
     *   unified()
     *     // Plugin with options:
     *     .use(pluginA, {x: true, y: true})
     *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):
     *     .use(pluginA, {y: false, z: true})
     *     // Plugins:
     *     .use([pluginB, pluginC])
     *     // Two plugins, the second with options:
     *     .use([pluginD, [pluginE, {}]])
     *     // Preset with plugins and settings:
     *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})
     *     // Settings only:
     *     .use({settings: {position: false}})
     *   ```
     *
     * @template {Array<unknown>} [Parameters=[]]
     * @template {Node | string | undefined} [Input=undefined]
     * @template [Output=Input]
     *
     * @overload
     * @param {Preset | null | undefined} [preset]
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {PluggableList} list
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {Plugin<Parameters, Input, Output>} plugin
     * @param {...(Parameters | [boolean])} parameters
     * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}
     *
     * @param {PluggableList | Plugin | Preset | null | undefined} value
     *   Usable value.
     * @param {...unknown} parameters
     *   Parameters, when a plugin is given as a usable value.
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   Current processor.
     */
    use(e, ...t) {
      let r = this.attachers, i = this.namespace;
      if (Dh("use", this.frozen), e != null)
        if (typeof e == "function")
          u(e, t);
        else if (typeof e == "object")
          Array.isArray(e) ? a(e) : o(e);
        else
          throw new TypeError("Expected usable value, not `" + e + "`");
      return this;
      function n(l) {
        if (typeof l == "function")
          u(l, []);
        else if (typeof l == "object")
          if (Array.isArray(l)) {
            let [c, ...p] = (
              /** @type {PluginTuple<Array<unknown>>} */
              l
            );
            u(c, p);
          } else
            o(l);
        else
          throw new TypeError("Expected usable value, not `" + l + "`");
      }
      function o(l) {
        if (!("plugins" in l) && !("settings" in l))
          throw new Error(
            "Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and some\
times with `settings`, but this has neither"
          );
        a(l.plugins), l.settings && (i.settings = (0, dh.default)(!0, i.settings, l.settings));
      }
      function a(l) {
        let c = -1;
        if (l != null)
          if (Array.isArray(l))
            for (; ++c < l.length; ) {
              let p = l[c];
              n(p);
            }
          else
            throw new TypeError("Expected a list of plugins, not `" + l + "`");
      }
      function u(l, c) {
        let p = -1, h = -1;
        for (; ++p < r.length; )
          if (r[p][0] === l) {
            h = p;
            break;
          }
        if (h === -1)
          r.push([l, ...c]);
        else if (c.length > 0) {
          let [f, ...d] = c, m = r[h][1];
          Sh(m) && Sh(f) && (f = (0, dh.default)(!0, m, f)), r[h] = [l, f, ...d];
        }
      }
    }
  }, HN = new g1().freeze();
  s(mh, "assertParser");
  s(gh, "assertCompiler");
  s(Dh, "assertUnfrozen");
  s(Cb, "assertNode");
  s(wb, "assertDone");
  s(Ba, "vfile");
  s(JN, "looksLikeAVFile2");
  s(GN, "looksLikeAValue");
  s(XN, "isUint8Array2");
  KN = class {
    static {
      s(this, "WalkerBase");
    }
    constructor() {
      this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
        skip: /* @__PURE__ */ s(() => this.should_skip = !0, "skip"),
        remove: /* @__PURE__ */ s(() => this.should_remove = !0, "remove"),
        replace: /* @__PURE__ */ s((e) => this.replacement = e, "replace")
      };
    }
    /**
     * @template {Node} Parent
     * @param {Parent | null | undefined} parent
     * @param {keyof Parent | null | undefined} prop
     * @param {number | null | undefined} index
     * @param {Node} node
     */
    replace(e, t, r, i) {
      e && t && (r != null ? e[t][r] = i : e[t] = i);
    }
    /**
     * @template {Node} Parent
     * @param {Parent | null | undefined} parent
     * @param {keyof Parent | null | undefined} prop
     * @param {number | null | undefined} index
     */
    remove(e, t, r) {
      e && t && (r != null ? e[t].splice(r, 1) : delete e[t]);
    }
  }, YN = class extends KN {
    static {
      s(this, "SyncWalker");
    }
    /**
     *
     * @param {SyncHandler} [enter]
     * @param {SyncHandler} [leave]
     */
    constructor(e, t) {
      super(), this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
        skip: /* @__PURE__ */ s(() => this.should_skip = !0, "skip"),
        remove: /* @__PURE__ */ s(() => this.should_remove = !0, "remove"),
        replace: /* @__PURE__ */ s((r) => this.replacement = r, "replace")
      }, this.enter = e, this.leave = t;
    }
    /**
     * @template {Node} Parent
     * @param {Node} node
     * @param {Parent | null} parent
     * @param {keyof Parent} [prop]
     * @param {number | null} [index]
     * @returns {Node | null}
     */
    visit(e, t, r, i) {
      if (e) {
        if (this.enter) {
          let o = this.should_skip, a = this.should_remove, u = this.replacement;
          this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e, t, r, i), this.replacement &&
          (e = this.replacement, this.replace(t, r, i, e)), this.should_remove && this.remove(t, r, i);
          let l = this.should_skip, c = this.should_remove;
          if (this.should_skip = o, this.should_remove = a, this.replacement = u, l)
            return e;
          if (c)
            return null;
        }
        let n;
        for (n in e) {
          let o = e[n];
          if (o && typeof o == "object")
            if (Array.isArray(o)) {
              let a = (
                /** @type {Array<unknown>} */
                o
              );
              for (let u = 0; u < a.length; u += 1) {
                let l = a[u];
                Ab(l) && (this.visit(l, e, n, u) || u--);
              }
            } else Ab(o) && this.visit(o, e, n, null);
        }
        if (this.leave) {
          let o = this.replacement, a = this.should_remove;
          this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e, t, r, i), this.replacement && (e = this.replacement,
          this.replace(t, r, i, e)), this.should_remove && this.remove(t, r, i);
          let u = this.should_remove;
          if (this.replacement = o, this.should_remove = a, u)
            return null;
        }
      }
      return e;
    }
  };
  s(Ab, "isNode");
  s(Ns, "walk");
  s(D1, "is_reference");
  s(y1, "analyze");
  s(x1, "add_reference");
  _n = class {
    static {
      s(this, "Scope");
    }
    /**
     * @param {Scope | null} parent 
     * @param {boolean} block 
     */
    constructor(e, t) {
      this.parent = e, this.block = t, this.declarations = /* @__PURE__ */ new Map(), this.initialised_declarations = /* @__PURE__ */ new Set(),
      this.references = /* @__PURE__ */ new Set();
    }
    /**
     * @param {import('estree').VariableDeclaration | import('estree').ClassDeclaration} node
     */
    add_declaration(e) {
      if (e.type === "VariableDeclaration")
        if (e.kind === "var" && this.block && this.parent)
          this.parent.add_declaration(e);
        else {
          let t = /* @__PURE__ */ s((r) => {
            Fh(r.id).forEach((i) => {
              this.declarations.set(i, e), r.init && this.initialised_declarations.add(i);
            });
          }, "handle_declarator");
          e.declarations.forEach(t);
        }
      else e.id && this.declarations.set(e.id.name, e);
    }
    /**
     * @param {string} name
     * @returns {Scope | null}
     */
    find_owner(e) {
      return this.declarations.has(e) ? this : this.parent && this.parent.find_owner(e);
    }
    /**
     * @param {string} name
     * @returns {boolean}
     */
    has(e) {
      return this.declarations.has(e) || !!this.parent && this.parent.has(e);
    }
  };
  s(Fh, "extract_names");
  s(Bn, "extract_identifiers");
  s(yi, "create");
  s(QN, "declarationToExpression");
  s(ZN, "isDeclaration");
  s(Rh, "specifiersToDeclarations");
  s(xi, "toIdOrMemberExpression");
  s(Sb, "toJsxIdOrMemberExpression");
  s(e7, "recmaDocument");
  s(t7, "resolveDynamicMdxSpecifier");
  s(r7, "createImportMetaUrlVariable");
  yh = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\s+(\S+)/g;
  s(i7, "buildJsx");
  s(n7, "toProperty");
  s(ja, "toIdentifier");
  s(Fb, "toMemberExpression");
  s(Os, "create2");
  s(s7, "recmaJsxBuild");
  s(_b, "toBinaryAddition");
  s(o7, "recmaJsxRewrite");
  s(a7, "createImportProvider");
  s(kn, "isNamedFunction");
  s(xh, "inScope");
  ({ stringify: u7 } = JSON);
  if (!String.prototype.repeat)
    throw new Error(
      "String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation"
    );
  if (!String.prototype.endsWith)
    throw new Error(
      "String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation"
    );
  Ia = {
    "||": 2,
    "??": 3,
    "&&": 4,
    "|": 5,
    "^": 6,
    "&": 7,
    "==": 8,
    "!=": 8,
    "===": 8,
    "!==": 8,
    "<": 9,
    ">": 9,
    "<=": 9,
    ">=": 9,
    in: 9,
    instanceof: 9,
    "<<": 10,
    ">>": 10,
    ">>>": 10,
    "+": 11,
    "-": 11,
    "*": 12,
    "%": 12,
    "/": 12,
    "**": 13
  }, mr = 17, l7 = {
    // Definitions
    ArrayExpression: 20,
    TaggedTemplateExpression: 20,
    ThisExpression: 20,
    Identifier: 20,
    PrivateIdentifier: 20,
    Literal: 18,
    TemplateLiteral: 20,
    Super: 20,
    SequenceExpression: 20,
    // Operations
    MemberExpression: 19,
    ChainExpression: 19,
    CallExpression: 19,
    NewExpression: 19,
    // Other definitions
    ArrowFunctionExpression: mr,
    ClassExpression: mr,
    FunctionExpression: mr,
    ObjectExpression: mr,
    // Other operations
    UpdateExpression: 16,
    UnaryExpression: 15,
    AwaitExpression: 15,
    BinaryExpression: 14,
    LogicalExpression: 13,
    ConditionalExpression: 4,
    AssignmentExpression: 3,
    YieldExpression: 2,
    RestElement: 1
  };
  s(Tn, "formatSequence");
  s(E1, "expressionNeedsParenthesis");
  s(Pa, "formatExpression");
  s(c7, "reindent");
  s(bt, "formatComments");
  s(p7, "hasCallExpression");
  s(Eh, "formatVariableDeclaration");
  b1 = {
    /*
    Default generator.
    */
    Program(e, t) {
      let r = t.indent.repeat(t.indentLevel), { lineEnd: i, writeComments: n } = t;
      n && e.comments != null && bt(t, e.comments, r, i);
      let o = e.body, { length: a } = o;
      for (let u = 0; u < a; u++) {
        let l = o[u];
        n && l.comments != null && bt(t, l.comments, r, i), t.write(r), this[l.type](l, t), t.write(i);
      }
      n && e.trailingComments != null && bt(t, e.trailingComments, r, i);
    },
    BlockStatement: Ob = /* @__PURE__ */ s(function(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: i, writeComments: n } = t, o = r + t.indent;
      t.write("{");
      let a = e.body;
      if (a != null && a.length > 0) {
        t.write(i), n && e.comments != null && bt(t, e.comments, o, i);
        let { length: u } = a;
        for (let l = 0; l < u; l++) {
          let c = a[l];
          n && c.comments != null && bt(t, c.comments, o, i), t.write(o), this[c.type](c, t), t.write(i);
        }
        t.write(r);
      } else
        n && e.comments != null && (t.write(i), bt(t, e.comments, o, i), t.write(r));
      n && e.trailingComments != null && bt(t, e.trailingComments, o, i), t.write("}"), t.indentLevel--;
    }, "BlockStatement"),
    ClassBody: Ob,
    StaticBlock(e, t) {
      t.write("static "), this.BlockStatement(e, t);
    },
    EmptyStatement(e, t) {
      t.write(";");
    },
    ExpressionStatement(e, t) {
      let r = t.expressionsPrecedence[e.expression.type];
      r === mr || r === 3 && e.expression.left.type[0] === "O" ? (t.write("("), this[e.expression.type](e.expression, t), t.write(")")) : this[e.
      expression.type](e.expression, t), t.write(";");
    },
    IfStatement(e, t) {
      t.write("if ("), this[e.test.type](e.test, t), t.write(") "), this[e.consequent.type](e.consequent, t), e.alternate != null && (t.write(
      " else "), this[e.alternate.type](e.alternate, t));
    },
    LabeledStatement(e, t) {
      this[e.label.type](e.label, t), t.write(": "), this[e.body.type](e.body, t);
    },
    BreakStatement(e, t) {
      t.write("break"), e.label != null && (t.write(" "), this[e.label.type](e.label, t)), t.write(";");
    },
    ContinueStatement(e, t) {
      t.write("continue"), e.label != null && (t.write(" "), this[e.label.type](e.label, t)), t.write(";");
    },
    WithStatement(e, t) {
      t.write("with ("), this[e.object.type](e.object, t), t.write(") "), this[e.body.type](e.body, t);
    },
    SwitchStatement(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: i, writeComments: n } = t;
      t.indentLevel++;
      let o = r + t.indent, a = o + t.indent;
      t.write("switch ("), this[e.discriminant.type](e.discriminant, t), t.write(") {" + i);
      let { cases: u } = e, { length: l } = u;
      for (let c = 0; c < l; c++) {
        let p = u[c];
        n && p.comments != null && bt(t, p.comments, o, i), p.test ? (t.write(o + "case "), this[p.test.type](p.test, t), t.write(":" + i)) :
        t.write(o + "default:" + i);
        let { consequent: h } = p, { length: f } = h;
        for (let d = 0; d < f; d++) {
          let m = h[d];
          n && m.comments != null && bt(t, m.comments, a, i), t.write(a), this[m.type](m, t), t.write(i);
        }
      }
      t.indentLevel -= 2, t.write(r + "}");
    },
    ReturnStatement(e, t) {
      t.write("return"), e.argument && (t.write(" "), this[e.argument.type](e.argument, t)), t.write(";");
    },
    ThrowStatement(e, t) {
      t.write("throw "), this[e.argument.type](e.argument, t), t.write(";");
    },
    TryStatement(e, t) {
      if (t.write("try "), this[e.block.type](e.block, t), e.handler) {
        let { handler: r } = e;
        r.param == null ? t.write(" catch ") : (t.write(" catch ("), this[r.param.type](r.param, t), t.write(") ")), this[r.body.type](r.body,
        t);
      }
      e.finalizer && (t.write(" finally "), this[e.finalizer.type](e.finalizer, t));
    },
    WhileStatement(e, t) {
      t.write("while ("), this[e.test.type](e.test, t), t.write(") "), this[e.body.type](e.body, t);
    },
    DoWhileStatement(e, t) {
      t.write("do "), this[e.body.type](e.body, t), t.write(" while ("), this[e.test.type](e.test, t), t.write(");");
    },
    ForStatement(e, t) {
      if (t.write("for ("), e.init != null) {
        let { init: r } = e;
        r.type[0] === "V" ? Eh(t, r) : this[r.type](r, t);
      }
      t.write("; "), e.test && this[e.test.type](e.test, t), t.write("; "), e.update && this[e.update.type](e.update, t), t.write(") "), this[e.
      body.type](e.body, t);
    },
    ForInStatement: kb = /* @__PURE__ */ s(function(e, t) {
      t.write(`for ${e.await ? "await " : ""}(`);
      let { left: r } = e;
      r.type[0] === "V" ? Eh(t, r) : this[r.type](r, t), t.write(e.type[3] === "I" ? " in " : " of "), this[e.right.type](e.right, t), t.write(
      ") "), this[e.body.type](e.body, t);
    }, "ForInStatement"),
    ForOfStatement: kb,
    DebuggerStatement(e, t) {
      t.write("debugger;", e);
    },
    FunctionDeclaration: Tb = /* @__PURE__ */ s(function(e, t) {
      t.write(
        (e.async ? "async " : "") + (e.generator ? "function* " : "function ") + (e.id ? e.id.name : ""),
        e
      ), Tn(t, e.params), t.write(" "), this[e.body.type](e.body, t);
    }, "FunctionDeclaration"),
    FunctionExpression: Tb,
    VariableDeclaration(e, t) {
      Eh(t, e), t.write(";");
    },
    VariableDeclarator(e, t) {
      this[e.id.type](e.id, t), e.init != null && (t.write(" = "), this[e.init.type](e.init, t));
    },
    ClassDeclaration(e, t) {
      if (t.write("class " + (e.id ? `${e.id.name} ` : ""), e), e.superClass) {
        t.write("extends ");
        let { superClass: r } = e, { type: i } = r, n = t.expressionsPrecedence[i];
        (i[0] !== "C" || i[1] !== "l" || i[5] !== "E") && (n === mr || n < t.expressionsPrecedence.ClassExpression) ? (t.write("("), this[e.
        superClass.type](r, t), t.write(")")) : this[r.type](r, t), t.write(" ");
      }
      this.ClassBody(e.body, t);
    },
    ImportDeclaration(e, t) {
      t.write("import ");
      let { specifiers: r } = e, { length: i } = r, n = 0;
      if (i > 0) {
        for (; n < i; ) {
          n > 0 && t.write(", ");
          let o = r[n], a = o.type[6];
          if (a === "D")
            t.write(o.local.name, o), n++;
          else if (a === "N")
            t.write("* as " + o.local.name, o), n++;
          else
            break;
        }
        if (n < i) {
          for (t.write("{"); ; ) {
            let o = r[n], { name: a } = o.imported;
            if (t.write(a, o), a !== o.local.name && t.write(" as " + o.local.name), ++n < i)
              t.write(", ");
            else
              break;
          }
          t.write("}");
        }
        t.write(" from ");
      }
      this.Literal(e.source, t), t.write(";");
    },
    ImportExpression(e, t) {
      t.write("import("), this[e.source.type](e.source, t), t.write(")");
    },
    ExportDefaultDeclaration(e, t) {
      t.write("export default "), this[e.declaration.type](e.declaration, t), t.expressionsPrecedence[e.declaration.type] != null && e.declaration.
      type[0] !== "F" && t.write(";");
    },
    ExportNamedDeclaration(e, t) {
      if (t.write("export "), e.declaration)
        this[e.declaration.type](e.declaration, t);
      else {
        t.write("{");
        let { specifiers: r } = e, { length: i } = r;
        if (i > 0)
          for (let n = 0; ; ) {
            let o = r[n], { name: a } = o.local;
            if (t.write(a, o), a !== o.exported.name && t.write(" as " + o.exported.name), ++n < i)
              t.write(", ");
            else
              break;
          }
        t.write("}"), e.source && (t.write(" from "), this.Literal(e.source, t)), t.write(";");
      }
    },
    ExportAllDeclaration(e, t) {
      e.exported != null ? t.write("export * as " + e.exported.name + " from ") : t.write("export * from "), this.Literal(e.source, t), t.write(
      ";");
    },
    MethodDefinition(e, t) {
      e.static && t.write("static ");
      let r = e.kind[0];
      (r === "g" || r === "s") && t.write(e.kind + " "), e.value.async && t.write("async "), e.value.generator && t.write("*"), e.computed ?
      (t.write("["), this[e.key.type](e.key, t), t.write("]")) : this[e.key.type](e.key, t), Tn(t, e.value.params), t.write(" "), this[e.value.
      body.type](e.value.body, t);
    },
    ClassExpression(e, t) {
      this.ClassDeclaration(e, t);
    },
    ArrowFunctionExpression(e, t) {
      t.write(e.async ? "async " : "", e);
      let { params: r } = e;
      r != null && (r.length === 1 && r[0].type[0] === "I" ? t.write(r[0].name, r[0]) : Tn(t, e.params)), t.write(" => "), e.body.type[0] ===
      "O" ? (t.write("("), this.ObjectExpression(e.body, t), t.write(")")) : this[e.body.type](e.body, t);
    },
    ThisExpression(e, t) {
      t.write("this", e);
    },
    Super(e, t) {
      t.write("super", e);
    },
    RestElement: Bb = /* @__PURE__ */ s(function(e, t) {
      t.write("..."), this[e.argument.type](e.argument, t);
    }, "RestElement"),
    SpreadElement: Bb,
    YieldExpression(e, t) {
      t.write(e.delegate ? "yield*" : "yield"), e.argument && (t.write(" "), this[e.argument.type](e.argument, t));
    },
    AwaitExpression(e, t) {
      t.write("await ", e), Pa(t, e.argument, e);
    },
    TemplateLiteral(e, t) {
      let { quasis: r, expressions: i } = e;
      t.write("`");
      let { length: n } = i;
      for (let a = 0; a < n; a++) {
        let u = i[a], l = r[a];
        t.write(l.value.raw, l), t.write("${"), this[u.type](u, t), t.write("}");
      }
      let o = r[r.length - 1];
      t.write(o.value.raw, o), t.write("`");
    },
    TemplateElement(e, t) {
      t.write(e.value.raw, e);
    },
    TaggedTemplateExpression(e, t) {
      Pa(t, e.tag, e), this[e.quasi.type](e.quasi, t);
    },
    ArrayExpression: Pb = /* @__PURE__ */ s(function(e, t) {
      if (t.write("["), e.elements.length > 0) {
        let { elements: r } = e, { length: i } = r;
        for (let n = 0; ; ) {
          let o = r[n];
          if (o != null && this[o.type](o, t), ++n < i)
            t.write(", ");
          else {
            o == null && t.write(", ");
            break;
          }
        }
      }
      t.write("]");
    }, "ArrayExpression"),
    ArrayPattern: Pb,
    ObjectExpression(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: i, writeComments: n } = t, o = r + t.indent;
      if (t.write("{"), e.properties.length > 0) {
        t.write(i), n && e.comments != null && bt(t, e.comments, o, i);
        let a = "," + i, { properties: u } = e, { length: l } = u;
        for (let c = 0; ; ) {
          let p = u[c];
          if (n && p.comments != null && bt(t, p.comments, o, i), t.write(o), this[p.type](p, t), ++c < l)
            t.write(a);
          else
            break;
        }
        t.write(i), n && e.trailingComments != null && bt(t, e.trailingComments, o, i), t.write(r + "}");
      } else n ? e.comments != null ? (t.write(i), bt(t, e.comments, o, i), e.trailingComments != null && bt(t, e.trailingComments, o, i), t.
      write(r + "}")) : e.trailingComments != null ? (t.write(i), bt(t, e.trailingComments, o, i), t.write(r + "}")) : t.write("}") : t.write(
      "}");
      t.indentLevel--;
    },
    Property(e, t) {
      e.method || e.kind[0] !== "i" ? this.MethodDefinition(e, t) : (e.shorthand || (e.computed ? (t.write("["), this[e.key.type](e.key, t),
      t.write("]")) : this[e.key.type](e.key, t), t.write(": ")), this[e.value.type](e.value, t));
    },
    PropertyDefinition(e, t) {
      if (e.static && t.write("static "), e.computed && t.write("["), this[e.key.type](e.key, t), e.computed && t.write("]"), e.value == null) {
        e.key.type[0] !== "F" && t.write(";");
        return;
      }
      t.write(" = "), this[e.value.type](e.value, t), t.write(";");
    },
    ObjectPattern(e, t) {
      if (t.write("{"), e.properties.length > 0) {
        let { properties: r } = e, { length: i } = r;
        for (let n = 0; this[r[n].type](r[n], t), ++n < i; )
          t.write(", ");
      }
      t.write("}");
    },
    SequenceExpression(e, t) {
      Tn(t, e.expressions);
    },
    UnaryExpression(e, t) {
      if (e.prefix) {
        let {
          operator: r,
          argument: i,
          argument: { type: n }
        } = e;
        t.write(r);
        let o = E1(t, i, e);
        !o && (r.length > 1 || n[0] === "U" && (n[1] === "n" || n[1] === "p") && i.prefix && i.operator[0] === r && (r === "+" || r === "-")) &&
        t.write(" "), o ? (t.write(r.length > 1 ? " (" : "("), this[n](i, t), t.write(")")) : this[n](i, t);
      } else
        this[e.argument.type](e.argument, t), t.write(e.operator);
    },
    UpdateExpression(e, t) {
      e.prefix ? (t.write(e.operator), this[e.argument.type](e.argument, t)) : (this[e.argument.type](e.argument, t), t.write(e.operator));
    },
    AssignmentExpression(e, t) {
      this[e.left.type](e.left, t), t.write(" " + e.operator + " "), this[e.right.type](e.right, t);
    },
    AssignmentPattern(e, t) {
      this[e.left.type](e.left, t), t.write(" = "), this[e.right.type](e.right, t);
    },
    BinaryExpression: Ib = /* @__PURE__ */ s(function(e, t) {
      let r = e.operator === "in";
      r && t.write("("), Pa(t, e.left, e, !1), t.write(" " + e.operator + " "), Pa(t, e.right, e, !0), r && t.write(")");
    }, "BinaryExpression"),
    LogicalExpression: Ib,
    ConditionalExpression(e, t) {
      let { test: r } = e, i = t.expressionsPrecedence[r.type];
      i === mr || i <= t.expressionsPrecedence.ConditionalExpression ? (t.write("("), this[r.type](r, t), t.write(")")) : this[r.type](r, t),
      t.write(" ? "), this[e.consequent.type](e.consequent, t), t.write(" : "), this[e.alternate.type](e.alternate, t);
    },
    NewExpression(e, t) {
      t.write("new ");
      let r = t.expressionsPrecedence[e.callee.type];
      r === mr || r < t.expressionsPrecedence.CallExpression || p7(e.callee) ? (t.write("("), this[e.callee.type](e.callee, t), t.write(")")) :
      this[e.callee.type](e.callee, t), Tn(t, e.arguments);
    },
    CallExpression(e, t) {
      let r = t.expressionsPrecedence[e.callee.type];
      r === mr || r < t.expressionsPrecedence.CallExpression ? (t.write("("), this[e.callee.type](e.callee, t), t.write(")")) : this[e.callee.
      type](e.callee, t), e.optional && t.write("?."), Tn(t, e.arguments);
    },
    ChainExpression(e, t) {
      this[e.expression.type](e.expression, t);
    },
    MemberExpression(e, t) {
      let r = t.expressionsPrecedence[e.object.type];
      r === mr || r < t.expressionsPrecedence.MemberExpression ? (t.write("("), this[e.object.type](e.object, t), t.write(")")) : this[e.object.
      type](e.object, t), e.computed ? (e.optional && t.write("?."), t.write("["), this[e.property.type](e.property, t), t.write("]")) : (e.
      optional ? t.write("?.") : t.write("."), this[e.property.type](e.property, t));
    },
    MetaProperty(e, t) {
      t.write(e.meta.name + "." + e.property.name, e);
    },
    Identifier(e, t) {
      t.write(e.name, e);
    },
    PrivateIdentifier(e, t) {
      t.write(`#${e.name}`, e);
    },
    Literal(e, t) {
      e.raw != null ? t.write(e.raw, e) : e.regex != null ? this.RegExpLiteral(e, t) : e.bigint != null ? t.write(e.bigint + "n", e) : t.write(
      u7(e.value), e);
    },
    RegExpLiteral(e, t) {
      let { regex: r } = e;
      t.write(`/${r.pattern}/${r.flags}`, e);
    }
  }, h7 = {}, f7 = class {
    static {
      s(this, "State");
    }
    constructor(e) {
      let t = e ?? h7;
      this.output = "", t.output != null ? (this.output = t.output, this.write = this.writeToStream) : this.output = "", this.generator = t.
      generator != null ? t.generator : b1, this.expressionsPrecedence = t.expressionsPrecedence != null ? t.expressionsPrecedence : l7, this.
      indent = t.indent != null ? t.indent : "  ", this.lineEnd = t.lineEnd != null ? t.lineEnd : `
`, this.indentLevel = t.startingIndentLevel != null ? t.startingIndentLevel : 0, this.writeComments = t.comments ? t.comments : !1, t.sourceMap !=
      null && (this.write = t.output == null ? this.writeAndMap : this.writeToStreamAndMap, this.sourceMap = t.sourceMap, this.line = 1, this.
      column = 0, this.lineEndSize = this.lineEnd.split(`
`).length - 1, this.mapping = {
        original: null,
        // Uses the entire state to avoid generating ephemeral objects
        generated: this,
        name: void 0,
        source: t.sourceMap.file || t.sourceMap._file
      });
    }
    write(e) {
      this.output += e;
    }
    writeToStream(e) {
      this.output.write(e);
    }
    writeAndMap(e, t) {
      this.output += e, this.map(e, t);
    }
    writeToStreamAndMap(e, t) {
      this.output.write(e), this.map(e, t);
    }
    map(e, t) {
      if (t != null) {
        let { type: n } = t;
        if (n[0] === "L" && n[2] === "n") {
          this.column = 0, this.line++;
          return;
        }
        if (t.loc != null) {
          let { mapping: o } = this;
          o.original = t.loc.start, o.name = t.name, this.sourceMap.addMapping(o);
        }
        if (n[0] === "T" && n[8] === "E" || n[0] === "L" && n[1] === "i" && typeof t.value == "string") {
          let { length: o } = e, { column: a, line: u } = this;
          for (let l = 0; l < o; l++)
            e[l] === `
` ? (a = 0, u++) : a++;
          this.column = a, this.line = u;
          return;
        }
      }
      let { length: r } = e, { lineEnd: i } = this;
      r > 0 && (this.lineEndSize > 0 && (i.length === 1 ? e[r - 1] === i : e.endsWith(i)) ? (this.line += this.lineEndSize, this.column = 0) :
      this.column += r);
    }
    toString() {
      return this.output;
    }
  };
  s(d7, "generate");
  m7 = {};
  s(Rb, "toJs");
  Nb = {
    JSXAttribute: g7,
    JSXClosingElement: D7,
    JSXClosingFragment: y7,
    JSXElement: x7,
    JSXEmptyExpression: E7,
    JSXExpressionContainer: b7,
    JSXFragment: v7,
    JSXIdentifier: C7,
    JSXMemberExpression: w7,
    JSXNamespacedName: A7,
    JSXOpeningElement: S7,
    JSXOpeningFragment: F7,
    JSXSpreadAttribute: _7,
    JSXText: k7
  };
  s(g7, "jsxAttribute");
  s(D7, "jsxClosingElement");
  s(y7, "jsxClosingFragment");
  s(x7, "jsxElement");
  s(E7, "jsxEmptyExpression");
  s(b7, "jsxExpressionContainer");
  s(v7, "jsxFragment");
  s(C7, "jsxIdentifier");
  s(w7, "jsxMemberExpression");
  s(A7, "jsxNamespacedName");
  s(S7, "jsxOpeningElement");
  s(F7, "jsxOpeningFragment");
  s(_7, "jsxSpreadAttribute");
  s(k7, "jsxText2");
  s(v1, "encodeJsx");
  s(T7, "replaceJsxChar");
  s(B7, "recmaStringify");
  s(I7, "rehypeRecma");
  s(P7, "rehypeRemoveRaw");
  O7 = /\s+/g, R7 = /[\t\n\v\f\r ]+/g;
  s(N7, "collapseWhiteSpace");
  s(L7, "replaceLineEnding");
  s(M7, "replaceSpace");
  s(j7, "trimFactory");
  s(q7, "remarkMarkAndUnravel");
  C1 = /** @type {const} */
  [
    "mdxFlowExpression",
    "mdxJsxFlowElement",
    "mdxJsxTextElement",
    "mdxTextExpression",
    "mdxjsEsm"
  ], Lb = [
    "compilers",
    "filepath",
    "hastPlugins",
    "mdPlugins",
    "skipExport",
    "wrapExport"
  ], Mb = !1;
  s(Nh, "createProcessor");
  s(w1, "compile");
  s(A1, "compileSync");
  s(S1, "resolveEvaluateOptions");
  $7 = Object.getPrototypeOf(Lh).constructor;
  s(Lh, "run");
  s(F1, "runSync");
  s(V7, "evaluate");
  s(U7, "evaluateSync");
});

// ../node_modules/@storybook/docs-mdx/dist/index.js
var O1 = {};
Pi(O1, {
  analyze: () => G7,
  extractImports: () => I1,
  plugin: () => P1
});
var Mh, B1, T1, W7, z7, H7, J7, I1, P1, G7, R1 = ft(() => {
  zp();
  Mh = /* @__PURE__ */ s((e, t) => e.attributes.find((r) => r.type === "JSXAttribute" && r.name.name === t), "getAttr"), B1 = /* @__PURE__ */ s(
  (e, t) => Mh(e, t)?.value, "getAttrValue"), T1 = /* @__PURE__ */ s((e, t) => {
    let r = B1(e, t);
    if (r) {
      if (r.type === "Literal")
        return r.value;
      throw new Error(`Expected string literal ${t}, received ${r.type}`);
    }
  }, "getAttrLiteral"), W7 = /* @__PURE__ */ s((e, t) => {
    let r = B1(e, "of");
    if (r)
      if (r.type === "JSXExpressionContainer") {
        let i = r.expression;
        if (i?.type === "Identifier") {
          let n = t[i.name];
          if (n)
            return n;
          throw new Error(`Unknown identifier ${i.name}`);
        } else
          throw new Error(`Expected identifier, received ${i.type}`);
      } else
        throw new Error(`Expected JSX expression, received ${r.type}`);
  }, "getOf"), z7 = /* @__PURE__ */ s((e) => {
    let t = Mh(e, "tags");
    if (!t)
      return;
    let r = t.value;
    if (r.type === "JSXExpressionContainer") {
      let i = r.expression;
      if (i.type === "ArrayExpression")
        return i.elements.map((o) => {
          if (o.type === "Literal" && typeof o.value == "string")
            return o.value;
          throw new Error(`Expected string literal tag, received ${o.type}`);
        });
      throw new Error(`Expected tags array, received ${i.type}`);
    } else
      throw new Error(`Expected JSX expression tags, received ${r.type}`);
  }, "getTags"), H7 = /* @__PURE__ */ s((e) => {
    let t = Mh(e, "isTemplate");
    if (!t)
      return !1;
    let r = t.value;
    if (r == null)
      return !0;
    if (r.type === "JSXExpressionContainer") {
      let i = r.expression;
      if (i.type === "Literal" && typeof i.value == "boolean")
        return i.value;
      throw new Error(`Expected boolean isTemplate, received ${typeof i.value}`);
    } else
      throw new Error(`Expected expression isTemplate, received ${r.type}`);
  }, "getIsTemplate"), J7 = /* @__PURE__ */ s((e, t) => {
    let r = { title: void 0, of: void 0, name: void 0, isTemplate: !1 }, i = e.body.filter(
      (o) => o.type === "ExpressionStatement" && o.expression.type === "JSXFragment"
    );
    if (i.length > 1)
      throw new Error("duplicate contents");
    return i.length === 0 || i[0].expression.children.forEach((o) => {
      if (o.type === "JSXElement") {
        let { openingElement: a } = o;
        if (a.name.name === "Meta") {
          if (r.title || r.name || r.of)
            throw new Error("Meta can only be declared once");
          r.title = T1(a, "title"), r.name = T1(a, "name"), r.of = W7(a, t), r.isTemplate = H7(a), r.metaTags = z7(a);
        }
      } else if (o.type !== "JSXExpressionContainer")
        throw new Error(`Unexpected JSX child: ${o.type}`);
    }), r;
  }, "extractTitle"), I1 = /* @__PURE__ */ s((e) => {
    let t = {};
    return e.body.forEach((r) => {
      if (r.type === "ImportDeclaration") {
        let { source: i, specifiers: n } = r;
        if (i.type === "Literal")
          n.forEach((o) => {
            t[o.local.name] = i.value.toString();
          });
        else
          throw new Error("MDX: unexpected import source");
      }
    }), t;
  }, "extractImports"), P1 = /* @__PURE__ */ s((e) => (t) => {
    let r = Da(t), i = I1(r), { title: n, of: o, name: a, isTemplate: u, metaTags: l } = J7(r, i);
    return e.title = n, e.of = o, e.name = a, e.isTemplate = u, e.metaTags = l, e.imports = Array.from(new Set(Object.values(i))), t;
  }, "plugin"), G7 = /* @__PURE__ */ s(async (e) => {
    let t = {
      title: void 0,
      of: void 0,
      name: void 0,
      isTemplate: !1,
      metaTags: void 0,
      imports: void 0
    }, { compile: r } = await Promise.resolve().then(() => (k1(), _1));
    await r(e, {
      rehypePlugins: [[P1, t]]
    });
    let { title: i, of: n, name: o, isTemplate: a, metaTags: u, imports: l = [] } = t;
    return { title: i, of: n, name: o, isTemplate: a, metaTags: u, imports: l };
  }, "analyze");
});

// ../node_modules/totalist/sync/index.mjs
var z1 = {};
Pi(z1, {
  totalist: () => W1
});
import { join as Wh, resolve as sL } from "path";
import { readdirSync as oL, statSync as aL } from "fs";
function W1(e, t, r = "") {
  e = sL(".", e);
  let i = oL(e), n = 0, o, a;
  for (; n < i.length; n++)
    o = Wh(e, i[n]), a = aL(o), a.isDirectory() ? W1(o, t, Wh(r, i[n])) : t(Wh(r, i[n]), o, a);
}
var H1 = ft(() => {
  s(W1, "totalist");
});

// ../node_modules/@polka/url/build.mjs
var G1 = {};
Pi(G1, {
  parse: () => zh
});
import * as J1 from "node:querystring";
function zh(e) {
  let t = e.url;
  if (t == null) return;
  let r = e._parsedUrl;
  if (r && r.raw === t) return r;
  let i = t, n = "", o, a;
  if (t.length > 1) {
    let u = t.indexOf("#", 1);
    u !== -1 && (a = t.substring(u), i = t.substring(0, u)), u = i.indexOf("?", 1), u !== -1 && (n = i.substring(u), i = i.substring(0, u), n.
    length > 1 && (o = J1.parse(n.substring(1))));
  }
  return e._parsedUrl = { pathname: i, search: n, query: o, hash: a, raw: t };
}
var Hh = ft(() => {
  s(zh, "parse");
});

// ../node_modules/mrmime/index.mjs
var K1 = {};
Pi(K1, {
  lookup: () => uL,
  mimes: () => X1
});
function uL(e) {
  let t = ("" + e).trim().toLowerCase(), r = t.lastIndexOf(".");
  return X1[~r ? t.substring(++r) : t];
}
var X1, Y1 = ft(() => {
  X1 = {
    "3g2": "video/3gpp2",
    "3gp": "video/3gpp",
    "3gpp": "video/3gpp",
    "3mf": "model/3mf",
    aac: "audio/aac",
    ac: "application/pkix-attr-cert",
    adp: "audio/adpcm",
    adts: "audio/aac",
    ai: "application/postscript",
    aml: "application/automationml-aml+xml",
    amlx: "application/automationml-amlx+zip",
    amr: "audio/amr",
    apng: "image/apng",
    appcache: "text/cache-manifest",
    appinstaller: "application/appinstaller",
    appx: "application/appx",
    appxbundle: "application/appxbundle",
    asc: "application/pgp-keys",
    atom: "application/atom+xml",
    atomcat: "application/atomcat+xml",
    atomdeleted: "application/atomdeleted+xml",
    atomsvc: "application/atomsvc+xml",
    au: "audio/basic",
    avci: "image/avci",
    avcs: "image/avcs",
    avif: "image/avif",
    aw: "application/applixware",
    bdoc: "application/bdoc",
    bin: "application/octet-stream",
    bmp: "image/bmp",
    bpk: "application/octet-stream",
    btf: "image/prs.btif",
    btif: "image/prs.btif",
    buffer: "application/octet-stream",
    ccxml: "application/ccxml+xml",
    cdfx: "application/cdfx+xml",
    cdmia: "application/cdmi-capability",
    cdmic: "application/cdmi-container",
    cdmid: "application/cdmi-domain",
    cdmio: "application/cdmi-object",
    cdmiq: "application/cdmi-queue",
    cer: "application/pkix-cert",
    cgm: "image/cgm",
    cjs: "application/node",
    class: "application/java-vm",
    coffee: "text/coffeescript",
    conf: "text/plain",
    cpl: "application/cpl+xml",
    cpt: "application/mac-compactpro",
    crl: "application/pkix-crl",
    css: "text/css",
    csv: "text/csv",
    cu: "application/cu-seeme",
    cwl: "application/cwl",
    cww: "application/prs.cww",
    davmount: "application/davmount+xml",
    dbk: "application/docbook+xml",
    deb: "application/octet-stream",
    def: "text/plain",
    deploy: "application/octet-stream",
    dib: "image/bmp",
    "disposition-notification": "message/disposition-notification",
    dist: "application/octet-stream",
    distz: "application/octet-stream",
    dll: "application/octet-stream",
    dmg: "application/octet-stream",
    dms: "application/octet-stream",
    doc: "application/msword",
    dot: "application/msword",
    dpx: "image/dpx",
    drle: "image/dicom-rle",
    dsc: "text/prs.lines.tag",
    dssc: "application/dssc+der",
    dtd: "application/xml-dtd",
    dump: "application/octet-stream",
    dwd: "application/atsc-dwd+xml",
    ear: "application/java-archive",
    ecma: "application/ecmascript",
    elc: "application/octet-stream",
    emf: "image/emf",
    eml: "message/rfc822",
    emma: "application/emma+xml",
    emotionml: "application/emotionml+xml",
    eps: "application/postscript",
    epub: "application/epub+zip",
    exe: "application/octet-stream",
    exi: "application/exi",
    exp: "application/express",
    exr: "image/aces",
    ez: "application/andrew-inset",
    fdf: "application/fdf",
    fdt: "application/fdt+xml",
    fits: "image/fits",
    g3: "image/g3fax",
    gbr: "application/rpki-ghostbusters",
    geojson: "application/geo+json",
    gif: "image/gif",
    glb: "model/gltf-binary",
    gltf: "model/gltf+json",
    gml: "application/gml+xml",
    gpx: "application/gpx+xml",
    gram: "application/srgs",
    grxml: "application/srgs+xml",
    gxf: "application/gxf",
    gz: "application/gzip",
    h261: "video/h261",
    h263: "video/h263",
    h264: "video/h264",
    heic: "image/heic",
    heics: "image/heic-sequence",
    heif: "image/heif",
    heifs: "image/heif-sequence",
    hej2: "image/hej2k",
    held: "application/atsc-held+xml",
    hjson: "application/hjson",
    hlp: "application/winhlp",
    hqx: "application/mac-binhex40",
    hsj2: "image/hsj2",
    htm: "text/html",
    html: "text/html",
    ics: "text/calendar",
    ief: "image/ief",
    ifb: "text/calendar",
    iges: "model/iges",
    igs: "model/iges",
    img: "application/octet-stream",
    in: "text/plain",
    ini: "text/plain",
    ink: "application/inkml+xml",
    inkml: "application/inkml+xml",
    ipfix: "application/ipfix",
    iso: "application/octet-stream",
    its: "application/its+xml",
    jade: "text/jade",
    jar: "application/java-archive",
    jhc: "image/jphc",
    jls: "image/jls",
    jp2: "image/jp2",
    jpe: "image/jpeg",
    jpeg: "image/jpeg",
    jpf: "image/jpx",
    jpg: "image/jpeg",
    jpg2: "image/jp2",
    jpgm: "image/jpm",
    jpgv: "video/jpeg",
    jph: "image/jph",
    jpm: "image/jpm",
    jpx: "image/jpx",
    js: "text/javascript",
    json: "application/json",
    json5: "application/json5",
    jsonld: "application/ld+json",
    jsonml: "application/jsonml+json",
    jsx: "text/jsx",
    jt: "model/jt",
    jxl: "image/jxl",
    jxr: "image/jxr",
    jxra: "image/jxra",
    jxrs: "image/jxrs",
    jxs: "image/jxs",
    jxsc: "image/jxsc",
    jxsi: "image/jxsi",
    jxss: "image/jxss",
    kar: "audio/midi",
    ktx: "image/ktx",
    ktx2: "image/ktx2",
    less: "text/less",
    lgr: "application/lgr+xml",
    list: "text/plain",
    litcoffee: "text/coffeescript",
    log: "text/plain",
    lostxml: "application/lost+xml",
    lrf: "application/octet-stream",
    m1v: "video/mpeg",
    m21: "application/mp21",
    m2a: "audio/mpeg",
    m2t: "video/mp2t",
    m2ts: "video/mp2t",
    m2v: "video/mpeg",
    m3a: "audio/mpeg",
    m4a: "audio/mp4",
    m4p: "application/mp4",
    m4s: "video/iso.segment",
    ma: "application/mathematica",
    mads: "application/mads+xml",
    maei: "application/mmt-aei+xml",
    man: "text/troff",
    manifest: "text/cache-manifest",
    map: "application/json",
    mar: "application/octet-stream",
    markdown: "text/markdown",
    mathml: "application/mathml+xml",
    mb: "application/mathematica",
    mbox: "application/mbox",
    md: "text/markdown",
    mdx: "text/mdx",
    me: "text/troff",
    mesh: "model/mesh",
    meta4: "application/metalink4+xml",
    metalink: "application/metalink+xml",
    mets: "application/mets+xml",
    mft: "application/rpki-manifest",
    mid: "audio/midi",
    midi: "audio/midi",
    mime: "message/rfc822",
    mj2: "video/mj2",
    mjp2: "video/mj2",
    mjs: "text/javascript",
    mml: "text/mathml",
    mods: "application/mods+xml",
    mov: "video/quicktime",
    mp2: "audio/mpeg",
    mp21: "application/mp21",
    mp2a: "audio/mpeg",
    mp3: "audio/mpeg",
    mp4: "video/mp4",
    mp4a: "audio/mp4",
    mp4s: "application/mp4",
    mp4v: "video/mp4",
    mpd: "application/dash+xml",
    mpe: "video/mpeg",
    mpeg: "video/mpeg",
    mpf: "application/media-policy-dataset+xml",
    mpg: "video/mpeg",
    mpg4: "video/mp4",
    mpga: "audio/mpeg",
    mpp: "application/dash-patch+xml",
    mrc: "application/marc",
    mrcx: "application/marcxml+xml",
    ms: "text/troff",
    mscml: "application/mediaservercontrol+xml",
    msh: "model/mesh",
    msi: "application/octet-stream",
    msix: "application/msix",
    msixbundle: "application/msixbundle",
    msm: "application/octet-stream",
    msp: "application/octet-stream",
    mtl: "model/mtl",
    mts: "video/mp2t",
    musd: "application/mmt-usd+xml",
    mxf: "application/mxf",
    mxmf: "audio/mobile-xmf",
    mxml: "application/xv+xml",
    n3: "text/n3",
    nb: "application/mathematica",
    nq: "application/n-quads",
    nt: "application/n-triples",
    obj: "model/obj",
    oda: "application/oda",
    oga: "audio/ogg",
    ogg: "audio/ogg",
    ogv: "video/ogg",
    ogx: "application/ogg",
    omdoc: "application/omdoc+xml",
    onepkg: "application/onenote",
    onetmp: "application/onenote",
    onetoc: "application/onenote",
    onetoc2: "application/onenote",
    opf: "application/oebps-package+xml",
    opus: "audio/ogg",
    otf: "font/otf",
    owl: "application/rdf+xml",
    oxps: "application/oxps",
    p10: "application/pkcs10",
    p7c: "application/pkcs7-mime",
    p7m: "application/pkcs7-mime",
    p7s: "application/pkcs7-signature",
    p8: "application/pkcs8",
    pdf: "application/pdf",
    pfr: "application/font-tdpfr",
    pgp: "application/pgp-encrypted",
    pkg: "application/octet-stream",
    pki: "application/pkixcmp",
    pkipath: "application/pkix-pkipath",
    pls: "application/pls+xml",
    png: "image/png",
    prc: "model/prc",
    prf: "application/pics-rules",
    provx: "application/provenance+xml",
    ps: "application/postscript",
    pskcxml: "application/pskc+xml",
    pti: "image/prs.pti",
    qt: "video/quicktime",
    raml: "application/raml+yaml",
    rapd: "application/route-apd+xml",
    rdf: "application/rdf+xml",
    relo: "application/p2p-overlay+xml",
    rif: "application/reginfo+xml",
    rl: "application/resource-lists+xml",
    rld: "application/resource-lists-diff+xml",
    rmi: "audio/midi",
    rnc: "application/relax-ng-compact-syntax",
    rng: "application/xml",
    roa: "application/rpki-roa",
    roff: "text/troff",
    rq: "application/sparql-query",
    rs: "application/rls-services+xml",
    rsat: "application/atsc-rsat+xml",
    rsd: "application/rsd+xml",
    rsheet: "application/urc-ressheet+xml",
    rss: "application/rss+xml",
    rtf: "text/rtf",
    rtx: "text/richtext",
    rusd: "application/route-usd+xml",
    s3m: "audio/s3m",
    sbml: "application/sbml+xml",
    scq: "application/scvp-cv-request",
    scs: "application/scvp-cv-response",
    sdp: "application/sdp",
    senmlx: "application/senml+xml",
    sensmlx: "application/sensml+xml",
    ser: "application/java-serialized-object",
    setpay: "application/set-payment-initiation",
    setreg: "application/set-registration-initiation",
    sgi: "image/sgi",
    sgm: "text/sgml",
    sgml: "text/sgml",
    shex: "text/shex",
    shf: "application/shf+xml",
    shtml: "text/html",
    sieve: "application/sieve",
    sig: "application/pgp-signature",
    sil: "audio/silk",
    silo: "model/mesh",
    siv: "application/sieve",
    slim: "text/slim",
    slm: "text/slim",
    sls: "application/route-s-tsid+xml",
    smi: "application/smil+xml",
    smil: "application/smil+xml",
    snd: "audio/basic",
    so: "application/octet-stream",
    spdx: "text/spdx",
    spp: "application/scvp-vp-response",
    spq: "application/scvp-vp-request",
    spx: "audio/ogg",
    sql: "application/sql",
    sru: "application/sru+xml",
    srx: "application/sparql-results+xml",
    ssdl: "application/ssdl+xml",
    ssml: "application/ssml+xml",
    stk: "application/hyperstudio",
    stl: "model/stl",
    stpx: "model/step+xml",
    stpxz: "model/step-xml+zip",
    stpz: "model/step+zip",
    styl: "text/stylus",
    stylus: "text/stylus",
    svg: "image/svg+xml",
    svgz: "image/svg+xml",
    swidtag: "application/swid+xml",
    t: "text/troff",
    t38: "image/t38",
    td: "application/urc-targetdesc+xml",
    tei: "application/tei+xml",
    teicorpus: "application/tei+xml",
    text: "text/plain",
    tfi: "application/thraud+xml",
    tfx: "image/tiff-fx",
    tif: "image/tiff",
    tiff: "image/tiff",
    toml: "application/toml",
    tr: "text/troff",
    trig: "application/trig",
    ts: "video/mp2t",
    tsd: "application/timestamped-data",
    tsv: "text/tab-separated-values",
    ttc: "font/collection",
    ttf: "font/ttf",
    ttl: "text/turtle",
    ttml: "application/ttml+xml",
    txt: "text/plain",
    u3d: "model/u3d",
    u8dsn: "message/global-delivery-status",
    u8hdr: "message/global-headers",
    u8mdn: "message/global-disposition-notification",
    u8msg: "message/global",
    ubj: "application/ubjson",
    uri: "text/uri-list",
    uris: "text/uri-list",
    urls: "text/uri-list",
    vcard: "text/vcard",
    vrml: "model/vrml",
    vtt: "text/vtt",
    vxml: "application/voicexml+xml",
    war: "application/java-archive",
    wasm: "application/wasm",
    wav: "audio/wav",
    weba: "audio/webm",
    webm: "video/webm",
    webmanifest: "application/manifest+json",
    webp: "image/webp",
    wgsl: "text/wgsl",
    wgt: "application/widget",
    wif: "application/watcherinfo+xml",
    wmf: "image/wmf",
    woff: "font/woff",
    woff2: "font/woff2",
    wrl: "model/vrml",
    wsdl: "application/wsdl+xml",
    wspolicy: "application/wspolicy+xml",
    x3d: "model/x3d+xml",
    x3db: "model/x3d+fastinfoset",
    x3dbz: "model/x3d+binary",
    x3dv: "model/x3d-vrml",
    x3dvz: "model/x3d+vrml",
    x3dz: "model/x3d+xml",
    xaml: "application/xaml+xml",
    xav: "application/xcap-att+xml",
    xca: "application/xcap-caps+xml",
    xcs: "application/calendar+xml",
    xdf: "application/xcap-diff+xml",
    xdssc: "application/dssc+xml",
    xel: "application/xcap-el+xml",
    xenc: "application/xenc+xml",
    xer: "application/patch-ops-error+xml",
    xfdf: "application/xfdf",
    xht: "application/xhtml+xml",
    xhtml: "application/xhtml+xml",
    xhvml: "application/xv+xml",
    xlf: "application/xliff+xml",
    xm: "audio/xm",
    xml: "text/xml",
    xns: "application/xcap-ns+xml",
    xop: "application/xop+xml",
    xpl: "application/xproc+xml",
    xsd: "application/xml",
    xsf: "application/prs.xsf+xml",
    xsl: "application/xml",
    xslt: "application/xml",
    xspf: "application/xspf+xml",
    xvm: "application/xv+xml",
    xvml: "application/xv+xml",
    yaml: "text/yaml",
    yang: "application/yang",
    yin: "application/yin+xml",
    yml: "text/yaml",
    zip: "application/zip"
  };
  s(uL, "lookup");
});

// ../node_modules/sirv/build.js
var tv = P((Yte, ev) => {
  var Jh = H("fs"), { join: lL, normalize: cL, resolve: pL } = H("path"), { totalist: hL } = (H1(), il(z1)), { parse: fL } = (Hh(), il(G1)),
  { lookup: dL } = (Y1(), il(K1)), mL = /* @__PURE__ */ s(() => {
  }, "noop");
  function gL(e, t) {
    for (let r = 0; r < t.length; r++)
      if (t[r].test(e)) return !0;
  }
  s(gL, "isMatch");
  function Q1(e, t) {
    let r = 0, i, n = e.length - 1;
    e.charCodeAt(n) === 47 && (e = e.substring(0, n));
    let o = [], a = `${e}/index`;
    for (; r < t.length; r++)
      i = t[r] ? `.${t[r]}` : "", e && o.push(e + i), o.push(a + i);
    return o;
  }
  s(Q1, "toAssume");
  function DL(e, t, r) {
    let i = 0, n, o = Q1(t, r);
    for (; i < o.length; i++)
      if (n = e[o[i]]) return n;
  }
  s(DL, "viaCache");
  function yL(e, t, r, i) {
    let n = 0, o = Q1(r, i), a, u, l, c;
    for (; n < o.length; n++)
      if (a = cL(lL(e, l = o[n])), a.startsWith(e) && Jh.existsSync(a)) {
        if (u = Jh.statSync(a), u.isDirectory()) continue;
        return c = Z1(l, u, t), c["Cache-Control"] = t ? "no-cache" : "no-store", { abs: a, stats: u, headers: c };
      }
  }
  s(yL, "viaLocal");
  function xL(e, t) {
    return t.statusCode = 404, t.end();
  }
  s(xL, "is404");
  function EL(e, t, r, i, n) {
    let o = 200, a, u = {};
    n = { ...n };
    for (let l in n)
      a = t.getHeader(l), a && (n[l] = a);
    if ((a = t.getHeader("content-type")) && (n["Content-Type"] = a), e.headers.range) {
      o = 206;
      let [l, c] = e.headers.range.replace("bytes=", "").split("-"), p = u.end = parseInt(c, 10) || i.size - 1, h = u.start = parseInt(l, 10) ||
      0;
      if (p >= i.size && (p = i.size - 1), h >= i.size)
        return t.setHeader("Content-Range", `bytes */${i.size}`), t.statusCode = 416, t.end();
      n["Content-Range"] = `bytes ${h}-${p}/${i.size}`, n["Content-Length"] = p - h + 1, n["Accept-Ranges"] = "bytes";
    }
    t.writeHead(o, n), Jh.createReadStream(r, u).pipe(t);
  }
  s(EL, "send");
  var bL = {
    ".br": "br",
    ".gz": "gzip"
  };
  function Z1(e, t, r) {
    let i = bL[e.slice(-3)], n = dL(e.slice(0, i && -3)) || "";
    n === "text/html" && (n += ";charset=utf-8");
    let o = {
      "Content-Length": t.size,
      "Content-Type": n,
      "Last-Modified": t.mtime.toUTCString()
    };
    return i && (o["Content-Encoding"] = i), r && (o.ETag = `W/"${t.size}-${t.mtime.getTime()}"`), o;
  }
  s(Z1, "toHeaders");
  ev.exports = function(e, t = {}) {
    e = pL(e || ".");
    let r = t.onNoMatch || xL, i = t.setHeaders || mL, n = t.extensions || ["html", "htm"], o = t.gzip && n.map((m) => `${m}.gz`).concat("gz"),
    a = t.brotli && n.map((m) => `${m}.br`).concat("br"), u = {}, l = "/", c = !!t.etag, p = !!t.single;
    if (typeof t.single == "string") {
      let m = t.single.lastIndexOf(".");
      l += ~m ? t.single.substring(0, m) : t.single;
    }
    let h = [];
    t.ignores !== !1 && (h.push(/[/]([A-Za-z\s\d~$._-]+\.\w+){1,}$/), t.dotfiles ? h.push(/\/\.\w/) : h.push(/\/\.well-known/), [].concat(t.
    ignores || []).forEach((m) => {
      h.push(new RegExp(m, "i"));
    }));
    let f = t.maxAge != null && `public,max-age=${t.maxAge}`;
    f && t.immutable ? f += ",immutable" : f && t.maxAge === 0 && (f += ",must-revalidate"), t.dev || hL(e, (m, g, b) => {
      if (!/\.well-known[\\+\/]/.test(m)) {
        if (!t.dotfiles && /(^\.|[\\+|\/+]\.)/.test(m)) return;
      }
      let D = Z1(m, b, c);
      f && (D["Cache-Control"] = f), u["/" + m.normalize().replace(/\\+/g, "/")] = { abs: g, stats: b, headers: D };
    });
    let d = t.dev ? yL.bind(0, e, c) : DL.bind(0, u);
    return function(m, g, b) {
      let D = [""], v = fL(m).pathname, S = m.headers["accept-encoding"] || "";
      if (o && S.includes("gzip") && D.unshift(...o), a && /(br|brotli)/i.test(S) && D.unshift(...a), D.push(...n), v.indexOf("%") !== -1)
        try {
          v = decodeURI(v);
        } catch {
        }
      let k = d(v, D) || p && !gL(v, h) && d(l, D);
      if (!k) return b ? b() : r(m, g);
      if (c && m.headers["if-none-match"] === k.headers.ETag)
        return g.writeHead(304), g.end();
      (o || a) && g.setHeader("Vary", "Accept-Encoding"), i(g, v, k.stats), EL(m, g, k.abs, k.stats, k.headers);
    };
  };
});

// ../node_modules/@discoveryjs/json-ext/package.json
var Dv = P((Ere, NL) => {
  NL.exports = {
    name: "@discoveryjs/json-ext",
    version: "0.5.7",
    description: "A set of utilities that extend the use of JSON",
    keywords: [
      "json",
      "utils",
      "stream",
      "async",
      "promise",
      "stringify",
      "info"
    ],
    author: "Roman Dvornov <rdvornov@gmail.com> (https://github.com/lahmatiy)",
    license: "MIT",
    repository: "discoveryjs/json-ext",
    main: "./src/index",
    browser: {
      "./src/stringify-stream.js": "./src/stringify-stream-browser.js",
      "./src/text-decoder.js": "./src/text-decoder-browser.js",
      "./src/version.js": "./dist/version.js"
    },
    types: "./index.d.ts",
    scripts: {
      test: "mocha --reporter progress",
      lint: "eslint src test",
      "lint-and-test": "npm run lint && npm test",
      build: "rollup --config",
      "test:all": "npm run test:src && npm run test:dist",
      "test:src": "npm test",
      "test:dist": "cross-env MODE=dist npm test && cross-env MODE=dist-min npm test",
      "build-and-test": "npm run build && npm run test:dist",
      coverage: "c8 --reporter=lcovonly npm test",
      prepublishOnly: "npm run lint && npm test && npm run build-and-test"
    },
    devDependencies: {
      "@rollup/plugin-commonjs": "^15.1.0",
      "@rollup/plugin-json": "^4.1.0",
      "@rollup/plugin-node-resolve": "^9.0.0",
      c8: "^7.10.0",
      chalk: "^4.1.0",
      "cross-env": "^7.0.3",
      eslint: "^8.10.0",
      mocha: "^8.4.0",
      rollup: "^2.28.2",
      "rollup-plugin-terser": "^7.0.2"
    },
    engines: {
      node: ">=10.0.0"
    },
    files: [
      "dist",
      "src",
      "index.d.ts"
    ]
  };
});

// ../node_modules/@discoveryjs/json-ext/src/version.js
var xv = P((bre, yv) => {
  yv.exports = Dv().version;
});

// ../node_modules/@discoveryjs/json-ext/src/utils.js
var Ja = P((vre, bv) => {
  var LL = {
    // JSON Single Character Escape Sequences
    8: "\\b",
    9: "\\t",
    10: "\\n",
    12: "\\f",
    13: "\\r",
    34: '\\"',
    92: "\\\\"
  };
  function ML(e) {
    return e >= 55296 && e <= 56319;
  }
  s(ML, "isLeadingSurrogate");
  function jL(e) {
    return e >= 56320 && e <= 57343;
  }
  s(jL, "isTrailingSurrogate");
  function Ev(e) {
    return typeof e.pipe == "function" && typeof e._read == "function" && typeof e._readableState == "object" && e._readableState !== null;
  }
  s(Ev, "isReadableStream");
  function qL(e, t, r, i) {
    switch (r && typeof r.toJSON == "function" && (r = r.toJSON()), i !== null && (r = i.call(e, String(t), r)), typeof r) {
      case "function":
      case "symbol":
        r = void 0;
        break;
      case "object":
        if (r !== null) {
          let n = r.constructor;
          (n === String || n === Number || n === Boolean) && (r = r.valueOf());
        }
        break;
    }
    return r;
  }
  s(qL, "replaceValue");
  function $L(e) {
    return e === null || typeof e != "object" ? 1 : Array.isArray(e) ? 3 : 2;
  }
  s($L, "getTypeNative");
  function VL(e) {
    return e === null || typeof e != "object" ? 1 : typeof e.then == "function" ? 4 : Ev(e) ? e._readableState.objectMode ? 6 : 5 : Array.isArray(
    e) ? 3 : 2;
  }
  s(VL, "getTypeAsync");
  function UL(e) {
    return typeof e == "function" ? e : Array.isArray(e) ? [...new Set(
      e.map((r) => {
        let i = r && r.constructor;
        return i === String || i === Number ? String(r) : null;
      }).filter((r) => typeof r == "string")
    )] : null;
  }
  s(UL, "normalizeReplacer");
  function WL(e) {
    return typeof e == "number" ? !Number.isFinite(e) || e < 1 ? !1 : " ".repeat(Math.min(e, 10)) : typeof e == "string" && e.slice(0, 10) ||
    !1;
  }
  s(WL, "normalizeSpace");
  bv.exports = {
    escapableCharCodeSubstitution: LL,
    isLeadingSurrogate: ML,
    isTrailingSurrogate: jL,
    type: {
      PRIMITIVE: 1,
      PROMISE: 4,
      ARRAY: 3,
      OBJECT: 2,
      STRING_STREAM: 5,
      OBJECT_STREAM: 6
    },
    isReadableStream: Ev,
    replaceValue: qL,
    getTypeNative: $L,
    getTypeAsync: VL,
    normalizeReplacer: UL,
    normalizeSpace: WL
  };
});

// ../node_modules/@discoveryjs/json-ext/src/stringify-info.js
var Av = P((wre, wv) => {
  var {
    normalizeReplacer: zL,
    normalizeSpace: HL,
    replaceValue: JL,
    getTypeNative: GL,
    getTypeAsync: XL,
    isLeadingSurrogate: KL,
    isTrailingSurrogate: YL,
    escapableCharCodeSubstitution: QL,
    type: {
      PRIMITIVE: vv,
      OBJECT: ZL,
      ARRAY: eM,
      PROMISE: tM,
      STRING_STREAM: rM,
      OBJECT_STREAM: iM
    }
  } = Ja(), nM = Array.from({ length: 2048 }).map((e, t) => QL.hasOwnProperty(t) ? 2 : t < 32 ? 6 : t < 128 ? 1 : 2);
  function Cv(e) {
    let t = 0, r = !1;
    for (let i = 0; i < e.length; i++) {
      let n = e.charCodeAt(i);
      if (n < 2048)
        t += nM[n];
      else if (KL(n)) {
        t += 6, r = !0;
        continue;
      } else YL(n) ? t = r ? t - 2 : t + 6 : t += 3;
      r = !1;
    }
    return t + 2;
  }
  s(Cv, "stringLength");
  function sM(e) {
    switch (typeof e) {
      case "string":
        return Cv(e);
      case "number":
        return Number.isFinite(e) ? String(e).length : 4;
      case "boolean":
        return e ? 4 : 5;
      case "undefined":
      case "object":
        return 4;
      /* null */
      default:
        return 0;
    }
  }
  s(sM, "primitiveLength");
  function oM(e) {
    return e = HL(e), typeof e == "string" ? e.length : 0;
  }
  s(oM, "spaceLength");
  wv.exports = /* @__PURE__ */ s(function(t, r, i, n) {
    function o(b, D, v) {
      if (m)
        return;
      v = JL(b, D, v, r);
      let S = f(v);
      if (S !== vv && l.has(v)) {
        p.add(v), g += 4, n.continueOnCircular || (m = !0);
        return;
      }
      switch (S) {
        case vv:
          v !== void 0 || Array.isArray(b) ? g += sM(v) : b === d && (g += 9);
          break;
        case ZL: {
          if (u.has(v)) {
            c.add(v), g += u.get(v);
            break;
          }
          let k = g, L = 0;
          g += 2, l.add(v);
          for (let C in v)
            if (hasOwnProperty.call(v, C) && (a === null || a.has(C))) {
              let w = g;
              o(v, C, v[C]), w !== g && (g += Cv(C) + 1, L++);
            }
          L > 1 && (g += L - 1), l.delete(v), i > 0 && L > 0 && (g += (1 + (l.size + 1) * i + 1) * L, g += 1 + l.size * i), u.set(v, g - k);
          break;
        }
        case eM: {
          if (u.has(v)) {
            c.add(v), g += u.get(v);
            break;
          }
          let k = g;
          g += 2, l.add(v);
          for (let L = 0; L < v.length; L++)
            o(v, L, v[L]);
          v.length > 1 && (g += v.length - 1), l.delete(v), i > 0 && v.length > 0 && (g += (1 + (l.size + 1) * i) * v.length, g += 1 + l.size *
          i), u.set(v, g - k);
          break;
        }
        case tM:
        case rM:
          h.add(v);
          break;
        case iM:
          g += 2, h.add(v);
          break;
      }
    }
    s(o, "walk");
    let a = null;
    r = zL(r), Array.isArray(r) && (a = new Set(r), r = null), i = oM(i), n = n || {};
    let u = /* @__PURE__ */ new Map(), l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set(), p = /* @__PURE__ */ new Set(), h = /* @__PURE__ */ new Set(),
    f = n.async ? XL : GL, d = { "": t }, m = !1, g = 0;
    return o(d, "", t), {
      minLength: isNaN(g) ? 1 / 0 : g,
      circular: [...p],
      duplicate: [...c],
      async: [...h]
    };
  }, "jsonStringifyInfo");
});

// ../node_modules/@discoveryjs/json-ext/src/stringify-stream.js
var Ov = P((Sre, Pv) => {
  var { Readable: aM } = H("stream"), {
    normalizeReplacer: uM,
    normalizeSpace: lM,
    replaceValue: cM,
    getTypeAsync: pM,
    type: {
      PRIMITIVE: hM,
      OBJECT: fM,
      ARRAY: dM,
      PROMISE: mM,
      STRING_STREAM: gM,
      OBJECT_STREAM: Qh
    }
  } = Ja(), Sv = /* @__PURE__ */ s(() => {
  }, "noop"), DM = Object.prototype.hasOwnProperty, yM = JSON.stringify("\uD800") === '"\\ud800"' ? JSON.stringify : (e) => JSON.stringify(e).
  replace(
    /\p{Surrogate}/gu,
    (t) => `\\u${t.charCodeAt(0).toString(16)}`
  );
  function xM() {
    this.push(this._stack.value), this.popStack();
  }
  s(xM, "push");
  function EM(e) {
    switch (typeof e) {
      case "string":
        this.push(this.encodeString(e));
        break;
      case "number":
        this.push(Number.isFinite(e) ? this.encodeNumber(e) : "null");
        break;
      case "boolean":
        this.push(e ? "true" : "false");
        break;
      case "undefined":
      case "object":
        this.push("null");
        break;
      default:
        this.destroy(new TypeError(`Do not know how to serialize a ${e.constructor && e.constructor.name || typeof e}`));
    }
  }
  s(EM, "pushPrimitive");
  function Tv(e) {
    let t = this._stack;
    t.first ? this.push(",") : t.first = !0, this.space ? this.push(`
${this.space.repeat(this._depth)}${this.encodeString(e)}: `) : this.push(this.encodeString(e) + ":");
  }
  s(Tv, "processObjectEntry");
  function Fv() {
    let e = this._stack;
    if (e.index === e.keys.length) {
      this.space && e.first ? this.push(`
${this.space.repeat(this._depth - 1)}}`) : this.push("}"), this.popStack();
      return;
    }
    let t = e.keys[e.index];
    this.processValue(e.value, t, e.value[t], Tv), e.index++;
  }
  s(Fv, "processObject");
  function Bv(e) {
    e !== 0 && this.push(","), this.space && this.push(`
${this.space.repeat(this._depth)}`);
  }
  s(Bv, "processArrayItem");
  function _v() {
    let e = this._stack;
    if (e.index === e.value.length) {
      this.space && e.index > 0 ? this.push(`
${this.space.repeat(this._depth - 1)}]`) : this.push("]"), this.popStack();
      return;
    }
    this.processValue(e.value, e.index, e.value[e.index], Bv), e.index++;
  }
  s(_v, "processArray");
  function Iv(e) {
    return function() {
      let t = this._stack, r = t.value.read(this._readSize);
      r !== null ? (t.first = !1, e.call(this, r, t)) : t.first && !t.value._readableState.reading || t.ended ? this.popStack() : (t.first =
      !0, t.awaiting = !0);
    };
  }
  s(Iv, "createStreamReader");
  var kv = Iv(function(e, t) {
    this.processValue(t.value, t.index, e, Bv), t.index++;
  }), bM = Iv(function(e) {
    this.push(e);
  }), Zh = class extends aM {
    static {
      s(this, "JsonStringifyStream");
    }
    constructor(t, r, i) {
      if (super({
        autoDestroy: !0
      }), this.getKeys = Object.keys, this.replacer = uM(r), Array.isArray(this.replacer)) {
        let n = this.replacer;
        this.getKeys = (o) => n.filter((a) => DM.call(o, a)), this.replacer = null;
      }
      this.space = lM(i), this._depth = 0, this.error = null, this._processing = !1, this._ended = !1, this._readSize = 0, this._buffer = "",
      this._stack = null, this._visited = /* @__PURE__ */ new WeakSet(), this.pushStack({
        handler: /* @__PURE__ */ s(() => {
          this.popStack(), this.processValue({ "": t }, "", t, Sv);
        }, "handler")
      });
    }
    encodeString(t) {
      return /[^\x20-\uD799]|[\x22\x5c]/.test(t) ? yM(t) : '"' + t + '"';
    }
    encodeNumber(t) {
      return t;
    }
    processValue(t, r, i, n) {
      i = cM(t, r, i, this.replacer);
      let o = pM(i);
      switch (o) {
        case hM:
          (n !== Tv || i !== void 0) && (n.call(this, r), EM.call(this, i));
          break;
        case fM:
          if (n.call(this, r), this._visited.has(i))
            return this.destroy(new TypeError("Converting circular structure to JSON"));
          this._visited.add(i), this._depth++, this.push("{"), this.pushStack({
            handler: Fv,
            value: i,
            index: 0,
            first: !1,
            keys: this.getKeys(i)
          });
          break;
        case dM:
          if (n.call(this, r), this._visited.has(i))
            return this.destroy(new TypeError("Converting circular structure to JSON"));
          this._visited.add(i), this.push("["), this.pushStack({
            handler: _v,
            value: i,
            index: 0
          }), this._depth++;
          break;
        case mM:
          this.pushStack({
            handler: Sv,
            awaiting: !0
          }), Promise.resolve(i).then((l) => {
            this.popStack(), this.processValue(t, r, l, n), this.processStack();
          }).catch((l) => {
            this.destroy(l);
          });
          break;
        case gM:
        case Qh:
          if (n.call(this, r), i.readableEnded || i._readableState.endEmitted)
            return this.destroy(new Error("Readable Stream has ended before it was serialized. All stream data have been lost"));
          if (i.readableFlowing)
            return this.destroy(new Error("Readable Stream is in flowing mode, data may have been lost. Trying to pause stream."));
          o === Qh && (this.push("["), this.pushStack({
            handler: xM,
            value: this.space ? `
` + this.space.repeat(this._depth) + "]" : "]"
          }), this._depth++);
          let a = this.pushStack({
            handler: o === Qh ? kv : bM,
            value: i,
            index: 0,
            first: !1,
            ended: !1,
            awaiting: !i.readable || i.readableLength === 0
          }), u = /* @__PURE__ */ s(() => {
            a.awaiting && (a.awaiting = !1, this.processStack());
          }, "continueProcessing");
          i.once("error", (l) => this.destroy(l)), i.once("end", () => {
            a.ended = !0, u();
          }), i.on("readable", u);
          break;
      }
    }
    pushStack(t) {
      return t.prev = this._stack, this._stack = t;
    }
    popStack() {
      let { handler: t, value: r } = this._stack;
      (t === Fv || t === _v || t === kv) && (this._visited.delete(r), this._depth--), this._stack = this._stack.prev;
    }
    processStack() {
      if (!(this._processing || this._ended)) {
        try {
          for (this._processing = !0; this._stack !== null && !this._stack.awaiting; )
            if (this._stack.handler.call(this), !this._processing)
              return;
          this._processing = !1;
        } catch (t) {
          this.destroy(t);
          return;
        }
        this._stack === null && !this._ended && (this._finish(), this.push(null));
      }
    }
    push(t) {
      if (t !== null) {
        if (this._buffer += t, this._buffer.length < this._readSize)
          return;
        t = this._buffer, this._buffer = "", this._processing = !1;
      }
      super.push(t);
    }
    _read(t) {
      this._readSize = t || this.readableHighWaterMark, this.processStack();
    }
    _finish() {
      this._ended = !0, this._processing = !1, this._stack = null, this._visited = null, this._buffer && this._buffer.length && super.push(this.
      _buffer), this._buffer = "";
    }
    _destroy(t, r) {
      this.error = this.error || t, this._finish(), r(t);
    }
  };
  Pv.exports = /* @__PURE__ */ s(function(t, r, i) {
    return new Zh(t, r, i);
  }, "createJsonStringifyStream");
});

// ../node_modules/@discoveryjs/json-ext/src/text-decoder.js
var Nv = P((_re, Rv) => {
  Rv.exports = H("util").TextDecoder;
});

// ../node_modules/@discoveryjs/json-ext/src/parse-chunked.js
var jv = P((kre, Mv) => {
  var { isReadableStream: vM } = Ja(), CM = Nv(), Vs = 1, wM = 2, AM = new CM();
  function Lv(e) {
    return e !== null && typeof e == "object";
  }
  s(Lv, "isObject");
  function ef(e, t) {
    return e.name === "SyntaxError" && t.jsonParseOffset && (e.message = e.message.replace(
      /at position (\d+)/,
      (r, i) => "at position " + (Number(i) + t.jsonParseOffset)
    )), e;
  }
  s(ef, "adjustPosition");
  function SM(e, t) {
    let r = e.length;
    e.length += t.length;
    for (let i = 0; i < t.length; i++)
      e[r + i] = t[i];
  }
  s(SM, "append");
  Mv.exports = function(e) {
    let t = new tf();
    if (Lv(e) && vM(e))
      return new Promise((r, i) => {
        e.on("data", (n) => {
          try {
            t.push(n);
          } catch (o) {
            i(ef(o, t)), t = null;
          }
        }).on("error", (n) => {
          t = null, i(n);
        }).on("end", () => {
          try {
            r(t.finish());
          } catch (n) {
            i(ef(n, t));
          } finally {
            t = null;
          }
        });
      });
    if (typeof e == "function") {
      let r = e();
      if (Lv(r) && (Symbol.iterator in r || Symbol.asyncIterator in r))
        return new Promise(async (i, n) => {
          try {
            for await (let o of r)
              t.push(o);
            i(t.finish());
          } catch (o) {
            n(ef(o, t));
          } finally {
            t = null;
          }
        });
    }
    throw new Error(
      "Chunk emitter should be readable stream, generator, async generator or function returning an iterable object"
    );
  };
  var tf = class {
    static {
      s(this, "ChunkParser");
    }
    constructor() {
      this.value = void 0, this.valueStack = null, this.stack = new Array(100), this.lastFlushDepth = 0, this.flushDepth = 0, this.stateString =
      !1, this.stateStringEscape = !1, this.pendingByteSeq = null, this.pendingChunk = null, this.chunkOffset = 0, this.jsonParseOffset = 0;
    }
    parseAndAppend(t, r) {
      this.stack[this.lastFlushDepth - 1] === Vs ? (r && (this.jsonParseOffset--, t = "{" + t + "}"), Object.assign(this.valueStack.value, JSON.
      parse(t))) : (r && (this.jsonParseOffset--, t = "[" + t + "]"), SM(this.valueStack.value, JSON.parse(t)));
    }
    prepareAddition(t) {
      let { value: r } = this.valueStack;
      if (Array.isArray(r) ? r.length !== 0 : Object.keys(r).length !== 0) {
        if (t[0] === ",")
          return this.jsonParseOffset++, t.slice(1);
        if (t[0] !== "}" && t[0] !== "]")
          return this.jsonParseOffset -= 3, "[[]" + t;
      }
      return t;
    }
    flush(t, r, i) {
      let n = t.slice(r, i);
      if (this.jsonParseOffset = this.chunkOffset + r, this.pendingChunk !== null && (n = this.pendingChunk + n, this.jsonParseOffset -= this.
      pendingChunk.length, this.pendingChunk = null), this.flushDepth === this.lastFlushDepth)
        this.flushDepth > 0 ? this.parseAndAppend(this.prepareAddition(n), !0) : (this.value = JSON.parse(n), this.valueStack = {
          value: this.value,
          prev: null
        });
      else if (this.flushDepth > this.lastFlushDepth) {
        for (let o = this.flushDepth - 1; o >= this.lastFlushDepth; o--)
          n += this.stack[o] === Vs ? "}" : "]";
        this.lastFlushDepth === 0 ? (this.value = JSON.parse(n), this.valueStack = {
          value: this.value,
          prev: null
        }) : this.parseAndAppend(this.prepareAddition(n), !0);
        for (let o = this.lastFlushDepth || 1; o < this.flushDepth; o++) {
          let a = this.valueStack.value;
          if (this.stack[o - 1] === Vs) {
            let u;
            for (u in a) ;
            a = a[u];
          } else
            a = a[a.length - 1];
          this.valueStack = {
            value: a,
            prev: this.valueStack
          };
        }
      } else {
        n = this.prepareAddition(n);
        for (let o = this.lastFlushDepth - 1; o >= this.flushDepth; o--)
          this.jsonParseOffset--, n = (this.stack[o] === Vs ? "{" : "[") + n;
        this.parseAndAppend(n, !1);
        for (let o = this.lastFlushDepth - 1; o >= this.flushDepth; o--)
          this.valueStack = this.valueStack.prev;
      }
      this.lastFlushDepth = this.flushDepth;
    }
    push(t) {
      if (typeof t != "string") {
        if (this.pendingByteSeq !== null) {
          let o = t;
          t = new Uint8Array(this.pendingByteSeq.length + o.length), t.set(this.pendingByteSeq), t.set(o, this.pendingByteSeq.length), this.
          pendingByteSeq = null;
        }
        if (t[t.length - 1] > 127)
          for (let o = 0; o < t.length; o++) {
            let a = t[t.length - 1 - o];
            if (a >> 6 === 3) {
              o++, (o !== 4 && a >> 3 === 30 || o !== 3 && a >> 4 === 14 || o !== 2 && a >> 5 === 6) && (this.pendingByteSeq = t.slice(t.length -
              o), t = t.slice(0, -o));
              break;
            }
          }
        t = AM.decode(t);
      }
      let r = t.length, i = 0, n = 0;
      e: for (let o = 0; o < r; o++) {
        if (this.stateString) {
          for (; o < r; o++)
            if (this.stateStringEscape)
              this.stateStringEscape = !1;
            else
              switch (t.charCodeAt(o)) {
                case 34:
                  this.stateString = !1;
                  continue e;
                case 92:
                  this.stateStringEscape = !0;
              }
          break;
        }
        switch (t.charCodeAt(o)) {
          case 34:
            this.stateString = !0, this.stateStringEscape = !1;
            break;
          case 44:
            n = o;
            break;
          case 123:
            n = o + 1, this.stack[this.flushDepth++] = Vs;
            break;
          case 91:
            n = o + 1, this.stack[this.flushDepth++] = wM;
            break;
          case 93:
          /* ] */
          case 125:
            n = o + 1, this.flushDepth--, this.flushDepth < this.lastFlushDepth && (this.flush(t, i, n), i = n);
            break;
          case 9:
          /* \t */
          case 10:
          /* \n */
          case 13:
          /* \r */
          case 32:
            i === o && i++, n === o && n++;
            break;
        }
      }
      n > i && this.flush(t, i, n), n < r && (this.pendingChunk !== null ? this.pendingChunk += t : this.pendingChunk = t.slice(n, r)), this.
      chunkOffset += r;
    }
    finish() {
      return this.pendingChunk !== null && (this.flush("", 0, 0), this.pendingChunk = null), this.value;
    }
  };
});

// ../node_modules/@discoveryjs/json-ext/src/index.js
var $v = P((Bre, qv) => {
  qv.exports = {
    version: xv(),
    stringifyInfo: Av(),
    stringifyStream: Ov(),
    parseChunked: jv()
  };
});

// ../node_modules/graceful-fs/polyfills.js
var Jv = P((Wre, Hv) => {
  var bi = H("constants"), kM = process.cwd, Xa = null, TM = process.env.GRACEFUL_FS_PLATFORM || process.platform;
  process.cwd = function() {
    return Xa || (Xa = kM.call(process)), Xa;
  };
  try {
    process.cwd();
  } catch {
  }
  typeof process.chdir == "function" && (sf = process.chdir, process.chdir = function(e) {
    Xa = null, sf.call(process, e);
  }, Object.setPrototypeOf && Object.setPrototypeOf(process.chdir, sf));
  var sf;
  Hv.exports = BM;
  function BM(e) {
    bi.hasOwnProperty("O_SYMLINK") && process.version.match(/^v0\.6\.[0-2]|^v0\.5\./) && t(e), e.lutimes || r(e), e.chown = o(e.chown), e.fchown =
    o(e.fchown), e.lchown = o(e.lchown), e.chmod = i(e.chmod), e.fchmod = i(e.fchmod), e.lchmod = i(e.lchmod), e.chownSync = a(e.chownSync),
    e.fchownSync = a(e.fchownSync), e.lchownSync = a(e.lchownSync), e.chmodSync = n(e.chmodSync), e.fchmodSync = n(e.fchmodSync), e.lchmodSync =
    n(e.lchmodSync), e.stat = u(e.stat), e.fstat = u(e.fstat), e.lstat = u(e.lstat), e.statSync = l(e.statSync), e.fstatSync = l(e.fstatSync),
    e.lstatSync = l(e.lstatSync), e.chmod && !e.lchmod && (e.lchmod = function(p, h, f) {
      f && process.nextTick(f);
    }, e.lchmodSync = function() {
    }), e.chown && !e.lchown && (e.lchown = function(p, h, f, d) {
      d && process.nextTick(d);
    }, e.lchownSync = function() {
    }), TM === "win32" && (e.rename = typeof e.rename != "function" ? e.rename : function(p) {
      function h(f, d, m) {
        var g = Date.now(), b = 0;
        p(f, d, /* @__PURE__ */ s(function D(v) {
          if (v && (v.code === "EACCES" || v.code === "EPERM" || v.code === "EBUSY") && Date.now() - g < 6e4) {
            setTimeout(function() {
              e.stat(d, function(S, k) {
                S && S.code === "ENOENT" ? p(f, d, D) : m(v);
              });
            }, b), b < 100 && (b += 10);
            return;
          }
          m && m(v);
        }, "CB"));
      }
      return s(h, "rename"), Object.setPrototypeOf && Object.setPrototypeOf(h, p), h;
    }(e.rename)), e.read = typeof e.read != "function" ? e.read : function(p) {
      function h(f, d, m, g, b, D) {
        var v;
        if (D && typeof D == "function") {
          var S = 0;
          v = /* @__PURE__ */ s(function(k, L, C) {
            if (k && k.code === "EAGAIN" && S < 10)
              return S++, p.call(e, f, d, m, g, b, v);
            D.apply(this, arguments);
          }, "callback");
        }
        return p.call(e, f, d, m, g, b, v);
      }
      return s(h, "read"), Object.setPrototypeOf && Object.setPrototypeOf(h, p), h;
    }(e.read), e.readSync = typeof e.readSync != "function" ? e.readSync : /* @__PURE__ */ function(p) {
      return function(h, f, d, m, g) {
        for (var b = 0; ; )
          try {
            return p.call(e, h, f, d, m, g);
          } catch (D) {
            if (D.code === "EAGAIN" && b < 10) {
              b++;
              continue;
            }
            throw D;
          }
      };
    }(e.readSync);
    function t(p) {
      p.lchmod = function(h, f, d) {
        p.open(
          h,
          bi.O_WRONLY | bi.O_SYMLINK,
          f,
          function(m, g) {
            if (m) {
              d && d(m);
              return;
            }
            p.fchmod(g, f, function(b) {
              p.close(g, function(D) {
                d && d(b || D);
              });
            });
          }
        );
      }, p.lchmodSync = function(h, f) {
        var d = p.openSync(h, bi.O_WRONLY | bi.O_SYMLINK, f), m = !0, g;
        try {
          g = p.fchmodSync(d, f), m = !1;
        } finally {
          if (m)
            try {
              p.closeSync(d);
            } catch {
            }
          else
            p.closeSync(d);
        }
        return g;
      };
    }
    s(t, "patchLchmod");
    function r(p) {
      bi.hasOwnProperty("O_SYMLINK") && p.futimes ? (p.lutimes = function(h, f, d, m) {
        p.open(h, bi.O_SYMLINK, function(g, b) {
          if (g) {
            m && m(g);
            return;
          }
          p.futimes(b, f, d, function(D) {
            p.close(b, function(v) {
              m && m(D || v);
            });
          });
        });
      }, p.lutimesSync = function(h, f, d) {
        var m = p.openSync(h, bi.O_SYMLINK), g, b = !0;
        try {
          g = p.futimesSync(m, f, d), b = !1;
        } finally {
          if (b)
            try {
              p.closeSync(m);
            } catch {
            }
          else
            p.closeSync(m);
        }
        return g;
      }) : p.futimes && (p.lutimes = function(h, f, d, m) {
        m && process.nextTick(m);
      }, p.lutimesSync = function() {
      });
    }
    s(r, "patchLutimes");
    function i(p) {
      return p && function(h, f, d) {
        return p.call(e, h, f, function(m) {
          c(m) && (m = null), d && d.apply(this, arguments);
        });
      };
    }
    s(i, "chmodFix");
    function n(p) {
      return p && function(h, f) {
        try {
          return p.call(e, h, f);
        } catch (d) {
          if (!c(d)) throw d;
        }
      };
    }
    s(n, "chmodFixSync");
    function o(p) {
      return p && function(h, f, d, m) {
        return p.call(e, h, f, d, function(g) {
          c(g) && (g = null), m && m.apply(this, arguments);
        });
      };
    }
    s(o, "chownFix");
    function a(p) {
      return p && function(h, f, d) {
        try {
          return p.call(e, h, f, d);
        } catch (m) {
          if (!c(m)) throw m;
        }
      };
    }
    s(a, "chownFixSync");
    function u(p) {
      return p && function(h, f, d) {
        typeof f == "function" && (d = f, f = null);
        function m(g, b) {
          b && (b.uid < 0 && (b.uid += 4294967296), b.gid < 0 && (b.gid += 4294967296)), d && d.apply(this, arguments);
        }
        return s(m, "callback"), f ? p.call(e, h, f, m) : p.call(e, h, m);
      };
    }
    s(u, "statFix");
    function l(p) {
      return p && function(h, f) {
        var d = f ? p.call(e, h, f) : p.call(e, h);
        return d && (d.uid < 0 && (d.uid += 4294967296), d.gid < 0 && (d.gid += 4294967296)), d;
      };
    }
    s(l, "statFixSync");
    function c(p) {
      if (!p || p.code === "ENOSYS")
        return !0;
      var h = !process.getuid || process.getuid() !== 0;
      return !!(h && (p.code === "EINVAL" || p.code === "EPERM"));
    }
    s(c, "chownErOk");
  }
  s(BM, "patch");
});

// ../node_modules/graceful-fs/legacy-streams.js
var Kv = P((Hre, Xv) => {
  var Gv = H("stream").Stream;
  Xv.exports = IM;
  function IM(e) {
    return {
      ReadStream: t,
      WriteStream: r
    };
    function t(i, n) {
      if (!(this instanceof t)) return new t(i, n);
      Gv.call(this);
      var o = this;
      this.path = i, this.fd = null, this.readable = !0, this.paused = !1, this.flags = "r", this.mode = 438, this.bufferSize = 64 * 1024, n =
      n || {};
      for (var a = Object.keys(n), u = 0, l = a.length; u < l; u++) {
        var c = a[u];
        this[c] = n[c];
      }
      if (this.encoding && this.setEncoding(this.encoding), this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.end === void 0)
          this.end = 1 / 0;
        else if (typeof this.end != "number")
          throw TypeError("end must be a Number");
        if (this.start > this.end)
          throw new Error("start must be <= end");
        this.pos = this.start;
      }
      if (this.fd !== null) {
        process.nextTick(function() {
          o._read();
        });
        return;
      }
      e.open(this.path, this.flags, this.mode, function(p, h) {
        if (p) {
          o.emit("error", p), o.readable = !1;
          return;
        }
        o.fd = h, o.emit("open", h), o._read();
      });
    }
    function r(i, n) {
      if (!(this instanceof r)) return new r(i, n);
      Gv.call(this), this.path = i, this.fd = null, this.writable = !0, this.flags = "w", this.encoding = "binary", this.mode = 438, this.bytesWritten =
      0, n = n || {};
      for (var o = Object.keys(n), a = 0, u = o.length; a < u; a++) {
        var l = o[a];
        this[l] = n[l];
      }
      if (this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.start < 0)
          throw new Error("start must be >= zero");
        this.pos = this.start;
      }
      this.busy = !1, this._queue = [], this.fd === null && (this._open = e.open, this._queue.push([this._open, this.path, this.flags, this.
      mode, void 0]), this.flush());
    }
  }
  s(IM, "legacy");
});

// ../node_modules/graceful-fs/clone.js
var Qv = P((Gre, Yv) => {
  "use strict";
  Yv.exports = OM;
  var PM = Object.getPrototypeOf || function(e) {
    return e.__proto__;
  };
  function OM(e) {
    if (e === null || typeof e != "object")
      return e;
    if (e instanceof Object)
      var t = { __proto__: PM(e) };
    else
      var t = /* @__PURE__ */ Object.create(null);
    return Object.getOwnPropertyNames(e).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(e, r));
    }), t;
  }
  s(OM, "clone");
});

// ../node_modules/graceful-fs/graceful-fs.js
var rC = P((Kre, uf) => {
  var Ge = H("fs"), RM = Jv(), NM = Kv(), LM = Qv(), Ka = H("util"), ht, Qa;
  typeof Symbol == "function" && typeof Symbol.for == "function" ? (ht = Symbol.for("graceful-fs.queue"), Qa = Symbol.for("graceful-fs.previ\
ous")) : (ht = "___graceful-fs.queue", Qa = "___graceful-fs.previous");
  function MM() {
  }
  s(MM, "noop");
  function tC(e, t) {
    Object.defineProperty(e, ht, {
      get: /* @__PURE__ */ s(function() {
        return t;
      }, "get")
    });
  }
  s(tC, "publishQueue");
  var Ui = MM;
  Ka.debuglog ? Ui = Ka.debuglog("gfs4") : /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && (Ui = /* @__PURE__ */ s(function() {
    var e = Ka.format.apply(Ka, arguments);
    e = "GFS4: " + e.split(/\n/).join(`
GFS4: `), console.error(e);
  }, "debug"));
  Ge[ht] || (Zv = global[ht] || [], tC(Ge, Zv), Ge.close = function(e) {
    function t(r, i) {
      return e.call(Ge, r, function(n) {
        n || eC(), typeof i == "function" && i.apply(this, arguments);
      });
    }
    return s(t, "close"), Object.defineProperty(t, Qa, {
      value: e
    }), t;
  }(Ge.close), Ge.closeSync = function(e) {
    function t(r) {
      e.apply(Ge, arguments), eC();
    }
    return s(t, "closeSync"), Object.defineProperty(t, Qa, {
      value: e
    }), t;
  }(Ge.closeSync), /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && process.on("exit", function() {
    Ui(Ge[ht]), H("assert").equal(Ge[ht].length, 0);
  }));
  var Zv;
  global[ht] || tC(global, Ge[ht]);
  uf.exports = of(LM(Ge));
  process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !Ge.__patched && (uf.exports = of(Ge), Ge.__patched = !0);
  function of(e) {
    RM(e), e.gracefulify = of, e.createReadStream = L, e.createWriteStream = C;
    var t = e.readFile;
    e.readFile = r;
    function r(_, q, O) {
      return typeof q == "function" && (O = q, q = null), $(_, q, O);
      function $(V, K, M, R) {
        return t(V, K, function(U) {
          U && (U.code === "EMFILE" || U.code === "ENFILE") ? Nn([$, [V, K, M], U, R || Date.now(), Date.now()]) : typeof M == "function" &&
          M.apply(this, arguments);
        });
      }
      s($, "go$readFile");
    }
    s(r, "readFile");
    var i = e.writeFile;
    e.writeFile = n;
    function n(_, q, O, $) {
      return typeof O == "function" && ($ = O, O = null), V(_, q, O, $);
      function V(K, M, R, U, Y) {
        return i(K, M, R, function(ee) {
          ee && (ee.code === "EMFILE" || ee.code === "ENFILE") ? Nn([V, [K, M, R, U], ee, Y || Date.now(), Date.now()]) : typeof U == "funct\
ion" && U.apply(this, arguments);
        });
      }
      s(V, "go$writeFile");
    }
    s(n, "writeFile");
    var o = e.appendFile;
    o && (e.appendFile = a);
    function a(_, q, O, $) {
      return typeof O == "function" && ($ = O, O = null), V(_, q, O, $);
      function V(K, M, R, U, Y) {
        return o(K, M, R, function(ee) {
          ee && (ee.code === "EMFILE" || ee.code === "ENFILE") ? Nn([V, [K, M, R, U], ee, Y || Date.now(), Date.now()]) : typeof U == "funct\
ion" && U.apply(this, arguments);
        });
      }
      s(V, "go$appendFile");
    }
    s(a, "appendFile");
    var u = e.copyFile;
    u && (e.copyFile = l);
    function l(_, q, O, $) {
      return typeof O == "function" && ($ = O, O = 0), V(_, q, O, $);
      function V(K, M, R, U, Y) {
        return u(K, M, R, function(ee) {
          ee && (ee.code === "EMFILE" || ee.code === "ENFILE") ? Nn([V, [K, M, R, U], ee, Y || Date.now(), Date.now()]) : typeof U == "funct\
ion" && U.apply(this, arguments);
        });
      }
      s(V, "go$copyFile");
    }
    s(l, "copyFile");
    var c = e.readdir;
    e.readdir = h;
    var p = /^v[0-5]\./;
    function h(_, q, O) {
      typeof q == "function" && (O = q, q = null);
      var $ = p.test(process.version) ? /* @__PURE__ */ s(function(M, R, U, Y) {
        return c(M, V(
          M,
          R,
          U,
          Y
        ));
      }, "go$readdir") : /* @__PURE__ */ s(function(M, R, U, Y) {
        return c(M, R, V(
          M,
          R,
          U,
          Y
        ));
      }, "go$readdir");
      return $(_, q, O);
      function V(K, M, R, U) {
        return function(Y, ee) {
          Y && (Y.code === "EMFILE" || Y.code === "ENFILE") ? Nn([
            $,
            [K, M, R],
            Y,
            U || Date.now(),
            Date.now()
          ]) : (ee && ee.sort && ee.sort(), typeof R == "function" && R.call(this, Y, ee));
        };
      }
    }
    if (s(h, "readdir"), process.version.substr(0, 4) === "v0.8") {
      var f = NM(e);
      D = f.ReadStream, S = f.WriteStream;
    }
    var d = e.ReadStream;
    d && (D.prototype = Object.create(d.prototype), D.prototype.open = v);
    var m = e.WriteStream;
    m && (S.prototype = Object.create(m.prototype), S.prototype.open = k), Object.defineProperty(e, "ReadStream", {
      get: /* @__PURE__ */ s(function() {
        return D;
      }, "get"),
      set: /* @__PURE__ */ s(function(_) {
        D = _;
      }, "set"),
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e, "WriteStream", {
      get: /* @__PURE__ */ s(function() {
        return S;
      }, "get"),
      set: /* @__PURE__ */ s(function(_) {
        S = _;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var g = D;
    Object.defineProperty(e, "FileReadStream", {
      get: /* @__PURE__ */ s(function() {
        return g;
      }, "get"),
      set: /* @__PURE__ */ s(function(_) {
        g = _;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var b = S;
    Object.defineProperty(e, "FileWriteStream", {
      get: /* @__PURE__ */ s(function() {
        return b;
      }, "get"),
      set: /* @__PURE__ */ s(function(_) {
        b = _;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    function D(_, q) {
      return this instanceof D ? (d.apply(this, arguments), this) : D.apply(Object.create(D.prototype), arguments);
    }
    s(D, "ReadStream");
    function v() {
      var _ = this;
      T(_.path, _.flags, _.mode, function(q, O) {
        q ? (_.autoClose && _.destroy(), _.emit("error", q)) : (_.fd = O, _.emit("open", O), _.read());
      });
    }
    s(v, "ReadStream$open");
    function S(_, q) {
      return this instanceof S ? (m.apply(this, arguments), this) : S.apply(Object.create(S.prototype), arguments);
    }
    s(S, "WriteStream");
    function k() {
      var _ = this;
      T(_.path, _.flags, _.mode, function(q, O) {
        q ? (_.destroy(), _.emit("error", q)) : (_.fd = O, _.emit("open", O));
      });
    }
    s(k, "WriteStream$open");
    function L(_, q) {
      return new e.ReadStream(_, q);
    }
    s(L, "createReadStream");
    function C(_, q) {
      return new e.WriteStream(_, q);
    }
    s(C, "createWriteStream");
    var w = e.open;
    e.open = T;
    function T(_, q, O, $) {
      return typeof O == "function" && ($ = O, O = null), V(_, q, O, $);
      function V(K, M, R, U, Y) {
        return w(K, M, R, function(ee, I) {
          ee && (ee.code === "EMFILE" || ee.code === "ENFILE") ? Nn([V, [K, M, R, U], ee, Y || Date.now(), Date.now()]) : typeof U == "funct\
ion" && U.apply(this, arguments);
        });
      }
      s(V, "go$open");
    }
    return s(T, "open"), e;
  }
  s(of, "patch");
  function Nn(e) {
    Ui("ENQUEUE", e[0].name, e[1]), Ge[ht].push(e), af();
  }
  s(Nn, "enqueue");
  var Ya;
  function eC() {
    for (var e = Date.now(), t = 0; t < Ge[ht].length; ++t)
      Ge[ht][t].length > 2 && (Ge[ht][t][3] = e, Ge[ht][t][4] = e);
    af();
  }
  s(eC, "resetQueue");
  function af() {
    if (clearTimeout(Ya), Ya = void 0, Ge[ht].length !== 0) {
      var e = Ge[ht].shift(), t = e[0], r = e[1], i = e[2], n = e[3], o = e[4];
      if (n === void 0)
        Ui("RETRY", t.name, r), t.apply(null, r);
      else if (Date.now() - n >= 6e4) {
        Ui("TIMEOUT", t.name, r);
        var a = r.pop();
        typeof a == "function" && a.call(null, i);
      } else {
        var u = Date.now() - o, l = Math.max(o - n, 1), c = Math.min(l * 1.2, 100);
        u >= c ? (Ui("RETRY", t.name, r), t.apply(null, r.concat([n]))) : Ge[ht].push(e);
      }
      Ya === void 0 && (Ya = setTimeout(af, 0));
    }
  }
  s(af, "retry");
});

// ../node_modules/watchpack/lib/reducePlan.js
var nC = P((Qre, iC) => {
  "use strict";
  var jM = H("path");
  iC.exports = (e, t) => {
    let r = /* @__PURE__ */ new Map();
    for (let [o, a] of e)
      r.set(o, {
        filePath: o,
        parent: void 0,
        children: void 0,
        entries: 1,
        active: !0,
        value: a
      });
    let i = r.size;
    for (let o of r.values()) {
      let a = jM.dirname(o.filePath);
      if (a !== o.filePath) {
        let u = r.get(a);
        if (u === void 0)
          u = {
            filePath: a,
            parent: void 0,
            children: [o],
            entries: o.entries,
            active: !1,
            value: void 0
          }, r.set(a, u), o.parent = u;
        else {
          o.parent = u, u.children === void 0 ? u.children = [o] : u.children.push(o);
          do
            u.entries += o.entries, u = u.parent;
          while (u);
        }
      }
    }
    for (; i > t; ) {
      let o = i - t, a, u = 1 / 0;
      for (let h of r.values()) {
        if (h.entries <= 1 || !h.children || !h.parent || h.children.length === 0 || h.children.length === 1 && !h.value) continue;
        let f = h.entries - 1 >= o ? h.entries - 1 - o : o - h.entries + 1 + t * 0.3;
        f < u && (a = h, u = f);
      }
      if (!a) break;
      let l = a.entries - 1;
      a.active = !0, a.entries = 1, i -= l;
      let c = a.parent;
      for (; c; )
        c.entries -= l, c = c.parent;
      let p = new Set(a.children);
      for (let h of p)
        if (h.active = !1, h.entries = 0, h.children)
          for (let f of h.children) p.add(f);
    }
    let n = /* @__PURE__ */ new Map();
    for (let o of r.values()) {
      if (!o.active) continue;
      let a = /* @__PURE__ */ new Map(), u = /* @__PURE__ */ new Set([o]);
      for (let l of u)
        if (!(l.active && l !== o)) {
          if (l.value)
            if (Array.isArray(l.value))
              for (let c of l.value)
                a.set(c, l.filePath);
            else
              a.set(l.value, l.filePath);
          if (l.children)
            for (let c of l.children)
              u.add(c);
        }
      n.set(o.filePath, a);
    }
    return n;
  };
});

// ../node_modules/watchpack/lib/watchEventSource.js
var df = P((tu) => {
  "use strict";
  var oC = H("fs"), eu = H("path"), { EventEmitter: qM } = H("events"), $M = nC(), aC = H("os").platform() === "darwin", VM = H("os").platform() ===
  "win32", UM = aC || VM, sC = +process.env.WATCHPACK_WATCHER_LIMIT || (aC ? 2e3 : 1e4), Za = !!process.env.WATCHPACK_RECURSIVE_WATCHER_LOGGING,
  cf = !1, Ln = 0, Us = /* @__PURE__ */ new Map(), Ws = /* @__PURE__ */ new Map(), zs = /* @__PURE__ */ new Map(), Wi = /* @__PURE__ */ new Map(),
  pf = class {
    static {
      s(this, "DirectWatcher");
    }
    constructor(t) {
      this.filePath = t, this.watchers = /* @__PURE__ */ new Set(), this.watcher = void 0;
      try {
        let r = oC.watch(t);
        this.watcher = r, r.on("change", (i, n) => {
          for (let o of this.watchers)
            o.emit("change", i, n);
        }), r.on("error", (i) => {
          for (let n of this.watchers)
            n.emit("error", i);
        });
      } catch (r) {
        process.nextTick(() => {
          for (let i of this.watchers)
            i.emit("error", r);
        });
      }
      Ln++;
    }
    add(t) {
      Wi.set(t, this), this.watchers.add(t);
    }
    remove(t) {
      this.watchers.delete(t), this.watchers.size === 0 && (zs.delete(this.filePath), Ln--, this.watcher && this.watcher.close());
    }
    getWatchers() {
      return this.watchers;
    }
  }, hf = class {
    static {
      s(this, "RecursiveWatcher");
    }
    constructor(t) {
      this.rootPath = t, this.mapWatcherToPath = /* @__PURE__ */ new Map(), this.mapPathToWatchers = /* @__PURE__ */ new Map(), this.watcher =
      void 0;
      try {
        let r = oC.watch(t, {
          recursive: !0
        });
        this.watcher = r, r.on("change", (i, n) => {
          if (n) {
            let o = eu.dirname(n), a = this.mapPathToWatchers.get(o);
            if (Za && process.stderr.write(
              `[watchpack] dispatch ${i} event in recursive watcher (${this.rootPath}) for '${n}' to ${a ? a.size : 0} watchers
`
            ), a === void 0) return;
            for (let u of a)
              u.emit("change", i, eu.basename(n));
          } else {
            Za && process.stderr.write(
              `[watchpack] dispatch ${i} event in recursive watcher (${this.rootPath}) to all watchers
`
            );
            for (let o of this.mapWatcherToPath.keys())
              o.emit("change", i);
          }
        }), r.on("error", (i) => {
          for (let n of this.mapWatcherToPath.keys())
            n.emit("error", i);
        });
      } catch (r) {
        process.nextTick(() => {
          for (let i of this.mapWatcherToPath.keys())
            i.emit("error", r);
        });
      }
      Ln++, Za && process.stderr.write(
        `[watchpack] created recursive watcher at ${t}
`
      );
    }
    add(t, r) {
      Wi.set(r, this);
      let i = t.slice(this.rootPath.length + 1) || ".";
      this.mapWatcherToPath.set(r, i);
      let n = this.mapPathToWatchers.get(i);
      if (n === void 0) {
        let o = /* @__PURE__ */ new Set();
        o.add(r), this.mapPathToWatchers.set(i, o);
      } else
        n.add(r);
    }
    remove(t) {
      let r = this.mapWatcherToPath.get(t);
      if (!r) return;
      this.mapWatcherToPath.delete(t);
      let i = this.mapPathToWatchers.get(r);
      i.delete(t), i.size === 0 && this.mapPathToWatchers.delete(r), this.mapWatcherToPath.size === 0 && (Ws.delete(this.rootPath), Ln--, this.
      watcher && this.watcher.close(), Za && process.stderr.write(
        `[watchpack] closed recursive watcher at ${this.rootPath}
`
      ));
    }
    getWatchers() {
      return this.mapWatcherToPath;
    }
  }, ff = class extends qM {
    static {
      s(this, "Watcher");
    }
    close() {
      if (Us.has(this)) {
        Us.delete(this);
        return;
      }
      Wi.get(this).remove(this), Wi.delete(this);
    }
  }, lf = /* @__PURE__ */ s((e) => {
    let t = zs.get(e);
    if (t !== void 0) return t;
    let r = new pf(e);
    return zs.set(e, r), r;
  }, "createDirectWatcher"), WM = /* @__PURE__ */ s((e) => {
    let t = Ws.get(e);
    if (t !== void 0) return t;
    let r = new hf(e);
    return Ws.set(e, r), r;
  }, "createRecursiveWatcher"), uC = /* @__PURE__ */ s(() => {
    let e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ s((i, n) => {
      let o = e.get(n);
      o === void 0 ? e.set(n, i) : Array.isArray(o) ? o.push(i) : e.set(n, [o, i]);
    }, "addWatcher");
    for (let [i, n] of Us)
      t(i, n);
    if (Us.clear(), !UM || sC - Ln >= e.size) {
      for (let [i, n] of e) {
        let o = lf(i);
        if (Array.isArray(n))
          for (let a of n) o.add(a);
        else
          o.add(n);
      }
      return;
    }
    for (let i of Ws.values())
      for (let [n, o] of i.getWatchers())
        t(n, eu.join(i.rootPath, o));
    for (let i of zs.values())
      for (let n of i.getWatchers())
        t(n, i.filePath);
    let r = $M(e, sC * 0.9);
    for (let [i, n] of r)
      if (n.size === 1)
        for (let [o, a] of n) {
          let u = lf(a), l = Wi.get(o);
          l !== u && (u.add(o), l !== void 0 && l.remove(o));
        }
      else {
        let o = new Set(n.values());
        if (o.size > 1) {
          let a = WM(i);
          for (let [u, l] of n) {
            let c = Wi.get(u);
            c !== a && (a.add(l, u), c !== void 0 && c.remove(u));
          }
        } else
          for (let a of o) {
            let u = lf(a);
            for (let l of n.keys()) {
              let c = Wi.get(l);
              c !== u && (u.add(l), c !== void 0 && c.remove(l));
            }
          }
      }
  }, "execute");
  tu.watch = (e) => {
    let t = new ff(), r = zs.get(e);
    if (r !== void 0)
      return r.add(t), t;
    let i = e;
    for (; ; ) {
      let n = Ws.get(i);
      if (n !== void 0)
        return n.add(e, t), t;
      let o = eu.dirname(i);
      if (o === i) break;
      i = o;
    }
    return Us.set(t, e), cf || uC(), t;
  };
  tu.batch = (e) => {
    cf = !0;
    try {
      e();
    } finally {
      cf = !1, uC();
    }
  };
  tu.getNumberOfWatchers = () => Ln;
});

// ../node_modules/watchpack/lib/DirectoryWatcher.js
var fC = P((tie, Df) => {
  "use strict";
  var hC = H("events").EventEmitter, ru = rC(), Hs = H("path"), zM = df(), jn = Object.freeze({}), vt = 2e3, lC = H("os").platform() === "da\
rwin", Js = process.env.WATCHPACK_POLLING, cC = `${+Js}` === Js ? +Js : !!Js && Js !== "false";
  function Mn(e) {
    return e.toLowerCase();
  }
  s(Mn, "withoutCase");
  function HM(e, t) {
    return function() {
      if (--e === 0)
        return t();
    };
  }
  s(HM, "needCalls");
  var mf = class extends hC {
    static {
      s(this, "Watcher");
    }
    constructor(t, r, i) {
      super(), this.directoryWatcher = t, this.path = r, this.startTime = i && +i;
    }
    checkStartTime(t, r) {
      let i = this.startTime;
      return typeof i != "number" ? !r : i <= t;
    }
    close() {
      this.emit("closed");
    }
  }, gf = class extends hC {
    static {
      s(this, "DirectoryWatcher");
    }
    constructor(t, r, i) {
      super(), cC && (i.poll = cC), this.watcherManager = t, this.options = i, this.path = r, this.files = /* @__PURE__ */ new Map(), this.filesWithoutCase =
      /* @__PURE__ */ new Map(), this.directories = /* @__PURE__ */ new Map(), this.lastWatchEvent = 0, this.initialScan = !0, this.ignored =
      i.ignored || (() => !1), this.nestedWatching = !1, this.polledWatching = typeof i.poll == "number" ? i.poll : i.poll ? 5007 : !1, this.
      timeout = void 0, this.initialScanRemoved = /* @__PURE__ */ new Set(), this.initialScanFinished = void 0, this.watchers = /* @__PURE__ */ new Map(),
      this.parentWatcher = null, this.refs = 0, this._activeEvents = /* @__PURE__ */ new Map(), this.closed = !1, this.scanning = !1, this.scanAgain =
      !1, this.scanAgainInitial = !1, this.createWatcher(), this.doScan(!0);
    }
    createWatcher() {
      try {
        this.polledWatching ? this.watcher = {
          close: /* @__PURE__ */ s(() => {
            this.timeout && (clearTimeout(this.timeout), this.timeout = void 0);
          }, "close")
        } : (lC && this.watchInParentDirectory(), this.watcher = zM.watch(this.path), this.watcher.on("change", this.onWatchEvent.bind(this)),
        this.watcher.on("error", this.onWatcherError.bind(this)));
      } catch (t) {
        this.onWatcherError(t);
      }
    }
    forEachWatcher(t, r) {
      let i = this.watchers.get(Mn(t));
      if (i !== void 0)
        for (let n of i)
          r(n);
    }
    setMissing(t, r, i) {
      this.initialScan && this.initialScanRemoved.add(t);
      let n = this.directories.get(t);
      if (n && (this.nestedWatching && n.close(), this.directories.delete(t), this.forEachWatcher(t, (a) => a.emit("remove", i)), r || this.
      forEachWatcher(
        this.path,
        (a) => a.emit("change", t, null, i, r)
      )), this.files.get(t)) {
        this.files.delete(t);
        let a = Mn(t), u = this.filesWithoutCase.get(a) - 1;
        u <= 0 ? (this.filesWithoutCase.delete(a), this.forEachWatcher(t, (l) => l.emit("remove", i))) : this.filesWithoutCase.set(a, u), r ||
        this.forEachWatcher(
          this.path,
          (l) => l.emit("change", t, null, i, r)
        );
      }
    }
    setFileTime(t, r, i, n, o) {
      let a = Date.now();
      if (this.ignored(t)) return;
      let u = this.files.get(t), l, c;
      if (i)
        l = Math.min(a, r) + vt, c = vt;
      else if (l = a, c = 0, u && u.timestamp === r && r + vt < a)
        return;
      if (!(n && u && u.timestamp === r)) {
        if (this.files.set(t, {
          safeTime: l,
          accuracy: c,
          timestamp: r
        }), u)
          i || this.forEachWatcher(t, (p) => p.emit("change", r, o));
        else {
          let p = Mn(t), h = this.filesWithoutCase.get(p);
          this.filesWithoutCase.set(p, (h || 0) + 1), h !== void 0 && this.doScan(!1), this.forEachWatcher(t, (f) => {
            (!i || f.checkStartTime(l, i)) && f.emit("change", r, o);
          });
        }
        this.forEachWatcher(this.path, (p) => {
          (!i || p.checkStartTime(l, i)) && p.emit("change", t, l, o, i);
        });
      }
    }
    setDirectory(t, r, i, n) {
      if (!this.ignored(t)) {
        if (t === this.path)
          i || this.forEachWatcher(
            this.path,
            (o) => o.emit("change", t, r, n, i)
          );
        else if (!this.directories.get(t)) {
          let a = Date.now();
          this.nestedWatching ? this.createNestedWatcher(t) : this.directories.set(t, !0);
          let u;
          i ? u = Math.min(a, r) + vt : u = a, this.forEachWatcher(t, (l) => {
            (!i || l.checkStartTime(u, !1)) && l.emit("change", r, n);
          }), this.forEachWatcher(this.path, (l) => {
            (!i || l.checkStartTime(u, i)) && l.emit("change", t, u, n, i);
          });
        }
      }
    }
    createNestedWatcher(t) {
      let r = this.watcherManager.watchDirectory(t, 1);
      r.on("change", (i, n, o, a) => {
        this.forEachWatcher(this.path, (u) => {
          (!a || u.checkStartTime(n, a)) && u.emit("change", i, n, o, a);
        });
      }), this.directories.set(t, r);
    }
    setNestedWatching(t) {
      if (this.nestedWatching !== !!t)
        if (this.nestedWatching = !!t, this.nestedWatching)
          for (let r of this.directories.keys())
            this.createNestedWatcher(r);
        else
          for (let [r, i] of this.directories)
            i.close(), this.directories.set(r, !0);
    }
    watch(t, r) {
      let i = Mn(t), n = this.watchers.get(i);
      n === void 0 && (n = /* @__PURE__ */ new Set(), this.watchers.set(i, n)), this.refs++;
      let o = new mf(this, t, r);
      o.on("closed", () => {
        if (--this.refs <= 0) {
          this.close();
          return;
        }
        n.delete(o), n.size === 0 && (this.watchers.delete(i), this.path === t && this.setNestedWatching(!1));
      }), n.add(o);
      let a;
      if (t === this.path) {
        this.setNestedWatching(!0), a = this.lastWatchEvent;
        for (let u of this.files.values())
          iu(u), a = Math.max(a, u.safeTime);
      } else {
        let u = this.files.get(t);
        u ? (iu(u), a = u.safeTime) : a = 0;
      }
      return a ? a >= r && process.nextTick(() => {
        this.closed || (t === this.path ? o.emit(
          "change",
          t,
          a,
          "watch (outdated on attach)",
          !0
        ) : o.emit(
          "change",
          a,
          "watch (outdated on attach)",
          !0
        ));
      }) : this.initialScan ? this.initialScanRemoved.has(t) && process.nextTick(() => {
        this.closed || o.emit("remove");
      }) : t !== this.path && !this.directories.has(t) && o.checkStartTime(this.initialScanFinished, !1) && process.nextTick(() => {
        this.closed || o.emit("initial-missing", "watch (missing on attach)");
      }), o;
    }
    onWatchEvent(t, r) {
      if (this.closed) return;
      if (!r) {
        this.doScan(!1);
        return;
      }
      let i = Hs.join(this.path, r);
      if (!this.ignored(i))
        if (this._activeEvents.get(r) === void 0) {
          this._activeEvents.set(r, !1);
          let n = /* @__PURE__ */ s(() => {
            this.closed || (this._activeEvents.set(r, !1), ru.lstat(i, (o, a) => {
              if (!this.closed) {
                if (this._activeEvents.get(r) === !0) {
                  process.nextTick(n);
                  return;
                }
                this._activeEvents.delete(r), o && (o.code !== "ENOENT" && o.code !== "EPERM" && o.code !== "EBUSY" ? this.onStatsError(o) :
                r === Hs.basename(this.path) && (ru.existsSync(this.path) || this.onDirectoryRemoved("stat failed"))), this.lastWatchEvent =
                Date.now(), a ? a.isDirectory() ? this.setDirectory(
                  i,
                  +a.birthtime || 1,
                  !1,
                  t
                ) : (a.isFile() || a.isSymbolicLink()) && (a.mtime && pC(a.mtime), this.setFileTime(
                  i,
                  +a.mtime || +a.ctime || 1,
                  !1,
                  !1,
                  t
                )) : this.setMissing(i, !1, t);
              }
            }));
          }, "checkStats");
          process.nextTick(n);
        } else
          this._activeEvents.set(r, !0);
    }
    onWatcherError(t) {
      this.closed || t && (t.code !== "EPERM" && t.code !== "ENOENT" && console.error("Watchpack Error (watcher): " + t), this.onDirectoryRemoved(
      "watch error"));
    }
    onStatsError(t) {
      t && console.error("Watchpack Error (stats): " + t);
    }
    onScanError(t) {
      t && console.error("Watchpack Error (initial scan): " + t), this.onScanFinished();
    }
    onScanFinished() {
      this.polledWatching && (this.timeout = setTimeout(() => {
        this.closed || this.doScan(!1);
      }, this.polledWatching));
    }
    onDirectoryRemoved(t) {
      this.watcher && (this.watcher.close(), this.watcher = null), this.watchInParentDirectory();
      let r = `directory-removed (${t})`;
      for (let i of this.directories.keys())
        this.setMissing(i, null, r);
      for (let i of this.files.keys())
        this.setMissing(i, null, r);
    }
    watchInParentDirectory() {
      if (!this.parentWatcher) {
        let t = Hs.dirname(this.path);
        if (Hs.dirname(t) === t) return;
        this.parentWatcher = this.watcherManager.watchFile(this.path, 1), this.parentWatcher.on("change", (r, i) => {
          this.closed || ((!lC || this.polledWatching) && this.parentWatcher && (this.parentWatcher.close(), this.parentWatcher = null), this.
          watcher || (this.createWatcher(), this.doScan(!1), this.forEachWatcher(
            this.path,
            (n) => n.emit("change", this.path, r, i, !1)
          )));
        }), this.parentWatcher.on("remove", () => {
          this.onDirectoryRemoved("parent directory removed");
        });
      }
    }
    doScan(t) {
      if (this.scanning) {
        this.scanAgain ? t || (this.scanAgainInitial = !1) : (this.scanAgain = !0, this.scanAgainInitial = t);
        return;
      }
      this.scanning = !0, this.timeout && (clearTimeout(this.timeout), this.timeout = void 0), process.nextTick(() => {
        this.closed || ru.readdir(this.path, (r, i) => {
          if (this.closed) return;
          if (r) {
            if (r.code === "ENOENT" || r.code === "EPERM" ? this.onDirectoryRemoved("scan readdir failed") : this.onScanError(r), this.initialScan =
            !1, this.initialScanFinished = Date.now(), t)
              for (let a of this.watchers.values())
                for (let u of a)
                  u.checkStartTime(this.initialScanFinished, !1) && u.emit(
                    "initial-missing",
                    "scan (parent directory missing in initial scan)"
                  );
            this.scanAgain ? (this.scanAgain = !1, this.doScan(this.scanAgainInitial)) : this.scanning = !1;
            return;
          }
          let n = new Set(
            i.map((a) => Hs.join(this.path, a.normalize("NFC")))
          );
          for (let a of this.files.keys())
            n.has(a) || this.setMissing(a, t, "scan (missing)");
          for (let a of this.directories.keys())
            n.has(a) || this.setMissing(a, t, "scan (missing)");
          if (this.scanAgain) {
            this.scanAgain = !1, this.doScan(t);
            return;
          }
          let o = HM(n.size + 1, () => {
            if (!this.closed) {
              if (this.initialScan = !1, this.initialScanRemoved = null, this.initialScanFinished = Date.now(), t) {
                let a = new Map(this.watchers);
                a.delete(Mn(this.path));
                for (let u of n)
                  a.delete(Mn(u));
                for (let u of a.values())
                  for (let l of u)
                    l.checkStartTime(this.initialScanFinished, !1) && l.emit(
                      "initial-missing",
                      "scan (missing in initial scan)"
                    );
              }
              this.scanAgain ? (this.scanAgain = !1, this.doScan(this.scanAgainInitial)) : (this.scanning = !1, this.onScanFinished());
            }
          });
          for (let a of n)
            ru.lstat(a, (u, l) => {
              if (!this.closed) {
                if (u) {
                  u.code === "ENOENT" || u.code === "EPERM" || u.code === "EACCES" || u.code === "EBUSY" ? this.setMissing(a, t, "scan (" + u.
                  code + ")") : this.onScanError(u), o();
                  return;
                }
                l.isFile() || l.isSymbolicLink() ? (l.mtime && pC(l.mtime), this.setFileTime(
                  a,
                  +l.mtime || +l.ctime || 1,
                  t,
                  !0,
                  "scan (file)"
                )) : l.isDirectory() && (!t || !this.directories.has(a)) && this.setDirectory(
                  a,
                  +l.birthtime || 1,
                  t,
                  "scan (dir)"
                ), o();
              }
            });
          o();
        });
      });
    }
    getTimes() {
      let t = /* @__PURE__ */ Object.create(null), r = this.lastWatchEvent;
      for (let [i, n] of this.files)
        iu(n), r = Math.max(r, n.safeTime), t[i] = Math.max(n.safeTime, n.timestamp);
      if (this.nestedWatching) {
        for (let i of this.directories.values()) {
          let n = i.directoryWatcher.getTimes();
          for (let o of Object.keys(n)) {
            let a = n[o];
            r = Math.max(r, a), t[o] = a;
          }
        }
        t[this.path] = r;
      }
      if (!this.initialScan)
        for (let i of this.watchers.values())
          for (let n of i) {
            let o = n.path;
            Object.prototype.hasOwnProperty.call(t, o) || (t[o] = null);
          }
      return t;
    }
    collectTimeInfoEntries(t, r) {
      let i = this.lastWatchEvent;
      for (let [n, o] of this.files)
        iu(o), i = Math.max(i, o.safeTime), t.set(n, o);
      if (this.nestedWatching) {
        for (let n of this.directories.values())
          i = Math.max(
            i,
            n.directoryWatcher.collectTimeInfoEntries(
              t,
              r
            )
          );
        t.set(this.path, jn), r.set(this.path, {
          safeTime: i
        });
      } else {
        for (let n of this.directories.keys())
          t.set(n, jn), r.has(n) || r.set(n, jn);
        t.set(this.path, jn), r.set(this.path, jn);
      }
      if (!this.initialScan)
        for (let n of this.watchers.values())
          for (let o of n) {
            let a = o.path;
            t.has(a) || t.set(a, null);
          }
      return i;
    }
    close() {
      if (this.closed = !0, this.initialScan = !1, this.watcher && (this.watcher.close(), this.watcher = null), this.nestedWatching) {
        for (let t of this.directories.values())
          t.close();
        this.directories.clear();
      }
      this.parentWatcher && (this.parentWatcher.close(), this.parentWatcher = null), this.emit("closed");
    }
  };
  Df.exports = gf;
  Df.exports.EXISTANCE_ONLY_TIME_ENTRY = jn;
  function iu(e) {
    e.accuracy > vt && (e.safeTime = e.safeTime - e.accuracy + vt, e.accuracy = vt);
  }
  s(iu, "fixupEntryAccuracy");
  function pC(e) {
    e && (vt > 1 && e % 1 !== 0 ? vt = 1 : vt > 10 && e % 10 !== 0 ? vt = 10 : vt > 100 && e % 100 !== 0 ? vt = 100 : vt > 1e3 && e % 1e3 !==
    0 && (vt = 1e3));
  }
  s(pC, "ensureFsAccuracy");
});

// ../node_modules/watchpack/lib/getWatcherManager.js
var mC = P((iie, yf) => {
  "use strict";
  var JM = H("path"), GM = fC(), nu = class {
    static {
      s(this, "WatcherManager");
    }
    constructor(t) {
      this.options = t, this.directoryWatchers = /* @__PURE__ */ new Map();
    }
    getDirectoryWatcher(t) {
      let r = this.directoryWatchers.get(t);
      if (r === void 0) {
        let i = new GM(this, t, this.options);
        return this.directoryWatchers.set(t, i), i.on("closed", () => {
          this.directoryWatchers.delete(t);
        }), i;
      }
      return r;
    }
    watchFile(t, r) {
      let i = JM.dirname(t);
      return i === t ? null : this.getDirectoryWatcher(i).watch(t, r);
    }
    watchDirectory(t, r) {
      return this.getDirectoryWatcher(t).watch(t, r);
    }
  }, dC = /* @__PURE__ */ new WeakMap();
  yf.exports = (e) => {
    let t = dC.get(e);
    if (t !== void 0) return t;
    let r = new nu(e);
    return dC.set(e, r), r;
  };
  yf.exports.WatcherManager = nu;
});

// ../node_modules/watchpack/lib/LinkResolver.js
var yC = P((sie, DC) => {
  "use strict";
  var XM = H("fs"), su = H("path"), gC = /* @__PURE__ */ new Set(["EINVAL", "ENOENT"]);
  process.platform === "win32" && gC.add("UNKNOWN");
  var xf = class {
    static {
      s(this, "LinkResolver");
    }
    constructor() {
      this.cache = /* @__PURE__ */ new Map();
    }
    /**
     * @param {string} file path to file or directory
     * @returns {string[]} array of file and all symlinks contributed in the resolving process (first item is the resolved file)
     */
    resolve(t) {
      let r = this.cache.get(t);
      if (r !== void 0)
        return r;
      let i = su.dirname(t);
      if (i === t) {
        let a = Object.freeze([t]);
        return this.cache.set(t, a), a;
      }
      let n = this.resolve(i), o = t;
      if (n[0] !== i) {
        let a = su.basename(t);
        o = su.resolve(n[0], a);
      }
      try {
        let a = XM.readlinkSync(o), u = su.resolve(n[0], a), l = this.resolve(u), c;
        if (l.length > 1 && n.length > 1) {
          let p = new Set(l);
          p.add(o);
          for (let h = 1; h < n.length; h++)
            p.add(n[h]);
          c = Object.freeze(Array.from(p));
        } else n.length > 1 ? (c = n.slice(), c[0] = l[0], c.push(o), Object.freeze(c)) : l.length > 1 ? (c = l.slice(), c.push(o), Object.freeze(
        c)) : c = Object.freeze([
          // the resolve real location
          l[0],
          // add the link
          o
        ]);
        return this.cache.set(t, c), c;
      } catch (a) {
        if (!gC.has(a.code))
          throw a;
        let u = n.slice();
        return u[0] = o, Object.freeze(u), this.cache.set(t, u), u;
      }
    }
  };
  DC.exports = xf;
});

// ../node_modules/glob-to-regexp/index.js
var EC = P((aie, xC) => {
  xC.exports = function(e, t) {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    for (var r = String(e), i = "", n = t ? !!t.extended : !1, o = t ? !!t.globstar : !1, a = !1, u = t && typeof t.flags == "string" ? t.flags :
    "", l, c = 0, p = r.length; c < p; c++)
      switch (l = r[c], l) {
        case "/":
        case "$":
        case "^":
        case "+":
        case ".":
        case "(":
        case ")":
        case "=":
        case "!":
        case "|":
          i += "\\" + l;
          break;
        case "?":
          if (n) {
            i += ".";
            break;
          }
        case "[":
        case "]":
          if (n) {
            i += l;
            break;
          }
        case "{":
          if (n) {
            a = !0, i += "(";
            break;
          }
        case "}":
          if (n) {
            a = !1, i += ")";
            break;
          }
        case ",":
          if (a) {
            i += "|";
            break;
          }
          i += "\\" + l;
          break;
        case "*":
          for (var h = r[c - 1], f = 1; r[c + 1] === "*"; )
            f++, c++;
          var d = r[c + 1];
          if (!o)
            i += ".*";
          else {
            var m = f > 1 && (h === "/" || h === void 0) && (d === "/" || d === void 0);
            m ? (i += "((?:[^/]*(?:/|$))*)", c++) : i += "([^/]*)";
          }
          break;
        default:
          i += l;
      }
    return (!u || !~u.indexOf("g")) && (i = "^" + i + "$"), new RegExp(i, u);
  };
});

// ../node_modules/watchpack/lib/watchpack.js
var Cf = P((uie, CC) => {
  "use strict";
  var KM = mC(), YM = yC(), QM = H("events").EventEmitter, ZM = EC(), ej = df(), ou = [], tj = {};
  function au(e, t) {
    for (let r of e) {
      let i = r.watcher;
      t.has(i.directoryWatcher) || t.add(i.directoryWatcher);
    }
  }
  s(au, "addWatchersToSet");
  var bC = /* @__PURE__ */ s((e) => {
    if (e.length === 0)
      return;
    let t = ZM(e, { globstar: !0, extended: !0 }).source;
    return t.slice(0, t.length - 1) + "(?:$|\\/)";
  }, "stringToRegexp"), rj = /* @__PURE__ */ s((e) => {
    if (Array.isArray(e)) {
      let t = e.map((i) => bC(i)).filter(Boolean);
      if (t.length === 0)
        return () => !1;
      let r = new RegExp(t.join("|"));
      return (i) => r.test(i.replace(/\\/g, "/"));
    } else if (typeof e == "string") {
      let t = bC(e);
      if (!t)
        return () => !1;
      let r = new RegExp(t);
      return (i) => r.test(i.replace(/\\/g, "/"));
    } else {
      if (e instanceof RegExp)
        return (t) => e.test(t.replace(/\\/g, "/"));
      if (e instanceof Function)
        return e;
      if (e)
        throw new Error(`Invalid option for 'ignored': ${e}`);
      return () => !1;
    }
  }, "ignoredToFunction"), ij = /* @__PURE__ */ s((e) => ({
    followSymlinks: !!e.followSymlinks,
    ignored: rj(e.ignored),
    poll: e.poll
  }), "normalizeOptions"), vC = /* @__PURE__ */ new WeakMap(), nj = /* @__PURE__ */ s((e) => {
    let t = vC.get(e);
    if (t !== void 0) return t;
    let r = ij(e);
    return vC.set(e, r), r;
  }, "cachedNormalizeOptions"), Ef = class {
    static {
      s(this, "WatchpackFileWatcher");
    }
    constructor(t, r, i) {
      this.files = Array.isArray(i) ? i : [i], this.watcher = r, r.on("initial-missing", (n) => {
        for (let o of this.files)
          t._missing.has(o) || t._onRemove(o, o, n);
      }), r.on("change", (n, o) => {
        for (let a of this.files)
          t._onChange(a, n, a, o);
      }), r.on("remove", (n) => {
        for (let o of this.files)
          t._onRemove(o, o, n);
      });
    }
    update(t) {
      Array.isArray(t) ? this.files = t : this.files.length !== 1 ? this.files = [t] : this.files[0] !== t && (this.files[0] = t);
    }
    close() {
      this.watcher.close();
    }
  }, bf = class {
    static {
      s(this, "WatchpackDirectoryWatcher");
    }
    constructor(t, r, i) {
      this.directories = Array.isArray(i) ? i : [i], this.watcher = r, r.on("initial-missing", (n) => {
        for (let o of this.directories)
          t._onRemove(o, o, n);
      }), r.on("change", (n, o, a) => {
        for (let u of this.directories)
          t._onChange(u, o, n, a);
      }), r.on("remove", (n) => {
        for (let o of this.directories)
          t._onRemove(o, o, n);
      });
    }
    update(t) {
      Array.isArray(t) ? this.directories = t : this.directories.length !== 1 ? this.directories = [t] : this.directories[0] !== t && (this.
      directories[0] = t);
    }
    close() {
      this.watcher.close();
    }
  }, vf = class extends QM {
    static {
      s(this, "Watchpack");
    }
    constructor(t) {
      super(), t || (t = tj), this.options = t, this.aggregateTimeout = typeof t.aggregateTimeout == "number" ? t.aggregateTimeout : 200, this.
      watcherOptions = nj(t), this.watcherManager = KM(this.watcherOptions), this.fileWatchers = /* @__PURE__ */ new Map(), this.directoryWatchers =
      /* @__PURE__ */ new Map(), this._missing = /* @__PURE__ */ new Set(), this.startTime = void 0, this.paused = !1, this.aggregatedChanges =
      /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), this.aggregateTimer = void 0, this._onTimeout = this._onTimeout.
      bind(this);
    }
    watch(t, r, i) {
      let n, o, a, u;
      r ? (n = t, o = r, a = ou, u = i) : {
        files: n = ou,
        directories: o = ou,
        missing: a = ou,
        startTime: u
      } = t, this.paused = !1;
      let l = this.fileWatchers, c = this.directoryWatchers, p = this.watcherOptions.ignored, h = /* @__PURE__ */ s((b) => !p(b), "filter"),
      f = /* @__PURE__ */ s((b, D, v) => {
        let S = b.get(D);
        S === void 0 ? b.set(D, v) : Array.isArray(S) ? S.push(v) : b.set(D, [S, v]);
      }, "addToMap"), d = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Set();
      if (this.watcherOptions.followSymlinks) {
        let b = new YM();
        for (let D of n)
          if (h(D))
            for (let v of b.resolve(D))
              (D === v || h(v)) && f(d, v, D);
        for (let D of a)
          if (h(D))
            for (let v of b.resolve(D))
              (D === v || h(v)) && (g.add(D), f(d, v, D));
        for (let D of o)
          if (h(D)) {
            let v = !0;
            for (let S of b.resolve(D))
              h(S) && f(
                v ? m : d,
                S,
                D
              ), v = !1;
          }
      } else {
        for (let b of n)
          h(b) && f(d, b, b);
        for (let b of a)
          h(b) && (g.add(b), f(d, b, b));
        for (let b of o)
          h(b) && f(m, b, b);
      }
      for (let [b, D] of l) {
        let v = d.get(b);
        v === void 0 ? (D.close(), l.delete(b)) : (D.update(v), d.delete(b));
      }
      for (let [b, D] of c) {
        let v = m.get(b);
        v === void 0 ? (D.close(), c.delete(b)) : (D.update(v), m.delete(b));
      }
      ej.batch(() => {
        for (let [b, D] of d) {
          let v = this.watcherManager.watchFile(b, u);
          v && l.set(b, new Ef(this, v, D));
        }
        for (let [b, D] of m) {
          let v = this.watcherManager.watchDirectory(b, u);
          v && c.set(
            b,
            new bf(this, v, D)
          );
        }
      }), this._missing = g, this.startTime = u;
    }
    close() {
      this.paused = !0, this.aggregateTimer && clearTimeout(this.aggregateTimer);
      for (let t of this.fileWatchers.values()) t.close();
      for (let t of this.directoryWatchers.values()) t.close();
      this.fileWatchers.clear(), this.directoryWatchers.clear();
    }
    pause() {
      this.paused = !0, this.aggregateTimer && clearTimeout(this.aggregateTimer);
    }
    getTimes() {
      let t = /* @__PURE__ */ new Set();
      au(this.fileWatchers.values(), t), au(this.directoryWatchers.values(), t);
      let r = /* @__PURE__ */ Object.create(null);
      for (let i of t) {
        let n = i.getTimes();
        for (let o of Object.keys(n)) r[o] = n[o];
      }
      return r;
    }
    getTimeInfoEntries() {
      let t = /* @__PURE__ */ new Map();
      return this.collectTimeInfoEntries(t, t), t;
    }
    collectTimeInfoEntries(t, r) {
      let i = /* @__PURE__ */ new Set();
      au(this.fileWatchers.values(), i), au(this.directoryWatchers.values(), i);
      let n = { value: 0 };
      for (let o of i)
        o.collectTimeInfoEntries(t, r, n);
    }
    getAggregated() {
      this.aggregateTimer && (clearTimeout(this.aggregateTimer), this.aggregateTimer = void 0);
      let t = this.aggregatedChanges, r = this.aggregatedRemovals;
      return this.aggregatedChanges = /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), { changes: t, removals: r };
    }
    _onChange(t, r, i, n) {
      i = i || t, this.paused || (this.emit("change", i, r, n), this.aggregateTimer && clearTimeout(this.aggregateTimer), this.aggregateTimer =
      setTimeout(this._onTimeout, this.aggregateTimeout)), this.aggregatedRemovals.delete(t), this.aggregatedChanges.add(t);
    }
    _onRemove(t, r, i) {
      r = r || t, this.paused || (this.emit("remove", r, i), this.aggregateTimer && clearTimeout(this.aggregateTimer), this.aggregateTimer =
      setTimeout(this._onTimeout, this.aggregateTimeout)), this.aggregatedChanges.delete(t), this.aggregatedRemovals.add(t);
    }
    _onTimeout() {
      this.aggregateTimer = void 0;
      let t = this.aggregatedChanges, r = this.aggregatedRemovals;
      this.aggregatedChanges = /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), this.emit("aggregated", t, r);
    }
  };
  CC.exports = vf;
});

// ../node_modules/kleur/index.js
var Xe = P((Jie, LC) => {
  "use strict";
  var { FORCE_COLOR: Bj, NODE_DISABLE_COLORS: Ij, TERM: Pj } = process.env, Te = {
    enabled: !Ij && Pj !== "dumb" && Bj !== "0",
    // modifiers
    reset: Le(0, 0),
    bold: Le(1, 22),
    dim: Le(2, 22),
    italic: Le(3, 23),
    underline: Le(4, 24),
    inverse: Le(7, 27),
    hidden: Le(8, 28),
    strikethrough: Le(9, 29),
    // colors
    black: Le(30, 39),
    red: Le(31, 39),
    green: Le(32, 39),
    yellow: Le(33, 39),
    blue: Le(34, 39),
    magenta: Le(35, 39),
    cyan: Le(36, 39),
    white: Le(37, 39),
    gray: Le(90, 39),
    grey: Le(90, 39),
    // background colors
    bgBlack: Le(40, 49),
    bgRed: Le(41, 49),
    bgGreen: Le(42, 49),
    bgYellow: Le(43, 49),
    bgBlue: Le(44, 49),
    bgMagenta: Le(45, 49),
    bgCyan: Le(46, 49),
    bgWhite: Le(47, 49)
  };
  function NC(e, t) {
    let r = 0, i, n = "", o = "";
    for (; r < e.length; r++)
      i = e[r], n += i.open, o += i.close, t.includes(i.close) && (t = t.replace(i.rgx, i.close + i.open));
    return n + t + o;
  }
  s(NC, "run");
  function Oj(e, t) {
    let r = { has: e, keys: t };
    return r.reset = Te.reset.bind(r), r.bold = Te.bold.bind(r), r.dim = Te.dim.bind(r), r.italic = Te.italic.bind(r), r.underline = Te.underline.
    bind(r), r.inverse = Te.inverse.bind(r), r.hidden = Te.hidden.bind(r), r.strikethrough = Te.strikethrough.bind(r), r.black = Te.black.bind(
    r), r.red = Te.red.bind(r), r.green = Te.green.bind(r), r.yellow = Te.yellow.bind(r), r.blue = Te.blue.bind(r), r.magenta = Te.magenta.bind(
    r), r.cyan = Te.cyan.bind(r), r.white = Te.white.bind(r), r.gray = Te.gray.bind(r), r.grey = Te.grey.bind(r), r.bgBlack = Te.bgBlack.bind(
    r), r.bgRed = Te.bgRed.bind(r), r.bgGreen = Te.bgGreen.bind(r), r.bgYellow = Te.bgYellow.bind(r), r.bgBlue = Te.bgBlue.bind(r), r.bgMagenta =
    Te.bgMagenta.bind(r), r.bgCyan = Te.bgCyan.bind(r), r.bgWhite = Te.bgWhite.bind(r), r;
  }
  s(Oj, "chain");
  function Le(e, t) {
    let r = {
      open: `\x1B[${e}m`,
      close: `\x1B[${t}m`,
      rgx: new RegExp(`\\x1b\\[${t}m`, "g")
    };
    return function(i) {
      return this !== void 0 && this.has !== void 0 ? (this.has.includes(e) || (this.has.push(e), this.keys.push(r)), i === void 0 ? this : Te.
      enabled ? NC(this.keys, i + "") : i + "") : i === void 0 ? Oj([e], [r]) : Te.enabled ? NC([r], i + "") : i + "";
    };
  }
  s(Le, "init");
  LC.exports = Te;
});

// ../node_modules/prompts/dist/util/action.js
var jC = P((Xie, MC) => {
  "use strict";
  MC.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/dist/util/strip.js
var cu = P((Kie, qC) => {
  "use strict";
  qC.exports = (e) => {
    let t = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/sisteransi/src/index.js
var Ye = P((Yie, $C) => {
  "use strict";
  var Af = "\x1B", Ke = `${Af}[`, Rj = "\x07", Sf = {
    to(e, t) {
      return t ? `${Ke}${t + 1};${e + 1}H` : `${Ke}${e + 1}G`;
    },
    move(e, t) {
      let r = "";
      return e < 0 ? r += `${Ke}${-e}D` : e > 0 && (r += `${Ke}${e}C`), t < 0 ? r += `${Ke}${-t}A` : t > 0 && (r += `${Ke}${t}B`), r;
    },
    up: /* @__PURE__ */ s((e = 1) => `${Ke}${e}A`, "up"),
    down: /* @__PURE__ */ s((e = 1) => `${Ke}${e}B`, "down"),
    forward: /* @__PURE__ */ s((e = 1) => `${Ke}${e}C`, "forward"),
    backward: /* @__PURE__ */ s((e = 1) => `${Ke}${e}D`, "backward"),
    nextLine: /* @__PURE__ */ s((e = 1) => `${Ke}E`.repeat(e), "nextLine"),
    prevLine: /* @__PURE__ */ s((e = 1) => `${Ke}F`.repeat(e), "prevLine"),
    left: `${Ke}G`,
    hide: `${Ke}?25l`,
    show: `${Ke}?25h`,
    save: `${Af}7`,
    restore: `${Af}8`
  }, Nj = {
    up: /* @__PURE__ */ s((e = 1) => `${Ke}S`.repeat(e), "up"),
    down: /* @__PURE__ */ s((e = 1) => `${Ke}T`.repeat(e), "down")
  }, Lj = {
    screen: `${Ke}2J`,
    up: /* @__PURE__ */ s((e = 1) => `${Ke}1J`.repeat(e), "up"),
    down: /* @__PURE__ */ s((e = 1) => `${Ke}J`.repeat(e), "down"),
    line: `${Ke}2K`,
    lineEnd: `${Ke}K`,
    lineStart: `${Ke}1K`,
    lines(e) {
      let t = "";
      for (let r = 0; r < e; r++)
        t += this.line + (r < e - 1 ? Sf.up() : "");
      return e && (t += Sf.left), t;
    }
  };
  $C.exports = { cursor: Sf, scroll: Nj, erase: Lj, beep: Rj };
});

// ../node_modules/prompts/dist/util/clear.js
var HC = P((Zie, zC) => {
  "use strict";
  function Mj(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = jj(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var i = 0, n = /* @__PURE__ */ s(function() {
        }, "F");
        return { s: n, n: /* @__PURE__ */ s(function() {
          return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] };
        }, "n"), e: /* @__PURE__ */ s(function(c) {
          throw c;
        }, "e"), f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var o = !0, a = !1, u;
    return { s: /* @__PURE__ */ s(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ s(function() {
      var c = r.next();
      return o = c.done, c;
    }, "n"), e: /* @__PURE__ */ s(function(c) {
      a = !0, u = c;
    }, "e"), f: /* @__PURE__ */ s(function() {
      try {
        !o && r.return != null && r.return();
      } finally {
        if (a) throw u;
      }
    }, "f") };
  }
  s(Mj, "_createForOfIteratorHelper");
  function jj(e, t) {
    if (e) {
      if (typeof e == "string") return VC(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return VC(e, t);
    }
  }
  s(jj, "_unsupportedIterableToArray");
  function VC(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, i = new Array(t); r < t; r++) i[r] = e[r];
    return i;
  }
  s(VC, "_arrayLikeToArray");
  var qj = cu(), WC = Ye(), UC = WC.erase, $j = WC.cursor, Vj = /* @__PURE__ */ s((e) => [...qj(e)].length, "width");
  zC.exports = function(e, t) {
    if (!t) return UC.line + $j.to(0);
    let r = 0, i = e.split(/\r?\n/);
    var n = Mj(i), o;
    try {
      for (n.s(); !(o = n.n()).done; ) {
        let a = o.value;
        r += 1 + Math.floor(Math.max(Vj(a) - 1, 0) / t);
      }
    } catch (a) {
      n.e(a);
    } finally {
      n.f();
    }
    return UC.lines(r);
  };
});

// ../node_modules/prompts/dist/util/figures.js
var Ff = P((tne, JC) => {
  "use strict";
  var Gs = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, Uj = {
    arrowUp: Gs.arrowUp,
    arrowDown: Gs.arrowDown,
    arrowLeft: Gs.arrowLeft,
    arrowRight: Gs.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, Wj = process.platform === "win32" ? Uj : Gs;
  JC.exports = Wj;
});

// ../node_modules/prompts/dist/util/style.js
var XC = P((rne, GC) => {
  "use strict";
  var qn = Xe(), zi = Ff(), _f = Object.freeze({
    password: {
      scale: 1,
      render: /* @__PURE__ */ s((e) => "*".repeat(e.length), "render")
    },
    emoji: {
      scale: 2,
      render: /* @__PURE__ */ s((e) => "\u{1F603}".repeat(e.length), "render")
    },
    invisible: {
      scale: 0,
      render: /* @__PURE__ */ s((e) => "", "render")
    },
    default: {
      scale: 1,
      render: /* @__PURE__ */ s((e) => `${e}`, "render")
    }
  }), zj = /* @__PURE__ */ s((e) => _f[e] || _f.default, "render"), Xs = Object.freeze({
    aborted: qn.red(zi.cross),
    done: qn.green(zi.tick),
    exited: qn.yellow(zi.cross),
    default: qn.cyan("?")
  }), Hj = /* @__PURE__ */ s((e, t, r) => t ? Xs.aborted : r ? Xs.exited : e ? Xs.done : Xs.default, "symbol"), Jj = /* @__PURE__ */ s((e) => qn.
  gray(e ? zi.ellipsis : zi.pointerSmall), "delimiter"), Gj = /* @__PURE__ */ s((e, t) => qn.gray(e ? t ? zi.pointerSmall : "+" : zi.line), "\
item");
  GC.exports = {
    styles: _f,
    render: zj,
    symbols: Xs,
    symbol: Hj,
    delimiter: Jj,
    item: Gj
  };
});

// ../node_modules/prompts/dist/util/lines.js
var YC = P((nne, KC) => {
  "use strict";
  var Xj = cu();
  KC.exports = function(e, t) {
    let r = String(Xj(e) || "").split(/\r?\n/);
    return t ? r.map((i) => Math.ceil(i.length / t)).reduce((i, n) => i + n) : r.length;
  };
});

// ../node_modules/prompts/dist/util/wrap.js
var ZC = P((sne, QC) => {
  "use strict";
  QC.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", i = t.width;
    return (e || "").split(/\r?\n/g).map((n) => n.split(/\s+/g).reduce((o, a) => (a.length + r.length >= i || o[o.length - 1].length + a.length +
    1 < i ? o[o.length - 1] += ` ${a}` : o.push(`${r}${a}`), o), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/dist/util/entriesToDisplay.js
var t2 = P((one, e2) => {
  "use strict";
  e2.exports = (e, t, r) => {
    r = r || t;
    let i = Math.min(t - r, e - Math.floor(r / 2));
    i < 0 && (i = 0);
    let n = Math.min(i + r, t);
    return {
      startIndex: i,
      endIndex: n
    };
  };
});

// ../node_modules/prompts/dist/util/index.js
var Dr = P((ane, r2) => {
  "use strict";
  r2.exports = {
    action: jC(),
    clear: HC(),
    style: XC(),
    strip: cu(),
    figures: Ff(),
    lines: YC(),
    wrap: ZC(),
    entriesToDisplay: t2()
  };
});

// ../node_modules/prompts/dist/elements/prompt.js
var Qr = P((une, s2) => {
  "use strict";
  var i2 = H("readline"), Kj = Dr(), Yj = Kj.action, Qj = H("events"), n2 = Ye(), Zj = n2.beep, eq = n2.cursor, tq = Xe(), kf = class extends Qj {
    static {
      s(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = i2.createInterface({
        input: this.in,
        escapeCodeTimeout: 50
      });
      i2.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let i = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = /* @__PURE__ */ s((o, a) => {
        let u = Yj(a, i);
        u === !1 ? this._ && this._(o, a) : typeof this[u] == "function" ? this[u](a) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write(eq.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", n);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(Zj);
    }
    render() {
      this.onRender(tq), this.firstRender && (this.firstRender = !1);
    }
  };
  s2.exports = kf;
});

// ../node_modules/prompts/dist/elements/text.js
var c2 = P((cne, l2) => {
  "use strict";
  function o2(e, t, r, i, n, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(i, n);
  }
  s(o2, "asyncGeneratorStep");
  function a2(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(i, n) {
        var o = e.apply(t, r);
        function a(l) {
          o2(o, i, n, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          o2(o, i, n, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(a2, "_asyncToGenerator");
  var pu = Xe(), rq = Qr(), u2 = Ye(), iq = u2.erase, Ks = u2.cursor, hu = Dr(), Tf = hu.style, Bf = hu.clear, nq = hu.lines, sq = hu.figures,
  If = class extends rq {
    static {
      s(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = Tf.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = Bf("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = pu.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return a2(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return a2(function* () {
        if (t.value = t.value || t.initial, t.cursorOffset = 0, t.cursor = t.rendered.length, yield t.validate(), t.error) {
          t.red = !0, t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let i = this.value.slice(0, this.cursor), n = this.value.slice(this.cursor);
      this.value = `${i}${t}${n}`, this.red = !1, this.cursor = this.placeholder ? 0 : i.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Ks.down(nq(this.outputError, this.out.columns) - 1) + Bf(this.
      outputError, this.out.columns)), this.out.write(Bf(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [Tf.symbol(this.done, this.aborted), pu.bold(this.msg), Tf.delimiter(this.done), this.red ? pu.red(this.rendered) : this.rendered].join(
      " "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, i) => t + `
${i ? " " : sq.pointerSmall} ${pu.red().italic(r)}`, "")), this.out.write(iq.line + Ks.to(0) + this.outputText + Ks.save + this.outputError +
      Ks.restore + Ks.move(this.cursorOffset, 0)));
    }
  };
  l2.exports = If;
});

// ../node_modules/prompts/dist/elements/select.js
var d2 = P((hne, f2) => {
  "use strict";
  var Zr = Xe(), oq = Qr(), Ys = Dr(), p2 = Ys.style, h2 = Ys.clear, fu = Ys.figures, aq = Ys.wrap, uq = Ys.entriesToDisplay, lq = Ye(), cq = lq.
  cursor, Pf = class extends oq {
    static {
      s(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, i) => (typeof r == "string" && (r = {
        title: r,
        value: i
      }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? i : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = h2("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(cq.hide) : this.out.write(h2(this.outputText, this.out.columns)), super.render();
      let t = uq(this.cursor, this.choices.length, this.optionsPerPage), r = t.startIndex, i = t.endIndex;
      if (this.outputText = [p2.symbol(this.done, this.aborted), Zr.bold(this.msg), p2.delimiter(!1), this.done ? this.selection.title : this.
      selection.disabled ? Zr.yellow(this.warn) : Zr.gray(this.hint)].join(" "), !this.done) {
        this.outputText += `
`;
        for (let n = r; n < i; n++) {
          let o, a, u = "", l = this.choices[n];
          n === r && r > 0 ? a = fu.arrowUp : n === i - 1 && i < this.choices.length ? a = fu.arrowDown : a = " ", l.disabled ? (o = this.cursor ===
          n ? Zr.gray().underline(l.title) : Zr.strikethrough().gray(l.title), a = (this.cursor === n ? Zr.bold().gray(fu.pointer) + " " : "\
  ") + a) : (o = this.cursor === n ? Zr.cyan().underline(l.title) : l.title, a = (this.cursor === n ? Zr.cyan(fu.pointer) + " " : "  ") + a,
          l.description && this.cursor === n && (u = ` - ${l.description}`, (a.length + o.length + u.length >= this.out.columns || l.description.
          split(/\r?\n/).length > 1) && (u = `
` + aq(l.description, {
            margin: 3,
            width: this.out.columns
          })))), this.outputText += `${a} ${o}${Zr.gray(u)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  f2.exports = Pf;
});

// ../node_modules/prompts/dist/elements/toggle.js
var E2 = P((dne, x2) => {
  "use strict";
  var du = Xe(), pq = Qr(), D2 = Dr(), m2 = D2.style, hq = D2.clear, y2 = Ye(), g2 = y2.cursor, fq = y2.erase, Of = class extends pq {
    static {
      s(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(g2.hide) : this.out.write(hq(this.outputText, this.out.columns)), super.render(), this.
      outputText = [m2.symbol(this.done, this.aborted), du.bold(this.msg), m2.delimiter(this.done), this.value ? this.inactive : du.cyan().underline(
      this.inactive), du.gray("/"), this.value ? du.cyan().underline(this.active) : this.active].join(" "), this.out.write(fq.line + g2.to(0) +
      this.outputText));
    }
  };
  x2.exports = Of;
});

// ../node_modules/prompts/dist/dateparts/datepart.js
var Ir = P((gne, b2) => {
  "use strict";
  var Rf = class e {
    static {
      s(this, "DatePart");
    }
    constructor({
      token: t,
      date: r,
      parts: i,
      locales: n
    }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = i || [this], this.locales = n || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, i) => i > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((i, n) => n > r && i instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  b2.exports = Rf;
});

// ../node_modules/prompts/dist/dateparts/meridiem.js
var C2 = P((yne, v2) => {
  "use strict";
  var dq = Ir(), Nf = class extends dq {
    static {
      s(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  v2.exports = Nf;
});

// ../node_modules/prompts/dist/dateparts/day.js
var A2 = P((Ene, w2) => {
  "use strict";
  var mq = Ir(), gq = /* @__PURE__ */ s((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), Lf = class extends mq {
    static {
      s(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + gq(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  w2.exports = Lf;
});

// ../node_modules/prompts/dist/dateparts/hours.js
var F2 = P((vne, S2) => {
  "use strict";
  var Dq = Ir(), Mf = class extends Dq {
    static {
      s(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  S2.exports = Mf;
});

// ../node_modules/prompts/dist/dateparts/milliseconds.js
var k2 = P((wne, _2) => {
  "use strict";
  var yq = Ir(), jf = class extends yq {
    static {
      s(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  _2.exports = jf;
});

// ../node_modules/prompts/dist/dateparts/minutes.js
var B2 = P((Sne, T2) => {
  "use strict";
  var xq = Ir(), qf = class extends xq {
    static {
      s(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  T2.exports = qf;
});

// ../node_modules/prompts/dist/dateparts/month.js
var P2 = P((_ne, I2) => {
  "use strict";
  var Eq = Ir(), $f = class extends Eq {
    static {
      s(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  I2.exports = $f;
});

// ../node_modules/prompts/dist/dateparts/seconds.js
var R2 = P((Tne, O2) => {
  "use strict";
  var bq = Ir(), Vf = class extends bq {
    static {
      s(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  O2.exports = Vf;
});

// ../node_modules/prompts/dist/dateparts/year.js
var L2 = P((Ine, N2) => {
  "use strict";
  var vq = Ir(), Uf = class extends vq {
    static {
      s(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  N2.exports = Uf;
});

// ../node_modules/prompts/dist/dateparts/index.js
var j2 = P((One, M2) => {
  "use strict";
  M2.exports = {
    DatePart: Ir(),
    Meridiem: C2(),
    Day: A2(),
    Hours: F2(),
    Milliseconds: k2(),
    Minutes: B2(),
    Month: P2(),
    Seconds: R2(),
    Year: L2()
  };
});

// ../node_modules/prompts/dist/elements/date.js
var X2 = P((Rne, G2) => {
  "use strict";
  function q2(e, t, r, i, n, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(i, n);
  }
  s(q2, "asyncGeneratorStep");
  function $2(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(i, n) {
        var o = e.apply(t, r);
        function a(l) {
          q2(o, i, n, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          q2(o, i, n, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s($2, "_asyncToGenerator");
  var Wf = Xe(), Cq = Qr(), Hf = Dr(), V2 = Hf.style, U2 = Hf.clear, wq = Hf.figures, J2 = Ye(), Aq = J2.erase, W2 = J2.cursor, ei = j2(), z2 = ei.
  DatePart, Sq = ei.Meridiem, Fq = ei.Day, _q = ei.Hours, kq = ei.Milliseconds, Tq = ei.Minutes, Bq = ei.Month, Iq = ei.Seconds, Pq = ei.Year,
  Oq = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g, H2 = {
    1: ({
      token: e
    }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new Fq(e),
    // Day // TODO
    3: (e) => new Bq(e),
    // Month
    4: (e) => new Pq(e),
    // Year
    5: (e) => new Sq(e),
    // AM/PM // TODO (special)
    6: (e) => new _q(e),
    // Hours
    7: (e) => new Tq(e),
    // Minutes
    8: (e) => new Iq(e),
    // Seconds
    9: (e) => new kq(e)
    // Fractional seconds
  }, Rq = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, zf = class extends Cq {
    static {
      s(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(Rq, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = U2("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = Oq.exec(t); ) {
        let n = r.shift(), o = r.findIndex((a) => a != null);
        this.parts.push(o in H2 ? H2[o]({
          token: r[o] || n,
          date: this.date,
          parts: this.parts,
          locales: this.locales
        }) : r[o] || n);
      }
      let i = this.parts.reduce((n, o) => (typeof o == "string" && typeof n[n.length - 1] == "string" ? n[n.length - 1] += o : n.push(o), n),
      []);
      this.parts.splice(0), this.parts.push(...i), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof z2)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return $2(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return $2(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof z2)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(W2.hide) : this.out.write(U2(this.outputText, this.out.columns)), super.render(), this.
      outputText = [V2.symbol(this.done, this.aborted), Wf.bold(this.msg), V2.delimiter(!1), this.parts.reduce((t, r, i) => t.concat(i === this.
      cursor && !this.done ? Wf.cyan().underline(r.toString()) : r), []).join("")].join(" "), this.error && (this.outputText += this.errorMsg.
      split(`
`).reduce((t, r, i) => t + `
${i ? " " : wq.pointerSmall} ${Wf.red().italic(r)}`, "")), this.out.write(Aq.line + W2.to(0) + this.outputText));
    }
  };
  G2.exports = zf;
});

// ../node_modules/prompts/dist/elements/number.js
var rw = P((Lne, tw) => {
  "use strict";
  function K2(e, t, r, i, n, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(i, n);
  }
  s(K2, "asyncGeneratorStep");
  function Y2(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(i, n) {
        var o = e.apply(t, r);
        function a(l) {
          K2(o, i, n, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          K2(o, i, n, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(Y2, "_asyncToGenerator");
  var mu = Xe(), Nq = Qr(), ew = Ye(), gu = ew.cursor, Lq = ew.erase, Du = Dr(), Jf = Du.style, Mq = Du.figures, Q2 = Du.clear, jq = Du.lines,
  qq = /[0-9]/, Gf = /* @__PURE__ */ s((e) => e !== void 0, "isDef"), Z2 = /* @__PURE__ */ s((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), Xf = class extends Nq {
    static {
      s(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = Jf.render(t.style), this.msg = t.message, this.initial = Gf(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = Gf(t.min) ? t.min : -1 / 0, this.max = Gf(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = mu.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${Z2(t, this.round)}`), this._value = Z2(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || qq.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    validate() {
      var t = this;
      return Y2(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return Y2(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        let r = t.value;
        t.value = r !== "" ? r : t.initial, t.done = !0, t.aborted = !1, t.error = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let i = Date.now();
      if (i - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = i, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(gu.down(jq(this.outputError, this.out.columns) - 1) + Q2(this.
      outputError, this.out.columns)), this.out.write(Q2(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [Jf.symbol(this.done, this.aborted), mu.bold(this.msg), Jf.delimiter(this.done), !this.done || !this.done && !this.placeholder ? mu[this.
      color]().underline(this.rendered) : this.rendered].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, i) => t + `
${i ? " " : Mq.pointerSmall} ${mu.red().italic(r)}`, "")), this.out.write(Lq.line + gu.to(0) + this.outputText + gu.save + this.outputError +
      gu.restore));
    }
  };
  tw.exports = Xf;
});

// ../node_modules/prompts/dist/elements/multiselect.js
var Yf = P((jne, sw) => {
  "use strict";
  var Pr = Xe(), $q = Ye(), Vq = $q.cursor, Uq = Qr(), Qs = Dr(), iw = Qs.clear, Ci = Qs.figures, nw = Qs.style, Wq = Qs.wrap, zq = Qs.entriesToDisplay,
  Kf = class extends Uq {
    static {
      s(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, i) => (typeof r == "string" && (r = {
        title: r,
        value: i
      }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? i : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = iw("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Ci.arrowUp}/${Ci.arrowDown}: Highlight option
    ${Ci.arrowLeft}/${Ci.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, i, n) {
      let o = (r.selected ? Pr.green(Ci.radioOn) : Ci.radioOff) + " " + n + " ", a, u;
      return r.disabled ? a = t === i ? Pr.gray().underline(r.title) : Pr.strikethrough().gray(r.title) : (a = t === i ? Pr.cyan().underline(
      r.title) : r.title, t === i && r.description && (u = ` - ${r.description}`, (o.length + a.length + u.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (u = `
` + Wq(r.description, {
        margin: o.length,
        width: this.out.columns
      })))), o + a + Pr.gray(u || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return Pr.red("No matches for this query.");
      let r = zq(this.cursor, t.length, this.optionsPerPage), i = r.startIndex, n = r.endIndex, o, a = [];
      for (let u = i; u < n; u++)
        u === i && i > 0 ? o = Ci.arrowUp : u === n - 1 && n < t.length ? o = Ci.arrowDown : o = " ", a.push(this.renderOption(this.cursor, t[u],
        u, o));
      return `
` + a.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [Pr.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(Pr.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(Vq.hide), super.render();
      let t = [nw.symbol(this.done, this.aborted), Pr.bold(this.msg), nw.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += Pr.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = iw(t, this.out.columns);
    }
  };
  sw.exports = Kf;
});

// ../node_modules/prompts/dist/elements/autocomplete.js
var hw = P(($ne, pw) => {
  "use strict";
  function ow(e, t, r, i, n, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(i, n);
  }
  s(ow, "asyncGeneratorStep");
  function Hq(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(i, n) {
        var o = e.apply(t, r);
        function a(l) {
          ow(o, i, n, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          ow(o, i, n, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(Hq, "_asyncToGenerator");
  var Zs = Xe(), Jq = Qr(), cw = Ye(), Gq = cw.erase, aw = cw.cursor, eo = Dr(), Qf = eo.style, uw = eo.clear, Zf = eo.figures, Xq = eo.wrap,
  Kq = eo.entriesToDisplay, lw = /* @__PURE__ */ s((e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), Yq = /* @__PURE__ */ s((e, t) => e[t] &&
  (e[t].title || e[t].value || e[t]), "getTitle"), Qq = /* @__PURE__ */ s((e, t) => {
    let r = e.findIndex((i) => i.value === t || i.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), ed = class extends Jq {
    static {
      s(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      Qq(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = {
        noMatches: t.noMatches || "no matches found"
      }, this.fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit =
      t.limit || 10, this.cursor = 0, this.transform = Qf.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(
      this), this.complete = this.complete.bind(this), this.clear = uw("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = {
        title: this._fb
      }), t || this._fb || {
        title: this.i18n.noMatches
      };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = lw(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    complete(t) {
      var r = this;
      return Hq(function* () {
        let i = r.completing = r.suggest(r.input, r.choices), n = yield i;
        if (r.completing !== i) return;
        r.suggestions = n.map((a, u, l) => ({
          title: Yq(l, u),
          value: lw(l, u),
          description: a.description
        })), r.completing = !1;
        let o = Math.max(n.length - 1, 0);
        r.moveSelect(Math.min(o, r.select)), t && t();
      })();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let i = this.input.slice(0, this.cursor), n = this.input.slice(this.cursor);
      this.input = `${i}${t}${n}`, this.cursor = i.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, i, n) {
      let o, a = i ? Zf.arrowUp : n ? Zf.arrowDown : " ", u = r ? Zs.cyan().underline(t.title) : t.title;
      return a = (r ? Zs.cyan(Zf.pointer) + " " : "  ") + a, t.description && (o = ` - ${t.description}`, (a.length + u.length + o.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (o = `
` + Xq(t.description, {
        margin: 3,
        width: this.out.columns
      }))), a + " " + u + Zs.gray(o || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(aw.hide) : this.out.write(uw(this.outputText, this.out.columns)), super.render();
      let t = Kq(this.select, this.choices.length, this.limit), r = t.startIndex, i = t.endIndex;
      if (this.outputText = [Qf.symbol(this.done, this.aborted, this.exited), Zs.bold(this.msg), Qf.delimiter(this.completing), this.done &&
      this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(" "), !this.
      done) {
        let n = this.suggestions.slice(r, i).map((o, a) => this.renderOption(o, this.select === a + r, a === 0 && r > 0, a + r === i - 1 && i <
        this.choices.length)).join(`
`);
        this.outputText += `
` + (n || Zs.gray(this.fallback.title));
      }
      this.out.write(Gq.line + aw.to(0) + this.outputText);
    }
  };
  pw.exports = ed;
});

// ../node_modules/prompts/dist/elements/autocompleteMultiselect.js
var gw = P((Une, mw) => {
  "use strict";
  var ti = Xe(), Zq = Ye(), e$ = Zq.cursor, t$ = Yf(), rd = Dr(), fw = rd.clear, dw = rd.style, $n = rd.figures, td = class extends t$ {
    static {
      s(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = fw("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((i) => this.inputValue ? !!(typeof i.title == "string" && i.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof i.value == "string" && i.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((i) => i === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${$n.arrowUp}/${$n.arrowDown}: Highlight option
    ${$n.arrowLeft}/${$n.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : ti.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, i) {
      let n;
      return r.disabled ? n = t === i ? ti.gray().underline(r.title) : ti.strikethrough().gray(r.title) : n = t === i ? ti.cyan().underline(
      r.title) : r.title, (r.selected ? ti.green($n.radioOn) : $n.radioOff) + "  " + n;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [ti.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(ti.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(e$.hide), super.render();
      let t = [dw.symbol(this.done, this.aborted), ti.bold(this.msg), dw.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += ti.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = fw(t, this.out.columns);
    }
  };
  mw.exports = td;
});

// ../node_modules/prompts/dist/elements/confirm.js
var Cw = P((zne, vw) => {
  "use strict";
  var Dw = Xe(), r$ = Qr(), Ew = Dr(), yw = Ew.style, i$ = Ew.clear, bw = Ye(), n$ = bw.erase, xw = bw.cursor, id = class extends r$ {
    static {
      s(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(xw.hide) : this.out.write(i$(this.outputText, this.out.columns)), super.render(), this.
      outputText = [yw.symbol(this.done, this.aborted), Dw.bold(this.msg), yw.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.
      noMsg : Dw.gray(this.initialValue ? this.yesOption : this.noOption)].join(" "), this.out.write(n$.line + xw.to(0) + this.outputText));
    }
  };
  vw.exports = id;
});

// ../node_modules/prompts/dist/elements/index.js
var Aw = P((Jne, ww) => {
  "use strict";
  ww.exports = {
    TextPrompt: c2(),
    SelectPrompt: d2(),
    TogglePrompt: E2(),
    DatePrompt: X2(),
    NumberPrompt: rw(),
    MultiselectPrompt: Yf(),
    AutocompletePrompt: hw(),
    AutocompleteMultiselectPrompt: gw(),
    ConfirmPrompt: Cw()
  };
});

// ../node_modules/prompts/dist/prompts.js
var Fw = P((Sw) => {
  "use strict";
  var It = Sw, s$ = Aw(), yu = /* @__PURE__ */ s((e) => e, "noop");
  function Or(e, t, r = {}) {
    return new Promise((i, n) => {
      let o = new s$[e](t), a = r.onAbort || yu, u = r.onSubmit || yu, l = r.onExit || yu;
      o.on("state", t.onState || yu), o.on("submit", (c) => i(u(c))), o.on("exit", (c) => i(l(c))), o.on("abort", (c) => n(a(c)));
    });
  }
  s(Or, "toPrompt");
  It.text = (e) => Or("TextPrompt", e);
  It.password = (e) => (e.style = "password", It.text(e));
  It.invisible = (e) => (e.style = "invisible", It.text(e));
  It.number = (e) => Or("NumberPrompt", e);
  It.date = (e) => Or("DatePrompt", e);
  It.confirm = (e) => Or("ConfirmPrompt", e);
  It.list = (e) => {
    let t = e.separator || ",";
    return Or("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ s((r) => r.split(t).map((i) => i.trim()), "onSubmit")
    });
  };
  It.toggle = (e) => Or("TogglePrompt", e);
  It.select = (e) => Or("SelectPrompt", e);
  It.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((i) => i.selected).map((i) => i.value), "toSelected");
    return Or("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  It.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((i) => i.selected).map((i) => i.value), "toSelected");
    return Or("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var o$ = /* @__PURE__ */ s((e, t) => Promise.resolve(t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())), "byTi\
tle");
  It.autocomplete = (e) => (e.suggest = e.suggest || o$, e.choices = [].concat(e.choices || []), Or("AutocompletePrompt", e));
});

// ../node_modules/prompts/dist/index.js
var Rw = P((Kne, Ow) => {
  "use strict";
  function _w(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(e);
      t && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(e, n).enumerable;
      })), r.push.apply(r, i);
    }
    return r;
  }
  s(_w, "ownKeys");
  function kw(e) {
    for (var t = 1; t < arguments.length; t++) {
      var r = arguments[t] != null ? arguments[t] : {};
      t % 2 ? _w(Object(r), !0).forEach(function(i) {
        a$(e, i, r[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : _w(Object(r)).forEach(function(i) {
        Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
      });
    }
    return e;
  }
  s(kw, "_objectSpread");
  function a$(e, t, r) {
    return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e;
  }
  s(a$, "_defineProperty");
  function u$(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = l$(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var i = 0, n = /* @__PURE__ */ s(function() {
        }, "F");
        return { s: n, n: /* @__PURE__ */ s(function() {
          return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] };
        }, "n"), e: /* @__PURE__ */ s(function(c) {
          throw c;
        }, "e"), f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var o = !0, a = !1, u;
    return { s: /* @__PURE__ */ s(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ s(function() {
      var c = r.next();
      return o = c.done, c;
    }, "n"), e: /* @__PURE__ */ s(function(c) {
      a = !0, u = c;
    }, "e"), f: /* @__PURE__ */ s(function() {
      try {
        !o && r.return != null && r.return();
      } finally {
        if (a) throw u;
      }
    }, "f") };
  }
  s(u$, "_createForOfIteratorHelper");
  function l$(e, t) {
    if (e) {
      if (typeof e == "string") return Tw(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return Tw(e, t);
    }
  }
  s(l$, "_unsupportedIterableToArray");
  function Tw(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, i = new Array(t); r < t; r++) i[r] = e[r];
    return i;
  }
  s(Tw, "_arrayLikeToArray");
  function Bw(e, t, r, i, n, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(i, n);
  }
  s(Bw, "asyncGeneratorStep");
  function Iw(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(i, n) {
        var o = e.apply(t, r);
        function a(l) {
          Bw(o, i, n, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          Bw(o, i, n, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(Iw, "_asyncToGenerator");
  var nd = Fw(), c$ = ["suggest", "format", "onState", "validate", "onRender", "type"], Pw = /* @__PURE__ */ s(() => {
  }, "noop");
  function wi() {
    return sd.apply(this, arguments);
  }
  s(wi, "prompt");
  function sd() {
    return sd = Iw(function* (e = [], {
      onSubmit: t = Pw,
      onCancel: r = Pw
    } = {}) {
      let i = {}, n = wi._override || {};
      e = [].concat(e);
      let o, a, u, l, c, p, h = /* @__PURE__ */ function() {
        var b = Iw(function* (D, v, S = !1) {
          if (!(!S && D.validate && D.validate(v) !== !0))
            return D.format ? yield D.format(v, i) : v;
        });
        return /* @__PURE__ */ s(function(v, S) {
          return b.apply(this, arguments);
        }, "getFormattedAnswer");
      }();
      var f = u$(e), d;
      try {
        for (f.s(); !(d = f.n()).done; ) {
          a = d.value;
          var m = a;
          if (l = m.name, c = m.type, typeof c == "function" && (c = yield c(o, kw({}, i), a), a.type = c), !!c) {
            for (let b in a) {
              if (c$.includes(b)) continue;
              let D = a[b];
              a[b] = typeof D == "function" ? yield D(o, kw({}, i), p) : D;
            }
            if (p = a, typeof a.message != "string")
              throw new Error("prompt message is required");
            var g = a;
            if (l = g.name, c = g.type, nd[c] === void 0)
              throw new Error(`prompt type (${c}) is not defined`);
            if (n[a.name] !== void 0 && (o = yield h(a, n[a.name]), o !== void 0)) {
              i[l] = o;
              continue;
            }
            try {
              o = wi._injected ? p$(wi._injected, a.initial) : yield nd[c](a), i[l] = o = yield h(a, o, !0), u = yield t(a, o, i);
            } catch {
              u = !(yield r(a, i));
            }
            if (u) return i;
          }
        }
      } catch (b) {
        f.e(b);
      } finally {
        f.f();
      }
      return i;
    }), sd.apply(this, arguments);
  }
  s(sd, "_prompt");
  function p$(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  s(p$, "getInjectedAnswer");
  function h$(e) {
    wi._injected = (wi._injected || []).concat(e);
  }
  s(h$, "inject");
  function f$(e) {
    wi._override = Object.assign({}, e);
  }
  s(f$, "override");
  Ow.exports = Object.assign(wi, {
    prompt: wi,
    prompts: nd,
    inject: h$,
    override: f$
  });
});

// ../node_modules/prompts/lib/util/action.js
var Lw = P((Qne, Nw) => {
  "use strict";
  Nw.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/lib/util/strip.js
var xu = P((Zne, Mw) => {
  "use strict";
  Mw.exports = (e) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"
    ].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/prompts/lib/util/clear.js
var $w = P((ese, qw) => {
  "use strict";
  var d$ = xu(), { erase: jw, cursor: m$ } = Ye(), g$ = /* @__PURE__ */ s((e) => [...d$(e)].length, "width");
  qw.exports = function(e, t) {
    if (!t) return jw.line + m$.to(0);
    let r = 0, i = e.split(/\r?\n/);
    for (let n of i)
      r += 1 + Math.floor(Math.max(g$(n) - 1, 0) / t);
    return jw.lines(r);
  };
});

// ../node_modules/prompts/lib/util/figures.js
var od = P((rse, Vw) => {
  "use strict";
  var to = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, D$ = {
    arrowUp: to.arrowUp,
    arrowDown: to.arrowDown,
    arrowLeft: to.arrowLeft,
    arrowRight: to.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, y$ = process.platform === "win32" ? D$ : to;
  Vw.exports = y$;
});

// ../node_modules/prompts/lib/util/style.js
var Ww = P((ise, Uw) => {
  "use strict";
  var Vn = Xe(), Hi = od(), ad = Object.freeze({
    password: { scale: 1, render: /* @__PURE__ */ s((e) => "*".repeat(e.length), "render") },
    emoji: { scale: 2, render: /* @__PURE__ */ s((e) => "\u{1F603}".repeat(e.length), "render") },
    invisible: { scale: 0, render: /* @__PURE__ */ s((e) => "", "render") },
    default: { scale: 1, render: /* @__PURE__ */ s((e) => `${e}`, "render") }
  }), x$ = /* @__PURE__ */ s((e) => ad[e] || ad.default, "render"), ro = Object.freeze({
    aborted: Vn.red(Hi.cross),
    done: Vn.green(Hi.tick),
    exited: Vn.yellow(Hi.cross),
    default: Vn.cyan("?")
  }), E$ = /* @__PURE__ */ s((e, t, r) => t ? ro.aborted : r ? ro.exited : e ? ro.done : ro.default, "symbol"), b$ = /* @__PURE__ */ s((e) => Vn.
  gray(e ? Hi.ellipsis : Hi.pointerSmall), "delimiter"), v$ = /* @__PURE__ */ s((e, t) => Vn.gray(e ? t ? Hi.pointerSmall : "+" : Hi.line), "\
item");
  Uw.exports = {
    styles: ad,
    render: x$,
    symbols: ro,
    symbol: E$,
    delimiter: b$,
    item: v$
  };
});

// ../node_modules/prompts/lib/util/lines.js
var Hw = P((sse, zw) => {
  "use strict";
  var C$ = xu();
  zw.exports = function(e, t) {
    let r = String(C$(e) || "").split(/\r?\n/);
    return t ? r.map((i) => Math.ceil(i.length / t)).reduce((i, n) => i + n) : r.length;
  };
});

// ../node_modules/prompts/lib/util/wrap.js
var Gw = P((ose, Jw) => {
  "use strict";
  Jw.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", i = t.width;
    return (e || "").split(/\r?\n/g).map((n) => n.split(/\s+/g).reduce((o, a) => (a.length + r.length >= i || o[o.length - 1].length + a.length +
    1 < i ? o[o.length - 1] += ` ${a}` : o.push(`${r}${a}`), o), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/lib/util/entriesToDisplay.js
var Kw = P((ase, Xw) => {
  "use strict";
  Xw.exports = (e, t, r) => {
    r = r || t;
    let i = Math.min(t - r, e - Math.floor(r / 2));
    i < 0 && (i = 0);
    let n = Math.min(i + r, t);
    return { startIndex: i, endIndex: n };
  };
});

// ../node_modules/prompts/lib/util/index.js
var yr = P((use, Yw) => {
  "use strict";
  Yw.exports = {
    action: Lw(),
    clear: $w(),
    style: Ww(),
    strip: xu(),
    figures: od(),
    lines: Hw(),
    wrap: Gw(),
    entriesToDisplay: Kw()
  };
});

// ../node_modules/prompts/lib/elements/prompt.js
var ri = P((lse, Zw) => {
  "use strict";
  var Qw = H("readline"), { action: w$ } = yr(), A$ = H("events"), { beep: S$, cursor: F$ } = Ye(), _$ = Xe(), ud = class extends A$ {
    static {
      s(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = Qw.createInterface({ input: this.in, escapeCodeTimeout: 50 });
      Qw.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let i = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = /* @__PURE__ */ s((o, a) => {
        let u = w$(a, i);
        u === !1 ? this._ && this._(o, a) : typeof this[u] == "function" ? this[u](a) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write(F$.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", n);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(S$);
    }
    render() {
      this.onRender(_$), this.firstRender && (this.firstRender = !1);
    }
  };
  Zw.exports = ud;
});

// ../node_modules/prompts/lib/elements/text.js
var tA = P((pse, eA) => {
  var Eu = Xe(), k$ = ri(), { erase: T$, cursor: io } = Ye(), { style: ld, clear: cd, lines: B$, figures: I$ } = yr(), pd = class extends k$ {
    static {
      s(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = ld.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = cd("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = Eu.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (this.value = this.value || this.initial, this.cursorOffset = 0, this.cursor = this.rendered.length, await this.validate(), this.error) {
        this.red = !0, this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let i = this.value.slice(0, this.cursor), n = this.value.slice(this.cursor);
      this.value = `${i}${t}${n}`, this.red = !1, this.cursor = this.placeholder ? 0 : i.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(io.down(B$(this.outputError, this.out.columns) - 1) + cd(this.
      outputError, this.out.columns)), this.out.write(cd(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        ld.symbol(this.done, this.aborted),
        Eu.bold(this.msg),
        ld.delimiter(this.done),
        this.red ? Eu.red(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, i) => t + `
${i ? " " : I$.pointerSmall} ${Eu.red().italic(r)}`, "")), this.out.write(T$.line + io.to(0) + this.outputText + io.save + this.outputError +
      io.restore + io.move(this.cursorOffset, 0)));
    }
  };
  eA.exports = pd;
});

// ../node_modules/prompts/lib/elements/select.js
var sA = P((fse, nA) => {
  "use strict";
  var ii = Xe(), P$ = ri(), { style: rA, clear: iA, figures: bu, wrap: O$, entriesToDisplay: R$ } = yr(), { cursor: N$ } = Ye(), hd = class extends P$ {
    static {
      s(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, i) => (typeof r == "string" && (r = { title: r, value: i }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? i : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = iA("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(N$.hide) : this.out.write(iA(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = R$(this.cursor, this.choices.length, this.optionsPerPage);
      if (this.outputText = [
        rA.symbol(this.done, this.aborted),
        ii.bold(this.msg),
        rA.delimiter(!1),
        this.done ? this.selection.title : this.selection.disabled ? ii.yellow(this.warn) : ii.gray(this.hint)
      ].join(" "), !this.done) {
        this.outputText += `
`;
        for (let i = t; i < r; i++) {
          let n, o, a = "", u = this.choices[i];
          i === t && t > 0 ? o = bu.arrowUp : i === r - 1 && r < this.choices.length ? o = bu.arrowDown : o = " ", u.disabled ? (n = this.cursor ===
          i ? ii.gray().underline(u.title) : ii.strikethrough().gray(u.title), o = (this.cursor === i ? ii.bold().gray(bu.pointer) + " " : "\
  ") + o) : (n = this.cursor === i ? ii.cyan().underline(u.title) : u.title, o = (this.cursor === i ? ii.cyan(bu.pointer) + " " : "  ") + o,
          u.description && this.cursor === i && (a = ` - ${u.description}`, (o.length + n.length + a.length >= this.out.columns || u.description.
          split(/\r?\n/).length > 1) && (a = `
` + O$(u.description, { margin: 3, width: this.out.columns })))), this.outputText += `${o} ${n}${ii.gray(a)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  nA.exports = hd;
});

// ../node_modules/prompts/lib/elements/toggle.js
var lA = P((mse, uA) => {
  var vu = Xe(), L$ = ri(), { style: oA, clear: M$ } = yr(), { cursor: aA, erase: j$ } = Ye(), fd = class extends L$ {
    static {
      s(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(aA.hide) : this.out.write(M$(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        oA.symbol(this.done, this.aborted),
        vu.bold(this.msg),
        oA.delimiter(this.done),
        this.value ? this.inactive : vu.cyan().underline(this.inactive),
        vu.gray("/"),
        this.value ? vu.cyan().underline(this.active) : this.active
      ].join(" "), this.out.write(j$.line + aA.to(0) + this.outputText));
    }
  };
  uA.exports = fd;
});

// ../node_modules/prompts/lib/dateparts/datepart.js
var Rr = P((Dse, cA) => {
  "use strict";
  var dd = class e {
    static {
      s(this, "DatePart");
    }
    constructor({ token: t, date: r, parts: i, locales: n }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = i || [this], this.locales = n || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, i) => i > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((i, n) => n > r && i instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  cA.exports = dd;
});

// ../node_modules/prompts/lib/dateparts/meridiem.js
var hA = P((xse, pA) => {
  "use strict";
  var q$ = Rr(), md = class extends q$ {
    static {
      s(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  pA.exports = md;
});

// ../node_modules/prompts/lib/dateparts/day.js
var dA = P((bse, fA) => {
  "use strict";
  var $$ = Rr(), V$ = /* @__PURE__ */ s((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), gd = class extends $$ {
    static {
      s(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + V$(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  fA.exports = gd;
});

// ../node_modules/prompts/lib/dateparts/hours.js
var gA = P((Cse, mA) => {
  "use strict";
  var U$ = Rr(), Dd = class extends U$ {
    static {
      s(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  mA.exports = Dd;
});

// ../node_modules/prompts/lib/dateparts/milliseconds.js
var yA = P((Ase, DA) => {
  "use strict";
  var W$ = Rr(), yd = class extends W$ {
    static {
      s(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  DA.exports = yd;
});

// ../node_modules/prompts/lib/dateparts/minutes.js
var EA = P((Fse, xA) => {
  "use strict";
  var z$ = Rr(), xd = class extends z$ {
    static {
      s(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  xA.exports = xd;
});

// ../node_modules/prompts/lib/dateparts/month.js
var vA = P((kse, bA) => {
  "use strict";
  var H$ = Rr(), Ed = class extends H$ {
    static {
      s(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  bA.exports = Ed;
});

// ../node_modules/prompts/lib/dateparts/seconds.js
var wA = P((Bse, CA) => {
  "use strict";
  var J$ = Rr(), bd = class extends J$ {
    static {
      s(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  CA.exports = bd;
});

// ../node_modules/prompts/lib/dateparts/year.js
var SA = P((Pse, AA) => {
  "use strict";
  var G$ = Rr(), vd = class extends G$ {
    static {
      s(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  AA.exports = vd;
});

// ../node_modules/prompts/lib/dateparts/index.js
var _A = P((Rse, FA) => {
  "use strict";
  FA.exports = {
    DatePart: Rr(),
    Meridiem: hA(),
    Day: dA(),
    Hours: gA(),
    Milliseconds: yA(),
    Minutes: EA(),
    Month: vA(),
    Seconds: wA(),
    Year: SA()
  };
});

// ../node_modules/prompts/lib/elements/date.js
var RA = P((Nse, OA) => {
  "use strict";
  var Cd = Xe(), X$ = ri(), { style: kA, clear: TA, figures: K$ } = yr(), { erase: Y$, cursor: BA } = Ye(), { DatePart: IA, Meridiem: Q$, Day: Z$,
  Hours: eV, Milliseconds: tV, Minutes: rV, Month: iV, Seconds: nV, Year: sV } = _A(), oV = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g,
  PA = {
    1: ({ token: e }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new Z$(e),
    // Day // TODO
    3: (e) => new iV(e),
    // Month
    4: (e) => new sV(e),
    // Year
    5: (e) => new Q$(e),
    // AM/PM // TODO (special)
    6: (e) => new eV(e),
    // Hours
    7: (e) => new rV(e),
    // Minutes
    8: (e) => new nV(e),
    // Seconds
    9: (e) => new tV(e)
    // Fractional seconds
  }, aV = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, wd = class extends X$ {
    static {
      s(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(aV, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = TA("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = oV.exec(t); ) {
        let n = r.shift(), o = r.findIndex((a) => a != null);
        this.parts.push(o in PA ? PA[o]({ token: r[o] || n, date: this.date, parts: this.parts, locales: this.locales }) : r[o] || n);
      }
      let i = this.parts.reduce((n, o) => (typeof o == "string" && typeof n[n.length - 1] == "string" ? n[n.length - 1] += o : n.push(o), n),
      []);
      this.parts.splice(0), this.parts.push(...i), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof IA)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof IA)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(BA.hide) : this.out.write(TA(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        kA.symbol(this.done, this.aborted),
        Cd.bold(this.msg),
        kA.delimiter(!1),
        this.parts.reduce((t, r, i) => t.concat(i === this.cursor && !this.done ? Cd.cyan().underline(r.toString()) : r), []).join("")
      ].join(" "), this.error && (this.outputText += this.errorMsg.split(`
`).reduce(
        (t, r, i) => t + `
${i ? " " : K$.pointerSmall} ${Cd.red().italic(r)}`,
        ""
      )), this.out.write(Y$.line + BA.to(0) + this.outputText));
    }
  };
  OA.exports = wd;
});

// ../node_modules/prompts/lib/elements/number.js
var jA = P((Mse, MA) => {
  var Cu = Xe(), uV = ri(), { cursor: wu, erase: lV } = Ye(), { style: Ad, figures: cV, clear: NA, lines: pV } = yr(), hV = /[0-9]/, Sd = /* @__PURE__ */ s(
  (e) => e !== void 0, "isDef"), LA = /* @__PURE__ */ s((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), Fd = class extends uV {
    static {
      s(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = Ad.render(t.style), this.msg = t.message, this.initial = Sd(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = Sd(t.min) ? t.min : -1 / 0, this.max = Sd(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = Cu.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${LA(t, this.round)}`), this._value = LA(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || hV.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = !0, this.aborted = !1, this.error = !1, this.fire(), this.render(), this.out.write(
      `
`), this.close();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let i = Date.now();
      if (i - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = i, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(wu.down(pV(this.outputError, this.out.columns) - 1) + NA(this.
      outputError, this.out.columns)), this.out.write(NA(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        Ad.symbol(this.done, this.aborted),
        Cu.bold(this.msg),
        Ad.delimiter(this.done),
        !this.done || !this.done && !this.placeholder ? Cu[this.color]().underline(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, i) => t + `
${i ? " " : cV.pointerSmall} ${Cu.red().italic(r)}`, "")), this.out.write(lV.line + wu.to(0) + this.outputText + wu.save + this.outputError +
      wu.restore));
    }
  };
  MA.exports = Fd;
});

// ../node_modules/prompts/lib/elements/multiselect.js
var kd = P((qse, VA) => {
  "use strict";
  var Nr = Xe(), { cursor: fV } = Ye(), dV = ri(), { clear: qA, figures: Ai, style: $A, wrap: mV, entriesToDisplay: gV } = yr(), _d = class extends dV {
    static {
      s(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, i) => (typeof r == "string" && (r = { title: r,
      value: i }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? i : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = qA("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Ai.arrowUp}/${Ai.arrowDown}: Highlight option
    ${Ai.arrowLeft}/${Ai.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, i, n) {
      let o = (r.selected ? Nr.green(Ai.radioOn) : Ai.radioOff) + " " + n + " ", a, u;
      return r.disabled ? a = t === i ? Nr.gray().underline(r.title) : Nr.strikethrough().gray(r.title) : (a = t === i ? Nr.cyan().underline(
      r.title) : r.title, t === i && r.description && (u = ` - ${r.description}`, (o.length + a.length + u.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (u = `
` + mV(r.description, { margin: o.length, width: this.out.columns })))), o + a + Nr.gray(u || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return Nr.red("No matches for this query.");
      let { startIndex: r, endIndex: i } = gV(this.cursor, t.length, this.optionsPerPage), n, o = [];
      for (let a = r; a < i; a++)
        a === r && r > 0 ? n = Ai.arrowUp : a === i - 1 && i < t.length ? n = Ai.arrowDown : n = " ", o.push(this.renderOption(this.cursor, t[a],
        a, n));
      return `
` + o.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [Nr.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(Nr.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(fV.hide), super.render();
      let t = [
        $A.symbol(this.done, this.aborted),
        Nr.bold(this.msg),
        $A.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += Nr.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = qA(t, this.out.columns);
    }
  };
  VA.exports = _d;
});

// ../node_modules/prompts/lib/elements/autocomplete.js
var JA = P((Vse, HA) => {
  "use strict";
  var no = Xe(), DV = ri(), { erase: yV, cursor: UA } = Ye(), { style: Td, clear: WA, figures: Bd, wrap: xV, entriesToDisplay: EV } = yr(), zA = /* @__PURE__ */ s(
  (e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), bV = /* @__PURE__ */ s((e, t) => e[t] && (e[t].title || e[t].value || e[t]),
  "getTitle"), vV = /* @__PURE__ */ s((e, t) => {
    let r = e.findIndex((i) => i.value === t || i.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), Id = class extends DV {
    static {
      s(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      vV(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = { noMatches: t.noMatches || "no matches found" }, this.
      fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit = t.limit ||
      10, this.cursor = 0, this.transform = Td.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(this), this.
      complete = this.complete.bind(this), this.clear = WA("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = { title: this._fb }), t || this.
      _fb || { title: this.i18n.noMatches };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = zA(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    async complete(t) {
      let r = this.completing = this.suggest(this.input, this.choices), i = await r;
      if (this.completing !== r) return;
      this.suggestions = i.map((o, a, u) => ({ title: bV(u, a), value: zA(u, a), description: o.description })), this.completing = !1;
      let n = Math.max(i.length - 1, 0);
      this.moveSelect(Math.min(n, this.select)), t && t();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let i = this.input.slice(0, this.cursor), n = this.input.slice(this.cursor);
      this.input = `${i}${t}${n}`, this.cursor = i.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, i, n) {
      let o, a = i ? Bd.arrowUp : n ? Bd.arrowDown : " ", u = r ? no.cyan().underline(t.title) : t.title;
      return a = (r ? no.cyan(Bd.pointer) + " " : "  ") + a, t.description && (o = ` - ${t.description}`, (a.length + u.length + o.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (o = `
` + xV(t.description, { margin: 3, width: this.out.columns }))), a + " " + u + no.gray(o || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(UA.hide) : this.out.write(WA(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = EV(this.select, this.choices.length, this.limit);
      if (this.outputText = [
        Td.symbol(this.done, this.aborted, this.exited),
        no.bold(this.msg),
        Td.delimiter(this.completing),
        this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)
      ].join(" "), !this.done) {
        let i = this.suggestions.slice(t, r).map((n, o) => this.renderOption(
          n,
          this.select === o + t,
          o === 0 && t > 0,
          o + t === r - 1 && r < this.choices.length
        )).join(`
`);
        this.outputText += `
` + (i || no.gray(this.fallback.title));
      }
      this.out.write(yV.line + UA.to(0) + this.outputText);
    }
  };
  HA.exports = Id;
});

// ../node_modules/prompts/lib/elements/autocompleteMultiselect.js
var YA = P((Wse, KA) => {
  "use strict";
  var ni = Xe(), { cursor: CV } = Ye(), wV = kd(), { clear: GA, style: XA, figures: Un } = yr(), Pd = class extends wV {
    static {
      s(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = GA("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((i) => this.inputValue ? !!(typeof i.title == "string" && i.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof i.value == "string" && i.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((i) => i === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Un.arrowUp}/${Un.arrowDown}: Highlight option
    ${Un.arrowLeft}/${Un.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : ni.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, i) {
      let n;
      return r.disabled ? n = t === i ? ni.gray().underline(r.title) : ni.strikethrough().gray(r.title) : n = t === i ? ni.cyan().underline(
      r.title) : r.title, (r.selected ? ni.green(Un.radioOn) : Un.radioOff) + "  " + n;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [ni.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(ni.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(CV.hide), super.render();
      let t = [
        XA.symbol(this.done, this.aborted),
        ni.bold(this.msg),
        XA.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += ni.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = GA(t, this.out.columns);
    }
  };
  KA.exports = Pd;
});

// ../node_modules/prompts/lib/elements/confirm.js
var rS = P((Hse, tS) => {
  var QA = Xe(), AV = ri(), { style: ZA, clear: SV } = yr(), { erase: FV, cursor: eS } = Ye(), Od = class extends AV {
    static {
      s(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(eS.hide) : this.out.write(SV(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        ZA.symbol(this.done, this.aborted),
        QA.bold(this.msg),
        ZA.delimiter(this.done),
        this.done ? this.value ? this.yesMsg : this.noMsg : QA.gray(this.initialValue ? this.yesOption : this.noOption)
      ].join(" "), this.out.write(FV.line + eS.to(0) + this.outputText));
    }
  };
  tS.exports = Od;
});

// ../node_modules/prompts/lib/elements/index.js
var nS = P((Gse, iS) => {
  "use strict";
  iS.exports = {
    TextPrompt: tA(),
    SelectPrompt: sA(),
    TogglePrompt: lA(),
    DatePrompt: RA(),
    NumberPrompt: jA(),
    MultiselectPrompt: kd(),
    AutocompletePrompt: JA(),
    AutocompleteMultiselectPrompt: YA(),
    ConfirmPrompt: rS()
  };
});

// ../node_modules/prompts/lib/prompts.js
var oS = P((sS) => {
  "use strict";
  var Pt = sS, _V = nS(), Au = /* @__PURE__ */ s((e) => e, "noop");
  function Lr(e, t, r = {}) {
    return new Promise((i, n) => {
      let o = new _V[e](t), a = r.onAbort || Au, u = r.onSubmit || Au, l = r.onExit || Au;
      o.on("state", t.onState || Au), o.on("submit", (c) => i(u(c))), o.on("exit", (c) => i(l(c))), o.on("abort", (c) => n(a(c)));
    });
  }
  s(Lr, "toPrompt");
  Pt.text = (e) => Lr("TextPrompt", e);
  Pt.password = (e) => (e.style = "password", Pt.text(e));
  Pt.invisible = (e) => (e.style = "invisible", Pt.text(e));
  Pt.number = (e) => Lr("NumberPrompt", e);
  Pt.date = (e) => Lr("DatePrompt", e);
  Pt.confirm = (e) => Lr("ConfirmPrompt", e);
  Pt.list = (e) => {
    let t = e.separator || ",";
    return Lr("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ s((r) => r.split(t).map((i) => i.trim()), "onSubmit")
    });
  };
  Pt.toggle = (e) => Lr("TogglePrompt", e);
  Pt.select = (e) => Lr("SelectPrompt", e);
  Pt.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((i) => i.selected).map((i) => i.value), "toSelected");
    return Lr("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  Pt.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((i) => i.selected).map((i) => i.value), "toSelected");
    return Lr("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var kV = /* @__PURE__ */ s((e, t) => Promise.resolve(
    t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())
  ), "byTitle");
  Pt.autocomplete = (e) => (e.suggest = e.suggest || kV, e.choices = [].concat(e.choices || []), Lr("AutocompletePrompt", e));
});

// ../node_modules/prompts/lib/index.js
var lS = P((Yse, uS) => {
  "use strict";
  var Rd = oS(), TV = ["suggest", "format", "onState", "validate", "onRender", "type"], aS = /* @__PURE__ */ s(() => {
  }, "noop");
  async function Si(e = [], { onSubmit: t = aS, onCancel: r = aS } = {}) {
    let i = {}, n = Si._override || {};
    e = [].concat(e);
    let o, a, u, l, c, p, h = /* @__PURE__ */ s(async (f, d, m = !1) => {
      if (!(!m && f.validate && f.validate(d) !== !0))
        return f.format ? await f.format(d, i) : d;
    }, "getFormattedAnswer");
    for (a of e)
      if ({ name: l, type: c } = a, typeof c == "function" && (c = await c(o, { ...i }, a), a.type = c), !!c) {
        for (let f in a) {
          if (TV.includes(f)) continue;
          let d = a[f];
          a[f] = typeof d == "function" ? await d(o, { ...i }, p) : d;
        }
        if (p = a, typeof a.message != "string")
          throw new Error("prompt message is required");
        if ({ name: l, type: c } = a, Rd[c] === void 0)
          throw new Error(`prompt type (${c}) is not defined`);
        if (n[a.name] !== void 0 && (o = await h(a, n[a.name]), o !== void 0)) {
          i[l] = o;
          continue;
        }
        try {
          o = Si._injected ? BV(Si._injected, a.initial) : await Rd[c](a), i[l] = o = await h(a, o, !0), u = await t(a, o, i);
        } catch {
          u = !await r(a, i);
        }
        if (u) return i;
      }
    return i;
  }
  s(Si, "prompt");
  function BV(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  s(BV, "getInjectedAnswer");
  function IV(e) {
    Si._injected = (Si._injected || []).concat(e);
  }
  s(IV, "inject");
  function PV(e) {
    Si._override = Object.assign({}, e);
  }
  s(PV, "override");
  uS.exports = Object.assign(Si, { prompt: Si, prompts: Rd, inject: IV, override: PV });
});

// ../node_modules/prompts/index.js
var Nd = P((Zse, cS) => {
  function OV(e) {
    e = (Array.isArray(e) ? e : e.split(".")).map(Number);
    let t = 0, r = process.versions.node.split(".").map(Number);
    for (; t < e.length; t++) {
      if (r[t] > e[t]) return !1;
      if (e[t] > r[t]) return !0;
    }
    return !1;
  }
  s(OV, "isNodeLT");
  cS.exports = OV("8.6.0") ? Rw() : lS();
});

// ../node_modules/telejson/dist/index.js
var HS = P((Poe, zS) => {
  "use strict";
  var GV = Object.create, _u = Object.defineProperty, XV = Object.getOwnPropertyDescriptor, vS = Object.getOwnPropertyNames, KV = Object.getPrototypeOf,
  YV = Object.prototype.hasOwnProperty, be = /* @__PURE__ */ s((e, t) => /* @__PURE__ */ s(function() {
    return t || (0, e[vS(e)[0]])((t = { exports: {} }).exports, t), t.exports;
  }, "__require"), "__commonJS"), QV = /* @__PURE__ */ s((e, t) => {
    for (var r in t)
      _u(e, r, { get: t[r], enumerable: !0 });
  }, "__export"), CS = /* @__PURE__ */ s((e, t, r, i) => {
    if (t && typeof t == "object" || typeof t == "function")
      for (let n of vS(t))
        !YV.call(e, n) && n !== r && _u(e, n, { get: /* @__PURE__ */ s(() => t[n], "get"), enumerable: !(i = XV(t, n)) || i.enumerable });
    return e;
  }, "__copyProps"), Hd = /* @__PURE__ */ s((e, t, r) => (r = e != null ? GV(KV(e)) : {}, CS(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    t || !e || !e.__esModule ? _u(r, "default", { value: e, enumerable: !0 }) : r,
    e
  )), "__toESM"), ZV = /* @__PURE__ */ s((e) => CS(_u({}, "__esModule", { value: !0 }), e), "__toCommonJS"), wS = be({
    "node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js"(e, t) {
      "use strict";
      t.exports = Object;
    }
  }), eU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js"(e, t) {
      "use strict";
      t.exports = Error;
    }
  }), tU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"(e, t) {
      "use strict";
      t.exports = EvalError;
    }
  }), rU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js"(e, t) {
      "use strict";
      t.exports = RangeError;
    }
  }), iU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js"(e, t) {
      "use strict";
      t.exports = ReferenceError;
    }
  }), nU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js"(e, t) {
      "use strict";
      t.exports = SyntaxError;
    }
  }), Jd = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js"(e, t) {
      "use strict";
      t.exports = TypeError;
    }
  }), sU = be({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js"(e, t) {
      "use strict";
      t.exports = URIError;
    }
  }), oU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js"(e, t) {
      "use strict";
      t.exports = Math.abs;
    }
  }), aU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js"(e, t) {
      "use strict";
      t.exports = Math.floor;
    }
  }), uU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js"(e, t) {
      "use strict";
      t.exports = Math.max;
    }
  }), lU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js"(e, t) {
      "use strict";
      t.exports = Math.min;
    }
  }), cU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js"(e, t) {
      "use strict";
      t.exports = Math.pow;
    }
  }), pU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js"(e, t) {
      "use strict";
      t.exports = Math.round;
    }
  }), hU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js"(e, t) {
      "use strict";
      t.exports = Number.isNaN || /* @__PURE__ */ s(function(i) {
        return i !== i;
      }, "isNaN2");
    }
  }), fU = be({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js"(e, t) {
      "use strict";
      var r = hU();
      t.exports = /* @__PURE__ */ s(function(n) {
        return r(n) || n === 0 ? n : n < 0 ? -1 : 1;
      }, "sign");
    }
  }), dU = be({
    "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js"(e, t) {
      "use strict";
      t.exports = Object.getOwnPropertyDescriptor;
    }
  }), Gd = be({
    "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js"(e, t) {
      "use strict";
      var r = dU();
      if (r)
        try {
          r([], "length");
        } catch {
          r = null;
        }
      t.exports = r;
    }
  }), mU = be({
    "node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js"(e, t) {
      "use strict";
      var r = Object.defineProperty || !1;
      if (r)
        try {
          r({}, "a", { value: 1 });
        } catch {
          r = !1;
        }
      t.exports = r;
    }
  }), AS = be({
    "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js"(e, t) {
      "use strict";
      t.exports = /* @__PURE__ */ s(function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
          return !1;
        if (typeof Symbol.iterator == "symbol")
          return !0;
        var i = {}, n = Symbol("test"), o = Object(n);
        if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(o) !== "[objec\
t Symbol]")
          return !1;
        var a = 42;
        i[n] = a;
        for (var u in i)
          return !1;
        if (typeof Object.keys == "function" && Object.keys(i).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(
        i).length !== 0)
          return !1;
        var l = Object.getOwnPropertySymbols(i);
        if (l.length !== 1 || l[0] !== n || !Object.prototype.propertyIsEnumerable.call(i, n))
          return !1;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
          var c = (
            /** @type {PropertyDescriptor} */
            Object.getOwnPropertyDescriptor(i, n)
          );
          if (c.value !== a || c.enumerable !== !0)
            return !1;
        }
        return !0;
      }, "hasSymbols");
    }
  }), SS = be({
    "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js"(e, t) {
      "use strict";
      var r = typeof Symbol < "u" && Symbol, i = AS();
      t.exports = /* @__PURE__ */ s(function() {
        return typeof r != "function" || typeof Symbol != "function" || typeof r("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 :
        i();
      }, "hasNativeSymbols");
    }
  }), FS = be({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js"(e, t) {
      "use strict";
      t.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
    }
  }), _S = be({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js"(e, t) {
      "use strict";
      var r = wS();
      t.exports = r.getPrototypeOf || null;
    }
  }), gU = be({
    "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(e, t) {
      "use strict";
      var r = "Function.prototype.bind called on incompatible ", i = Object.prototype.toString, n = Math.max, o = "[object Function]", a = /* @__PURE__ */ s(
      function(p, h) {
        for (var f = [], d = 0; d < p.length; d += 1)
          f[d] = p[d];
        for (var m = 0; m < h.length; m += 1)
          f[m + p.length] = h[m];
        return f;
      }, "concatty2"), u = /* @__PURE__ */ s(function(p, h) {
        for (var f = [], d = h || 0, m = 0; d < p.length; d += 1, m += 1)
          f[m] = p[d];
        return f;
      }, "slicy2"), l = /* @__PURE__ */ s(function(c, p) {
        for (var h = "", f = 0; f < c.length; f += 1)
          h += c[f], f + 1 < c.length && (h += p);
        return h;
      }, "joiny");
      t.exports = /* @__PURE__ */ s(function(p) {
        var h = this;
        if (typeof h != "function" || i.apply(h) !== o)
          throw new TypeError(r + h);
        for (var f = u(arguments, 1), d, m = /* @__PURE__ */ s(function() {
          if (this instanceof d) {
            var S = h.apply(
              this,
              a(f, arguments)
            );
            return Object(S) === S ? S : this;
          }
          return h.apply(
            p,
            a(f, arguments)
          );
        }, "binder"), g = n(0, h.length - f.length), b = [], D = 0; D < g; D++)
          b[D] = "$" + D;
        if (d = Function("binder", "return function (" + l(b, ",") + "){ return binder.apply(this,arguments); }")(m), h.prototype) {
          var v = /* @__PURE__ */ s(function() {
          }, "Empty2");
          v.prototype = h.prototype, d.prototype = new v(), v.prototype = null;
        }
        return d;
      }, "bind");
    }
  }), ku = be({
    "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(e, t) {
      "use strict";
      var r = gU();
      t.exports = Function.prototype.bind || r;
    }
  }), Xd = be({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js"(e, t) {
      "use strict";
      t.exports = Function.prototype.call;
    }
  }), kS = be({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js"(e, t) {
      "use strict";
      t.exports = Function.prototype.apply;
    }
  }), DU = be({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js"(e, t) {
      "use strict";
      t.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
    }
  }), yU = be({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js"(e, t) {
      "use strict";
      var r = ku(), i = kS(), n = Xd(), o = DU();
      t.exports = o || r.call(n, i);
    }
  }), TS = be({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js"(e, t) {
      "use strict";
      var r = ku(), i = Jd(), n = Xd(), o = yU();
      t.exports = /* @__PURE__ */ s(function(u) {
        if (u.length < 1 || typeof u[0] != "function")
          throw new i("a function is required");
        return o(r, n, u);
      }, "callBindBasic");
    }
  }), xU = be({
    "node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js"(e, t) {
      "use strict";
      var r = TS(), i = Gd(), n;
      try {
        n = /** @type {{ __proto__?: typeof Array.prototype }} */
        [].__proto__ === Array.prototype;
      } catch (l) {
        if (!l || typeof l != "object" || !("code" in l) || l.code !== "ERR_PROTO_ACCESS")
          throw l;
      }
      var o = !!n && i && i(
        Object.prototype,
        /** @type {keyof typeof Object.prototype} */
        "__proto__"
      ), a = Object, u = a.getPrototypeOf;
      t.exports = o && typeof o.get == "function" ? r([o.get]) : typeof u == "function" ? (
        /** @type {import('./get')} */
        /* @__PURE__ */ s(function(c) {
          return u(c == null ? c : a(c));
        }, "getDunder")
      ) : !1;
    }
  }), EU = be({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js"(e, t) {
      "use strict";
      var r = FS(), i = _S(), n = xU();
      t.exports = r ? /* @__PURE__ */ s(function(a) {
        return r(a);
      }, "getProto") : i ? /* @__PURE__ */ s(function(a) {
        if (!a || typeof a != "object" && typeof a != "function")
          throw new TypeError("getProto: not an object");
        return i(a);
      }, "getProto") : n ? /* @__PURE__ */ s(function(a) {
        return n(a);
      }, "getProto") : null;
    }
  }), BS = be({
    "node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js"(e, t) {
      "use strict";
      var r = Function.prototype.call, i = Object.prototype.hasOwnProperty, n = ku();
      t.exports = n.call(r, i);
    }
  }), bU = be({
    "node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js"(e, t) {
      "use strict";
      var r, i = wS(), n = eU(), o = tU(), a = rU(), u = iU(), l = nU(), c = Jd(), p = sU(), h = oU(), f = aU(), d = uU(), m = lU(), g = cU(),
      b = pU(), D = fU(), v = Function, S = /* @__PURE__ */ s(function(X) {
        try {
          return v('"use strict"; return (' + X + ").constructor;")();
        } catch {
        }
      }, "getEvalledConstructor"), k = Gd(), L = mU(), C = /* @__PURE__ */ s(function() {
        throw new c();
      }, "throwTypeError"), w = k ? function() {
        try {
          return arguments.callee, C;
        } catch {
          try {
            return k(arguments, "callee").get;
          } catch {
            return C;
          }
        }
      }() : C, T = SS()(), _ = EU(), q = _S(), O = FS(), $ = kS(), V = Xd(), K = {}, M = typeof Uint8Array > "u" || !_ ? r : _(Uint8Array), R = {
        __proto__: null,
        "%AggregateError%": typeof AggregateError > "u" ? r : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer > "u" ? r : ArrayBuffer,
        "%ArrayIteratorPrototype%": T && _ ? _([][Symbol.iterator]()) : r,
        "%AsyncFromSyncIteratorPrototype%": r,
        "%AsyncFunction%": K,
        "%AsyncGenerator%": K,
        "%AsyncGeneratorFunction%": K,
        "%AsyncIteratorPrototype%": K,
        "%Atomics%": typeof Atomics > "u" ? r : Atomics,
        "%BigInt%": typeof BigInt > "u" ? r : BigInt,
        "%BigInt64Array%": typeof BigInt64Array > "u" ? r : BigInt64Array,
        "%BigUint64Array%": typeof BigUint64Array > "u" ? r : BigUint64Array,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView > "u" ? r : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": n,
        "%eval%": eval,
        // eslint-disable-line no-eval
        "%EvalError%": o,
        "%Float16Array%": typeof Float16Array > "u" ? r : Float16Array,
        "%Float32Array%": typeof Float32Array > "u" ? r : Float32Array,
        "%Float64Array%": typeof Float64Array > "u" ? r : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? r : FinalizationRegistry,
        "%Function%": v,
        "%GeneratorFunction%": K,
        "%Int8Array%": typeof Int8Array > "u" ? r : Int8Array,
        "%Int16Array%": typeof Int16Array > "u" ? r : Int16Array,
        "%Int32Array%": typeof Int32Array > "u" ? r : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": T && _ ? _(_([][Symbol.iterator]())) : r,
        "%JSON%": typeof JSON == "object" ? JSON : r,
        "%Map%": typeof Map > "u" ? r : Map,
        "%MapIteratorPrototype%": typeof Map > "u" || !T || !_ ? r : _((/* @__PURE__ */ new Map())[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": i,
        "%Object.getOwnPropertyDescriptor%": k,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise > "u" ? r : Promise,
        "%Proxy%": typeof Proxy > "u" ? r : Proxy,
        "%RangeError%": a,
        "%ReferenceError%": u,
        "%Reflect%": typeof Reflect > "u" ? r : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set > "u" ? r : Set,
        "%SetIteratorPrototype%": typeof Set > "u" || !T || !_ ? r : _((/* @__PURE__ */ new Set())[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? r : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": T && _ ? _(""[Symbol.iterator]()) : r,
        "%Symbol%": T ? Symbol : r,
        "%SyntaxError%": l,
        "%ThrowTypeError%": w,
        "%TypedArray%": M,
        "%TypeError%": c,
        "%Uint8Array%": typeof Uint8Array > "u" ? r : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? r : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array > "u" ? r : Uint16Array,
        "%Uint32Array%": typeof Uint32Array > "u" ? r : Uint32Array,
        "%URIError%": p,
        "%WeakMap%": typeof WeakMap > "u" ? r : WeakMap,
        "%WeakRef%": typeof WeakRef > "u" ? r : WeakRef,
        "%WeakSet%": typeof WeakSet > "u" ? r : WeakSet,
        "%Function.prototype.call%": V,
        "%Function.prototype.apply%": $,
        "%Object.defineProperty%": L,
        "%Object.getPrototypeOf%": q,
        "%Math.abs%": h,
        "%Math.floor%": f,
        "%Math.max%": d,
        "%Math.min%": m,
        "%Math.pow%": g,
        "%Math.round%": b,
        "%Math.sign%": D,
        "%Reflect.getPrototypeOf%": O
      };
      if (_)
        try {
          null.error;
        } catch (X) {
          U = _(_(X)), R["%Error.prototype%"] = U;
        }
      var U, Y = /* @__PURE__ */ s(function X(te) {
        var pe;
        if (te === "%AsyncFunction%")
          pe = S("async function () {}");
        else if (te === "%GeneratorFunction%")
          pe = S("function* () {}");
        else if (te === "%AsyncGeneratorFunction%")
          pe = S("async function* () {}");
        else if (te === "%AsyncGenerator%") {
          var me = X("%AsyncGeneratorFunction%");
          me && (pe = me.prototype);
        } else if (te === "%AsyncIteratorPrototype%") {
          var De = X("%AsyncGenerator%");
          De && _ && (pe = _(De.prototype));
        }
        return R[te] = pe, pe;
      }, "doEval2"), ee = {
        __proto__: null,
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
      }, I = ku(), se = BS(), Me = I.call(V, Array.prototype.concat), N = I.call($, Array.prototype.splice), Oe = I.call(V, String.prototype.
      replace), Pe = I.call(V, String.prototype.slice), ce = I.call(V, RegExp.prototype.exec), Dt = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
      Be = /\\(\\)?/g, Z = /* @__PURE__ */ s(function(te) {
        var pe = Pe(te, 0, 1), me = Pe(te, -1);
        if (pe === "%" && me !== "%")
          throw new l("invalid intrinsic syntax, expected closing `%`");
        if (me === "%" && pe !== "%")
          throw new l("invalid intrinsic syntax, expected opening `%`");
        var De = [];
        return Oe(te, Dt, function(He, pt, Re, Vt) {
          De[De.length] = Re ? Oe(Vt, Be, "$1") : pt || He;
        }), De;
      }, "stringToPath3"), de = /* @__PURE__ */ s(function(te, pe) {
        var me = te, De;
        if (se(ee, me) && (De = ee[me], me = "%" + De[0] + "%"), se(R, me)) {
          var He = R[me];
          if (He === K && (He = Y(me)), typeof He > "u" && !pe)
            throw new c("intrinsic " + te + " exists, but is not available. Please file an issue!");
          return {
            alias: De,
            name: me,
            value: He
          };
        }
        throw new l("intrinsic " + te + " does not exist!");
      }, "getBaseIntrinsic2");
      t.exports = /* @__PURE__ */ s(function(te, pe) {
        if (typeof te != "string" || te.length === 0)
          throw new c("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof pe != "boolean")
          throw new c('"allowMissing" argument must be a boolean');
        if (ce(/^%?[^%]*%?$/, te) === null)
          throw new l("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var me = Z(te), De = me.length > 0 ? me[0] : "", He = de("%" + De + "%", pe), pt = He.name, Re = He.value, Vt = !1, Ut = He.alias;
        Ut && (De = Ut[0], N(me, Me([0, 1], Ut)));
        for (var ur = 1, oe = !0; ur < me.length; ur += 1) {
          var Ve = me[ur], x = Pe(Ve, 0, 1), y = Pe(Ve, -1);
          if ((x === '"' || x === "'" || x === "`" || y === '"' || y === "'" || y === "`") && x !== y)
            throw new l("property names with quotes must have matching quotes");
          if ((Ve === "constructor" || !oe) && (Vt = !0), De += "." + Ve, pt = "%" + De + "%", se(R, pt))
            Re = R[pt];
          else if (Re != null) {
            if (!(Ve in Re)) {
              if (!pe)
                throw new c("base intrinsic for " + te + " exists, but the property is not available.");
              return;
            }
            if (k && ur + 1 >= me.length) {
              var F = k(Re, Ve);
              oe = !!F, oe && "get" in F && !("originalValue" in F.get) ? Re = F.get : Re = Re[Ve];
            } else
              oe = se(Re, Ve), Re = Re[Ve];
            oe && !Vt && (R[pt] = Re);
          }
        }
        return Re;
      }, "GetIntrinsic");
    }
  }), Kd = be({
    "node_modules/.pnpm/call-bound@1.0.4/node_modules/call-bound/index.js"(e, t) {
      "use strict";
      var r = bU(), i = TS(), n = i([r("%String.prototype.indexOf%")]);
      t.exports = /* @__PURE__ */ s(function(a, u) {
        var l = (
          /** @type {(this: unknown, ...args: unknown[]) => unknown} */
          r(a, !!u)
        );
        return typeof l == "function" && n(a, ".prototype.") > -1 ? i(
          /** @type {const} */
          [l]
        ) : l;
      }, "callBoundIntrinsic");
    }
  }), vU = be({
    "node_modules/.pnpm/has-tostringtag@1.0.2/node_modules/has-tostringtag/shams.js"(e, t) {
      "use strict";
      var r = AS();
      t.exports = /* @__PURE__ */ s(function() {
        return r() && !!Symbol.toStringTag;
      }, "hasToStringTagShams");
    }
  }), IS = be({
    "node_modules/.pnpm/is-regex@1.2.1/node_modules/is-regex/index.js"(e, t) {
      "use strict";
      var r = Kd(), i = vU()(), n = BS(), o = Gd(), a;
      i ? (u = r("RegExp.prototype.exec"), l = {}, c = /* @__PURE__ */ s(function() {
        throw l;
      }, "throwRegexMarker"), p = {
        toString: c,
        valueOf: c
      }, typeof Symbol.toPrimitive == "symbol" && (p[Symbol.toPrimitive] = c), a = /* @__PURE__ */ s(function(m) {
        if (!m || typeof m != "object")
          return !1;
        var g = (
          /** @type {NonNullable<typeof gOPD>} */
          o(
            /** @type {{ lastIndex?: unknown }} */
            m,
            "lastIndex"
          )
        ), b = g && n(g, "value");
        if (!b)
          return !1;
        try {
          u(
            m,
            /** @type {string} */
            /** @type {unknown} */
            p
          );
        } catch (D) {
          return D === l;
        }
      }, "isRegex")) : (h = r("Object.prototype.toString"), f = "[object RegExp]", a = /* @__PURE__ */ s(function(m) {
        return !m || typeof m != "object" && typeof m != "function" ? !1 : h(m) === f;
      }, "isRegex"));
      var u, l, c, p, h, f;
      t.exports = a;
    }
  }), CU = be({
    "node_modules/.pnpm/is-function@1.0.2/node_modules/is-function/index.js"(e, t) {
      t.exports = i;
      var r = Object.prototype.toString;
      function i(n) {
        if (!n)
          return !1;
        var o = r.call(n);
        return o === "[object Function]" || typeof n == "function" && o !== "[object RegExp]" || typeof window < "u" && // IE8 and below
        (n === window.setTimeout || n === window.alert || n === window.confirm || n === window.prompt);
      }
      s(i, "isFunction3");
    }
  }), wU = be({
    "node_modules/.pnpm/safe-regex-test@1.1.0/node_modules/safe-regex-test/index.js"(e, t) {
      "use strict";
      var r = Kd(), i = IS(), n = r("RegExp.prototype.exec"), o = Jd();
      t.exports = /* @__PURE__ */ s(function(u) {
        if (!i(u))
          throw new o("`regex` must be a RegExp");
        return /* @__PURE__ */ s(function(c) {
          return n(u, c) !== null;
        }, "test");
      }, "regexTester");
    }
  }), AU = be({
    "node_modules/.pnpm/is-symbol@1.1.1/node_modules/is-symbol/index.js"(e, t) {
      "use strict";
      var r = Kd(), i = r("Object.prototype.toString"), n = SS()(), o = wU();
      n ? (a = r("Symbol.prototype.toString"), u = o(/^Symbol\(.*\)$/), l = /* @__PURE__ */ s(function(p) {
        return typeof p.valueOf() != "symbol" ? !1 : u(a(p));
      }, "isRealSymbolObject"), t.exports = /* @__PURE__ */ s(function(p) {
        if (typeof p == "symbol")
          return !0;
        if (!p || typeof p != "object" || i(p) !== "[object Symbol]")
          return !1;
        try {
          return l(p);
        } catch {
          return !1;
        }
      }, "isSymbol3")) : t.exports = /* @__PURE__ */ s(function(p) {
        return !1;
      }, "isSymbol3");
      var a, u, l;
    }
  }), PS = {};
  QV(PS, {
    isJSON: /* @__PURE__ */ s(() => qS, "isJSON"),
    parse: /* @__PURE__ */ s(() => Yz, "parse"),
    replacer: /* @__PURE__ */ s(() => VS, "replacer"),
    reviver: /* @__PURE__ */ s(() => US, "reviver"),
    stringify: /* @__PURE__ */ s(() => Xz, "stringify")
  });
  zS.exports = ZV(PS);
  var SU = Hd(IS()), FU = Hd(CU()), _U = Hd(AU());
  function kU(e) {
    return e != null && typeof e == "object" && Array.isArray(e) === !1;
  }
  s(kU, "isObject");
  var TU = typeof global == "object" && global && global.Object === Object && global, BU = TU, IU = typeof self == "object" && self && self.
  Object === Object && self, PU = BU || IU || Function("return this")(), Yd = PU, OU = Yd.Symbol, Wn = OU, OS = Object.prototype, RU = OS.hasOwnProperty,
  NU = OS.toString, oo = Wn ? Wn.toStringTag : void 0;
  function LU(e) {
    var t = RU.call(e, oo), r = e[oo];
    try {
      e[oo] = void 0;
      var i = !0;
    } catch {
    }
    var n = NU.call(e);
    return i && (t ? e[oo] = r : delete e[oo]), n;
  }
  s(LU, "getRawTag");
  var MU = LU, jU = Object.prototype, qU = jU.toString;
  function $U(e) {
    return qU.call(e);
  }
  s($U, "objectToString");
  var VU = $U, UU = "[object Null]", WU = "[object Undefined]", DS = Wn ? Wn.toStringTag : void 0;
  function zU(e) {
    return e == null ? e === void 0 ? WU : UU : DS && DS in Object(e) ? MU(e) : VU(e);
  }
  s(zU, "baseGetTag");
  var RS = zU;
  function HU(e) {
    return e != null && typeof e == "object";
  }
  s(HU, "isObjectLike");
  var JU = HU, GU = "[object Symbol]";
  function XU(e) {
    return typeof e == "symbol" || JU(e) && RS(e) == GU;
  }
  s(XU, "isSymbol");
  var Qd = XU;
  function KU(e, t) {
    for (var r = -1, i = e == null ? 0 : e.length, n = Array(i); ++r < i; )
      n[r] = t(e[r], r, e);
    return n;
  }
  s(KU, "arrayMap");
  var YU = KU, QU = Array.isArray, Zd = QU, ZU = 1 / 0, yS = Wn ? Wn.prototype : void 0, xS = yS ? yS.toString : void 0;
  function NS(e) {
    if (typeof e == "string")
      return e;
    if (Zd(e))
      return YU(e, NS) + "";
    if (Qd(e))
      return xS ? xS.call(e) : "";
    var t = e + "";
    return t == "0" && 1 / e == -ZU ? "-0" : t;
  }
  s(NS, "baseToString");
  var eW = NS;
  function tW(e) {
    var t = typeof e;
    return e != null && (t == "object" || t == "function");
  }
  s(tW, "isObject2");
  var LS = tW, rW = "[object AsyncFunction]", iW = "[object Function]", nW = "[object GeneratorFunction]", sW = "[object Proxy]";
  function oW(e) {
    if (!LS(e))
      return !1;
    var t = RS(e);
    return t == iW || t == nW || t == rW || t == sW;
  }
  s(oW, "isFunction");
  var aW = oW, uW = Yd["__core-js_shared__"], zd = uW, ES = function() {
    var e = /[^.]+$/.exec(zd && zd.keys && zd.keys.IE_PROTO || "");
    return e ? "Symbol(src)_1." + e : "";
  }();
  function lW(e) {
    return !!ES && ES in e;
  }
  s(lW, "isMasked");
  var cW = lW, pW = Function.prototype, hW = pW.toString;
  function fW(e) {
    if (e != null) {
      try {
        return hW.call(e);
      } catch {
      }
      try {
        return e + "";
      } catch {
      }
    }
    return "";
  }
  s(fW, "toSource");
  var dW = fW, mW = /[\\^$.*+?()[\]{}|]/g, gW = /^\[object .+?Constructor\]$/, DW = Function.prototype, yW = Object.prototype, xW = DW.toString,
  EW = yW.hasOwnProperty, bW = RegExp(
    "^" + xW.call(EW).replace(mW, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  function vW(e) {
    if (!LS(e) || cW(e))
      return !1;
    var t = aW(e) ? bW : gW;
    return t.test(dW(e));
  }
  s(vW, "baseIsNative");
  var CW = vW;
  function wW(e, t) {
    return e?.[t];
  }
  s(wW, "getValue");
  var AW = wW;
  function SW(e, t) {
    var r = AW(e, t);
    return CW(r) ? r : void 0;
  }
  s(SW, "getNative");
  var MS = SW;
  function FW(e, t) {
    return e === t || e !== e && t !== t;
  }
  s(FW, "eq");
  var _W = FW, kW = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, TW = /^\w*$/;
  function BW(e, t) {
    if (Zd(e))
      return !1;
    var r = typeof e;
    return r == "number" || r == "symbol" || r == "boolean" || e == null || Qd(e) ? !0 : TW.test(e) || !kW.test(e) || t != null && e in Object(
    t);
  }
  s(BW, "isKey");
  var IW = BW, PW = MS(Object, "create"), ao = PW;
  function OW() {
    this.__data__ = ao ? ao(null) : {}, this.size = 0;
  }
  s(OW, "hashClear");
  var RW = OW;
  function NW(e) {
    var t = this.has(e) && delete this.__data__[e];
    return this.size -= t ? 1 : 0, t;
  }
  s(NW, "hashDelete");
  var LW = NW, MW = "__lodash_hash_undefined__", jW = Object.prototype, qW = jW.hasOwnProperty;
  function $W(e) {
    var t = this.__data__;
    if (ao) {
      var r = t[e];
      return r === MW ? void 0 : r;
    }
    return qW.call(t, e) ? t[e] : void 0;
  }
  s($W, "hashGet");
  var VW = $W, UW = Object.prototype, WW = UW.hasOwnProperty;
  function zW(e) {
    var t = this.__data__;
    return ao ? t[e] !== void 0 : WW.call(t, e);
  }
  s(zW, "hashHas");
  var HW = zW, JW = "__lodash_hash_undefined__";
  function GW(e, t) {
    var r = this.__data__;
    return this.size += this.has(e) ? 0 : 1, r[e] = ao && t === void 0 ? JW : t, this;
  }
  s(GW, "hashSet");
  var XW = GW;
  function zn(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  s(zn, "Hash");
  zn.prototype.clear = RW;
  zn.prototype.delete = LW;
  zn.prototype.get = VW;
  zn.prototype.has = HW;
  zn.prototype.set = XW;
  var bS = zn;
  function KW() {
    this.__data__ = [], this.size = 0;
  }
  s(KW, "listCacheClear");
  var YW = KW;
  function QW(e, t) {
    for (var r = e.length; r--; )
      if (_W(e[r][0], t))
        return r;
    return -1;
  }
  s(QW, "assocIndexOf");
  var Tu = QW, ZW = Array.prototype, ez = ZW.splice;
  function tz(e) {
    var t = this.__data__, r = Tu(t, e);
    if (r < 0)
      return !1;
    var i = t.length - 1;
    return r == i ? t.pop() : ez.call(t, r, 1), --this.size, !0;
  }
  s(tz, "listCacheDelete");
  var rz = tz;
  function iz(e) {
    var t = this.__data__, r = Tu(t, e);
    return r < 0 ? void 0 : t[r][1];
  }
  s(iz, "listCacheGet");
  var nz = iz;
  function sz(e) {
    return Tu(this.__data__, e) > -1;
  }
  s(sz, "listCacheHas");
  var oz = sz;
  function az(e, t) {
    var r = this.__data__, i = Tu(r, e);
    return i < 0 ? (++this.size, r.push([e, t])) : r[i][1] = t, this;
  }
  s(az, "listCacheSet");
  var uz = az;
  function Hn(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  s(Hn, "ListCache");
  Hn.prototype.clear = YW;
  Hn.prototype.delete = rz;
  Hn.prototype.get = nz;
  Hn.prototype.has = oz;
  Hn.prototype.set = uz;
  var lz = Hn, cz = MS(Yd, "Map"), pz = cz;
  function hz() {
    this.size = 0, this.__data__ = {
      hash: new bS(),
      map: new (pz || lz)(),
      string: new bS()
    };
  }
  s(hz, "mapCacheClear");
  var fz = hz;
  function dz(e) {
    var t = typeof e;
    return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
  }
  s(dz, "isKeyable");
  var mz = dz;
  function gz(e, t) {
    var r = e.__data__;
    return mz(t) ? r[typeof t == "string" ? "string" : "hash"] : r.map;
  }
  s(gz, "getMapData");
  var Bu = gz;
  function Dz(e) {
    var t = Bu(this, e).delete(e);
    return this.size -= t ? 1 : 0, t;
  }
  s(Dz, "mapCacheDelete");
  var yz = Dz;
  function xz(e) {
    return Bu(this, e).get(e);
  }
  s(xz, "mapCacheGet");
  var Ez = xz;
  function bz(e) {
    return Bu(this, e).has(e);
  }
  s(bz, "mapCacheHas");
  var vz = bz;
  function Cz(e, t) {
    var r = Bu(this, e), i = r.size;
    return r.set(e, t), this.size += r.size == i ? 0 : 1, this;
  }
  s(Cz, "mapCacheSet");
  var wz = Cz;
  function Jn(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  s(Jn, "MapCache");
  Jn.prototype.clear = fz;
  Jn.prototype.delete = yz;
  Jn.prototype.get = Ez;
  Jn.prototype.has = vz;
  Jn.prototype.set = wz;
  var jS = Jn, Az = "Expected a function";
  function em(e, t) {
    if (typeof e != "function" || t != null && typeof t != "function")
      throw new TypeError(Az);
    var r = /* @__PURE__ */ s(function() {
      var i = arguments, n = t ? t.apply(this, i) : i[0], o = r.cache;
      if (o.has(n))
        return o.get(n);
      var a = e.apply(this, i);
      return r.cache = o.set(n, a) || o, a;
    }, "memoized");
    return r.cache = new (em.Cache || jS)(), r;
  }
  s(em, "memoize");
  em.Cache = jS;
  var Sz = em, Fz = 500;
  function _z(e) {
    var t = Sz(e, function(i) {
      return r.size === Fz && r.clear(), i;
    }), r = t.cache;
    return t;
  }
  s(_z, "memoizeCapped");
  var kz = _z, Tz = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Bz = /\\(\\)?/g, Iz = kz(
  function(e) {
    var t = [];
    return e.charCodeAt(0) === 46 && t.push(""), e.replace(Tz, function(r, i, n, o) {
      t.push(n ? o.replace(Bz, "$1") : i || r);
    }), t;
  }), Pz = Iz;
  function Oz(e) {
    return e == null ? "" : eW(e);
  }
  s(Oz, "toString");
  var Rz = Oz;
  function Nz(e, t) {
    return Zd(e) ? e : IW(e, t) ? [e] : Pz(Rz(e));
  }
  s(Nz, "castPath");
  var Lz = Nz, Mz = 1 / 0;
  function jz(e) {
    if (typeof e == "string" || Qd(e))
      return e;
    var t = e + "";
    return t == "0" && 1 / e == -Mz ? "-0" : t;
  }
  s(jz, "toKey");
  var qz = jz;
  function $z(e, t) {
    t = Lz(t, e);
    for (var r = 0, i = t.length; e != null && r < i; )
      e = e[qz(t[r++])];
    return r && r == i ? e : void 0;
  }
  s($z, "baseGet");
  var Vz = $z;
  function Uz(e, t, r) {
    var i = e == null ? void 0 : Vz(e, t);
    return i === void 0 ? r : i;
  }
  s(Uz, "get");
  var Wz = Uz, zz = [
    "bubbles",
    "cancelBubble",
    "cancelable",
    "composed",
    "currentTarget",
    "defaultPrevented",
    "eventPhase",
    "isTrusted",
    "returnValue",
    "srcElement",
    "target",
    "timeStamp",
    "type"
  ], Hz = ["detail"];
  function Jz(e) {
    let t = zz.filter((r) => e[r] !== void 0).reduce((r, i) => (r[i] = e[i], r), {});
    if (e instanceof CustomEvent)
      for (let r of Hz.filter(
        (i) => e[i] !== void 0
      ))
        t[r] = e[r];
    return t;
  }
  s(Jz, "extractEventHiddenProperties");
  var tm = kU, Gz = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?Z$/, qS = /* @__PURE__ */ s((e) => e.match(/^[\[\{\"\}].*[\]\}\"]$/), "is\
JSON");
  function $S(e) {
    if (!tm(e))
      return e;
    let t = e, r = !1;
    return typeof Event < "u" && e instanceof Event && (t = Jz(t), r = !0), t = Object.keys(t).reduce((i, n) => {
      try {
        t[n] && t[n].toJSON, i[n] = t[n];
      } catch {
        r = !0;
      }
      return i;
    }, {}), r ? t : e;
  }
  s($S, "convertUnconventionalData");
  var VS = /* @__PURE__ */ s(function(t) {
    let r, i, n, o;
    return /* @__PURE__ */ s(function(u, l) {
      try {
        if (u === "")
          return o = [], r = /* @__PURE__ */ new Map([[l, "[]"]]), i = /* @__PURE__ */ new Map(), n = [], l;
        let c = i.get(this) || this;
        for (; n.length && c !== n[0]; )
          n.shift(), o.pop();
        if (typeof l == "boolean")
          return l;
        if (l === void 0)
          return t.allowUndefined ? "_undefined_" : void 0;
        if (l === null)
          return null;
        if (typeof l == "number")
          return l === Number.NEGATIVE_INFINITY ? "_-Infinity_" : l === Number.POSITIVE_INFINITY ? "_Infinity_" : Number.isNaN(l) ? "_NaN_" :
          l;
        if (typeof l == "bigint")
          return `_bigint_${l.toString()}`;
        if (typeof l == "string")
          return Gz.test(l) ? t.allowDate ? `_date_${l}` : void 0 : l;
        if ((0, SU.default)(l))
          return t.allowRegExp ? `_regexp_${l.flags}|${l.source}` : void 0;
        if ((0, FU.default)(l))
          return;
        if ((0, _U.default)(l)) {
          if (!t.allowSymbol)
            return;
          let h = Symbol.keyFor(l);
          return h !== void 0 ? `_gsymbol_${h}` : `_symbol_${l.toString().slice(7, -1)}`;
        }
        if (n.length >= t.maxDepth)
          return Array.isArray(l) ? `[Array(${l.length})]` : "[Object]";
        if (l === this)
          return `_duplicate_${JSON.stringify(o)}`;
        if (l instanceof Error && t.allowError)
          return {
            __isConvertedError__: !0,
            errorProperties: {
              // @ts-expect-error cause is not defined in the current tsconfig target(es2020)
              ...l.cause ? { cause: l.cause } : {},
              ...l,
              name: l.name,
              message: l.message,
              stack: l.stack,
              "_constructor-name_": l.constructor.name
            }
          };
        if (l?.constructor?.name && l.constructor.name !== "Object" && !Array.isArray(l)) {
          let h = r.get(l);
          if (!h) {
            let f = {
              __isClassInstance__: !0,
              __className__: l.constructor.name,
              ...Object.getOwnPropertyNames(l).reduce(
                (d, m) => {
                  try {
                    d[m] = l[m];
                  } catch {
                  }
                  return d;
                },
                {}
              )
            };
            return o.push(u), n.unshift(f), r.set(l, JSON.stringify(o)), l !== f && i.set(l, f), f;
          }
          return `_duplicate_${h}`;
        }
        let p = r.get(l);
        if (!p) {
          let h = Array.isArray(l) ? l : $S(l);
          return o.push(u), n.unshift(h), r.set(l, JSON.stringify(o)), l !== h && i.set(l, h), h;
        }
        return `_duplicate_${p}`;
      } catch {
        return;
      }
    }, "replace");
  }, "replacer2"), US = /* @__PURE__ */ s(function(t) {
    let r = [], i;
    return /* @__PURE__ */ s(function(o, a) {
      if (o === "" && (i = a, r.forEach(({ target: u, container: l, replacement: c }) => {
        let p = qS(c) ? JSON.parse(c) : c.split(".");
        p.length === 0 ? l[u] = i : l[u] = Wz(i, p);
      })), o === "_constructor-name_")
        return a;
      if (tm(a) && a.__isConvertedError__) {
        let { message: u, ...l } = a.errorProperties, c = new Error(u);
        return Object.assign(c, l), c;
      }
      if (typeof a == "string" && a.startsWith("_regexp_") && t.allowRegExp) {
        let [, u, l] = a.match(/_regexp_([^|]*)\|(.*)/) || [];
        return new RegExp(l, u);
      }
      return typeof a == "string" && a.startsWith("_date_") && t.allowDate ? new Date(a.replace("_date_", "")) : typeof a == "string" && a.startsWith(
      "_duplicate_") ? (r.push({ target: o, container: this, replacement: a.replace(/^_duplicate_/, "") }), null) : typeof a == "string" && a.
      startsWith("_symbol_") && t.allowSymbol ? Symbol(a.replace("_symbol_", "")) : typeof a == "string" && a.startsWith("_gsymbol_") && t.allowSymbol ?
      Symbol.for(a.replace("_gsymbol_", "")) : typeof a == "string" && a === "_-Infinity_" ? Number.NEGATIVE_INFINITY : typeof a == "string" &&
      a === "_Infinity_" ? Number.POSITIVE_INFINITY : typeof a == "string" && a === "_NaN_" ? Number.NaN : typeof a == "string" && a.startsWith(
      "_bigint_") && typeof BigInt == "function" ? BigInt(a.replace("_bigint_", "")) : a;
    }, "revive");
  }, "reviver2"), WS = {
    maxDepth: 10,
    space: void 0,
    allowRegExp: !0,
    allowDate: !0,
    allowError: !0,
    allowUndefined: !0,
    allowSymbol: !0
  }, Xz = /* @__PURE__ */ s((e, t = {}) => {
    let r = { ...WS, ...t };
    return JSON.stringify($S(e), VS(r), t.space);
  }, "stringify"), Kz = /* @__PURE__ */ s(() => {
    let e = /* @__PURE__ */ new Map();
    return /* @__PURE__ */ s(function t(r) {
      tm(r) && Object.entries(r).forEach(([i, n]) => {
        n === "_undefined_" ? r[i] = void 0 : e.get(n) || (e.set(n, !0), t(n));
      }), Array.isArray(r) && r.forEach((i, n) => {
        i === "_undefined_" ? (e.set(i, !0), r[n] = void 0) : e.get(i) || (e.set(i, !0), t(i));
      });
    }, "mutateUndefined");
  }, "mutator"), Yz = /* @__PURE__ */ s((e, t = {}) => {
    let r = { ...WS, ...t }, i = JSON.parse(e, US(r));
    return Kz()(i), i;
  }, "parse");
});

// ../node_modules/@aw-web-design/x-default-browser/src/common-name.js
var uo = P((tae, QS) => {
  QS.exports = function(e) {
    return e.isEdge ? "edge" : e.isIE ? "ie" : e.isFirefox ? "firefox" : e.isChrome ? "chrome" : e.isChromium ? "chromium" : e.isOpera ? "op\
era" : e.isSafari ? "safari" : "unknown";
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-windows10.js
var eF = P((rae, ZS) => {
  var oH = H("child_process").exec;
  ZS.exports = function(e) {
    var t = "HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\Shell\\Associations\\URLAssociations\\http\\UserChoice", r = "reg query " + t +
    ' | findstr "ProgId"';
    oH(r, function(i, n, o) {
      var a;
      if (i) {
        if (o.length > 0)
          return e("Unable to execute the query: " + i);
        a = "iexplore.exe";
      }
      if (!a) {
        n = n.trim().replace(/\s\s+/g, " ");
        var u = n.split(" ");
        a = u[2].toLowerCase();
      }
      var l = {
        isEdge: a.indexOf("app") > -1,
        // AppXq0fevzme2pys62n3e0fbqa7peapykr8v
        isIE: a.indexOf("ie.http") > -1,
        // IE.HTTP
        isSafari: a.indexOf("safari") > -1,
        // SafariURL
        isFirefox: a.indexOf("firefox") > -1,
        // FirefoxURL
        isChrome: a.indexOf("chrome") > -1,
        // ChromeHTML
        isChromium: a.indexOf("chromium") > -1,
        isOpera: a.indexOf("opera") > -1,
        // OperaHTML
        identity: a
      };
      l.isBlink = l.isChrome || l.isChromium || l.isOpera, l.isWebkit = l.isSafari || l.isBlink, l.commonName = uo()(l), e(null, l);
    });
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-windows.js
var rF = P((iae, tF) => {
  var aH = H("child_process").exec;
  tF.exports = function(e) {
    var t = "HKCU\\Software\\Clients\\StartMenuInternet", r = "reg query " + t + ' | findstr "REG_SZ"';
    aH(r, function(i, n, o) {
      var a;
      if (i) {
        if (o.length > 0)
          return e("Unable to execute the query: " + i);
        a = "iexplore.exe";
      }
      if (!a) {
        n = n.replace("NO NAME", "NONAME");
        var u = n.trim().split(/(\t| +)/);
        a = (u[4] + (u[5] || "") + (u[6] || "")).toLowerCase();
      }
      var l = {
        isIE: a.indexOf("iexplore") > -1,
        // IEXPLORE.EXE             / -
        isSafari: a.indexOf("safari") > -1,
        // Safari.exe
        // works also for nightly
        isFirefox: a.indexOf("firefox") > -1,
        // FIREFOX.EXE              / "C:\Program Files (x86)\Mozilla Firefox\firefox.exe" -osint -url "%1"
        // note that both chrome and chromium are chrome.exe! we can't look for 'chrome' hence
        isChrome: a.indexOf("google") > -1,
        // Google Chrome            / "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" -- "%1"
        isChromium: a.indexOf("chromium") > -1,
        // Chromium.<randomstring>  / "C:\Users\<username>\AppData\Local\Chromium\Application\chrome.exe" -- "%1"
        isOpera: a.indexOf("opera") > -1,
        // OperaStable              / "C:\Program Files (x86)\Opera\launcher.exe" -noautoupdate -- "%1"
        identity: a
      };
      l.isBlink = l.isChrome || l.isChromium || l.isOpera, l.isWebkit = l.isSafari || l.isBlink, l.commonName = uo()(l), e(null, l);
    });
  };
});

// ../node_modules/big-integer/BigInteger.js
var iF = P((nae, Iu) => {
  var st = function(e) {
    "use strict";
    var t = 1e7, r = 7, i = 9007199254740992, n = f(i), o = "0123456789abcdefghijklmnopqrstuvwxyz", a = typeof BigInt == "function";
    function u(x, y, F, B) {
      return typeof x > "u" ? u[0] : typeof y < "u" ? +y == 10 && !F ? oe(x) : De(x, y, F, B) : oe(x);
    }
    s(u, "Integer");
    function l(x, y) {
      this.value = x, this.sign = y, this.isSmall = !1;
    }
    s(l, "BigInteger"), l.prototype = Object.create(u.prototype);
    function c(x) {
      this.value = x, this.sign = x < 0, this.isSmall = !0;
    }
    s(c, "SmallInteger"), c.prototype = Object.create(u.prototype);
    function p(x) {
      this.value = x;
    }
    s(p, "NativeBigInt"), p.prototype = Object.create(u.prototype);
    function h(x) {
      return -i < x && x < i;
    }
    s(h, "isPrecise");
    function f(x) {
      return x < 1e7 ? [x] : x < 1e14 ? [x % 1e7, Math.floor(x / 1e7)] : [x % 1e7, Math.floor(x / 1e7) % 1e7, Math.floor(x / 1e14)];
    }
    s(f, "smallToArray");
    function d(x) {
      m(x);
      var y = x.length;
      if (y < 4 && Y(x, n) < 0)
        switch (y) {
          case 0:
            return 0;
          case 1:
            return x[0];
          case 2:
            return x[0] + x[1] * t;
          default:
            return x[0] + (x[1] + x[2] * t) * t;
        }
      return x;
    }
    s(d, "arrayToSmall");
    function m(x) {
      for (var y = x.length; x[--y] === 0; ) ;
      x.length = y + 1;
    }
    s(m, "trim");
    function g(x) {
      for (var y = new Array(x), F = -1; ++F < x; )
        y[F] = 0;
      return y;
    }
    s(g, "createArray");
    function b(x) {
      return x > 0 ? Math.floor(x) : Math.ceil(x);
    }
    s(b, "truncate");
    function D(x, y) {
      var F = x.length, B = y.length, E = new Array(F), j = 0, W = t, z, J;
      for (J = 0; J < B; J++)
        z = x[J] + y[J] + j, j = z >= W ? 1 : 0, E[J] = z - j * W;
      for (; J < F; )
        z = x[J] + j, j = z === W ? 1 : 0, E[J++] = z - j * W;
      return j > 0 && E.push(j), E;
    }
    s(D, "add");
    function v(x, y) {
      return x.length >= y.length ? D(x, y) : D(y, x);
    }
    s(v, "addAny");
    function S(x, y) {
      var F = x.length, B = new Array(F), E = t, j, W;
      for (W = 0; W < F; W++)
        j = x[W] - E + y, y = Math.floor(j / E), B[W] = j - y * E, y += 1;
      for (; y > 0; )
        B[W++] = y % E, y = Math.floor(y / E);
      return B;
    }
    s(S, "addSmall"), l.prototype.add = function(x) {
      var y = oe(x);
      if (this.sign !== y.sign)
        return this.subtract(y.negate());
      var F = this.value, B = y.value;
      return y.isSmall ? new l(S(F, Math.abs(B)), this.sign) : new l(v(F, B), this.sign);
    }, l.prototype.plus = l.prototype.add, c.prototype.add = function(x) {
      var y = oe(x), F = this.value;
      if (F < 0 !== y.sign)
        return this.subtract(y.negate());
      var B = y.value;
      if (y.isSmall) {
        if (h(F + B)) return new c(F + B);
        B = f(Math.abs(B));
      }
      return new l(S(B, Math.abs(F)), F < 0);
    }, c.prototype.plus = c.prototype.add, p.prototype.add = function(x) {
      return new p(this.value + oe(x).value);
    }, p.prototype.plus = p.prototype.add;
    function k(x, y) {
      var F = x.length, B = y.length, E = new Array(F), j = 0, W = t, z, J;
      for (z = 0; z < B; z++)
        J = x[z] - j - y[z], J < 0 ? (J += W, j = 1) : j = 0, E[z] = J;
      for (z = B; z < F; z++) {
        if (J = x[z] - j, J < 0) J += W;
        else {
          E[z++] = J;
          break;
        }
        E[z] = J;
      }
      for (; z < F; z++)
        E[z] = x[z];
      return m(E), E;
    }
    s(k, "subtract");
    function L(x, y, F) {
      var B;
      return Y(x, y) >= 0 ? B = k(x, y) : (B = k(y, x), F = !F), B = d(B), typeof B == "number" ? (F && (B = -B), new c(B)) : new l(B, F);
    }
    s(L, "subtractAny");
    function C(x, y, F) {
      var B = x.length, E = new Array(B), j = -y, W = t, z, J;
      for (z = 0; z < B; z++)
        J = x[z] + j, j = Math.floor(J / W), J %= W, E[z] = J < 0 ? J + W : J;
      return E = d(E), typeof E == "number" ? (F && (E = -E), new c(E)) : new l(E, F);
    }
    s(C, "subtractSmall"), l.prototype.subtract = function(x) {
      var y = oe(x);
      if (this.sign !== y.sign)
        return this.add(y.negate());
      var F = this.value, B = y.value;
      return y.isSmall ? C(F, Math.abs(B), this.sign) : L(F, B, this.sign);
    }, l.prototype.minus = l.prototype.subtract, c.prototype.subtract = function(x) {
      var y = oe(x), F = this.value;
      if (F < 0 !== y.sign)
        return this.add(y.negate());
      var B = y.value;
      return y.isSmall ? new c(F - B) : C(B, Math.abs(F), F >= 0);
    }, c.prototype.minus = c.prototype.subtract, p.prototype.subtract = function(x) {
      return new p(this.value - oe(x).value);
    }, p.prototype.minus = p.prototype.subtract, l.prototype.negate = function() {
      return new l(this.value, !this.sign);
    }, c.prototype.negate = function() {
      var x = this.sign, y = new c(-this.value);
      return y.sign = !x, y;
    }, p.prototype.negate = function() {
      return new p(-this.value);
    }, l.prototype.abs = function() {
      return new l(this.value, !1);
    }, c.prototype.abs = function() {
      return new c(Math.abs(this.value));
    }, p.prototype.abs = function() {
      return new p(this.value >= 0 ? this.value : -this.value);
    };
    function w(x, y) {
      var F = x.length, B = y.length, E = F + B, j = g(E), W = t, z, J, ue, xe, ae;
      for (ue = 0; ue < F; ++ue) {
        xe = x[ue];
        for (var ve = 0; ve < B; ++ve)
          ae = y[ve], z = xe * ae + j[ue + ve], J = Math.floor(z / W), j[ue + ve] = z - J * W, j[ue + ve + 1] += J;
      }
      return m(j), j;
    }
    s(w, "multiplyLong");
    function T(x, y) {
      var F = x.length, B = new Array(F), E = t, j = 0, W, z;
      for (z = 0; z < F; z++)
        W = x[z] * y + j, j = Math.floor(W / E), B[z] = W - j * E;
      for (; j > 0; )
        B[z++] = j % E, j = Math.floor(j / E);
      return B;
    }
    s(T, "multiplySmall");
    function _(x, y) {
      for (var F = []; y-- > 0; ) F.push(0);
      return F.concat(x);
    }
    s(_, "shiftLeft");
    function q(x, y) {
      var F = Math.max(x.length, y.length);
      if (F <= 30) return w(x, y);
      F = Math.ceil(F / 2);
      var B = x.slice(F), E = x.slice(0, F), j = y.slice(F), W = y.slice(0, F), z = q(E, W), J = q(B, j), ue = q(v(E, B), v(W, j)), xe = v(v(
      z, _(k(k(ue, z), J), F)), _(J, 2 * F));
      return m(xe), xe;
    }
    s(q, "multiplyKaratsuba");
    function O(x, y) {
      return -0.012 * x - 0.012 * y + 15e-6 * x * y > 0;
    }
    s(O, "useKaratsuba"), l.prototype.multiply = function(x) {
      var y = oe(x), F = this.value, B = y.value, E = this.sign !== y.sign, j;
      if (y.isSmall) {
        if (B === 0) return u[0];
        if (B === 1) return this;
        if (B === -1) return this.negate();
        if (j = Math.abs(B), j < t)
          return new l(T(F, j), E);
        B = f(j);
      }
      return O(F.length, B.length) ? new l(q(F, B), E) : new l(w(F, B), E);
    }, l.prototype.times = l.prototype.multiply;
    function $(x, y, F) {
      return x < t ? new l(T(y, x), F) : new l(w(y, f(x)), F);
    }
    s($, "multiplySmallAndArray"), c.prototype._multiplyBySmall = function(x) {
      return h(x.value * this.value) ? new c(x.value * this.value) : $(Math.abs(x.value), f(Math.abs(this.value)), this.sign !== x.sign);
    }, l.prototype._multiplyBySmall = function(x) {
      return x.value === 0 ? u[0] : x.value === 1 ? this : x.value === -1 ? this.negate() : $(Math.abs(x.value), this.value, this.sign !== x.
      sign);
    }, c.prototype.multiply = function(x) {
      return oe(x)._multiplyBySmall(this);
    }, c.prototype.times = c.prototype.multiply, p.prototype.multiply = function(x) {
      return new p(this.value * oe(x).value);
    }, p.prototype.times = p.prototype.multiply;
    function V(x) {
      var y = x.length, F = g(y + y), B = t, E, j, W, z, J;
      for (W = 0; W < y; W++) {
        z = x[W], j = 0 - z * z;
        for (var ue = W; ue < y; ue++)
          J = x[ue], E = 2 * (z * J) + F[W + ue] + j, j = Math.floor(E / B), F[W + ue] = E - j * B;
        F[W + y] = j;
      }
      return m(F), F;
    }
    s(V, "square"), l.prototype.square = function() {
      return new l(V(this.value), !1);
    }, c.prototype.square = function() {
      var x = this.value * this.value;
      return h(x) ? new c(x) : new l(V(f(Math.abs(this.value))), !1);
    }, p.prototype.square = function(x) {
      return new p(this.value * this.value);
    };
    function K(x, y) {
      var F = x.length, B = y.length, E = t, j = g(y.length), W = y[B - 1], z = Math.ceil(E / (2 * W)), J = T(x, z), ue = T(y, z), xe, ae, ve,
      Je, St, tl, rl;
      for (J.length <= F && J.push(0), ue.push(0), W = ue[B - 1], ae = F - B; ae >= 0; ae--) {
        for (xe = E - 1, J[ae + B] !== W && (xe = Math.floor((J[ae + B] * E + J[ae + B - 1]) / W)), ve = 0, Je = 0, tl = ue.length, St = 0; St <
        tl; St++)
          ve += xe * ue[St], rl = Math.floor(ve / E), Je += J[ae + St] - (ve - rl * E), ve = rl, Je < 0 ? (J[ae + St] = Je + E, Je = -1) : (J[ae +
          St] = Je, Je = 0);
        for (; Je !== 0; ) {
          for (xe -= 1, ve = 0, St = 0; St < tl; St++)
            ve += J[ae + St] - E + ue[St], ve < 0 ? (J[ae + St] = ve + E, ve = 0) : (J[ae + St] = ve, ve = 1);
          Je += ve;
        }
        j[ae] = xe;
      }
      return J = R(J, z)[0], [d(j), d(J)];
    }
    s(K, "divMod1");
    function M(x, y) {
      for (var F = x.length, B = y.length, E = [], j = [], W = t, z, J, ue, xe, ae; F; ) {
        if (j.unshift(x[--F]), m(j), Y(j, y) < 0) {
          E.push(0);
          continue;
        }
        J = j.length, ue = j[J - 1] * W + j[J - 2], xe = y[B - 1] * W + y[B - 2], J > B && (ue = (ue + 1) * W), z = Math.ceil(ue / xe);
        do {
          if (ae = T(y, z), Y(ae, j) <= 0) break;
          z--;
        } while (z);
        E.push(z), j = k(j, ae);
      }
      return E.reverse(), [d(E), d(j)];
    }
    s(M, "divMod2");
    function R(x, y) {
      var F = x.length, B = g(F), E = t, j, W, z, J;
      for (z = 0, j = F - 1; j >= 0; --j)
        J = z * E + x[j], W = b(J / y), z = J - W * y, B[j] = W | 0;
      return [B, z | 0];
    }
    s(R, "divModSmall");
    function U(x, y) {
      var F, B = oe(y);
      if (a)
        return [new p(x.value / B.value), new p(x.value % B.value)];
      var E = x.value, j = B.value, W;
      if (j === 0) throw new Error("Cannot divide by zero");
      if (x.isSmall)
        return B.isSmall ? [new c(b(E / j)), new c(E % j)] : [u[0], x];
      if (B.isSmall) {
        if (j === 1) return [x, u[0]];
        if (j == -1) return [x.negate(), u[0]];
        var z = Math.abs(j);
        if (z < t) {
          F = R(E, z), W = d(F[0]);
          var J = F[1];
          return x.sign && (J = -J), typeof W == "number" ? (x.sign !== B.sign && (W = -W), [new c(W), new c(J)]) : [new l(W, x.sign !== B.sign),
          new c(J)];
        }
        j = f(z);
      }
      var ue = Y(E, j);
      if (ue === -1) return [u[0], x];
      if (ue === 0) return [u[x.sign === B.sign ? 1 : -1], u[0]];
      E.length + j.length <= 200 ? F = K(E, j) : F = M(E, j), W = F[0];
      var xe = x.sign !== B.sign, ae = F[1], ve = x.sign;
      return typeof W == "number" ? (xe && (W = -W), W = new c(W)) : W = new l(W, xe), typeof ae == "number" ? (ve && (ae = -ae), ae = new c(
      ae)) : ae = new l(ae, ve), [W, ae];
    }
    s(U, "divModAny"), l.prototype.divmod = function(x) {
      var y = U(this, x);
      return {
        quotient: y[0],
        remainder: y[1]
      };
    }, p.prototype.divmod = c.prototype.divmod = l.prototype.divmod, l.prototype.divide = function(x) {
      return U(this, x)[0];
    }, p.prototype.over = p.prototype.divide = function(x) {
      return new p(this.value / oe(x).value);
    }, c.prototype.over = c.prototype.divide = l.prototype.over = l.prototype.divide, l.prototype.mod = function(x) {
      return U(this, x)[1];
    }, p.prototype.mod = p.prototype.remainder = function(x) {
      return new p(this.value % oe(x).value);
    }, c.prototype.remainder = c.prototype.mod = l.prototype.remainder = l.prototype.mod, l.prototype.pow = function(x) {
      var y = oe(x), F = this.value, B = y.value, E, j, W;
      if (B === 0) return u[1];
      if (F === 0) return u[0];
      if (F === 1) return u[1];
      if (F === -1) return y.isEven() ? u[1] : u[-1];
      if (y.sign)
        return u[0];
      if (!y.isSmall) throw new Error("The exponent " + y.toString() + " is too large.");
      if (this.isSmall && h(E = Math.pow(F, B)))
        return new c(b(E));
      for (j = this, W = u[1]; B & !0 && (W = W.times(j), --B), B !== 0; )
        B /= 2, j = j.square();
      return W;
    }, c.prototype.pow = l.prototype.pow, p.prototype.pow = function(x) {
      var y = oe(x), F = this.value, B = y.value, E = BigInt(0), j = BigInt(1), W = BigInt(2);
      if (B === E) return u[1];
      if (F === E) return u[0];
      if (F === j) return u[1];
      if (F === BigInt(-1)) return y.isEven() ? u[1] : u[-1];
      if (y.isNegative()) return new p(E);
      for (var z = this, J = u[1]; (B & j) === j && (J = J.times(z), --B), B !== E; )
        B /= W, z = z.square();
      return J;
    }, l.prototype.modPow = function(x, y) {
      if (x = oe(x), y = oe(y), y.isZero()) throw new Error("Cannot take modPow with modulus 0");
      var F = u[1], B = this.mod(y);
      for (x.isNegative() && (x = x.multiply(u[-1]), B = B.modInv(y)); x.isPositive(); ) {
        if (B.isZero()) return u[0];
        x.isOdd() && (F = F.multiply(B).mod(y)), x = x.divide(2), B = B.square().mod(y);
      }
      return F;
    }, p.prototype.modPow = c.prototype.modPow = l.prototype.modPow;
    function Y(x, y) {
      if (x.length !== y.length)
        return x.length > y.length ? 1 : -1;
      for (var F = x.length - 1; F >= 0; F--)
        if (x[F] !== y[F]) return x[F] > y[F] ? 1 : -1;
      return 0;
    }
    s(Y, "compareAbs"), l.prototype.compareAbs = function(x) {
      var y = oe(x), F = this.value, B = y.value;
      return y.isSmall ? 1 : Y(F, B);
    }, c.prototype.compareAbs = function(x) {
      var y = oe(x), F = Math.abs(this.value), B = y.value;
      return y.isSmall ? (B = Math.abs(B), F === B ? 0 : F > B ? 1 : -1) : -1;
    }, p.prototype.compareAbs = function(x) {
      var y = this.value, F = oe(x).value;
      return y = y >= 0 ? y : -y, F = F >= 0 ? F : -F, y === F ? 0 : y > F ? 1 : -1;
    }, l.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var y = oe(x), F = this.value, B = y.value;
      return this.sign !== y.sign ? y.sign ? 1 : -1 : y.isSmall ? this.sign ? -1 : 1 : Y(F, B) * (this.sign ? -1 : 1);
    }, l.prototype.compareTo = l.prototype.compare, c.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var y = oe(x), F = this.value, B = y.value;
      return y.isSmall ? F == B ? 0 : F > B ? 1 : -1 : F < 0 !== y.sign ? F < 0 ? -1 : 1 : F < 0 ? 1 : -1;
    }, c.prototype.compareTo = c.prototype.compare, p.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var y = this.value, F = oe(x).value;
      return y === F ? 0 : y > F ? 1 : -1;
    }, p.prototype.compareTo = p.prototype.compare, l.prototype.equals = function(x) {
      return this.compare(x) === 0;
    }, p.prototype.eq = p.prototype.equals = c.prototype.eq = c.prototype.equals = l.prototype.eq = l.prototype.equals, l.prototype.notEquals =
    function(x) {
      return this.compare(x) !== 0;
    }, p.prototype.neq = p.prototype.notEquals = c.prototype.neq = c.prototype.notEquals = l.prototype.neq = l.prototype.notEquals, l.prototype.
    greater = function(x) {
      return this.compare(x) > 0;
    }, p.prototype.gt = p.prototype.greater = c.prototype.gt = c.prototype.greater = l.prototype.gt = l.prototype.greater, l.prototype.lesser =
    function(x) {
      return this.compare(x) < 0;
    }, p.prototype.lt = p.prototype.lesser = c.prototype.lt = c.prototype.lesser = l.prototype.lt = l.prototype.lesser, l.prototype.greaterOrEquals =
    function(x) {
      return this.compare(x) >= 0;
    }, p.prototype.geq = p.prototype.greaterOrEquals = c.prototype.geq = c.prototype.greaterOrEquals = l.prototype.geq = l.prototype.greaterOrEquals,
    l.prototype.lesserOrEquals = function(x) {
      return this.compare(x) <= 0;
    }, p.prototype.leq = p.prototype.lesserOrEquals = c.prototype.leq = c.prototype.lesserOrEquals = l.prototype.leq = l.prototype.lesserOrEquals,
    l.prototype.isEven = function() {
      return (this.value[0] & 1) === 0;
    }, c.prototype.isEven = function() {
      return (this.value & 1) === 0;
    }, p.prototype.isEven = function() {
      return (this.value & BigInt(1)) === BigInt(0);
    }, l.prototype.isOdd = function() {
      return (this.value[0] & 1) === 1;
    }, c.prototype.isOdd = function() {
      return (this.value & 1) === 1;
    }, p.prototype.isOdd = function() {
      return (this.value & BigInt(1)) === BigInt(1);
    }, l.prototype.isPositive = function() {
      return !this.sign;
    }, c.prototype.isPositive = function() {
      return this.value > 0;
    }, p.prototype.isPositive = c.prototype.isPositive, l.prototype.isNegative = function() {
      return this.sign;
    }, c.prototype.isNegative = function() {
      return this.value < 0;
    }, p.prototype.isNegative = c.prototype.isNegative, l.prototype.isUnit = function() {
      return !1;
    }, c.prototype.isUnit = function() {
      return Math.abs(this.value) === 1;
    }, p.prototype.isUnit = function() {
      return this.abs().value === BigInt(1);
    }, l.prototype.isZero = function() {
      return !1;
    }, c.prototype.isZero = function() {
      return this.value === 0;
    }, p.prototype.isZero = function() {
      return this.value === BigInt(0);
    }, l.prototype.isDivisibleBy = function(x) {
      var y = oe(x);
      return y.isZero() ? !1 : y.isUnit() ? !0 : y.compareAbs(2) === 0 ? this.isEven() : this.mod(y).isZero();
    }, p.prototype.isDivisibleBy = c.prototype.isDivisibleBy = l.prototype.isDivisibleBy;
    function ee(x) {
      var y = x.abs();
      if (y.isUnit()) return !1;
      if (y.equals(2) || y.equals(3) || y.equals(5)) return !0;
      if (y.isEven() || y.isDivisibleBy(3) || y.isDivisibleBy(5)) return !1;
      if (y.lesser(49)) return !0;
    }
    s(ee, "isBasicPrime");
    function I(x, y) {
      for (var F = x.prev(), B = F, E = 0, j, W, z, J; B.isEven(); ) B = B.divide(2), E++;
      e: for (z = 0; z < y.length; z++)
        if (!x.lesser(y[z]) && (J = st(y[z]).modPow(B, x), !(J.isUnit() || J.equals(F)))) {
          for (j = E - 1; j != 0; j--) {
            if (J = J.square().mod(x), J.isUnit()) return !1;
            if (J.equals(F)) continue e;
          }
          return !1;
        }
      return !0;
    }
    s(I, "millerRabinTest"), l.prototype.isPrime = function(x) {
      var y = ee(this);
      if (y !== e) return y;
      var F = this.abs(), B = F.bitLength();
      if (B <= 64)
        return I(F, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
      for (var E = Math.log(2) * B.toJSNumber(), j = Math.ceil(x === !0 ? 2 * Math.pow(E, 2) : E), W = [], z = 0; z < j; z++)
        W.push(st(z + 2));
      return I(F, W);
    }, p.prototype.isPrime = c.prototype.isPrime = l.prototype.isPrime, l.prototype.isProbablePrime = function(x, y) {
      var F = ee(this);
      if (F !== e) return F;
      for (var B = this.abs(), E = x === e ? 5 : x, j = [], W = 0; W < E; W++)
        j.push(st.randBetween(2, B.minus(2), y));
      return I(B, j);
    }, p.prototype.isProbablePrime = c.prototype.isProbablePrime = l.prototype.isProbablePrime, l.prototype.modInv = function(x) {
      for (var y = st.zero, F = st.one, B = oe(x), E = this.abs(), j, W, z; !E.isZero(); )
        j = B.divide(E), W = y, z = B, y = F, B = E, F = W.subtract(j.multiply(F)), E = z.subtract(j.multiply(E));
      if (!B.isUnit()) throw new Error(this.toString() + " and " + x.toString() + " are not co-prime");
      return y.compare(0) === -1 && (y = y.add(x)), this.isNegative() ? y.negate() : y;
    }, p.prototype.modInv = c.prototype.modInv = l.prototype.modInv, l.prototype.next = function() {
      var x = this.value;
      return this.sign ? C(x, 1, this.sign) : new l(S(x, 1), this.sign);
    }, c.prototype.next = function() {
      var x = this.value;
      return x + 1 < i ? new c(x + 1) : new l(n, !1);
    }, p.prototype.next = function() {
      return new p(this.value + BigInt(1));
    }, l.prototype.prev = function() {
      var x = this.value;
      return this.sign ? new l(S(x, 1), !0) : C(x, 1, this.sign);
    }, c.prototype.prev = function() {
      var x = this.value;
      return x - 1 > -i ? new c(x - 1) : new l(n, !0);
    }, p.prototype.prev = function() {
      return new p(this.value - BigInt(1));
    };
    for (var se = [1]; 2 * se[se.length - 1] <= t; ) se.push(2 * se[se.length - 1]);
    var Me = se.length, N = se[Me - 1];
    function Oe(x) {
      return Math.abs(x) <= t;
    }
    s(Oe, "shift_isSmall"), l.prototype.shiftLeft = function(x) {
      var y = oe(x).toJSNumber();
      if (!Oe(y))
        throw new Error(String(y) + " is too large for shifting.");
      if (y < 0) return this.shiftRight(-y);
      var F = this;
      if (F.isZero()) return F;
      for (; y >= Me; )
        F = F.multiply(N), y -= Me - 1;
      return F.multiply(se[y]);
    }, p.prototype.shiftLeft = c.prototype.shiftLeft = l.prototype.shiftLeft, l.prototype.shiftRight = function(x) {
      var y, F = oe(x).toJSNumber();
      if (!Oe(F))
        throw new Error(String(F) + " is too large for shifting.");
      if (F < 0) return this.shiftLeft(-F);
      for (var B = this; F >= Me; ) {
        if (B.isZero() || B.isNegative() && B.isUnit()) return B;
        y = U(B, N), B = y[1].isNegative() ? y[0].prev() : y[0], F -= Me - 1;
      }
      return y = U(B, se[F]), y[1].isNegative() ? y[0].prev() : y[0];
    }, p.prototype.shiftRight = c.prototype.shiftRight = l.prototype.shiftRight;
    function Pe(x, y, F) {
      y = oe(y);
      for (var B = x.isNegative(), E = y.isNegative(), j = B ? x.not() : x, W = E ? y.not() : y, z = 0, J = 0, ue = null, xe = null, ae = []; !j.
      isZero() || !W.isZero(); )
        ue = U(j, N), z = ue[1].toJSNumber(), B && (z = N - 1 - z), xe = U(W, N), J = xe[1].toJSNumber(), E && (J = N - 1 - J), j = ue[0], W =
        xe[0], ae.push(F(z, J));
      for (var ve = F(B ? 1 : 0, E ? 1 : 0) !== 0 ? st(-1) : st(0), Je = ae.length - 1; Je >= 0; Je -= 1)
        ve = ve.multiply(N).add(st(ae[Je]));
      return ve;
    }
    s(Pe, "bitwise"), l.prototype.not = function() {
      return this.negate().prev();
    }, p.prototype.not = c.prototype.not = l.prototype.not, l.prototype.and = function(x) {
      return Pe(this, x, function(y, F) {
        return y & F;
      });
    }, p.prototype.and = c.prototype.and = l.prototype.and, l.prototype.or = function(x) {
      return Pe(this, x, function(y, F) {
        return y | F;
      });
    }, p.prototype.or = c.prototype.or = l.prototype.or, l.prototype.xor = function(x) {
      return Pe(this, x, function(y, F) {
        return y ^ F;
      });
    }, p.prototype.xor = c.prototype.xor = l.prototype.xor;
    var ce = 1 << 30, Dt = (t & -t) * (t & -t) | ce;
    function Be(x) {
      var y = x.value, F = typeof y == "number" ? y | ce : typeof y == "bigint" ? y | BigInt(ce) : y[0] + y[1] * t | Dt;
      return F & -F;
    }
    s(Be, "roughLOB");
    function Z(x, y) {
      if (y.compareTo(x) <= 0) {
        var F = Z(x, y.square(y)), B = F.p, E = F.e, j = B.multiply(y);
        return j.compareTo(x) <= 0 ? { p: j, e: E * 2 + 1 } : { p: B, e: E * 2 };
      }
      return { p: st(1), e: 0 };
    }
    s(Z, "integerLogarithm"), l.prototype.bitLength = function() {
      var x = this;
      return x.compareTo(st(0)) < 0 && (x = x.negate().subtract(st(1))), x.compareTo(st(0)) === 0 ? st(0) : st(Z(x, st(2)).e).add(st(1));
    }, p.prototype.bitLength = c.prototype.bitLength = l.prototype.bitLength;
    function de(x, y) {
      return x = oe(x), y = oe(y), x.greater(y) ? x : y;
    }
    s(de, "max");
    function X(x, y) {
      return x = oe(x), y = oe(y), x.lesser(y) ? x : y;
    }
    s(X, "min");
    function te(x, y) {
      if (x = oe(x).abs(), y = oe(y).abs(), x.equals(y)) return x;
      if (x.isZero()) return y;
      if (y.isZero()) return x;
      for (var F = u[1], B, E; x.isEven() && y.isEven(); )
        B = X(Be(x), Be(y)), x = x.divide(B), y = y.divide(B), F = F.multiply(B);
      for (; x.isEven(); )
        x = x.divide(Be(x));
      do {
        for (; y.isEven(); )
          y = y.divide(Be(y));
        x.greater(y) && (E = y, y = x, x = E), y = y.subtract(x);
      } while (!y.isZero());
      return F.isUnit() ? x : x.multiply(F);
    }
    s(te, "gcd");
    function pe(x, y) {
      return x = oe(x).abs(), y = oe(y).abs(), x.divide(te(x, y)).multiply(y);
    }
    s(pe, "lcm");
    function me(x, y, F) {
      x = oe(x), y = oe(y);
      var B = F || Math.random, E = X(x, y), j = de(x, y), W = j.subtract(E).add(1);
      if (W.isSmall) return E.add(Math.floor(B() * W));
      for (var z = Re(W, t).value, J = [], ue = !0, xe = 0; xe < z.length; xe++) {
        var ae = ue ? z[xe] + (xe + 1 < z.length ? z[xe + 1] / t : 0) : t, ve = b(B() * ae);
        J.push(ve), ve < z[xe] && (ue = !1);
      }
      return E.add(u.fromArray(J, t, !1));
    }
    s(me, "randBetween");
    var De = /* @__PURE__ */ s(function(x, y, F, B) {
      F = F || o, x = String(x), B || (x = x.toLowerCase(), F = F.toLowerCase());
      var E = x.length, j, W = Math.abs(y), z = {};
      for (j = 0; j < F.length; j++)
        z[F[j]] = j;
      for (j = 0; j < E; j++) {
        var J = x[j];
        if (J !== "-" && J in z && z[J] >= W) {
          if (J === "1" && W === 1) continue;
          throw new Error(J + " is not a valid digit in base " + y + ".");
        }
      }
      y = oe(y);
      var ue = [], xe = x[0] === "-";
      for (j = xe ? 1 : 0; j < x.length; j++) {
        var J = x[j];
        if (J in z) ue.push(oe(z[J]));
        else if (J === "<") {
          var ae = j;
          do
            j++;
          while (x[j] !== ">" && j < x.length);
          ue.push(oe(x.slice(ae + 1, j)));
        } else throw new Error(J + " is not a valid character");
      }
      return He(ue, y, xe);
    }, "parseBase");
    function He(x, y, F) {
      var B = u[0], E = u[1], j;
      for (j = x.length - 1; j >= 0; j--)
        B = B.add(x[j].times(E)), E = E.times(y);
      return F ? B.negate() : B;
    }
    s(He, "parseBaseFromArray");
    function pt(x, y) {
      return y = y || o, x < y.length ? y[x] : "<" + x + ">";
    }
    s(pt, "stringify");
    function Re(x, y) {
      if (y = st(y), y.isZero()) {
        if (x.isZero()) return { value: [0], isNegative: !1 };
        throw new Error("Cannot convert nonzero numbers to base 0.");
      }
      if (y.equals(-1)) {
        if (x.isZero()) return { value: [0], isNegative: !1 };
        if (x.isNegative())
          return {
            value: [].concat.apply(
              [],
              Array.apply(null, Array(-x.toJSNumber())).map(Array.prototype.valueOf, [1, 0])
            ),
            isNegative: !1
          };
        var F = Array.apply(null, Array(x.toJSNumber() - 1)).map(Array.prototype.valueOf, [0, 1]);
        return F.unshift([1]), {
          value: [].concat.apply([], F),
          isNegative: !1
        };
      }
      var B = !1;
      if (x.isNegative() && y.isPositive() && (B = !0, x = x.abs()), y.isUnit())
        return x.isZero() ? { value: [0], isNegative: !1 } : {
          value: Array.apply(null, Array(x.toJSNumber())).map(Number.prototype.valueOf, 1),
          isNegative: B
        };
      for (var E = [], j = x, W; j.isNegative() || j.compareAbs(y) >= 0; ) {
        W = j.divmod(y), j = W.quotient;
        var z = W.remainder;
        z.isNegative() && (z = y.minus(z).abs(), j = j.next()), E.push(z.toJSNumber());
      }
      return E.push(j.toJSNumber()), { value: E.reverse(), isNegative: B };
    }
    s(Re, "toBase");
    function Vt(x, y, F) {
      var B = Re(x, y);
      return (B.isNegative ? "-" : "") + B.value.map(function(E) {
        return pt(E, F);
      }).join("");
    }
    s(Vt, "toBaseString"), l.prototype.toArray = function(x) {
      return Re(this, x);
    }, c.prototype.toArray = function(x) {
      return Re(this, x);
    }, p.prototype.toArray = function(x) {
      return Re(this, x);
    }, l.prototype.toString = function(x, y) {
      if (x === e && (x = 10), x !== 10 || y) return Vt(this, x, y);
      for (var F = this.value, B = F.length, E = String(F[--B]), j = "0000000", W; --B >= 0; )
        W = String(F[B]), E += j.slice(W.length) + W;
      var z = this.sign ? "-" : "";
      return z + E;
    }, c.prototype.toString = function(x, y) {
      return x === e && (x = 10), x != 10 || y ? Vt(this, x, y) : String(this.value);
    }, p.prototype.toString = c.prototype.toString, p.prototype.toJSON = l.prototype.toJSON = c.prototype.toJSON = function() {
      return this.toString();
    }, l.prototype.valueOf = function() {
      return parseInt(this.toString(), 10);
    }, l.prototype.toJSNumber = l.prototype.valueOf, c.prototype.valueOf = function() {
      return this.value;
    }, c.prototype.toJSNumber = c.prototype.valueOf, p.prototype.valueOf = p.prototype.toJSNumber = function() {
      return parseInt(this.toString(), 10);
    };
    function Ut(x) {
      if (h(+x)) {
        var y = +x;
        if (y === b(y))
          return a ? new p(BigInt(y)) : new c(y);
        throw new Error("Invalid integer: " + x);
      }
      var F = x[0] === "-";
      F && (x = x.slice(1));
      var B = x.split(/e/i);
      if (B.length > 2) throw new Error("Invalid integer: " + B.join("e"));
      if (B.length === 2) {
        var E = B[1];
        if (E[0] === "+" && (E = E.slice(1)), E = +E, E !== b(E) || !h(E)) throw new Error("Invalid integer: " + E + " is not a valid expone\
nt.");
        var j = B[0], W = j.indexOf(".");
        if (W >= 0 && (E -= j.length - W - 1, j = j.slice(0, W) + j.slice(W + 1)), E < 0) throw new Error("Cannot include negative exponent \
part for integers");
        j += new Array(E + 1).join("0"), x = j;
      }
      var z = /^([0-9][0-9]*)$/.test(x);
      if (!z) throw new Error("Invalid integer: " + x);
      if (a)
        return new p(BigInt(F ? "-" + x : x));
      for (var J = [], ue = x.length, xe = r, ae = ue - xe; ue > 0; )
        J.push(+x.slice(ae, ue)), ae -= xe, ae < 0 && (ae = 0), ue -= xe;
      return m(J), new l(J, F);
    }
    s(Ut, "parseStringValue");
    function ur(x) {
      if (a)
        return new p(BigInt(x));
      if (h(x)) {
        if (x !== b(x)) throw new Error(x + " is not an integer.");
        return new c(x);
      }
      return Ut(x.toString());
    }
    s(ur, "parseNumberValue");
    function oe(x) {
      return typeof x == "number" ? ur(x) : typeof x == "string" ? Ut(x) : typeof x == "bigint" ? new p(x) : x;
    }
    s(oe, "parseValue");
    for (var Ve = 0; Ve < 1e3; Ve++)
      u[Ve] = oe(Ve), Ve > 0 && (u[-Ve] = oe(-Ve));
    return u.one = u[1], u.zero = u[0], u.minusOne = u[-1], u.max = de, u.min = X, u.gcd = te, u.lcm = pe, u.isInstance = function(x) {
      return x instanceof l || x instanceof c || x instanceof p;
    }, u.randBetween = me, u.fromArray = function(x, y, F) {
      return He(x.map(oe), oe(y || 10), F);
    }, u;
  }();
  typeof Iu < "u" && Iu.hasOwnProperty("exports") && (Iu.exports = st);
  typeof define == "function" && define.amd && define(function() {
    return st;
  });
});

// ../node_modules/bplist-parser/bplistParser.js
var nF = P((ot) => {
  "use strict";
  var uH = H("fs"), lH = iF(), Fi = !1;
  ot.maxObjectSize = 100 * 1e3 * 1e3;
  ot.maxObjectCount = 32768;
  var cH = 9783072e5, pH = ot.UID = function(e) {
    this.UID = e;
  }, oae = ot.parseFile = function(e, t) {
    return new Promise(function(r, i) {
      function n(o) {
        let a = null, u;
        try {
          u = hH(o), r(u);
        } catch (l) {
          a = l, i(a);
        } finally {
          t && t(a, u);
        }
      }
      if (s(n, "tryParseBuffer"), Buffer.isBuffer(e))
        return n(e);
      uH.readFile(e, function(o, a) {
        if (o)
          return i(o), t(o);
        n(a);
      });
    });
  }, hH = ot.parseBuffer = function(e) {
    if (e.slice(0, 6).toString("utf8") !== "bplist")
      throw new Error("Invalid binary plist. Expected 'bplist' at offset 0.");
    let r = e.slice(e.length - 32, e.length), i = r.readUInt8(6);
    Fi && console.log("offsetSize: " + i);
    let n = r.readUInt8(7);
    Fi && console.log("objectRefSize: " + n);
    let o = nm(r, 8);
    Fi && console.log("numObjects: " + o);
    let a = nm(r, 16);
    Fi && console.log("topObject: " + a);
    let u = nm(r, 24);
    if (Fi && console.log("offsetTableOffset: " + u), o > ot.maxObjectCount)
      throw new Error("maxObjectCount exceeded");
    let l = [];
    for (let p = 0; p < o; p++) {
      let h = e.slice(u + p * i, u + (p + 1) * i);
      l[p] = Ot(h, 0), Fi && console.log("Offset for Object #" + p + " is " + l[p] + " [" + l[p].toString(16) + "]");
    }
    function c(p) {
      let h = l[p], f = e[h], d = (f & 240) >> 4, m = f & 15;
      switch (d) {
        case 0:
          return g();
        case 1:
          return D();
        case 8:
          return v();
        case 2:
          return S();
        case 3:
          return k();
        case 4:
          return L();
        case 5:
          return C();
        case 6:
          return C(!0);
        case 10:
          return w();
        case 13:
          return T();
        default:
          throw new Error("Unhandled type 0x" + d.toString(16));
      }
      function g() {
        switch (m) {
          case 0:
            return null;
          case 8:
            return !1;
          case 9:
            return !0;
          case 15:
            return null;
          default:
            throw new Error("Unhandled simple type 0x" + d.toString(16));
        }
      }
      s(g, "parseSimple");
      function b(_) {
        let q = "", O;
        for (O = 0; O < _.length && _[O] == 0; O++)
          ;
        for (; O < _.length; O++) {
          let $ = "00" + _[O].toString(16);
          q += $.substr($.length - 2);
        }
        return q;
      }
      s(b, "bufferToHexString");
      function D() {
        let _ = Math.pow(2, m);
        if (m == 4) {
          let q = e.slice(h + 1, h + 1 + _), O = b(q);
          return lH(O, 16);
        }
        if (m == 3)
          return e.readInt32BE(h + 1);
        if (_ < ot.maxObjectSize)
          return Ot(e.slice(h + 1, h + 1 + _));
        throw new Error("To little heap space available! Wanted to read " + _ + " bytes, but only " + ot.maxObjectSize + " are available.");
      }
      s(D, "parseInteger");
      function v() {
        let _ = m + 1;
        if (_ < ot.maxObjectSize)
          return new pH(Ot(e.slice(h + 1, h + 1 + _)));
        throw new Error("To little heap space available! Wanted to read " + _ + " bytes, but only " + ot.maxObjectSize + " are available.");
      }
      s(v, "parseUID");
      function S() {
        let _ = Math.pow(2, m);
        if (_ < ot.maxObjectSize) {
          let q = e.slice(h + 1, h + 1 + _);
          if (_ === 4)
            return q.readFloatBE(0);
          if (_ === 8)
            return q.readDoubleBE(0);
        } else
          throw new Error("To little heap space available! Wanted to read " + _ + " bytes, but only " + ot.maxObjectSize + " are available.");
      }
      s(S, "parseReal");
      function k() {
        m != 3 && console.error("Unknown date type :" + m + ". Parsing anyway...");
        let _ = e.slice(h + 1, h + 9);
        return new Date(cH + 1e3 * _.readDoubleBE(0));
      }
      s(k, "parseDate");
      function L() {
        let _ = 1, q = m;
        if (m == 15) {
          let O = e[h + 1], $ = (O & 240) / 16;
          $ != 1 && console.error("0x4: UNEXPECTED LENGTH-INT TYPE! " + $);
          let V = O & 15, K = Math.pow(2, V);
          _ = 2 + K, K < 3, q = Ot(e.slice(h + 2, h + 2 + K));
        }
        if (q < ot.maxObjectSize)
          return e.slice(h + _, h + _ + q);
        throw new Error("To little heap space available! Wanted to read " + q + " bytes, but only " + ot.maxObjectSize + " are available.");
      }
      s(L, "parseData");
      function C(_) {
        _ = _ || 0;
        let q = "utf8", O = m, $ = 1;
        if (m == 15) {
          let V = e[h + 1], K = (V & 240) / 16;
          K != 1 && console.err("UNEXPECTED LENGTH-INT TYPE! " + K);
          let M = V & 15, R = Math.pow(2, M);
          $ = 2 + R, R < 3, O = Ot(e.slice(h + 2, h + 2 + R));
        }
        if (O *= _ + 1, O < ot.maxObjectSize) {
          let V = Buffer.from(e.slice(h + $, h + $ + O));
          return _ && (V = fH(V), q = "ucs2"), V.toString(q);
        }
        throw new Error("To little heap space available! Wanted to read " + O + " bytes, but only " + ot.maxObjectSize + " are available.");
      }
      s(C, "parsePlistString");
      function w() {
        let _ = m, q = 1;
        if (m == 15) {
          let $ = e[h + 1], V = ($ & 240) / 16;
          V != 1 && console.error("0xa: UNEXPECTED LENGTH-INT TYPE! " + V);
          let K = $ & 15, M = Math.pow(2, K);
          q = 2 + M, M < 3, _ = Ot(e.slice(h + 2, h + 2 + M));
        }
        if (_ * n > ot.maxObjectSize)
          throw new Error("To little heap space available!");
        let O = [];
        for (let $ = 0; $ < _; $++) {
          let V = Ot(e.slice(h + q + $ * n, h + q + ($ + 1) * n));
          O[$] = c(V);
        }
        return O;
      }
      s(w, "parseArray");
      function T() {
        let _ = m, q = 1;
        if (m == 15) {
          let $ = e[h + 1], V = ($ & 240) / 16;
          V != 1 && console.error("0xD: UNEXPECTED LENGTH-INT TYPE! " + V);
          let K = $ & 15, M = Math.pow(2, K);
          q = 2 + M, M < 3, _ = Ot(e.slice(h + 2, h + 2 + M));
        }
        if (_ * 2 * n > ot.maxObjectSize)
          throw new Error("To little heap space available!");
        Fi && console.log("Parsing dictionary #" + p);
        let O = {};
        for (let $ = 0; $ < _; $++) {
          let V = Ot(e.slice(h + q + $ * n, h + q + ($ + 1) * n)), K = Ot(e.slice(h + q + _ * n + $ * n, h + q + _ * n + ($ + 1) * n)), M = c(
          V), R = c(K);
          Fi && console.log("  DICT #" + p + ": Mapped " + M + " to " + R), O[M] = R;
        }
        return O;
      }
      s(T, "parseDictionary");
    }
    return s(c, "parseObject"), [c(a)];
  };
  function Ot(e, t) {
    t = t || 0;
    let r = 0;
    for (let i = t; i < e.length; i++)
      r <<= 8, r |= e[i] & 255;
    return r;
  }
  s(Ot, "readUInt");
  function nm(e, t) {
    return e.slice(t, t + 8).readUInt32BE(4, 8);
  }
  s(nm, "readUInt64BE");
  function fH(e) {
    let t = e.length;
    for (let r = 0; r < t; r += 2) {
      let i = e[r];
      e[r] = e[r + 1], e[r + 1] = i;
    }
    return e;
  }
  s(fH, "swapBytes");
});

// ../node_modules/untildify/index.js
var aF = P((lae, oF) => {
  "use strict";
  var dH = H("os"), sF = dH.homedir();
  oF.exports = (e) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string, got ${typeof e}`);
    return sF ? e.replace(/^~(?=$|\/|\\)/, sF) : e;
  };
});

// ../node_modules/@aw-web-design/x-default-browser/node_modules/default-browser-id/index.js
var pF = {};
Pi(pF, {
  default: () => cF
});
import mH from "os";
import { promises as gH } from "fs";
async function cF() {
  if (process.platform !== "darwin")
    throw new Error("macOS only");
  let e = "com.apple.Safari", t;
  try {
    t = await gH.readFile(yH);
  } catch (n) {
    if (n.code === "ENOENT")
      return e;
    throw n;
  }
  let r = uF.default.parseBuffer(t), i = r && r[0].LSHandlers;
  if (!i || i.length === 0)
    return e;
  for (let n of i)
    if (n.LSHandlerURLScheme === "http" && n.LSHandlerRoleAll) {
      e = n.LSHandlerRoleAll;
      break;
    }
  return e;
}
var uF, lF, DH, yH, hF = ft(() => {
  uF = he(nF(), 1), lF = he(aF(), 1), DH = Number(mH.release().split(".")[0]), yH = (0, lF.default)(DH >= 14 ? "~/Library/Preferences/com.ap\
ple.LaunchServices/com.apple.launchservices.secure.plist" : "~/Library/Preferences/com.apple.LaunchServices.plist");
  s(cF, "defaultBrowserId");
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-mac.js
var dF = P((fae, fF) => {
  var xH = Promise.resolve().then(() => (hF(), pF));
  fF.exports = async function(e) {
    let t = await xH.then((r) => r.default());
    if (t) {
      let r = t.toLowerCase(), i = {
        isIE: !1,
        isSafari: r.indexOf("safari") > -1,
        isFirefox: r.indexOf("firefox") > -1,
        isChrome: r.indexOf("google") > -1,
        isChromium: r.indexOf("chromium") > -1,
        // untested
        isOpera: r.indexOf("opera") > -1,
        identity: t
      };
      i.isBlink = i.isChrome || i.isChromium || i.isOpera, i.isWebkit = i.isSafari || i.isBlink, i.commonName = uo()(i), e(null, i);
    } else
      e("Unable to retrieve default browser");
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-linux.js
var gF = P((dae, mF) => {
  var EH = H("child_process").exec;
  mF.exports = function(e) {
    var t = "xdg-mime query default x-scheme-handler/http";
    EH(t, function(r, i, n) {
      if (r) {
        e("Unable to execute the query: " + r + `
` + n);
        return;
      }
      var o = i, a = {
        isIE: !1,
        isSafari: !1,
        isFirefox: o.indexOf("firefox") > -1,
        isChrome: o.indexOf("google") > -1,
        isChromium: o.indexOf("chromium") > -1,
        isOpera: o.indexOf("opera") > -1,
        identity: o
      };
      a.isWebkit = a.isBlink = a.isChrome || a.isChromium || a.isOpera, a.commonName = uo()(a), e(null, a);
    });
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-stub.js
var yF = P((mae, DF) => {
  DF.exports = function(e) {
    e("Your platform is not supported, sorry. Patches welcome.");
  };
});

// ../node_modules/@aw-web-design/x-default-browser/index.js
var EF = P((gae, xF) => {
  var Xn, lo = H("os");
  lo.platform() == "win32" ? lo.release().indexOf("10.") == 0 ? Xn = eF() : Xn = rF() : lo.platform() == "darwin" ? Xn = dF() : lo.platform() ==
  "linux" || lo.platform() == "freebsd" ? Xn = gF() : Xn = yF();
  xF.exports = Xn;
});

// ../node_modules/is-docker/index.js
var om = P((Dae, vF) => {
  "use strict";
  var bF = H("fs"), sm;
  function bH() {
    try {
      return bF.statSync("/.dockerenv"), !0;
    } catch {
      return !1;
    }
  }
  s(bH, "hasDockerEnv");
  function vH() {
    try {
      return bF.readFileSync("/proc/self/cgroup", "utf8").includes("docker");
    } catch {
      return !1;
    }
  }
  s(vH, "hasDockerCGroup");
  vF.exports = () => (sm === void 0 && (sm = bH() || vH()), sm);
});

// ../node_modules/open/node_modules/is-wsl/index.js
var AF = P((xae, am) => {
  "use strict";
  var CH = H("os"), wH = H("fs"), CF = om(), wF = /* @__PURE__ */ s(() => {
    if (process.platform !== "linux")
      return !1;
    if (CH.release().toLowerCase().includes("microsoft"))
      return !CF();
    try {
      return wH.readFileSync("/proc/version", "utf8").toLowerCase().includes("microsoft") ? !CF() : !1;
    } catch {
      return !1;
    }
  }, "isWsl");
  process.env.__IS_WSL_TEST__ ? am.exports = wF : am.exports = wF();
});

// ../node_modules/open/node_modules/define-lazy-prop/index.js
var FF = P((bae, SF) => {
  "use strict";
  SF.exports = (e, t, r) => {
    let i = /* @__PURE__ */ s((n) => Object.defineProperty(e, t, { value: n, enumerable: !0, writable: !0 }), "define");
    return Object.defineProperty(e, t, {
      configurable: !0,
      enumerable: !0,
      get() {
        let n = r();
        return i(n), n;
      },
      set(n) {
        i(n);
      }
    }), e;
  };
});

// ../node_modules/open/index.js
var OF = P((Cae, PF) => {
  var AH = H("path"), SH = H("child_process"), { promises: Ou, constants: IF } = H("fs"), Pu = AF(), FH = om(), lm = FF(), _F = AH.join(__dirname,
  "xdg-open"), { platform: Kn, arch: kF } = process, _H = /* @__PURE__ */ s(() => {
    try {
      return Ou.statSync("/run/.containerenv"), !0;
    } catch {
      return !1;
    }
  }, "hasContainerEnv"), um;
  function kH() {
    return um === void 0 && (um = _H() || FH()), um;
  }
  s(kH, "isInsideContainer");
  var TH = /* @__PURE__ */ (() => {
    let e = "/mnt/", t;
    return async function() {
      if (t)
        return t;
      let r = "/etc/wsl.conf", i = !1;
      try {
        await Ou.access(r, IF.F_OK), i = !0;
      } catch {
      }
      if (!i)
        return e;
      let n = await Ou.readFile(r, { encoding: "utf8" }), o = /(?<!#.*)root\s*=\s*(?<mountPoint>.*)/g.exec(n);
      return o ? (t = o.groups.mountPoint.trim(), t = t.endsWith("/") ? t : `${t}/`, t) : e;
    };
  })(), TF = /* @__PURE__ */ s(async (e, t) => {
    let r;
    for (let i of e)
      try {
        return await t(i);
      } catch (n) {
        r = n;
      }
    throw r;
  }, "pTryEach"), Ru = /* @__PURE__ */ s(async (e) => {
    if (e = {
      wait: !1,
      background: !1,
      newInstance: !1,
      allowNonzeroExitCode: !1,
      ...e
    }, Array.isArray(e.app))
      return TF(e.app, (u) => Ru({
        ...e,
        app: u
      }));
    let { name: t, arguments: r = [] } = e.app || {};
    if (r = [...r], Array.isArray(t))
      return TF(t, (u) => Ru({
        ...e,
        app: {
          name: u,
          arguments: r
        }
      }));
    let i, n = [], o = {};
    if (Kn === "darwin")
      i = "open", e.wait && n.push("--wait-apps"), e.background && n.push("--background"), e.newInstance && n.push("--new"), t && n.push("-a",
      t);
    else if (Kn === "win32" || Pu && !kH() && !t) {
      let u = await TH();
      i = Pu ? `${u}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` : `${process.env.SYSTEMROOT}\\System32\\WindowsPowerShell\\v1.0\\p\
owershell`, n.push(
        "-NoProfile",
        "-NonInteractive",
        "\u2013ExecutionPolicy",
        "Bypass",
        "-EncodedCommand"
      ), Pu || (o.windowsVerbatimArguments = !0);
      let l = ["Start"];
      e.wait && l.push("-Wait"), t ? (l.push(`"\`"${t}\`""`, "-ArgumentList"), e.target && r.unshift(e.target)) : e.target && l.push(`"${e.target}\
"`), r.length > 0 && (r = r.map((c) => `"\`"${c}\`""`), l.push(r.join(","))), e.target = Buffer.from(l.join(" "), "utf16le").toString("base6\
4");
    } else {
      if (t)
        i = t;
      else {
        let u = !__dirname || __dirname === "/", l = !1;
        try {
          await Ou.access(_F, IF.X_OK), l = !0;
        } catch {
        }
        i = process.versions.electron || Kn === "android" || u || !l ? "xdg-open" : _F;
      }
      r.length > 0 && n.push(...r), e.wait || (o.stdio = "ignore", o.detached = !0);
    }
    e.target && n.push(e.target), Kn === "darwin" && r.length > 0 && n.push("--args", ...r);
    let a = SH.spawn(i, n, o);
    return e.wait ? new Promise((u, l) => {
      a.once("error", l), a.once("close", (c) => {
        if (!e.allowNonzeroExitCode && c > 0) {
          l(new Error(`Exited with code ${c}`));
          return;
        }
        u(a);
      });
    }) : (a.unref(), a);
  }, "baseOpen"), cm = /* @__PURE__ */ s((e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a `target`");
    return Ru({
      ...t,
      target: e
    });
  }, "open"), BH = /* @__PURE__ */ s((e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a `name`");
    let { arguments: r = [] } = t || {};
    if (r != null && !Array.isArray(r))
      throw new TypeError("Expected `appArguments` as Array type");
    return Ru({
      ...t,
      app: {
        name: e,
        arguments: r
      }
    });
  }, "openApp");
  function BF(e) {
    if (typeof e == "string" || Array.isArray(e))
      return e;
    let { [kF]: t } = e;
    if (!t)
      throw new Error(`${kF} is not supported`);
    return t;
  }
  s(BF, "detectArchBinary");
  function pm({ [Kn]: e }, { wsl: t }) {
    if (t && Pu)
      return BF(t);
    if (!e)
      throw new Error(`${Kn} is not supported`);
    return BF(e);
  }
  s(pm, "detectPlatformBinary");
  var Nu = {};
  lm(Nu, "chrome", () => pm({
    darwin: "google chrome",
    win32: "chrome",
    linux: ["google-chrome", "google-chrome-stable", "chromium"]
  }, {
    wsl: {
      ia32: "/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe",
      x64: ["/mnt/c/Program Files/Google/Chrome/Application/chrome.exe", "/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe"]
    }
  }));
  lm(Nu, "firefox", () => pm({
    darwin: "firefox",
    win32: "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
    linux: "firefox"
  }, {
    wsl: "/mnt/c/Program Files/Mozilla Firefox/firefox.exe"
  }));
  lm(Nu, "edge", () => pm({
    darwin: "microsoft edge",
    win32: "msedge",
    linux: ["microsoft-edge", "microsoft-edge-dev"]
  }, {
    wsl: "/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe"
  }));
  cm.apps = Nu;
  cm.openApp = BH;
  PF.exports = cm;
});

// ../node_modules/address/lib/address.js
var zF = P((kae, WF) => {
  "use strict";
  var hm = H("os"), OH = H("fs"), RH = H("child_process"), NH = "/etc/resolv.conf";
  function UF() {
    var e = "eth", t = hm.platform();
    return t === "darwin" ? e = "en" : t === "win32" && (e = null), e;
  }
  s(UF, "getInterfaceName");
  function LH() {
    return hm.platform() === "win32" ? "ipconfig/all" : "/sbin/ifconfig";
  }
  s(LH, "getIfconfigCMD");
  function jF(e, t) {
    return t === "IPv4" ? e === "IPv4" || e === 4 : t === "IPv6" ? e === "IPv6" || e === 6 : e === t;
  }
  s(jF, "matchName");
  function Rt(e, t) {
    typeof e == "function" && (t = e, e = null);
    var r = {
      ip: Rt.ip(e),
      ipv6: Rt.ipv6(e),
      mac: null
    };
    Rt.mac(e, function(i, n) {
      n && (r.mac = n), t(i, r);
    });
  }
  s(Rt, "address");
  Rt.interface = function(e, t) {
    var r = hm.networkInterfaces(), i = !t;
    t = t || UF(), e = e || "IPv4";
    for (var n = -1; n < 8; n++) {
      var o = t + (n >= 0 ? n : ""), a = r[o];
      if (a)
        for (var u = 0; u < a.length; u++) {
          var l = a[u];
          if (jF(l.family, e))
            return l;
        }
    }
    if (i)
      for (var c in r)
        for (var a = r[c], n = 0; n < a.length; n++) {
          var l = a[n];
          if (jF(l.family, e) && !l.address.startsWith("127."))
            return l;
        }
  };
  Rt.ip = function(e) {
    var t = Rt.interface("IPv4", e);
    return t && t.address;
  };
  Rt.ipv6 = function(e) {
    var t = Rt.interface("IPv6", e);
    return t && t.address;
  };
  var qF = /^(\w+)\:\s+flags=/, $F = /^(\w+)\s{2,}link encap:\w+/i, VF = Rt.MAC_RE = /(?:ether|HWaddr)\s+((?:[a-z0-9]{2}\:){5}[a-z0-9]{2})/i,
  MH = Rt.MAC_IP_RE = /inet\s(?:addr\:)?(\d+\.\d+\.\d+\.\d+)/;
  function jH(e, t, r) {
    for (var i = e.split(`
`), n = 0; n < i.length; n++) {
      var o = i[n].trimRight(), a = qF.exec(o) || $F.exec(o);
      if (a) {
        var u = a[1];
        if (u.indexOf(t) === 0) {
          var l = null, c = null, p = VF.exec(o);
          for (p && (c = p[1]), n++; ; ) {
            if (o = i[n], !o || qF.exec(o) || $F.exec(o)) {
              n--;
              break;
            }
            c || (p = VF.exec(o), p && (c = p[1])), l || (p = MH.exec(o), p && (l = p[1])), n++;
          }
          if (l === r)
            return c;
        }
      }
    }
  }
  s(jH, "getMAC");
  Rt.mac = function(e, t) {
    typeof e == "function" && (t = e, e = null), e = e || UF();
    var r = Rt.interface("IPv4", e);
    if (!r)
      return t();
    if (!process.env.CI && (r.mac === "ff:00:00:00:00:00" || r.mac === "00:00:00:00:00:00") && (r.mac = ""), r.mac)
      return t(null, r.mac);
    RH.exec(LH(), { timeout: 5e3 }, function(i, n, o) {
      if (i || !n)
        return t(i);
      var a = jH(n || "", e, r.address);
      t(null, a);
    });
  };
  var qH = /^nameserver\s+(\d+\.\d+\.\d+\.\d+)$/i;
  Rt.dns = function(e, t) {
    typeof e == "function" && (t = e, e = null), e = e || NH, OH.readFile(e, "utf8", function(r, i) {
      if (r)
        return t(r);
      var n = [];
      i = i || "";
      for (var o = i.split(`
`), a = 0; a < o.length; a++) {
        var u = o[a].trim(), l = qH.exec(u);
        l && n.push(l[1]);
      }
      t(null, n);
    });
  };
  WF.exports = Rt;
});

// ../node_modules/ms/index.js
var JF = P((Bae, HF) => {
  var Yn = 1e3, Qn = Yn * 60, Zn = Qn * 60, Gi = Zn * 24, $H = Gi * 7, VH = Gi * 365.25;
  HF.exports = function(e, t) {
    t = t || {};
    var r = typeof e;
    if (r === "string" && e.length > 0)
      return UH(e);
    if (r === "number" && isFinite(e))
      return t.long ? zH(e) : WH(e);
    throw new Error(
      "val is not a non-empty string or a valid number. val=" + JSON.stringify(e)
    );
  };
  function UH(e) {
    if (e = String(e), !(e.length > 100)) {
      var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.
      exec(
        e
      );
      if (t) {
        var r = parseFloat(t[1]), i = (t[2] || "ms").toLowerCase();
        switch (i) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return r * VH;
          case "weeks":
          case "week":
          case "w":
            return r * $H;
          case "days":
          case "day":
          case "d":
            return r * Gi;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return r * Zn;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return r * Qn;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return r * Yn;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return r;
          default:
            return;
        }
      }
    }
  }
  s(UH, "parse");
  function WH(e) {
    var t = Math.abs(e);
    return t >= Gi ? Math.round(e / Gi) + "d" : t >= Zn ? Math.round(e / Zn) + "h" : t >= Qn ? Math.round(e / Qn) + "m" : t >= Yn ? Math.round(
    e / Yn) + "s" : e + "ms";
  }
  s(WH, "fmtShort");
  function zH(e) {
    var t = Math.abs(e);
    return t >= Gi ? Lu(e, t, Gi, "day") : t >= Zn ? Lu(e, t, Zn, "hour") : t >= Qn ? Lu(e, t, Qn, "minute") : t >= Yn ? Lu(e, t, Yn, "secon\
d") : e + " ms";
  }
  s(zH, "fmtLong");
  function Lu(e, t, r, i) {
    var n = t >= r * 1.5;
    return Math.round(e / r) + " " + i + (n ? "s" : "");
  }
  s(Lu, "plural");
});

// ../node_modules/debug/src/common.js
var fm = P((Pae, GF) => {
  function HH(e) {
    r.debug = r, r.default = r, r.coerce = l, r.disable = a, r.enable = n, r.enabled = u, r.humanize = JF(), r.destroy = c, Object.keys(e).forEach(
    (p) => {
      r[p] = e[p];
    }), r.names = [], r.skips = [], r.formatters = {};
    function t(p) {
      let h = 0;
      for (let f = 0; f < p.length; f++)
        h = (h << 5) - h + p.charCodeAt(f), h |= 0;
      return r.colors[Math.abs(h) % r.colors.length];
    }
    s(t, "selectColor"), r.selectColor = t;
    function r(p) {
      let h, f = null, d, m;
      function g(...b) {
        if (!g.enabled)
          return;
        let D = g, v = Number(/* @__PURE__ */ new Date()), S = v - (h || v);
        D.diff = S, D.prev = h, D.curr = v, h = v, b[0] = r.coerce(b[0]), typeof b[0] != "string" && b.unshift("%O");
        let k = 0;
        b[0] = b[0].replace(/%([a-zA-Z%])/g, (C, w) => {
          if (C === "%%")
            return "%";
          k++;
          let T = r.formatters[w];
          if (typeof T == "function") {
            let _ = b[k];
            C = T.call(D, _), b.splice(k, 1), k--;
          }
          return C;
        }), r.formatArgs.call(D, b), (D.log || r.log).apply(D, b);
      }
      return s(g, "debug"), g.namespace = p, g.useColors = r.useColors(), g.color = r.selectColor(p), g.extend = i, g.destroy = r.destroy, Object.
      defineProperty(g, "enabled", {
        enumerable: !0,
        configurable: !1,
        get: /* @__PURE__ */ s(() => f !== null ? f : (d !== r.namespaces && (d = r.namespaces, m = r.enabled(p)), m), "get"),
        set: /* @__PURE__ */ s((b) => {
          f = b;
        }, "set")
      }), typeof r.init == "function" && r.init(g), g;
    }
    s(r, "createDebug");
    function i(p, h) {
      let f = r(this.namespace + (typeof h > "u" ? ":" : h) + p);
      return f.log = this.log, f;
    }
    s(i, "extend");
    function n(p) {
      r.save(p), r.namespaces = p, r.names = [], r.skips = [];
      let h = (typeof p == "string" ? p : "").trim().replace(" ", ",").split(",").filter(Boolean);
      for (let f of h)
        f[0] === "-" ? r.skips.push(f.slice(1)) : r.names.push(f);
    }
    s(n, "enable");
    function o(p, h) {
      let f = 0, d = 0, m = -1, g = 0;
      for (; f < p.length; )
        if (d < h.length && (h[d] === p[f] || h[d] === "*"))
          h[d] === "*" ? (m = d, g = f, d++) : (f++, d++);
        else if (m !== -1)
          d = m + 1, g++, f = g;
        else
          return !1;
      for (; d < h.length && h[d] === "*"; )
        d++;
      return d === h.length;
    }
    s(o, "matchesTemplate");
    function a() {
      let p = [
        ...r.names,
        ...r.skips.map((h) => "-" + h)
      ].join(",");
      return r.enable(""), p;
    }
    s(a, "disable");
    function u(p) {
      for (let h of r.skips)
        if (o(p, h))
          return !1;
      for (let h of r.names)
        if (o(p, h))
          return !0;
      return !1;
    }
    s(u, "enabled");
    function l(p) {
      return p instanceof Error ? p.stack || p.message : p;
    }
    s(l, "coerce");
    function c() {
      console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major versio\
n of `debug`.");
    }
    return s(c, "destroy"), r.enable(r.load()), r;
  }
  s(HH, "setup");
  GF.exports = HH;
});

// ../node_modules/debug/src/browser.js
var XF = P((qt, Mu) => {
  qt.formatArgs = GH;
  qt.save = XH;
  qt.load = KH;
  qt.useColors = JH;
  qt.storage = YH();
  qt.destroy = /* @__PURE__ */ (() => {
    let e = !1;
    return () => {
      e || (e = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the nex\
t major version of `debug`."));
    };
  })();
  qt.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function JH() {
    if (typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
      return !0;
    if (typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
      return !1;
    let e;
    return typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
    // Is firebug? http://stackoverflow.com/a/398120/376773
    typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator < "u" && navigator.userAgent && (e = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(e[1], 10) >=
    31 || // Double check webkit in userAgent just in case we are in a worker
    typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  s(JH, "useColors");
  function GH(e) {
    if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" +
    Mu.exports.humanize(this.diff), !this.useColors)
      return;
    let t = "color: " + this.color;
    e.splice(1, 0, t, "color: inherit");
    let r = 0, i = 0;
    e[0].replace(/%[a-zA-Z%]/g, (n) => {
      n !== "%%" && (r++, n === "%c" && (i = r));
    }), e.splice(i, 0, t);
  }
  s(GH, "formatArgs");
  qt.log = console.debug || console.log || (() => {
  });
  function XH(e) {
    try {
      e ? qt.storage.setItem("debug", e) : qt.storage.removeItem("debug");
    } catch {
    }
  }
  s(XH, "save");
  function KH() {
    let e;
    try {
      e = qt.storage.getItem("debug");
    } catch {
    }
    return !e && typeof process < "u" && "env" in process && (e = process.env.DEBUG), e;
  }
  s(KH, "load");
  function YH() {
    try {
      return localStorage;
    } catch {
    }
  }
  s(YH, "localstorage");
  Mu.exports = fm()(qt);
  var { formatters: QH } = Mu.exports;
  QH.j = function(e) {
    try {
      return JSON.stringify(e);
    } catch (t) {
      return "[UnexpectedJSONParseError]: " + t.message;
    }
  };
});

// ../node_modules/has-flag/index.js
var YF = P((Nae, KF) => {
  "use strict";
  KF.exports = (e, t = process.argv) => {
    let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", i = t.indexOf(r + e), n = t.indexOf("--");
    return i !== -1 && (n === -1 || i < n);
  };
});

// ../node_modules/supports-color/index.js
var e3 = P((Lae, ZF) => {
  "use strict";
  var ZH = H("os"), QF = H("tty"), sr = YF(), { env: lt } = process, _i;
  sr("no-color") || sr("no-colors") || sr("color=false") || sr("color=never") ? _i = 0 : (sr("color") || sr("colors") || sr("color=true") ||
  sr("color=always")) && (_i = 1);
  "FORCE_COLOR" in lt && (lt.FORCE_COLOR === "true" ? _i = 1 : lt.FORCE_COLOR === "false" ? _i = 0 : _i = lt.FORCE_COLOR.length === 0 ? 1 : Math.
  min(parseInt(lt.FORCE_COLOR, 10), 3));
  function dm(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  s(dm, "translateLevel");
  function mm(e, t) {
    if (_i === 0)
      return 0;
    if (sr("color=16m") || sr("color=full") || sr("color=truecolor"))
      return 3;
    if (sr("color=256"))
      return 2;
    if (e && !t && _i === void 0)
      return 0;
    let r = _i || 0;
    if (lt.TERM === "dumb")
      return r;
    if (process.platform === "win32") {
      let i = ZH.release().split(".");
      return Number(i[0]) >= 10 && Number(i[2]) >= 10586 ? Number(i[2]) >= 14931 ? 3 : 2 : 1;
    }
    if ("CI" in lt)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((i) => i in lt) || lt.CI_NAME === "codeship" ?
      1 : r;
    if ("TEAMCITY_VERSION" in lt)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(lt.TEAMCITY_VERSION) ? 1 : 0;
    if (lt.COLORTERM === "truecolor")
      return 3;
    if ("TERM_PROGRAM" in lt) {
      let i = parseInt((lt.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (lt.TERM_PROGRAM) {
        case "iTerm.app":
          return i >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(lt.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(lt.TERM) || "COLORTERM" in
    lt ? 1 : r;
  }
  s(mm, "supportsColor");
  function eJ(e) {
    let t = mm(e, e && e.isTTY);
    return dm(t);
  }
  s(eJ, "getSupportLevel");
  ZF.exports = {
    supportsColor: eJ,
    stdout: dm(mm(!0, QF.isatty(1))),
    stderr: dm(mm(!0, QF.isatty(2)))
  };
});

// ../node_modules/debug/src/node.js
var r3 = P((ct, qu) => {
  var tJ = H("tty"), ju = H("util");
  ct.init = uJ;
  ct.log = sJ;
  ct.formatArgs = iJ;
  ct.save = oJ;
  ct.load = aJ;
  ct.useColors = rJ;
  ct.destroy = ju.deprecate(
    () => {
    },
    "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
  );
  ct.colors = [6, 2, 3, 4, 5, 1];
  try {
    let e = e3();
    e && (e.stderr || e).level >= 2 && (ct.colors = [
      20,
      21,
      26,
      27,
      32,
      33,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      56,
      57,
      62,
      63,
      68,
      69,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      92,
      93,
      98,
      99,
      112,
      113,
      128,
      129,
      134,
      135,
      148,
      149,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      178,
      179,
      184,
      185,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      214,
      215,
      220,
      221
    ]);
  } catch {
  }
  ct.inspectOpts = Object.keys(process.env).filter((e) => /^debug_/i.test(e)).reduce((e, t) => {
    let r = t.substring(6).toLowerCase().replace(/_([a-z])/g, (n, o) => o.toUpperCase()), i = process.env[t];
    return /^(yes|on|true|enabled)$/i.test(i) ? i = !0 : /^(no|off|false|disabled)$/i.test(i) ? i = !1 : i === "null" ? i = null : i = Number(
    i), e[r] = i, e;
  }, {});
  function rJ() {
    return "colors" in ct.inspectOpts ? !!ct.inspectOpts.colors : tJ.isatty(process.stderr.fd);
  }
  s(rJ, "useColors");
  function iJ(e) {
    let { namespace: t, useColors: r } = this;
    if (r) {
      let i = this.color, n = "\x1B[3" + (i < 8 ? i : "8;5;" + i), o = `  ${n};1m${t} \x1B[0m`;
      e[0] = o + e[0].split(`
`).join(`
` + o), e.push(n + "m+" + qu.exports.humanize(this.diff) + "\x1B[0m");
    } else
      e[0] = nJ() + t + " " + e[0];
  }
  s(iJ, "formatArgs");
  function nJ() {
    return ct.inspectOpts.hideDate ? "" : (/* @__PURE__ */ new Date()).toISOString() + " ";
  }
  s(nJ, "getDate");
  function sJ(...e) {
    return process.stderr.write(ju.formatWithOptions(ct.inspectOpts, ...e) + `
`);
  }
  s(sJ, "log");
  function oJ(e) {
    e ? process.env.DEBUG = e : delete process.env.DEBUG;
  }
  s(oJ, "save");
  function aJ() {
    return process.env.DEBUG;
  }
  s(aJ, "load");
  function uJ(e) {
    e.inspectOpts = {};
    let t = Object.keys(ct.inspectOpts);
    for (let r = 0; r < t.length; r++)
      e.inspectOpts[t[r]] = ct.inspectOpts[t[r]];
  }
  s(uJ, "init");
  qu.exports = fm()(ct);
  var { formatters: t3 } = qu.exports;
  t3.o = function(e) {
    return this.inspectOpts.colors = this.useColors, ju.inspect(e, this.inspectOpts).split(`
`).map((t) => t.trim()).join(" ");
  };
  t3.O = function(e) {
    return this.inspectOpts.colors = this.useColors, ju.inspect(e, this.inspectOpts);
  };
});

// ../node_modules/debug/src/index.js
var Dm = P((qae, gm) => {
  typeof process > "u" || process.type === "renderer" || process.browser === !0 || process.__nwjs ? gm.exports = XF() : gm.exports = r3();
});

// ../node_modules/detect-port/lib/detect-port.js
var xm = P(($ae, i3) => {
  "use strict";
  var lJ = H("net"), cJ = zF(), po = Dm()("detect-port");
  i3.exports = (e, t) => {
    let r = "";
    typeof e == "object" && e ? (r = e.hostname, t = e.callback, e = e.port) : typeof e == "function" && (t = e, e = null), e = parseInt(e) ||
    0;
    let i = e + 10;
    return i > 65535 && (i = 65535), po("detect free port between [%s, %s)", e, i), typeof t == "function" ? ym(e, i, r, t) : new Promise((n) => {
      ym(e, i, r, (o, a) => {
        n(a);
      });
    });
  };
  function ym(e, t, r, i) {
    function n() {
      e++, e >= t && (po("port: %s >= maxPort: %s, give up and use random port", e, t), e = 0, t = 0), ym(e, t, r, i);
    }
    s(n, "handleError"), r ? co(e, r, (o, a) => {
      if (o)
        return o.code === "EADDRNOTAVAIL" ? i(new Error("the ip that is not unknown on the machine")) : n();
      i(null, a);
    }) : co(e, null, (o, a) => {
      if (e === 0)
        return i(o, a);
      if (o)
        return n(o);
      co(e, "0.0.0.0", (u) => {
        if (u)
          return n(u);
        co(e, "localhost", (l) => {
          if (l && l.code !== "EADDRNOTAVAIL")
            return n(l);
          co(e, cJ.ip(), (c, p) => {
            if (c)
              return n(c);
            i(null, p);
          });
        });
      });
    });
  }
  s(ym, "tryListen");
  function co(e, t, r) {
    let i = new lJ.Server();
    i.on("error", (n) => (po("listen %s:%s error: %s", t, e, n), i.close(), n.code === "ENOTFOUND" ? (po("ignore dns ENOTFOUND error, get fr\
ee %s:%s", t, e), r(null, e)) : r(n))), i.listen(e, t, () => (e = i.address().port, i.close(), po("get free %s:%s", t, e), r(null, e)));
  }
  s(co, "listen");
});

// ../node_modules/detect-port/lib/wait-port.js
var s3 = P((Uae, n3) => {
  "use strict";
  var pJ = Dm()("wait-port"), hJ = xm(), fJ = /* @__PURE__ */ s((e) => new Promise((t) => setTimeout(t, e)), "sleep");
  async function dJ(e, t = {}) {
    let { retryInterval: r = 1e3, retries: i = 1 / 0 } = t, n = 1;
    async function o() {
      if (pJ("retries", i, "count", n), n > i) {
        let u = new Error("retries exceeded");
        throw u.retries = i, u.count = n, u;
      }
      return n++, await hJ(e) === e ? (await fJ(r), o()) : !0;
    }
    return s(o, "loop"), await o();
  }
  s(dJ, "waitPort");
  n3.exports = dJ;
});

// ../node_modules/detect-port/index.js
var o3 = P((zae, Em) => {
  "use strict";
  Em.exports = xm();
  Em.exports.waitPort = s3();
});

// ../node_modules/eastasianwidth/eastasianwidth.js
var wm = P((Sue, Cm) => {
  var ki = {};
  typeof Cm > "u" ? window.eastasianwidth = ki : Cm.exports = ki;
  ki.eastAsianWidth = function(e) {
    var t = e.charCodeAt(0), r = e.length == 2 ? e.charCodeAt(1) : 0, i = t;
    return 55296 <= t && t <= 56319 && 56320 <= r && r <= 57343 && (t &= 1023, r &= 1023, i = t << 10 | r, i += 65536), i == 12288 || 65281 <=
    i && i <= 65376 || 65504 <= i && i <= 65510 ? "F" : i == 8361 || 65377 <= i && i <= 65470 || 65474 <= i && i <= 65479 || 65482 <= i && i <=
    65487 || 65490 <= i && i <= 65495 || 65498 <= i && i <= 65500 || 65512 <= i && i <= 65518 ? "H" : 4352 <= i && i <= 4447 || 4515 <= i &&
    i <= 4519 || 4602 <= i && i <= 4607 || 9001 <= i && i <= 9002 || 11904 <= i && i <= 11929 || 11931 <= i && i <= 12019 || 12032 <= i && i <=
    12245 || 12272 <= i && i <= 12283 || 12289 <= i && i <= 12350 || 12353 <= i && i <= 12438 || 12441 <= i && i <= 12543 || 12549 <= i && i <=
    12589 || 12593 <= i && i <= 12686 || 12688 <= i && i <= 12730 || 12736 <= i && i <= 12771 || 12784 <= i && i <= 12830 || 12832 <= i && i <=
    12871 || 12880 <= i && i <= 13054 || 13056 <= i && i <= 19903 || 19968 <= i && i <= 42124 || 42128 <= i && i <= 42182 || 43360 <= i && i <=
    43388 || 44032 <= i && i <= 55203 || 55216 <= i && i <= 55238 || 55243 <= i && i <= 55291 || 63744 <= i && i <= 64255 || 65040 <= i && i <=
    65049 || 65072 <= i && i <= 65106 || 65108 <= i && i <= 65126 || 65128 <= i && i <= 65131 || 110592 <= i && i <= 110593 || 127488 <= i &&
    i <= 127490 || 127504 <= i && i <= 127546 || 127552 <= i && i <= 127560 || 127568 <= i && i <= 127569 || 131072 <= i && i <= 194367 || 177984 <=
    i && i <= 196605 || 196608 <= i && i <= 262141 ? "W" : 32 <= i && i <= 126 || 162 <= i && i <= 163 || 165 <= i && i <= 166 || i == 172 ||
    i == 175 || 10214 <= i && i <= 10221 || 10629 <= i && i <= 10630 ? "Na" : i == 161 || i == 164 || 167 <= i && i <= 168 || i == 170 || 173 <=
    i && i <= 174 || 176 <= i && i <= 180 || 182 <= i && i <= 186 || 188 <= i && i <= 191 || i == 198 || i == 208 || 215 <= i && i <= 216 ||
    222 <= i && i <= 225 || i == 230 || 232 <= i && i <= 234 || 236 <= i && i <= 237 || i == 240 || 242 <= i && i <= 243 || 247 <= i && i <=
    250 || i == 252 || i == 254 || i == 257 || i == 273 || i == 275 || i == 283 || 294 <= i && i <= 295 || i == 299 || 305 <= i && i <= 307 ||
    i == 312 || 319 <= i && i <= 322 || i == 324 || 328 <= i && i <= 331 || i == 333 || 338 <= i && i <= 339 || 358 <= i && i <= 359 || i ==
    363 || i == 462 || i == 464 || i == 466 || i == 468 || i == 470 || i == 472 || i == 474 || i == 476 || i == 593 || i == 609 || i == 708 ||
    i == 711 || 713 <= i && i <= 715 || i == 717 || i == 720 || 728 <= i && i <= 731 || i == 733 || i == 735 || 768 <= i && i <= 879 || 913 <=
    i && i <= 929 || 931 <= i && i <= 937 || 945 <= i && i <= 961 || 963 <= i && i <= 969 || i == 1025 || 1040 <= i && i <= 1103 || i == 1105 ||
    i == 8208 || 8211 <= i && i <= 8214 || 8216 <= i && i <= 8217 || 8220 <= i && i <= 8221 || 8224 <= i && i <= 8226 || 8228 <= i && i <= 8231 ||
    i == 8240 || 8242 <= i && i <= 8243 || i == 8245 || i == 8251 || i == 8254 || i == 8308 || i == 8319 || 8321 <= i && i <= 8324 || i == 8364 ||
    i == 8451 || i == 8453 || i == 8457 || i == 8467 || i == 8470 || 8481 <= i && i <= 8482 || i == 8486 || i == 8491 || 8531 <= i && i <= 8532 ||
    8539 <= i && i <= 8542 || 8544 <= i && i <= 8555 || 8560 <= i && i <= 8569 || i == 8585 || 8592 <= i && i <= 8601 || 8632 <= i && i <= 8633 ||
    i == 8658 || i == 8660 || i == 8679 || i == 8704 || 8706 <= i && i <= 8707 || 8711 <= i && i <= 8712 || i == 8715 || i == 8719 || i == 8721 ||
    i == 8725 || i == 8730 || 8733 <= i && i <= 8736 || i == 8739 || i == 8741 || 8743 <= i && i <= 8748 || i == 8750 || 8756 <= i && i <= 8759 ||
    8764 <= i && i <= 8765 || i == 8776 || i == 8780 || i == 8786 || 8800 <= i && i <= 8801 || 8804 <= i && i <= 8807 || 8810 <= i && i <= 8811 ||
    8814 <= i && i <= 8815 || 8834 <= i && i <= 8835 || 8838 <= i && i <= 8839 || i == 8853 || i == 8857 || i == 8869 || i == 8895 || i == 8978 ||
    9312 <= i && i <= 9449 || 9451 <= i && i <= 9547 || 9552 <= i && i <= 9587 || 9600 <= i && i <= 9615 || 9618 <= i && i <= 9621 || 9632 <=
    i && i <= 9633 || 9635 <= i && i <= 9641 || 9650 <= i && i <= 9651 || 9654 <= i && i <= 9655 || 9660 <= i && i <= 9661 || 9664 <= i && i <=
    9665 || 9670 <= i && i <= 9672 || i == 9675 || 9678 <= i && i <= 9681 || 9698 <= i && i <= 9701 || i == 9711 || 9733 <= i && i <= 9734 ||
    i == 9737 || 9742 <= i && i <= 9743 || 9748 <= i && i <= 9749 || i == 9756 || i == 9758 || i == 9792 || i == 9794 || 9824 <= i && i <= 9825 ||
    9827 <= i && i <= 9829 || 9831 <= i && i <= 9834 || 9836 <= i && i <= 9837 || i == 9839 || 9886 <= i && i <= 9887 || 9918 <= i && i <= 9919 ||
    9924 <= i && i <= 9933 || 9935 <= i && i <= 9953 || i == 9955 || 9960 <= i && i <= 9983 || i == 10045 || i == 10071 || 10102 <= i && i <=
    10111 || 11093 <= i && i <= 11097 || 12872 <= i && i <= 12879 || 57344 <= i && i <= 63743 || 65024 <= i && i <= 65039 || i == 65533 || 127232 <=
    i && i <= 127242 || 127248 <= i && i <= 127277 || 127280 <= i && i <= 127337 || 127344 <= i && i <= 127386 || 917760 <= i && i <= 917999 ||
    983040 <= i && i <= 1048573 || 1048576 <= i && i <= 1114109 ? "A" : "N";
  };
  ki.characterLength = function(e) {
    var t = this.eastAsianWidth(e);
    return t == "F" || t == "W" || t == "A" ? 2 : 1;
  };
  function m3(e) {
    return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
  }
  s(m3, "stringToArray");
  ki.length = function(e) {
    for (var t = m3(e), r = 0, i = 0; i < t.length; i++)
      r = r + this.characterLength(t[i]);
    return r;
  };
  ki.slice = function(e, t, r) {
    textLen = ki.length(e), t = t || 0, r = r || 1, t < 0 && (t = textLen + t), r < 0 && (r = textLen + r);
    for (var i = "", n = 0, o = m3(e), a = 0; a < o.length; a++) {
      var u = o[a], l = ki.length(u);
      if (n >= t - (l == 2 ? 1 : 0))
        if (n + l <= r)
          i += u;
        else
          break;
      n += l;
    }
    return i;
  };
});

// ../node_modules/emoji-regex/index.js
var Am = P((_ue, g3) => {
  "use strict";
  g3.exports = function() {
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
  };
});

// ../node_modules/cli-boxes/boxes.json
var T3 = P((Que, MJ) => {
  MJ.exports = {
    single: {
      topLeft: "\u250C",
      top: "\u2500",
      topRight: "\u2510",
      right: "\u2502",
      bottomRight: "\u2518",
      bottom: "\u2500",
      bottomLeft: "\u2514",
      left: "\u2502"
    },
    double: {
      topLeft: "\u2554",
      top: "\u2550",
      topRight: "\u2557",
      right: "\u2551",
      bottomRight: "\u255D",
      bottom: "\u2550",
      bottomLeft: "\u255A",
      left: "\u2551"
    },
    round: {
      topLeft: "\u256D",
      top: "\u2500",
      topRight: "\u256E",
      right: "\u2502",
      bottomRight: "\u256F",
      bottom: "\u2500",
      bottomLeft: "\u2570",
      left: "\u2502"
    },
    bold: {
      topLeft: "\u250F",
      top: "\u2501",
      topRight: "\u2513",
      right: "\u2503",
      bottomRight: "\u251B",
      bottom: "\u2501",
      bottomLeft: "\u2517",
      left: "\u2503"
    },
    singleDouble: {
      topLeft: "\u2553",
      top: "\u2500",
      topRight: "\u2556",
      right: "\u2551",
      bottomRight: "\u255C",
      bottom: "\u2500",
      bottomLeft: "\u2559",
      left: "\u2551"
    },
    doubleSingle: {
      topLeft: "\u2552",
      top: "\u2550",
      topRight: "\u2555",
      right: "\u2502",
      bottomRight: "\u255B",
      bottom: "\u2550",
      bottomLeft: "\u2558",
      left: "\u2502"
    },
    classic: {
      topLeft: "+",
      top: "-",
      topRight: "+",
      right: "|",
      bottomRight: "+",
      bottom: "-",
      bottomLeft: "+",
      left: "|"
    },
    arrow: {
      topLeft: "\u2198",
      top: "\u2193",
      topRight: "\u2199",
      right: "\u2190",
      bottomRight: "\u2196",
      bottom: "\u2191",
      bottomLeft: "\u2197",
      left: "\u2192"
    }
  };
});

// ../node_modules/cli-boxes/index.js
var Bm = P((Zue, Tm) => {
  "use strict";
  var B3 = T3();
  Tm.exports = B3;
  Tm.exports.default = B3;
});

// ../node_modules/string-width/node_modules/ansi-regex/index.js
var L3 = P((rle, N3) => {
  "use strict";
  N3.exports = ({ onlyFirst: e = !1 } = {}) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
    ].join("|");
    return new RegExp(t, e ? void 0 : "g");
  };
});

// ../node_modules/string-width/node_modules/strip-ansi/index.js
var j3 = P((ile, M3) => {
  "use strict";
  var zJ = L3();
  M3.exports = (e) => typeof e == "string" ? e.replace(zJ(), "") : e;
});

// ../node_modules/is-fullwidth-code-point/index.js
var $3 = P((nle, Om) => {
  "use strict";
  var q3 = /* @__PURE__ */ s((e) => Number.isNaN(e) ? !1 : e >= 4352 && (e <= 4447 || // Hangul Jamo
  e === 9001 || // LEFT-POINTING ANGLE BRACKET
  e === 9002 || // RIGHT-POINTING ANGLE BRACKET
  // CJK Radicals Supplement .. Enclosed CJK Letters and Months
  11904 <= e && e <= 12871 && e !== 12351 || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
  12880 <= e && e <= 19903 || // CJK Unified Ideographs .. Yi Radicals
  19968 <= e && e <= 42182 || // Hangul Jamo Extended-A
  43360 <= e && e <= 43388 || // Hangul Syllables
  44032 <= e && e <= 55203 || // CJK Compatibility Ideographs
  63744 <= e && e <= 64255 || // Vertical Forms
  65040 <= e && e <= 65049 || // CJK Compatibility Forms .. Small Form Variants
  65072 <= e && e <= 65131 || // Halfwidth and Fullwidth Forms
  65281 <= e && e <= 65376 || 65504 <= e && e <= 65510 || // Kana Supplement
  110592 <= e && e <= 110593 || // Enclosed Ideographic Supplement
  127488 <= e && e <= 127569 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
  131072 <= e && e <= 262141), "isFullwidthCodePoint");
  Om.exports = q3;
  Om.exports.default = q3;
});

// ../node_modules/string-width/node_modules/emoji-regex/index.js
var U3 = P((ole, V3) => {
  "use strict";
  V3.exports = function() {
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
  };
});

// ../node_modules/string-width/index.js
var Nm = P((ale, Rm) => {
  "use strict";
  var HJ = j3(), JJ = $3(), GJ = U3(), W3 = /* @__PURE__ */ s((e) => {
    if (typeof e != "string" || e.length === 0 || (e = HJ(e), e.length === 0))
      return 0;
    e = e.replace(GJ(), "  ");
    let t = 0;
    for (let r = 0; r < e.length; r++) {
      let i = e.codePointAt(r);
      i <= 31 || i >= 127 && i <= 159 || i >= 768 && i <= 879 || (i > 65535 && r++, t += JJ(i) ? 2 : 1);
    }
    return t;
  }, "stringWidth");
  Rm.exports = W3;
  Rm.exports.default = W3;
});

// ../node_modules/ansi-align/index.js
var H3 = P((lle, z3) => {
  "use strict";
  var XJ = Nm();
  function Yi(e, t) {
    if (!e) return e;
    t = t || {};
    let r = t.align || "center";
    if (r === "left") return e;
    let i = t.split || `
`, n = t.pad || " ", o = r !== "right" ? KJ : YJ, a = !1;
    Array.isArray(e) || (a = !0, e = String(e).split(i));
    let u, l = 0;
    return e = e.map(function(c) {
      return c = String(c), u = XJ(c), l = Math.max(u, l), {
        str: c,
        width: u
      };
    }).map(function(c) {
      return new Array(o(l, c.width) + 1).join(n) + c.str;
    }), a ? e.join(i) : e;
  }
  s(Yi, "ansiAlign");
  Yi.left = /* @__PURE__ */ s(function(t) {
    return Yi(t, { align: "left" });
  }, "left");
  Yi.center = /* @__PURE__ */ s(function(t) {
    return Yi(t, { align: "center" });
  }, "center");
  Yi.right = /* @__PURE__ */ s(function(t) {
    return Yi(t, { align: "right" });
  }, "right");
  z3.exports = Yi;
  function KJ(e, t) {
    return Math.floor((e - t) / 2);
  }
  s(KJ, "halfDiff");
  function YJ(e, t) {
    return e - t;
  }
  s(YJ, "fullDiff");
});

// ../node_modules/cli-table3/src/debug.js
var Ju = P((Ble, l_) => {
  var Um = [], u_ = 0, gt = /* @__PURE__ */ s((e, t) => {
    u_ >= t && Um.push(e);
  }, "debug");
  gt.WARN = 1;
  gt.INFO = 2;
  gt.DEBUG = 3;
  gt.reset = () => {
    Um = [];
  };
  gt.setDebugLevel = (e) => {
    u_ = e;
  };
  gt.warn = (e) => gt(e, gt.WARN);
  gt.info = (e) => gt(e, gt.INFO);
  gt.debug = (e) => gt(e, gt.DEBUG);
  gt.debugMessages = () => Um;
  l_.exports = gt;
});

// ../node_modules/cli-table3/src/utils.js
var Wm = P((Ple, f_) => {
  var c_ = Nm();
  function Gu(e) {
    return e ? /\u001b\[((?:\d*;){0,5}\d*)m/g : /\u001b\[(?:\d*;){0,5}\d*m/g;
  }
  s(Gu, "codeRegex");
  function Mr(e) {
    let t = Gu();
    return ("" + e).replace(t, "").split(`
`).reduce(function(n, o) {
      return c_(o) > n ? c_(o) : n;
    }, 0);
  }
  s(Mr, "strlen");
  function Do(e, t) {
    return Array(t + 1).join(e);
  }
  s(Do, "repeat");
  function gG(e, t, r, i) {
    let n = Mr(e);
    if (t + 1 >= n) {
      let o = t - n;
      switch (i) {
        case "right": {
          e = Do(r, o) + e;
          break;
        }
        case "center": {
          let a = Math.ceil(o / 2), u = o - a;
          e = Do(r, u) + e + Do(r, a);
          break;
        }
        default: {
          e = e + Do(r, o);
          break;
        }
      }
    }
    return e;
  }
  s(gG, "pad");
  var rs = {};
  function yo(e, t, r) {
    t = "\x1B[" + t + "m", r = "\x1B[" + r + "m", rs[t] = { set: e, to: !0 }, rs[r] = { set: e, to: !1 }, rs[e] = { on: t, off: r };
  }
  s(yo, "addToCodeCache");
  yo("bold", 1, 22);
  yo("italics", 3, 23);
  yo("underline", 4, 24);
  yo("inverse", 7, 27);
  yo("strikethrough", 9, 29);
  function p_(e, t) {
    let r = t[1] ? parseInt(t[1].split(";")[0]) : 0;
    if (r >= 30 && r <= 39 || r >= 90 && r <= 97) {
      e.lastForegroundAdded = t[0];
      return;
    }
    if (r >= 40 && r <= 49 || r >= 100 && r <= 107) {
      e.lastBackgroundAdded = t[0];
      return;
    }
    if (r === 0) {
      for (let n in e)
        Object.prototype.hasOwnProperty.call(e, n) && delete e[n];
      return;
    }
    let i = rs[t[0]];
    i && (e[i.set] = i.to);
  }
  s(p_, "updateState");
  function DG(e) {
    let t = Gu(!0), r = t.exec(e), i = {};
    for (; r !== null; )
      p_(i, r), r = t.exec(e);
    return i;
  }
  s(DG, "readState");
  function h_(e, t) {
    let r = e.lastBackgroundAdded, i = e.lastForegroundAdded;
    return delete e.lastBackgroundAdded, delete e.lastForegroundAdded, Object.keys(e).forEach(function(n) {
      e[n] && (t += rs[n].off);
    }), r && r != "\x1B[49m" && (t += "\x1B[49m"), i && i != "\x1B[39m" && (t += "\x1B[39m"), t;
  }
  s(h_, "unwindState");
  function yG(e, t) {
    let r = e.lastBackgroundAdded, i = e.lastForegroundAdded;
    return delete e.lastBackgroundAdded, delete e.lastForegroundAdded, Object.keys(e).forEach(function(n) {
      e[n] && (t = rs[n].on + t);
    }), r && r != "\x1B[49m" && (t = r + t), i && i != "\x1B[39m" && (t = i + t), t;
  }
  s(yG, "rewindState");
  function xG(e, t) {
    if (e.length === Mr(e))
      return e.substr(0, t);
    for (; Mr(e) > t; )
      e = e.slice(0, -1);
    return e;
  }
  s(xG, "truncateWidth");
  function EG(e, t) {
    let r = Gu(!0), i = e.split(Gu()), n = 0, o = 0, a = "", u, l = {};
    for (; o < t; ) {
      u = r.exec(e);
      let c = i[n];
      if (n++, o + Mr(c) > t && (c = xG(c, t - o)), a += c, o += Mr(c), o < t) {
        if (!u)
          break;
        a += u[0], p_(l, u);
      }
    }
    return h_(l, a);
  }
  s(EG, "truncateWidthWithAnsi");
  function bG(e, t, r) {
    if (r = r || "\u2026", Mr(e) <= t)
      return e;
    t -= Mr(r);
    let n = EG(e, t);
    n += r;
    let o = "\x1B]8;;\x07";
    return e.includes(o) && !n.includes(o) && (n += o), n;
  }
  s(bG, "truncate");
  function vG() {
    return {
      chars: {
        top: "\u2500",
        "top-mid": "\u252C",
        "top-left": "\u250C",
        "top-right": "\u2510",
        bottom: "\u2500",
        "bottom-mid": "\u2534",
        "bottom-left": "\u2514",
        "bottom-right": "\u2518",
        left: "\u2502",
        "left-mid": "\u251C",
        mid: "\u2500",
        "mid-mid": "\u253C",
        right: "\u2502",
        "right-mid": "\u2524",
        middle: "\u2502"
      },
      truncate: "\u2026",
      colWidths: [],
      rowHeights: [],
      colAligns: [],
      rowAligns: [],
      style: {
        "padding-left": 1,
        "padding-right": 1,
        head: ["red"],
        border: ["grey"],
        compact: !1
      },
      head: []
    };
  }
  s(vG, "defaultOptions");
  function CG(e, t) {
    e = e || {}, t = t || vG();
    let r = Object.assign({}, t, e);
    return r.chars = Object.assign({}, t.chars, e.chars), r.style = Object.assign({}, t.style, e.style), r;
  }
  s(CG, "mergeOptions");
  function wG(e, t) {
    let r = [], i = t.split(/(\s+)/g), n = [], o = 0, a;
    for (let u = 0; u < i.length; u += 2) {
      let l = i[u], c = o + Mr(l);
      o > 0 && a && (c += a.length), c > e ? (o !== 0 && r.push(n.join("")), n = [l], o = Mr(l)) : (n.push(a || "", l), o = c), a = i[u + 1];
    }
    return o && r.push(n.join("")), r;
  }
  s(wG, "wordWrap");
  function AG(e, t) {
    let r = [], i = "";
    function n(a, u) {
      for (i.length && u && (i += u), i += a; i.length > e; )
        r.push(i.slice(0, e)), i = i.slice(e);
    }
    s(n, "pushLine");
    let o = t.split(/(\s+)/g);
    for (let a = 0; a < o.length; a += 2)
      n(o[a], a && o[a - 1]);
    return i.length && r.push(i), r;
  }
  s(AG, "textWrap");
  function SG(e, t, r = !0) {
    let i = [];
    t = t.split(`
`);
    let n = r ? wG : AG;
    for (let o = 0; o < t.length; o++)
      i.push.apply(i, n(e, t[o]));
    return i;
  }
  s(SG, "multiLineWordWrap");
  function FG(e) {
    let t = {}, r = [];
    for (let i = 0; i < e.length; i++) {
      let n = yG(t, e[i]);
      t = DG(n);
      let o = Object.assign({}, t);
      r.push(h_(o, n));
    }
    return r;
  }
  s(FG, "colorizeLines");
  function _G(e, t) {
    let r = "\x1B]", i = "\x07", n = ";";
    return [r, "8", n, n, e || t, i, t, r, "8", n, n, i].join("");
  }
  s(_G, "hyperlink");
  f_.exports = {
    strlen: Mr,
    repeat: Do,
    pad: gG,
    truncate: bG,
    mergeOptions: CG,
    wordWrap: SG,
    colorizeLines: FG,
    hyperlink: _G
  };
});

// ../node_modules/@colors/colors/lib/styles.js
var D_ = P((Rle, g_) => {
  var m_ = {};
  g_.exports = m_;
  var d_ = {
    reset: [0, 0],
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29],
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    gray: [90, 39],
    grey: [90, 39],
    brightRed: [91, 39],
    brightGreen: [92, 39],
    brightYellow: [93, 39],
    brightBlue: [94, 39],
    brightMagenta: [95, 39],
    brightCyan: [96, 39],
    brightWhite: [97, 39],
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    bgGray: [100, 49],
    bgGrey: [100, 49],
    bgBrightRed: [101, 49],
    bgBrightGreen: [102, 49],
    bgBrightYellow: [103, 49],
    bgBrightBlue: [104, 49],
    bgBrightMagenta: [105, 49],
    bgBrightCyan: [106, 49],
    bgBrightWhite: [107, 49],
    // legacy styles for colors pre v1.0.0
    blackBG: [40, 49],
    redBG: [41, 49],
    greenBG: [42, 49],
    yellowBG: [43, 49],
    blueBG: [44, 49],
    magentaBG: [45, 49],
    cyanBG: [46, 49],
    whiteBG: [47, 49]
  };
  Object.keys(d_).forEach(function(e) {
    var t = d_[e], r = m_[e] = [];
    r.open = "\x1B[" + t[0] + "m", r.close = "\x1B[" + t[1] + "m";
  });
});

// ../node_modules/@colors/colors/lib/system/has-flag.js
var x_ = P((Nle, y_) => {
  "use strict";
  y_.exports = function(e, t) {
    t = t || process.argv;
    var r = t.indexOf("--"), i = /^-{1,2}/.test(e) ? "" : "--", n = t.indexOf(i + e);
    return n !== -1 && (r === -1 ? !0 : n < r);
  };
});

// ../node_modules/@colors/colors/lib/system/supports-colors.js
var b_ = P((Lle, E_) => {
  "use strict";
  var kG = H("os"), Er = x_(), At = process.env, is = void 0;
  Er("no-color") || Er("no-colors") || Er("color=false") ? is = !1 : (Er("color") || Er("colors") || Er("color=true") || Er("color=always")) &&
  (is = !0);
  "FORCE_COLOR" in At && (is = At.FORCE_COLOR.length === 0 || parseInt(At.FORCE_COLOR, 10) !== 0);
  function TG(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  s(TG, "translateLevel");
  function BG(e) {
    if (is === !1)
      return 0;
    if (Er("color=16m") || Er("color=full") || Er("color=truecolor"))
      return 3;
    if (Er("color=256"))
      return 2;
    if (e && !e.isTTY && is !== !0)
      return 0;
    var t = is ? 1 : 0;
    if (process.platform === "win32") {
      var r = kG.release().split(".");
      return Number(process.versions.node.split(".")[0]) >= 8 && Number(r[0]) >= 10 && Number(r[2]) >= 10586 ? Number(r[2]) >= 14931 ? 3 : 2 :
      1;
    }
    if ("CI" in At)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some(function(n) {
        return n in At;
      }) || At.CI_NAME === "codeship" ? 1 : t;
    if ("TEAMCITY_VERSION" in At)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(At.TEAMCITY_VERSION) ? 1 : 0;
    if ("TERM_PROGRAM" in At) {
      var i = parseInt((At.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (At.TERM_PROGRAM) {
        case "iTerm.app":
          return i >= 3 ? 3 : 2;
        case "Hyper":
          return 3;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(At.TERM) ? 2 : /^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(At.TERM) || "COLORTERM" in At ? 1 :
    (At.TERM === "dumb", t);
  }
  s(BG, "supportsColor");
  function zm(e) {
    var t = BG(e);
    return TG(t);
  }
  s(zm, "getSupportLevel");
  E_.exports = {
    supportsColor: zm,
    stdout: zm(process.stdout),
    stderr: zm(process.stderr)
  };
});

// ../node_modules/@colors/colors/lib/custom/trap.js
var C_ = P((jle, v_) => {
  v_.exports = /* @__PURE__ */ s(function(t, r) {
    var i = "";
    t = t || "Run the trap, drop the bass", t = t.split("");
    var n = {
      a: ["@", "\u0104", "\u023A", "\u0245", "\u0394", "\u039B", "\u0414"],
      b: ["\xDF", "\u0181", "\u0243", "\u026E", "\u03B2", "\u0E3F"],
      c: ["\xA9", "\u023B", "\u03FE"],
      d: ["\xD0", "\u018A", "\u0500", "\u0501", "\u0502", "\u0503"],
      e: [
        "\xCB",
        "\u0115",
        "\u018E",
        "\u0258",
        "\u03A3",
        "\u03BE",
        "\u04BC",
        "\u0A6C"
      ],
      f: ["\u04FA"],
      g: ["\u0262"],
      h: ["\u0126", "\u0195", "\u04A2", "\u04BA", "\u04C7", "\u050A"],
      i: ["\u0F0F"],
      j: ["\u0134"],
      k: ["\u0138", "\u04A0", "\u04C3", "\u051E"],
      l: ["\u0139"],
      m: ["\u028D", "\u04CD", "\u04CE", "\u0520", "\u0521", "\u0D69"],
      n: ["\xD1", "\u014B", "\u019D", "\u0376", "\u03A0", "\u048A"],
      o: [
        "\xD8",
        "\xF5",
        "\xF8",
        "\u01FE",
        "\u0298",
        "\u047A",
        "\u05DD",
        "\u06DD",
        "\u0E4F"
      ],
      p: ["\u01F7", "\u048E"],
      q: ["\u09CD"],
      r: ["\xAE", "\u01A6", "\u0210", "\u024C", "\u0280", "\u042F"],
      s: ["\xA7", "\u03DE", "\u03DF", "\u03E8"],
      t: ["\u0141", "\u0166", "\u0373"],
      u: ["\u01B1", "\u054D"],
      v: ["\u05D8"],
      w: ["\u0428", "\u0460", "\u047C", "\u0D70"],
      x: ["\u04B2", "\u04FE", "\u04FC", "\u04FD"],
      y: ["\xA5", "\u04B0", "\u04CB"],
      z: ["\u01B5", "\u0240"]
    };
    return t.forEach(function(o) {
      o = o.toLowerCase();
      var a = n[o] || [" "], u = Math.floor(Math.random() * a.length);
      typeof n[o] < "u" ? i += n[o][u] : i += o;
    }), i;
  }, "runTheTrap");
});

// ../node_modules/@colors/colors/lib/custom/zalgo.js
var A_ = P(($le, w_) => {
  w_.exports = /* @__PURE__ */ s(function(t, r) {
    t = t || "   he is here   ";
    var i = {
      up: [
        "\u030D",
        "\u030E",
        "\u0304",
        "\u0305",
        "\u033F",
        "\u0311",
        "\u0306",
        "\u0310",
        "\u0352",
        "\u0357",
        "\u0351",
        "\u0307",
        "\u0308",
        "\u030A",
        "\u0342",
        "\u0313",
        "\u0308",
        "\u034A",
        "\u034B",
        "\u034C",
        "\u0303",
        "\u0302",
        "\u030C",
        "\u0350",
        "\u0300",
        "\u0301",
        "\u030B",
        "\u030F",
        "\u0312",
        "\u0313",
        "\u0314",
        "\u033D",
        "\u0309",
        "\u0363",
        "\u0364",
        "\u0365",
        "\u0366",
        "\u0367",
        "\u0368",
        "\u0369",
        "\u036A",
        "\u036B",
        "\u036C",
        "\u036D",
        "\u036E",
        "\u036F",
        "\u033E",
        "\u035B",
        "\u0346",
        "\u031A"
      ],
      down: [
        "\u0316",
        "\u0317",
        "\u0318",
        "\u0319",
        "\u031C",
        "\u031D",
        "\u031E",
        "\u031F",
        "\u0320",
        "\u0324",
        "\u0325",
        "\u0326",
        "\u0329",
        "\u032A",
        "\u032B",
        "\u032C",
        "\u032D",
        "\u032E",
        "\u032F",
        "\u0330",
        "\u0331",
        "\u0332",
        "\u0333",
        "\u0339",
        "\u033A",
        "\u033B",
        "\u033C",
        "\u0345",
        "\u0347",
        "\u0348",
        "\u0349",
        "\u034D",
        "\u034E",
        "\u0353",
        "\u0354",
        "\u0355",
        "\u0356",
        "\u0359",
        "\u035A",
        "\u0323"
      ],
      mid: [
        "\u0315",
        "\u031B",
        "\u0300",
        "\u0301",
        "\u0358",
        "\u0321",
        "\u0322",
        "\u0327",
        "\u0328",
        "\u0334",
        "\u0335",
        "\u0336",
        "\u035C",
        "\u035D",
        "\u035E",
        "\u035F",
        "\u0360",
        "\u0362",
        "\u0338",
        "\u0337",
        "\u0361",
        " \u0489"
      ]
    }, n = [].concat(i.up, i.down, i.mid);
    function o(l) {
      var c = Math.floor(Math.random() * l);
      return c;
    }
    s(o, "randomNumber");
    function a(l) {
      var c = !1;
      return n.filter(function(p) {
        c = p === l;
      }), c;
    }
    s(a, "isChar");
    function u(l, c) {
      var p = "", h, f;
      c = c || {}, c.up = typeof c.up < "u" ? c.up : !0, c.mid = typeof c.mid < "u" ? c.mid : !0, c.down = typeof c.down < "u" ? c.down : !0,
      c.size = typeof c.size < "u" ? c.size : "maxi", l = l.split("");
      for (f in l)
        if (!a(f)) {
          switch (p = p + l[f], h = { up: 0, down: 0, mid: 0 }, c.size) {
            case "mini":
              h.up = o(8), h.mid = o(2), h.down = o(8);
              break;
            case "maxi":
              h.up = o(16) + 3, h.mid = o(4) + 1, h.down = o(64) + 3;
              break;
            default:
              h.up = o(8) + 1, h.mid = o(6) / 2, h.down = o(8) + 1;
              break;
          }
          var d = ["up", "mid", "down"];
          for (var m in d)
            for (var g = d[m], b = 0; b <= h[g]; b++)
              c[g] && (p = p + i[g][o(i[g].length)]);
        }
      return p;
    }
    return s(u, "heComes"), u(t, r);
  }, "zalgo");
});

// ../node_modules/@colors/colors/lib/maps/america.js
var F_ = P((Ule, S_) => {
  S_.exports = function(e) {
    return function(t, r, i) {
      if (t === " ") return t;
      switch (r % 3) {
        case 0:
          return e.red(t);
        case 1:
          return e.white(t);
        case 2:
          return e.blue(t);
      }
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/zebra.js
var k_ = P((Wle, __) => {
  __.exports = function(e) {
    return function(t, r, i) {
      return r % 2 === 0 ? t : e.inverse(t);
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/rainbow.js
var B_ = P((zle, T_) => {
  T_.exports = function(e) {
    var t = ["red", "yellow", "green", "blue", "magenta"];
    return function(r, i, n) {
      return r === " " ? r : e[t[i++ % t.length]](r);
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/random.js
var P_ = P((Hle, I_) => {
  I_.exports = function(e) {
    var t = [
      "underline",
      "inverse",
      "grey",
      "yellow",
      "red",
      "green",
      "blue",
      "white",
      "cyan",
      "magenta",
      "brightYellow",
      "brightRed",
      "brightGreen",
      "brightBlue",
      "brightWhite",
      "brightCyan",
      "brightMagenta"
    ];
    return function(r, i, n) {
      return r === " " ? r : e[t[Math.round(Math.random() * (t.length - 2))]](r);
    };
  };
});

// ../node_modules/@colors/colors/lib/colors.js
var j_ = P((Gle, M_) => {
  var Ce = {};
  M_.exports = Ce;
  Ce.themes = {};
  var IG = H("util"), Zi = Ce.styles = D_(), R_ = Object.defineProperties, PG = new RegExp(/[\r\n]+/g);
  Ce.supportsColor = b_().supportsColor;
  typeof Ce.enabled > "u" && (Ce.enabled = Ce.supportsColor() !== !1);
  Ce.enable = function() {
    Ce.enabled = !0;
  };
  Ce.disable = function() {
    Ce.enabled = !1;
  };
  Ce.stripColors = Ce.strip = function(e) {
    return ("" + e).replace(/\x1B\[\d+m/g, "");
  };
  var Jle = Ce.stylize = /* @__PURE__ */ s(function(t, r) {
    if (!Ce.enabled)
      return t + "";
    var i = Zi[r];
    return !i && r in Ce ? Ce[r](t) : i.open + t + i.close;
  }, "stylize"), OG = /[|\\{}()[\]^$+*?.]/g, RG = /* @__PURE__ */ s(function(e) {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    return e.replace(OG, "\\$&");
  }, "escapeStringRegexp");
  function N_(e) {
    var t = /* @__PURE__ */ s(function r() {
      return LG.apply(r, arguments);
    }, "builder");
    return t._styles = e, t.__proto__ = NG, t;
  }
  s(N_, "build");
  var L_ = function() {
    var e = {};
    return Zi.grey = Zi.gray, Object.keys(Zi).forEach(function(t) {
      Zi[t].closeRe = new RegExp(RG(Zi[t].close), "g"), e[t] = {
        get: /* @__PURE__ */ s(function() {
          return N_(this._styles.concat(t));
        }, "get")
      };
    }), e;
  }(), NG = R_(/* @__PURE__ */ s(function() {
  }, "colors"), L_);
  function LG() {
    var e = Array.prototype.slice.call(arguments), t = e.map(function(a) {
      return a != null && a.constructor === String ? a : IG.inspect(a);
    }).join(" ");
    if (!Ce.enabled || !t)
      return t;
    for (var r = t.indexOf(`
`) != -1, i = this._styles, n = i.length; n--; ) {
      var o = Zi[i[n]];
      t = o.open + t.replace(o.closeRe, o.open) + o.close, r && (t = t.replace(PG, function(a) {
        return o.close + a + o.open;
      }));
    }
    return t;
  }
  s(LG, "applyStyle");
  Ce.setTheme = function(e) {
    if (typeof e == "string") {
      console.log("colors.setTheme now only accepts an object, not a string.  If you are trying to set a theme from a file, it is now your (\
the caller's) responsibility to require the file.  The old syntax looked like colors.setTheme(__dirname + '/../themes/generic-logging.js'); \
The new syntax looks like colors.setTheme(require(__dirname + '/../themes/generic-logging.js'));");
      return;
    }
    for (var t in e)
      (function(r) {
        Ce[r] = function(i) {
          if (typeof e[r] == "object") {
            var n = i;
            for (var o in e[r])
              n = Ce[e[r][o]](n);
            return n;
          }
          return Ce[e[r]](i);
        };
      })(t);
  };
  function MG() {
    var e = {};
    return Object.keys(L_).forEach(function(t) {
      e[t] = {
        get: /* @__PURE__ */ s(function() {
          return N_([t]);
        }, "get")
      };
    }), e;
  }
  s(MG, "init");
  var jG = /* @__PURE__ */ s(function(t, r) {
    var i = r.split("");
    return i = i.map(t), i.join("");
  }, "sequencer");
  Ce.trap = C_();
  Ce.zalgo = A_();
  Ce.maps = {};
  Ce.maps.america = F_()(Ce);
  Ce.maps.zebra = k_()(Ce);
  Ce.maps.rainbow = B_()(Ce);
  Ce.maps.random = P_()(Ce);
  for (O_ in Ce.maps)
    (function(e) {
      Ce[e] = function(t) {
        return jG(Ce.maps[e], t);
      };
    })(O_);
  var O_;
  R_(Ce, MG());
});

// ../node_modules/@colors/colors/safe.js
var $_ = P((Kle, q_) => {
  var qG = j_();
  q_.exports = qG;
});

// ../node_modules/cli-table3/src/cell.js
var z_ = P((Yle, Xu) => {
  var { info: $G, debug: W_ } = Ju(), $t = Wm(), Jm = class e {
    static {
      s(this, "Cell");
    }
    /**
     * A representation of a cell within the table.
     * Implementations must have `init` and `draw` methods,
     * as well as `colSpan`, `rowSpan`, `desiredHeight` and `desiredWidth` properties.
     * @param options
     * @constructor
     */
    constructor(t) {
      this.setOptions(t), this.x = null, this.y = null;
    }
    setOptions(t) {
      ["boolean", "number", "bigint", "string"].indexOf(typeof t) !== -1 && (t = { content: "" + t }), t = t || {}, this.options = t;
      let r = t.content;
      if (["boolean", "number", "bigint", "string"].indexOf(typeof r) !== -1)
        this.content = String(r);
      else if (!r)
        this.content = this.options.href || "";
      else
        throw new Error("Content needs to be a primitive, got: " + typeof r);
      this.colSpan = t.colSpan || 1, this.rowSpan = t.rowSpan || 1, this.options.href && Object.defineProperty(this, "href", {
        get() {
          return this.options.href;
        }
      });
    }
    mergeTableOptions(t, r) {
      this.cells = r;
      let i = this.options.chars || {}, n = t.chars, o = this.chars = {};
      UG.forEach(function(l) {
        Hm(i, n, l, o);
      }), this.truncate = this.options.truncate || t.truncate;
      let a = this.options.style = this.options.style || {}, u = t.style;
      Hm(a, u, "padding-left", this), Hm(a, u, "padding-right", this), this.head = a.head || u.head, this.border = a.border || u.border, this.
      fixedWidth = t.colWidths[this.x], this.lines = this.computeLines(t), this.desiredWidth = $t.strlen(this.content) + this.paddingLeft + this.
      paddingRight, this.desiredHeight = this.lines.length;
    }
    computeLines(t) {
      let r = t.wordWrap || t.textWrap, { wordWrap: i = r } = this.options;
      if (this.fixedWidth && i) {
        if (this.fixedWidth -= this.paddingLeft + this.paddingRight, this.colSpan) {
          let a = 1;
          for (; a < this.colSpan; )
            this.fixedWidth += t.colWidths[this.x + a], a++;
        }
        let { wrapOnWordBoundary: n = !0 } = t, { wrapOnWordBoundary: o = n } = this.options;
        return this.wrapLines($t.wordWrap(this.fixedWidth, this.content, o));
      }
      return this.wrapLines(this.content.split(`
`));
    }
    wrapLines(t) {
      let r = $t.colorizeLines(t);
      return this.href ? r.map((i) => $t.hyperlink(this.href, i)) : r;
    }
    /**
     * Initializes the Cells data structure.
     *
     * @param tableOptions - A fully populated set of tableOptions.
     * In addition to the standard default values, tableOptions must have fully populated the
     * `colWidths` and `rowWidths` arrays. Those arrays must have lengths equal to the number
     * of columns or rows (respectively) in this table, and each array item must be a Number.
     *
     */
    init(t) {
      let r = this.x, i = this.y;
      this.widths = t.colWidths.slice(r, r + this.colSpan), this.heights = t.rowHeights.slice(i, i + this.rowSpan), this.width = this.widths.
      reduce(U_, -1), this.height = this.heights.reduce(U_, -1), this.hAlign = this.options.hAlign || t.colAligns[r], this.vAlign = this.options.
      vAlign || t.rowAligns[i], this.drawRight = r + this.colSpan == t.colWidths.length;
    }
    /**
     * Draws the given line of the cell.
     * This default implementation defers to methods `drawTop`, `drawBottom`, `drawLine` and `drawEmpty`.
     * @param lineNum - can be `top`, `bottom` or a numerical line number.
     * @param spanningCell - will be a number if being called from a RowSpanCell, and will represent how
     * many rows below it's being called from. Otherwise it's undefined.
     * @returns {String} The representation of this line.
     */
    draw(t, r) {
      if (t == "top") return this.drawTop(this.drawRight);
      if (t == "bottom") return this.drawBottom(this.drawRight);
      let i = $t.truncate(this.content, 10, this.truncate);
      t || $G(`${this.y}-${this.x}: ${this.rowSpan - t}x${this.colSpan} Cell ${i}`);
      let n = Math.max(this.height - this.lines.length, 0), o;
      switch (this.vAlign) {
        case "center":
          o = Math.ceil(n / 2);
          break;
        case "bottom":
          o = n;
          break;
        default:
          o = 0;
      }
      if (t < o || t >= o + this.lines.length)
        return this.drawEmpty(this.drawRight, r);
      let a = this.lines.length > this.height && t + 1 >= this.height;
      return this.drawLine(t - o, this.drawRight, a, r);
    }
    /**
     * Renders the top line of the cell.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @returns {String}
     */
    drawTop(t) {
      let r = [];
      return this.cells ? this.widths.forEach(function(i, n) {
        r.push(this._topLeftChar(n)), r.push($t.repeat(this.chars[this.y == 0 ? "top" : "mid"], i));
      }, this) : (r.push(this._topLeftChar(0)), r.push($t.repeat(this.chars[this.y == 0 ? "top" : "mid"], this.width))), t && r.push(this.chars[this.
      y == 0 ? "topRight" : "rightMid"]), this.wrapWithStyleColors("border", r.join(""));
    }
    _topLeftChar(t) {
      let r = this.x + t, i;
      if (this.y == 0)
        i = r == 0 ? "topLeft" : t == 0 ? "topMid" : "top";
      else if (r == 0)
        i = "leftMid";
      else if (i = t == 0 ? "midMid" : "bottomMid", this.cells && (this.cells[this.y - 1][r] instanceof e.ColSpanCell && (i = t == 0 ? "topM\
id" : "mid"), t == 0)) {
        let o = 1;
        for (; this.cells[this.y][r - o] instanceof e.ColSpanCell; )
          o++;
        this.cells[this.y][r - o] instanceof e.RowSpanCell && (i = "leftMid");
      }
      return this.chars[i];
    }
    wrapWithStyleColors(t, r) {
      if (this[t] && this[t].length)
        try {
          let i = $_();
          for (let n = this[t].length - 1; n >= 0; n--)
            i = i[this[t][n]];
          return i(r);
        } catch {
          return r;
        }
      else
        return r;
    }
    /**
     * Renders a line of text.
     * @param lineNum - Which line of text to render. This is not necessarily the line within the cell.
     * There may be top-padding above the first line of text.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @param forceTruncationSymbol - `true` if the rendered text should end with the truncation symbol even
     * if the text fits. This is used when the cell is vertically truncated. If `false` the text should
     * only include the truncation symbol if the text will not fit horizontally within the cell width.
     * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.
     * @returns {String}
     */
    drawLine(t, r, i, n) {
      let o = this.chars[this.x == 0 ? "left" : "middle"];
      if (this.x && n && this.cells) {
        let f = this.cells[this.y + n][this.x - 1];
        for (; f instanceof xo; )
          f = this.cells[f.y][f.x - 1];
        f instanceof Eo || (o = this.chars.rightMid);
      }
      let a = $t.repeat(" ", this.paddingLeft), u = r ? this.chars.right : "", l = $t.repeat(" ", this.paddingRight), c = this.lines[t], p = this.
      width - (this.paddingLeft + this.paddingRight);
      i && (c += this.truncate || "\u2026");
      let h = $t.truncate(c, p, this.truncate);
      return h = $t.pad(h, p, " ", this.hAlign), h = a + h + l, this.stylizeLine(o, h, u);
    }
    stylizeLine(t, r, i) {
      return t = this.wrapWithStyleColors("border", t), i = this.wrapWithStyleColors("border", i), this.y === 0 && (r = this.wrapWithStyleColors(
      "head", r)), t + r + i;
    }
    /**
     * Renders the bottom line of the cell.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @returns {String}
     */
    drawBottom(t) {
      let r = this.chars[this.x == 0 ? "bottomLeft" : "bottomMid"], i = $t.repeat(this.chars.bottom, this.width), n = t ? this.chars.bottomRight :
      "";
      return this.wrapWithStyleColors("border", r + i + n);
    }
    /**
     * Renders a blank line of text within the cell. Used for top and/or bottom padding.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.
     * @returns {String}
     */
    drawEmpty(t, r) {
      let i = this.chars[this.x == 0 ? "left" : "middle"];
      if (this.x && r && this.cells) {
        let a = this.cells[this.y + r][this.x - 1];
        for (; a instanceof xo; )
          a = this.cells[a.y][a.x - 1];
        a instanceof Eo || (i = this.chars.rightMid);
      }
      let n = t ? this.chars.right : "", o = $t.repeat(" ", this.width);
      return this.stylizeLine(i, o, n);
    }
  }, xo = class {
    static {
      s(this, "ColSpanCell");
    }
    /**
     * A Cell that doesn't do anything. It just draws empty lines.
     * Used as a placeholder in column spanning.
     * @constructor
     */
    constructor() {
    }
    draw(t) {
      return typeof t == "number" && W_(`${this.y}-${this.x}: 1x1 ColSpanCell`), "";
    }
    init() {
    }
    mergeTableOptions() {
    }
  }, Eo = class {
    static {
      s(this, "RowSpanCell");
    }
    /**
     * A placeholder Cell for a Cell that spans multiple rows.
     * It delegates rendering to the original cell, but adds the appropriate offset.
     * @param originalCell
     * @constructor
     */
    constructor(t) {
      this.originalCell = t;
    }
    init(t) {
      let r = this.y, i = this.originalCell.y;
      this.cellOffset = r - i, this.offset = VG(t.rowHeights, i, this.cellOffset);
    }
    draw(t) {
      return t == "top" ? this.originalCell.draw(this.offset, this.cellOffset) : t == "bottom" ? this.originalCell.draw("bottom") : (W_(`${this.
      y}-${this.x}: 1x${this.colSpan} RowSpanCell for ${this.originalCell.content}`), this.originalCell.draw(this.offset + 1 + t));
    }
    mergeTableOptions() {
    }
  };
  function V_(...e) {
    return e.filter((t) => t != null).shift();
  }
  s(V_, "firstDefined");
  function Hm(e, t, r, i) {
    let n = r.split("-");
    n.length > 1 ? (n[1] = n[1].charAt(0).toUpperCase() + n[1].substr(1), n = n.join(""), i[n] = V_(e[n], e[r], t[n], t[r])) : i[r] = V_(e[r],
    t[r]);
  }
  s(Hm, "setOption");
  function VG(e, t, r) {
    let i = e[t];
    for (let n = 1; n < r; n++)
      i += 1 + e[t + n];
    return i;
  }
  s(VG, "findDimension");
  function U_(e, t) {
    return e + t + 1;
  }
  s(U_, "sumPlusOne");
  var UG = [
    "top",
    "top-mid",
    "top-left",
    "top-right",
    "bottom",
    "bottom-mid",
    "bottom-left",
    "bottom-right",
    "left",
    "left-mid",
    "mid",
    "mid-mid",
    "right",
    "right-mid",
    "middle"
  ];
  Xu.exports = Jm;
  Xu.exports.ColSpanCell = xo;
  Xu.exports.RowSpanCell = Eo;
});

// ../node_modules/cli-table3/src/layout-manager.js
var G_ = P((Zle, J_) => {
  var { warn: WG, debug: zG } = Ju(), Gm = z_(), { ColSpanCell: HG, RowSpanCell: JG } = Gm;
  (function() {
    function e(d, m) {
      return d[m] > 0 ? e(d, m + 1) : m;
    }
    s(e, "next");
    function t(d) {
      let m = {};
      d.forEach(function(g, b) {
        let D = 0;
        g.forEach(function(v) {
          v.y = b, v.x = b ? e(m, D) : D;
          let S = v.rowSpan || 1, k = v.colSpan || 1;
          if (S > 1)
            for (let L = 0; L < k; L++)
              m[v.x + L] = S;
          D = v.x + k;
        }), Object.keys(m).forEach((v) => {
          m[v]--, m[v] < 1 && delete m[v];
        });
      });
    }
    s(t, "layoutTable");
    function r(d) {
      let m = 0;
      return d.forEach(function(g) {
        g.forEach(function(b) {
          m = Math.max(m, b.x + (b.colSpan || 1));
        });
      }), m;
    }
    s(r, "maxWidth");
    function i(d) {
      return d.length;
    }
    s(i, "maxHeight");
    function n(d, m) {
      let g = d.y, b = d.y - 1 + (d.rowSpan || 1), D = m.y, v = m.y - 1 + (m.rowSpan || 1), S = !(g > v || D > b), k = d.x, L = d.x - 1 + (d.
      colSpan || 1), C = m.x, w = m.x - 1 + (m.colSpan || 1), T = !(k > w || C > L);
      return S && T;
    }
    s(n, "cellsConflict");
    function o(d, m, g) {
      let b = Math.min(d.length - 1, g), D = { x: m, y: g };
      for (let v = 0; v <= b; v++) {
        let S = d[v];
        for (let k = 0; k < S.length; k++)
          if (n(D, S[k]))
            return !0;
      }
      return !1;
    }
    s(o, "conflictExists");
    function a(d, m, g, b) {
      for (let D = g; D < b; D++)
        if (o(d, D, m))
          return !1;
      return !0;
    }
    s(a, "allBlank");
    function u(d) {
      d.forEach(function(m, g) {
        m.forEach(function(b) {
          for (let D = 1; D < b.rowSpan; D++) {
            let v = new JG(b);
            v.x = b.x, v.y = b.y + D, v.colSpan = b.colSpan, c(v, d[g + D]);
          }
        });
      });
    }
    s(u, "addRowSpanCells");
    function l(d) {
      for (let m = d.length - 1; m >= 0; m--) {
        let g = d[m];
        for (let b = 0; b < g.length; b++) {
          let D = g[b];
          for (let v = 1; v < D.colSpan; v++) {
            let S = new HG();
            S.x = D.x + v, S.y = D.y, g.splice(b + 1, 0, S);
          }
        }
      }
    }
    s(l, "addColSpanCells");
    function c(d, m) {
      let g = 0;
      for (; g < m.length && m[g].x < d.x; )
        g++;
      m.splice(g, 0, d);
    }
    s(c, "insertCell");
    function p(d) {
      let m = i(d), g = r(d);
      zG(`Max rows: ${m}; Max cols: ${g}`);
      for (let b = 0; b < m; b++)
        for (let D = 0; D < g; D++)
          if (!o(d, D, b)) {
            let v = { x: D, y: b, colSpan: 1, rowSpan: 1 };
            for (D++; D < g && !o(d, D, b); )
              v.colSpan++, D++;
            let S = b + 1;
            for (; S < m && a(d, S, v.x, v.x + v.colSpan); )
              v.rowSpan++, S++;
            let k = new Gm(v);
            k.x = v.x, k.y = v.y, WG(`Missing cell at ${k.y}-${k.x}.`), c(k, d[b]);
          }
    }
    s(p, "fillInTable");
    function h(d) {
      return d.map(function(m) {
        if (!Array.isArray(m)) {
          let g = Object.keys(m)[0];
          m = m[g], Array.isArray(m) ? (m = m.slice(), m.unshift(g)) : m = [g, m];
        }
        return m.map(function(g) {
          return new Gm(g);
        });
      });
    }
    s(h, "generateCells");
    function f(d) {
      let m = h(d);
      return t(m), p(m), u(m), l(m), m;
    }
    s(f, "makeTableLayout"), J_.exports = {
      makeTableLayout: f,
      layoutTable: t,
      addRowSpanCells: u,
      maxWidth: r,
      fillInTable: p,
      computeWidths: H_("colSpan", "desiredWidth", "x", 1),
      computeHeights: H_("rowSpan", "desiredHeight", "y", 1)
    };
  })();
  function H_(e, t, r, i) {
    return function(n, o) {
      let a = [], u = [], l = {};
      o.forEach(function(c) {
        c.forEach(function(p) {
          (p[e] || 1) > 1 ? u.push(p) : a[p[r]] = Math.max(a[p[r]] || 0, p[t] || 0, i);
        });
      }), n.forEach(function(c, p) {
        typeof c == "number" && (a[p] = c);
      });
      for (let c = u.length - 1; c >= 0; c--) {
        let p = u[c], h = p[e], f = p[r], d = a[f], m = typeof n[f] == "number" ? 0 : 1;
        if (typeof d == "number")
          for (let g = 1; g < h; g++)
            d += 1 + a[f + g], typeof n[f + g] != "number" && m++;
        else
          d = t === "desiredWidth" ? p.desiredWidth - 1 : 1, (!l[f] || l[f] < d) && (l[f] = d);
        if (p[t] > d) {
          let g = 0;
          for (; m > 0 && p[t] > d; ) {
            if (typeof n[f + g] != "number") {
              let b = Math.round((p[t] - d) / m);
              d += b, a[f + g] += b, m--;
            }
            g++;
          }
        }
      }
      Object.assign(n, a, l);
      for (let c = 0; c < n.length; c++)
        n[c] = Math.max(i, n[c] || 0);
    };
  }
  s(H_, "makeComputeWidths");
});

// ../node_modules/cli-table3/src/table.js
var K_ = P((tce, X_) => {
  var si = Ju(), GG = Wm(), Xm = G_(), Ku = class extends Array {
    static {
      s(this, "Table");
    }
    constructor(t) {
      super();
      let r = GG.mergeOptions(t);
      if (Object.defineProperty(this, "options", {
        value: r,
        enumerable: r.debug
      }), r.debug) {
        switch (typeof r.debug) {
          case "boolean":
            si.setDebugLevel(si.WARN);
            break;
          case "number":
            si.setDebugLevel(r.debug);
            break;
          case "string":
            si.setDebugLevel(parseInt(r.debug, 10));
            break;
          default:
            si.setDebugLevel(si.WARN), si.warn(`Debug option is expected to be boolean, number, or string. Received a ${typeof r.debug}`);
        }
        Object.defineProperty(this, "messages", {
          get() {
            return si.debugMessages();
          }
        });
      }
    }
    toString() {
      let t = this, r = this.options.head && this.options.head.length;
      r ? (t = [this.options.head], this.length && t.push.apply(t, this)) : this.options.style.head = [];
      let i = Xm.makeTableLayout(t);
      i.forEach(function(o) {
        o.forEach(function(a) {
          a.mergeTableOptions(this.options, i);
        }, this);
      }, this), Xm.computeWidths(this.options.colWidths, i), Xm.computeHeights(this.options.rowHeights, i), i.forEach(function(o) {
        o.forEach(function(a) {
          a.init(this.options);
        }, this);
      }, this);
      let n = [];
      for (let o = 0; o < i.length; o++) {
        let a = i[o], u = this.options.rowHeights[o];
        (o === 0 || !this.options.style.compact || o == 1 && r) && Km(a, "top", n);
        for (let l = 0; l < u; l++)
          Km(a, l, n);
        o + 1 == i.length && Km(a, "bottom", n);
      }
      return n.join(`
`);
    }
    get width() {
      return this.toString().split(`
`)[0].length;
    }
  };
  Ku.reset = () => si.reset();
  function Km(e, t, r) {
    let i = [];
    e.forEach(function(o) {
      i.push(o.draw(t));
    });
    let n = i.join("");
    n.length && r.push(n);
  }
  s(Km, "doDraw");
  X_.exports = Ku;
});

// ../node_modules/cli-table3/index.js
var Q_ = P((ice, Y_) => {
  Y_.exports = K_();
});

// ../node_modules/pretty-hrtime/index.js
var tk = P((nce, ek) => {
  "use strict";
  var XG = ["h", "min", "s", "ms", "\u03BCs", "ns"], KG = ["hour", "minute", "second", "millisecond", "microsecond", "nanosecond"], Z_ = [3600,
  60, 1, 1e6, 1e3, 1];
  ek.exports = function(e, t) {
    var r, i, n, o, a, u, l, c, p, h;
    if (r = !1, i = !1, t && (r = t.verbose || !1, i = t.precise || !1), !Array.isArray(e) || e.length !== 2 || typeof e[0] != "number" || typeof e[1] !=
    "number")
      return "";
    for (e[1] < 0 && (h = e[0] + e[1] / 1e9, e[0] = parseInt(h), e[1] = parseFloat((h % 1).toPrecision(9)) * 1e9), p = "", n = 0; n < 6 && (o =
    n < 3 ? 0 : 1, a = e[o], n !== 3 && n !== 0 && (a = a % Z_[n - 1]), n === 2 && (a += e[1] / 1e9), u = a / Z_[n], !(u >= 1 && (r && (u = Math.
    floor(u)), i ? c = u.toString() : (l = u >= 10 ? 0 : 2, c = u.toFixed(l)), c.indexOf(".") > -1 && c[c.length - 1] === "0" && (c = c.replace(
    /\.?0+$/, "")), p && (p += " "), p += c, r ? (p += " " + KG[n], c !== "1" && (p += "s")) : p += " " + XG[n], !r))); n++)
      ;
    return p;
  };
});

// src/core-server/index.ts
import { getPreviewHeadTemplate as Jpe, getPreviewBodyTemplate as Gpe } from "storybook/internal/common";

// src/core-server/build-static.ts
var OC = he(br(), 1);
import { cp as Ej, mkdir as bj } from "node:fs/promises";
import { rm as vj } from "node:fs/promises";
import { dirname as Cj, join as lu, relative as wj, resolve as BC } from "node:path";
import {
  loadAllPresets as IC,
  loadMainConfig as Aj,
  logConfig as Sj,
  normalizeStories as Fj,
  resolveAddonName as _j
} from "storybook/internal/common";
import { logger as vi } from "storybook/internal/node-logger";
import { getPrecedingUpgrade as kj, telemetry as PC } from "storybook/internal/telemetry";
import { global as Tj } from "@storybook/global";

// src/core-server/utils/StoryIndexGenerator.ts
import { existsSync as N1 } from "node:fs";
import { readFile as L1 } from "node:fs/promises";
import { dirname as V1, extname as X7, join as Va, normalize as M1, relative as Ms, resolve as js, sep as K7 } from "node:path";
import { commonGlobOptions as Y7, getProjectRoot as Q7, normalizeStoryPath as Ua } from "storybook/internal/common";
import { combineTags as jh, storyNameFromExport as j1, toId as qh } from "storybook/internal/csf";
import { getStorySortParameter as Z7, loadConfig as eL } from "storybook/internal/csf-tools";
import { logger as $h, once as q1 } from "storybook/internal/node-logger";
import { isExampleStoryId as tL } from "storybook/internal/telemetry";

// ../node_modules/find-up/index.js
import us from "node:path";

// ../node_modules/locate-path/index.js
import qk from "node:process";
import $k from "node:path";
import cK, { promises as ag } from "node:fs";
import { fileURLToPath as Vk } from "node:url";

// ../node_modules/yocto-queue/index.js
var sl = class {
  static {
    s(this, "Node");
  }
  value;
  next;
  constructor(t) {
    this.value = t;
  }
}, as = class {
  static {
    s(this, "Queue");
  }
  #e;
  #t;
  #r;
  constructor() {
    this.clear();
  }
  enqueue(t) {
    let r = new sl(t);
    this.#e ? (this.#t.next = r, this.#t = r) : (this.#e = r, this.#t = r), this.#r++;
  }
  dequeue() {
    let t = this.#e;
    if (t)
      return this.#e = this.#e.next, this.#r--, t.value;
  }
  peek() {
    if (this.#e)
      return this.#e.value;
  }
  clear() {
    this.#e = void 0, this.#t = void 0, this.#r = 0;
  }
  get size() {
    return this.#r;
  }
  *[Symbol.iterator]() {
    let t = this.#e;
    for (; t; )
      yield t.value, t = t.next;
  }
  *drain() {
    for (; this.#e; )
      yield this.dequeue();
  }
};

// ../node_modules/locate-path/node_modules/p-limit/index.js
function wo(e) {
  if (!((Number.isInteger(e) || e === Number.POSITIVE_INFINITY) && e > 0))
    throw new TypeError("Expected `concurrency` to be a number from 1 and up");
  let t = new as(), r = 0, i = /* @__PURE__ */ s(() => {
    r--, t.size > 0 && t.dequeue()();
  }, "next"), n = /* @__PURE__ */ s(async (u, l, c) => {
    r++;
    let p = (async () => u(...c))();
    l(p);
    try {
      await p;
    } catch {
    }
    i();
  }, "run"), o = /* @__PURE__ */ s((u, l, c) => {
    t.enqueue(n.bind(void 0, u, l, c)), (async () => (await Promise.resolve(), r < e && t.size > 0 && t.dequeue()()))();
  }, "enqueue"), a = /* @__PURE__ */ s((u, ...l) => new Promise((c) => {
    o(u, c, l);
  }), "generator");
  return Object.defineProperties(a, {
    activeCount: {
      get: /* @__PURE__ */ s(() => r, "get")
    },
    pendingCount: {
      get: /* @__PURE__ */ s(() => t.size, "get")
    },
    clearQueue: {
      value: /* @__PURE__ */ s(() => {
        t.clear();
      }, "value")
    }
  }), a;
}
s(wo, "pLimit");

// ../node_modules/locate-path/node_modules/p-locate/index.js
var Ao = class extends Error {
  static {
    s(this, "EndError");
  }
  constructor(t) {
    super(), this.value = t;
  }
}, Mk = /* @__PURE__ */ s(async (e, t) => t(await e), "testElement"), jk = /* @__PURE__ */ s(async (e) => {
  let t = await Promise.all(e);
  if (t[1] === !0)
    throw new Ao(t[0]);
  return !1;
}, "finder");
async function ol(e, t, {
  concurrency: r = Number.POSITIVE_INFINITY,
  preserveOrder: i = !0
} = {}) {
  let n = wo(r), o = [...e].map((u) => [u, n(Mk, u, t)]), a = wo(i ? 1 : Number.POSITIVE_INFINITY);
  try {
    await Promise.all(o.map((u) => a(jk, u)));
  } catch (u) {
    if (u instanceof Ao)
      return u.value;
    throw u;
  }
}
s(ol, "pLocate");

// ../node_modules/locate-path/index.js
var ug = {
  directory: "isDirectory",
  file: "isFile"
};
function Uk(e) {
  if (!Object.hasOwnProperty.call(ug, e))
    throw new Error(`Invalid type specified: ${e}`);
}
s(Uk, "checkType");
var Wk = /* @__PURE__ */ s((e, t) => t[ug[e]](), "matchType"), zk = /* @__PURE__ */ s((e) => e instanceof URL ? Vk(e) : e, "toPath");
async function al(e, {
  cwd: t = qk.cwd(),
  type: r = "file",
  allowSymlinks: i = !0,
  concurrency: n,
  preserveOrder: o
} = {}) {
  Uk(r), t = zk(t);
  let a = i ? ag.stat : ag.lstat;
  return ol(e, async (u) => {
    try {
      let l = await a($k.resolve(t, u));
      return Wk(r, l);
    } catch {
      return !1;
    }
  }, { concurrency: n, preserveOrder: o });
}
s(al, "locatePath");

// ../node_modules/find-up/node_modules/unicorn-magic/node.js
import { fileURLToPath as Hk } from "node:url";
function ul(e) {
  return e instanceof URL ? Hk(e) : e;
}
s(ul, "toPath");

// ../node_modules/find-up/node_modules/path-exists/index.js
import EK, { promises as bK } from "node:fs";

// ../node_modules/find-up/index.js
var Jk = Symbol("findUpStop");
async function Gk(e, t = {}) {
  let r = us.resolve(ul(t.cwd) ?? ""), { root: i } = us.parse(r), n = us.resolve(r, ul(t.stopAt ?? i)), o = t.limit ?? Number.POSITIVE_INFINITY,
  a = [e].flat(), u = /* @__PURE__ */ s(async (c) => {
    if (typeof e != "function")
      return al(a, c);
    let p = await e(c.cwd);
    return typeof p == "string" ? al([p], c) : p;
  }, "runMatcher"), l = [];
  for (; ; ) {
    let c = await u({ ...t, cwd: r });
    if (c === Jk || (c && l.push(us.resolve(r, c)), r === n || l.length >= o))
      break;
    r = us.dirname(r);
  }
  return l;
}
s(Gk, "findUpMultiple");
async function lg(e, t = {}) {
  return (await Gk(e, { ...t, limit: 1 }))[0];
}
s(lg, "findUp");

// src/core-server/utils/StoryIndexGenerator.ts
var Vh = he(br(), 1);
en();

// ../node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var Xk = process.env.NODE_ENV === "production", ll = "Invariant failed";
function yt(e, t) {
  if (!e) {
    if (Xk)
      throw new Error(ll);
    var r = typeof t == "function" ? t() : t, i = r ? "".concat(ll, ": ").concat(r) : ll;
    throw new Error(i);
  }
}
s(yt, "invariant");

// src/core-server/utils/StoryIndexGenerator.ts
var Uh = he(Ft(), 1), Wa = he(zg(), 1);

// src/preview-api/modules/store/autoTitle.ts
en();
var Jg = he(Ft(), 1);
import { once as jT } from "storybook/internal/client-logger";
var qT = /* @__PURE__ */ s((e) => {
  if (e.length === 0)
    return e;
  let t = e[e.length - 1], r = t?.replace(/(?:[.](?:story|stories))?([.][^.]+)$/i, "");
  if (e.length === 1)
    return [r];
  let i = e[e.length - 2];
  return r && i && r.toLowerCase() === i.toLowerCase() ? [...e.slice(0, -2), r] : r && (/^(story|stories)([.][^.]+)$/i.test(t) || /^index$/i.
  test(r)) ? e.slice(0, -1) : [...e.slice(0, -1), r];
}, "sanitize");
function Hg(e) {
  return e.flatMap((t) => t.split("/")).filter(Boolean).join("/");
}
s(Hg, "pathJoin");
var Fl = /* @__PURE__ */ s((e, t, r) => {
  let { directory: i, importPathMatcher: n, titlePrefix: o = "" } = t || {};
  typeof e == "number" && jT.warn(Jg.dedent`
      CSF Auto-title received a numeric fileName. This typically happens when
      webpack is mis-configured in production mode. To force webpack to produce
      filenames, set optimization.moduleIds = "named" in your webpack config.
    `);
  let a = Ze(String(e));
  if (n.exec(a)) {
    if (!r) {
      let u = a.replace(i, ""), l = Hg([o, u]).split("/");
      return l = qT(l), l.join("/");
    }
    return o ? Hg([o, r]) : r;
  }
}, "userOrAutoTitleFromSpecifier");

// src/preview-api/modules/store/sortStories.ts
var Kg = he(Ft(), 1);

// src/preview-api/modules/store/storySort.ts
var Gg = /\s*\/\s*/, Xg = /* @__PURE__ */ s((e = {}) => (t, r) => {
  if (t.title === r.title && !e.includeNames)
    return 0;
  let i = e.method || "configure", n = e.order || [], o = t.title.trim().split(Gg), a = r.title.trim().split(Gg);
  e.includeNames && (o.push(t.name), a.push(r.name));
  let u = 0;
  for (; o[u] || a[u]; ) {
    if (!o[u])
      return -1;
    if (!a[u])
      return 1;
    let l = o[u], c = a[u];
    if (l !== c) {
      let h = n.indexOf(l), f = n.indexOf(c), d = n.indexOf("*");
      return h !== -1 || f !== -1 ? (h === -1 && (d !== -1 ? h = d : h = n.length), f === -1 && (d !== -1 ? f = d : f = n.length), h - f) : i ===
      "configure" ? 0 : l.localeCompare(c, e.locales ? e.locales : void 0, {
        numeric: !0,
        sensitivity: "accent"
      });
    }
    let p = n.indexOf(l);
    p === -1 && (p = n.indexOf("*")), n = p !== -1 && Array.isArray(n[p + 1]) ? n[p + 1] : [], u += 1;
  }
  return 0;
}, "storySort");

// src/preview-api/modules/store/sortStories.ts
var $T = /* @__PURE__ */ s((e, t, r) => {
  if (t) {
    let i;
    typeof t == "function" ? i = t : i = Xg(t), e.sort(i);
  } else
    e.sort(
      (i, n) => r.indexOf(i.importPath) - r.indexOf(n.importPath)
    );
  return e;
}, "sortStoriesCommon"), Yg = /* @__PURE__ */ s((e, t, r) => {
  try {
    return $T(e, t, r);
  } catch (i) {
    throw new Error(Kg.dedent`
    Error sorting stories with sort parameter ${t}:

    > ${i.message}
    
    Are you using a V6-style sort function in V7 mode?

    More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort
  `);
  }
}, "sortStoriesV7");

// src/core-server/utils/IndexingError.ts
en();
var Cr = class extends Error {
  static {
    s(this, "IndexingError");
  }
  constructor(t, r, i) {
    super(), this.message = t, this.importPaths = r, i && (this.stack = i);
  }
  pathsString() {
    return this.importPaths.length === 1 ? `${Ze(this.importPaths[0])}` : `${this.importPaths.map(Ze).join(",")}`;
  }
  toString() {
    return `${this.pathsString()}: ${this.message}`;
  }
}, ds = class extends Error {
  constructor(r) {
    super();
    this.indexingErrors = r;
    if (this.indexingErrors.length === 0)
      throw new Error("Unexpected empty error list");
    if (this.indexingErrors.length === 1) {
      let [i] = this.indexingErrors;
      this.message = `Unable to index ${i.pathsString()}`;
    } else
      this.message = `Unable to index files:
${this.indexingErrors.map((i) => `- ${i}`).join(`
`)}`;
  }
  static {
    s(this, "MultipleIndexingError");
  }
  toString() {
    return this.indexingErrors.length === 1 ? `${this.message}:
  ${this.indexingErrors[0].stack}` : this.message;
  }
};

// src/core-server/utils/autoName.ts
import { basename as Qg } from "node:path";
function Zg(e, t, r) {
  let i = Qg(e), n = Qg(t), [o] = i.split("."), [a] = n.split(".");
  return o === a ? r : o;
}
s(Zg, "autoName");

// src/core-server/utils/summarizeStats.ts
var e0 = /* @__PURE__ */ s((e, t) => {
  Object.entries(e).forEach(([r, i]) => {
    let n = r;
    t[n] || (t[n] = 0), t[n] += i ? 1 : 0;
  });
}, "addStats");

// src/core-server/utils/StoryIndexGenerator.ts
var Rn = "autodocs", rL = "attached-mdx", iL = "unattached-mdx", U1 = "play-fn";
function Vi({ tags: e }) {
  return e?.includes(iL) || e?.includes(rL);
}
s(Vi, "isMdxEntry");
var $1 = /* @__PURE__ */ s((e, t, r) => e.startsWith(".") ? Ze(js(r, Ua(Va(V1(t), e)))) : e, "makeAbsolute"), Yr = class e {
  constructor(t, r) {
    this.specifiers = t;
    this.options = r;
    this.specifierToCache = /* @__PURE__ */ new Map();
  }
  static {
    s(this, "StoryIndexGenerator");
  }
  static {
    /** Cache for findMatchingFiles results */
    this.findMatchingFilesCache = /* @__PURE__ */ new Map();
  }
  /** Generate a cache key for findMatchingFiles */
  static getFindMatchingFilesCacheKey(t, r, i) {
    return JSON.stringify({
      directory: t.directory,
      files: t.files,
      workingDir: r,
      ignoreWarnings: i
    });
  }
  /** Clear the findMatchingFiles cache */
  static clearFindMatchingFilesCache() {
    this.findMatchingFilesCache.clear();
  }
  static async findMatchingFiles(t, r, i = !1) {
    let n = this.getFindMatchingFilesCacheKey(t, r, i), o = this.findMatchingFilesCache.get(n);
    if (o)
      return o;
    let a = {}, u = Ze(Va(t.directory, t.files)), { globby: l } = await Promise.resolve().then(() => (Ip(), Bp)), c = await l(u, {
      absolute: !0,
      cwd: r,
      ...Y7(u)
    });
    return c.length === 0 && !i && q1.warn(
      `No story files found for the specified pattern: ${Vh.default.blue(
        Va(t.directory, t.files)
      )}`
    ), c.sort().forEach((p) => {
      let h = X7(p);
      if (h === ".storyshot") {
        let f = Ms(r, p);
        $h.info(`Skipping ${h} file ${f}`);
        return;
      }
      a[p] = !1;
    }), this.findMatchingFilesCache.set(n, a), a;
  }
  static async findMatchingFilesForSpecifiers(t, r, i = !1) {
    return Promise.all(
      t.map(async (n) => {
        let o = await e.findMatchingFiles(
          n,
          r,
          i
        );
        return [n, o];
      })
    );
  }
  async initialize() {
    (await e.findMatchingFilesForSpecifiers(
      this.specifiers,
      this.options.workingDir
    )).forEach(
      ([n, o]) => this.specifierToCache.set(n, o)
    );
    let r = await this.getPreviewCode(), i = this.getProjectTags(r);
    await this.ensureExtracted({ projectTags: i });
  }
  /** Run the updater function over all the empty cache entries */
  async updateExtracted(t, r = !1) {
    await Promise.all(
      this.specifiers.map(async (i) => {
        let n = this.specifierToCache.get(i);
        return yt(
          n,
          `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
            i
          )}`
        ), Promise.all(
          Object.keys(n).map(async (o) => {
            if (!(n[o] && !r))
              try {
                n[o] = await t(i, o, n[o]);
              } catch (a) {
                let u = `.${K7}${Ms(this.options.workingDir, o)}`;
                n[o] = {
                  type: "error",
                  err: new Cr(
                    a instanceof Error ? a.message : String(a),
                    [u],
                    a instanceof Error ? a.stack : void 0
                  )
                };
              }
          })
        );
      })
    );
  }
  isDocsMdx(t) {
    return /(?<!\.stories)\.mdx$/i.test(t);
  }
  async ensureExtracted({
    projectTags: t
  }) {
    await this.updateExtracted(
      async (n, o) => this.isDocsMdx(o) ? !1 : this.extractStories(n, o, t)
    ), await this.updateExtracted(
      async (n, o) => this.extractDocs(n, o, t)
    );
    let r = {};
    return { entries: this.specifiers.flatMap((n) => {
      let o = this.specifierToCache.get(n);
      return yt(
        o,
        `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
          n
        )}`
      ), Object.values(o).flatMap((a) => a ? a.type === "docs" ? [a] : a.type === "error" ? [a] : a.entries.map((u) => {
        if (u.type === "docs")
          return u;
        tL(u.id) || e0(u.extra.stats, r);
        let { extra: l, ...c } = u;
        return c;
      }) : []);
    }), stats: r };
  }
  findDependencies(t) {
    return [...this.specifierToCache.values()].flatMap(
      (r) => Object.entries(r).filter(([i, n]) => !n || n.type !== "stories" ? !1 : !!t.find(
        (o) => i.match(
          new RegExp(`^${o.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")}(\\.[^.]+)?$`)
        )
      )).map(([i, n]) => n)
    );
  }
  /**
   * Try to find the component path from a raw import string and return it in the same format as
   * `importPath`. Respect tsconfig paths if available.
   *
   * If no such file exists, assume that the import is from a package and return the raw
   */
  resolveComponentPath(t, r, i) {
    let n = t;
    i && (n = i(n) ?? n);
    let o = js(V1(r), n), a = ["", ".js", ".ts", ".jsx", ".tsx", ".mjs", ".mts"].map((u) => `${o}${u}`).find((u) => N1(u));
    if (a) {
      let u = Ms(this.options.workingDir, a);
      return Ze(Ua(u));
    }
    return t;
  }
  async extractStories(t, r, i = []) {
    let n = Ms(this.options.workingDir, r), o = Ze(Ua(n)), a = /* @__PURE__ */ s((g) => {
      let b = Fl(o, t, g);
      return yt(
        b,
        "makeTitle created an undefined title. This happens when the fileName doesn't match any specifier from main.js"
      ), b;
    }, "defaultMakeTitle"), u = this.options.indexers.find((g) => g.test.exec(r));
    yt(u, `No matching indexer found for ${r}`);
    let l = await u.createIndex(r, { makeTitle: a }), c = await lg("tsconfig.json", {
      cwd: this.options.workingDir,
      stopAt: Q7()
    }), p = Wa.loadConfig(c), h;
    p.resultType === "success" && (h = Wa.createMatchPath(p.absoluteBaseUrl, p.paths, [
      "browser",
      "module",
      "main"
    ]));
    let f = l.map((g) => {
      let b = g.name ?? j1(g.exportName), D = g.rawComponentPath && this.resolveComponentPath(g.rawComponentPath, r, h), v = g.title ?? a(),
      S = g.__id ?? qh(g.metaId ?? v, j1(g.exportName)), k = jh(...i, ...g.tags ?? []);
      return {
        type: "story",
        id: S,
        extra: {
          metaId: g.metaId,
          stats: g.__stats ?? {}
        },
        name: b,
        title: v,
        importPath: o,
        componentPath: D,
        tags: k
      };
    });
    if (f.some((g) => g.tags.includes(Rn)) && !!this.options.docs && this.options.build?.test?.disableAutoDocs !== !0) {
      let b = this.options.docs?.defaultName ?? "Docs", { metaId: D } = l[0], { title: v } = f[0], S = qh(D ?? v, b), k = jh(...i, ...l[0].tags ??
      []);
      f.unshift({
        id: S,
        title: v,
        name: b,
        importPath: o,
        type: "docs",
        tags: k,
        storiesImports: []
      });
    }
    return {
      entries: f,
      dependents: [],
      type: "stories"
    };
  }
  async extractDocs(t, r, i = []) {
    let n = Ms(this.options.workingDir, r);
    try {
      let o = Ua(n), a = Ze(o), u = await L1(r, { encoding: "utf8" }), { analyze: l } = await Promise.resolve().then(() => (R1(), O1)), c = await l(
      u);
      if (c.isTemplate)
        return !1;
      let p = c.imports.map(
        (k) => $1(k, o, this.options.workingDir)
      ), h = this.findDependencies(p), f = h, d;
      if (c.of) {
        let k = $1(c.of, o, this.options.workingDir);
        h.forEach((L) => {
          if (L.entries.length > 0) {
            let C = L.entries.find((w) => w.type !== "docs");
            M1(js(this.options.workingDir, C.importPath)).startsWith(
              M1(k)
            ) && (d = C);
          }
          f = [L, ...h.filter((C) => C !== L)];
        }), yt(
          d,
          Uh.dedent`
            Could not find or load CSF file at path "${c.of}" referenced by \`of={}\` in docs file "${n}".

            - Does that file exist?
            - If so, is it a CSF file (\`.stories.*\`)?
            - If so, is it matched by the \`stories\` glob in \`main.js\`?
            - If so, has the file successfully loaded in Storybook and are its stories visible?
          `
        );
      }
      h.forEach((k) => {
        k.dependents.push(r);
      });
      let m = d?.title || Fl(a, t, c.title);
      yt(
        m,
        "makeTitle created an undefined title. This happens when a specifier's doesn't have any matches in its fileName"
      );
      let g = this.options.docs?.defaultName ?? "Docs", b = c.name || (d ? Zg(a, d.importPath, g) : g), D = qh(d?.extra.metaId || m, b), v = jh(
        ...i,
        ...d?.tags ?? [],
        ...c.metaTags ?? [],
        d ? "attached-mdx" : "unattached-mdx"
      );
      return {
        id: D,
        title: m,
        name: b,
        importPath: a,
        storiesImports: f.map((k) => k.entries[0].importPath),
        type: "docs",
        tags: v
      };
    } catch (o) {
      throw o && o.source?.match(/mdast-util-mdx-jsx/g) && $h.warn(
        `\u{1F4A1} This seems to be an MDX2 syntax error. Please refer to the MDX section in the following resource for assistance on how to fix th\
is: ${Vh.default.yellow(
          "https://storybook.js.org/migration-guides/7.0"
        )}`
      ), o;
    }
  }
  chooseDuplicate(t, r, i) {
    if (t.importPath === r.importPath)
      return t;
    let n = !0;
    (r.type === "story" || Vi(r) && t.type === "docs" && !Vi(t)) && (n = !1);
    let o = n ? t : r, a = n ? r : t, u = 'Use `<Meta of={} name="Other Name">` to distinguish them.';
    if (a.type === "story")
      throw new Cr(`Duplicate stories with id: ${t.id}`, [
        t.importPath,
        r.importPath
      ]);
    if (o.type === "story") {
      let l = Vi(a) ? "component docs page" : "automatically generated docs page", c = this.options.docs?.defaultName ?? "Docs";
      throw o.name === c ? new Cr(
        `You have a story for ${o.title} with the same name as your default docs entry name (${o.name}), so the docs page is being dropped. \
Consider changing the story name.`,
        [t.importPath, r.importPath]
      ) : new Cr(
        `You have a story for ${o.title} with the same name as your ${l} (${a.name}), so the docs page is being dropped. ${u}`,
        [t.importPath, r.importPath]
      );
    } else if (Vi(o)) {
      if (Vi(a))
        throw new Cr(
          `You have two component docs pages with the same name ${o.title}:${o.name}. ${u}`,
          [t.importPath, r.importPath]
        );
      if (a.tags?.includes(Rn) && !i?.includes(Rn))
        throw new Cr(
          `You created a component docs page for '${a.title}', but also tagged the CSF file with '${Rn}'. This is probably a mistake.`,
          [o.importPath, a.importPath]
        );
    } else
      return {
        ...o,
        storiesImports: [
          ...o.storiesImports,
          a.importPath,
          ...a.storiesImports
        ]
      };
    return o;
  }
  async sortStories(t, r) {
    let i = Object.values(t), n = e.storyFileNames(this.specifierToCache);
    return Yg(i, r, n), i.reduce(
      (o, a) => (o[a.id] = a, o),
      {}
    );
  }
  async getIndex() {
    return (await this.getIndexAndStats()).storyIndex;
  }
  async getIndexAndStats() {
    if (this.lastIndex && this.lastStats)
      return { storyIndex: this.lastIndex, stats: this.lastStats };
    if (this.lastError)
      throw this.lastError;
    let t = await this.getPreviewCode(), r = this.getProjectTags(t), { entries: i, stats: n } = await this.ensureExtracted({ projectTags: r });
    try {
      let o = i.filter((c) => c.type === "error");
      if (o.length)
        throw new ds(o.map((c) => c.err));
      let a = [], u = {};
      if (i.forEach((c) => {
        try {
          let p = u[c.id];
          p ? u[c.id] = this.chooseDuplicate(p, c, r) : u[c.id] = c;
        } catch (p) {
          p instanceof Cr && a.push(p);
        }
      }), a.length)
        throw new ds(a);
      let l = await this.sortStories(
        u,
        t && Z7(t)
      );
      return this.lastStats = n, this.lastIndex = {
        v: 5,
        entries: l
      }, { storyIndex: this.lastIndex, stats: this.lastStats };
    } catch (o) {
      throw this.lastError = o == null || o instanceof Error ? o : void 0, yt(this.lastError), $h.warn(`\u{1F6A8} ${this.lastError.toString()}`),
      this.lastError;
    }
  }
  invalidateAll() {
    this.specifierToCache.forEach((t) => {
      Object.keys(t).forEach((r) => {
        t[r] = !1;
      });
    }), this.lastIndex = null, this.lastError = null;
  }
  invalidate(t, r, i) {
    let n = Ze(js(this.options.workingDir, r)), o = this.specifierToCache.get(t);
    yt(
      o,
      `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
        t
      )}`
    );
    let a = o[n];
    if (a && a.type === "stories") {
      let { dependents: u } = a, l = /* @__PURE__ */ new Set();
      this.specifierToCache.forEach((c) => {
        u.forEach((p) => {
          c[p] && (l.add(p), c[p] = !1);
        });
      });
    }
    if (i) {
      if (a && a.type === "docs") {
        let u = a.storiesImports.map(
          (c) => js(this.options.workingDir, c)
        );
        this.findDependencies(u).forEach(
          (c) => c.dependents.splice(c.dependents.indexOf(n), 1)
        );
      }
      delete o[n];
    } else
      o[n] = !1;
    this.lastIndex = null, this.lastError = null;
  }
  async getPreviewCode() {
    let t = ["js", "jsx", "ts", "tsx", "mjs", "cjs", "mts"].map((r) => Va(this.options.configDir, `preview.${r}`)).find((r) => N1(r));
    return t && (await L1(t, { encoding: "utf8" })).toString();
  }
  getProjectTags(t) {
    let r = [], i = ["dev", "test"];
    if (t)
      try {
        r = eL(t).parse().getFieldValue(["tags"]) ?? [];
      } catch {
        q1.warn(Uh.dedent`
          Unable to parse tags from project configuration. If defined, tags should be specified inline, e.g.

          export default {
            tags: ['foo'],
          }

          ---

          Received:

          ${t}
        `);
      }
    return [...i, ...r];
  }
  // Get the story file names in "imported order"
  static storyFileNames(t) {
    return Array.from(t.values()).flatMap((r) => Object.keys(r));
  }
};

// src/core-server/utils/build-or-throw.ts
import { NoMatchingExportError as nL } from "storybook/internal/server-errors";
async function za(e) {
  try {
    return await e();
  } catch (t) {
    let r = t.errors;
    throw r && r.find(
      (n) => n.text?.includes("No matching export")
    ) ? new nL(t) : t;
  }
}
s(za, "buildOrThrow");

// src/core-server/utils/copy-all-static-files.ts
var Yh = he(br(), 1);
import { cp as kL } from "node:fs/promises";
import { join as cv, relative as TL } from "node:path";
import { getDirectoryFromWorkingDir as BL } from "storybook/internal/common";
import { logger as IL } from "storybook/internal/node-logger";

// src/core-server/utils/server-statics.ts
var Ha = he(br(), 1), ov = he(tv(), 1), av = he(Ft(), 1);
import { existsSync as nv, statSync as vL } from "node:fs";
import { basename as rv, isAbsolute as sv, posix as CL, resolve as Xh, sep as wL, win32 as AL } from "node:path";
import { getDirectoryFromWorkingDir as SL, resolvePathInStorybookCache as FL } from "storybook/internal/common";
import { logger as iv } from "storybook/internal/node-logger";
var _L = FL("", "ignored-sub").split("ignored-sub")[0];
async function uv(e, t) {
  let r = await t.presets.apply("staticDirs") ?? [], i = await t.presets.apply("favicon");
  r.map((a) => {
    try {
      let { staticDir: u, staticPath: l, targetEndpoint: c } = lv(a, t.configDir);
      if (!c.startsWith("/sb-") && !u.startsWith(_L) && iv.info(
        `=> Serving static files from ${Ha.default.cyan(u)} at ${Ha.default.cyan(c)}`
      ), nv(l) && vL(l).isFile()) {
        let p = Xh(l, ".."), h = rv(l);
        e.use(c, (f, d, m) => {
          f.url = `/${h}`, Gh(p, {
            dev: !0,
            etag: !0,
            extensions: []
          })(f, d, m);
        });
        return;
      }
      e.use(
        c,
        Gh(l, {
          dev: !0,
          etag: !0,
          extensions: []
        })
      );
    } catch (u) {
      u instanceof Error && iv.warn(u.message);
    }
  });
  let n = Xh(i, ".."), o = rv(i);
  e.use("/", (a, u, l) => {
    if (a.url === `/${o}`)
      return Gh(n, {
        dev: !0,
        etag: !0,
        extensions: []
      })(a, u, l);
    l();
  });
}
s(uv, "useStatics");
var Gh = /* @__PURE__ */ s((...e) => (t, r, i) => {
  let n = t._parsedUrl, o = i ? () => {
    t._parsedUrl = n, i();
  } : void 0;
  (0, ov.default)(...e)(t, r, o);
}, "sirvWorkaround"), Kh = /* @__PURE__ */ s((e) => {
  let t = e.lastIndexOf(":"), i = AL.isAbsolute(e) && t === 1, n = t !== -1 && !i ? t : e.length, a = (e.substring(n + 1) || "/").split(wL).
  join(CL.sep), u = e.substring(0, n), l = sv(u) ? u : `./${u}`, c = Xh(l), p = a.replace(/^\/?/, "./"), h = p.substring(1);
  if (!nv(c))
    throw new Error(
      av.dedent`
        Failed to load static files, no such directory: ${Ha.default.cyan(c)}
        Make sure this directory exists.
      `
    );
  return { staticDir: l, staticPath: c, targetDir: p, targetEndpoint: h };
}, "parseStaticDir"), lv = /* @__PURE__ */ s((e, t) => {
  let r = typeof e == "string" ? e : `${e.from}:${e.to}`, i = sv(r) ? r : SL({ configDir: t, workingDir: process.cwd(), directory: r });
  return Kh(i);
}, "mapStaticDir");

// src/core-server/utils/copy-all-static-files.ts
async function hv(e, t, r) {
  let i = process.cwd();
  return e?.reduce(async (n, o) => {
    await n;
    let a = typeof o == "string" ? o : `${o.from}:${o.to}`, { staticPath: u, targetEndpoint: l } = Kh(
      BL({
        configDir: r,
        workingDir: i,
        directory: a
      })
    ), c = cv(t, l), p = ["index.html", "iframe.html"].map((h) => cv(c, h));
    u.includes("node_modules") || IL.info(
      `=> Copying static files: ${Yh.default.cyan(pv(u))} at ${Yh.default.cyan(pv(c))}`
    ), await kL(u, c, {
      dereference: !0,
      preserveTimestamps: !0,
      filter: /* @__PURE__ */ s((h, f) => !p.includes(f), "filter"),
      recursive: !0
    });
  }, Promise.resolve());
}
s(hv, "copyAllStaticFilesRelativeToMain");
function pv(e) {
  return TL(process.cwd(), e);
}
s(pv, "print");

// src/core-server/utils/get-builders.ts
import { pathToFileURL as PL } from "node:url";
import { MissingBuilderError as OL } from "storybook/internal/server-errors";
async function qs() {
  return import("storybook/internal/builder-manager");
}
s(qs, "getManagerBuilder");
async function $s(e, t) {
  let r = H.resolve(
    ["webpack5"].includes(e) ? `@storybook/builder-${e}` : e,
    { paths: [t] }
  );
  return await import(PL(r).href);
}
s($s, "getPreviewBuilder");
async function fv({ presets: e, configDir: t }) {
  let { builder: r } = await e.apply("core", {});
  if (!r)
    throw new OL();
  let i = typeof r == "string" ? r : r.name;
  return Promise.all([$s(i, t), qs()]);
}
s(fv, "getBuilders");

// src/core-server/utils/metadata.ts
import { writeFile as RL } from "node:fs/promises";
import { getStorybookMetadata as dv } from "storybook/internal/telemetry";
async function mv(e, t) {
  let r = await dv(t);
  await RL(e, JSON.stringify(r));
}
s(mv, "extractStorybookMetadata");
function gv(e, t) {
  e.use("/project.json", async (r, i) => {
    let n = await dv(t);
    i.setHeader("Content-Type", "application/json"), i.write(JSON.stringify(n)), i.end();
  });
}
s(gv, "useStorybookMetadata");

// src/core-server/utils/output-stats.ts
var Wv = he($v(), 1), rf = he(br(), 1);
import { createWriteStream as FM } from "node:fs";
import { join as _M } from "node:path";
import { logger as Vv } from "storybook/internal/node-logger";
async function Ga(e, t, r) {
  if (t) {
    let i = await Uv(e, "preview", t);
    Vv.info(`=> preview stats written to ${rf.default.cyan(i)}`);
  }
  if (r) {
    let i = await Uv(e, "manager", r);
    Vv.info(`=> manager stats written to ${rf.default.cyan(i)}`);
  }
}
s(Ga, "outputStats");
var Uv = /* @__PURE__ */ s(async (e, t, r) => {
  let i = _M(e, `${t}-stats.json`), { chunks: n, ...o } = r.toJson();
  return await new Promise((a, u) => {
    (0, Wv.stringifyStream)(o, null, 2).on("error", u).pipe(FM(i)).on("error", u).on("finish", a);
  }), i;
}, "writeStats");

// src/core-server/utils/stories-json.ts
import { writeFile as hj } from "node:fs/promises";
import { basename as fj } from "node:path";
import { STORY_INDEX_INVALIDATED as dj } from "storybook/internal/core-events";

// ../node_modules/es-toolkit/dist/function/debounce.mjs
function zv(e, t, { signal: r, edges: i } = {}) {
  let n, o = null, a = i != null && i.includes("leading"), u = i == null || i.includes("trailing"), l = /* @__PURE__ */ s(() => {
    o !== null && (e.apply(n, o), n = void 0, o = null);
  }, "invoke"), c = /* @__PURE__ */ s(() => {
    u && l(), d();
  }, "onTimerEnd"), p = null, h = /* @__PURE__ */ s(() => {
    p != null && clearTimeout(p), p = setTimeout(() => {
      p = null, c();
    }, t);
  }, "schedule"), f = /* @__PURE__ */ s(() => {
    p !== null && (clearTimeout(p), p = null);
  }, "cancelTimer"), d = /* @__PURE__ */ s(() => {
    f(), n = void 0, o = null;
  }, "cancel"), m = /* @__PURE__ */ s(() => {
    f(), l();
  }, "flush"), g = /* @__PURE__ */ s(function(...b) {
    if (r?.aborted)
      return;
    n = this, o = b;
    let D = p == null;
    h(), a && D && l();
  }, "debounced");
  return g.schedule = h, g.cancel = d, g.flush = m, r?.addEventListener("abort", d, { once: !0 }), g;
}
s(zv, "debounce");

// ../node_modules/es-toolkit/dist/compat/function/debounce.mjs
function nf(e, t = 0, r = {}) {
  typeof r != "object" && (r = {});
  let { signal: i, leading: n = !1, trailing: o = !0, maxWait: a } = r, u = Array(2);
  n && (u[0] = "leading"), o && (u[1] = "trailing");
  let l, c = null, p = zv(function(...d) {
    l = e.apply(this, d), c = null;
  }, t, { signal: i, edges: u }), h = /* @__PURE__ */ s(function(...d) {
    if (a != null) {
      if (c === null)
        c = Date.now();
      else if (Date.now() - c >= a)
        return l = e.apply(this, d), c = Date.now(), p.cancel(), p.schedule(), l;
    }
    return p.apply(this, d), l;
  }, "debounced"), f = /* @__PURE__ */ s(() => (p.flush(), l), "flush");
  return h.cancel = p.cancel, h.flush = f, h;
}
s(nf, "debounce");

// src/core-server/utils/watch-story-specifiers.ts
en();
var wC = he(Cf(), 1);
import { lstatSync as sj, readdirSync as oj } from "node:fs";
import { basename as aj, join as wf, relative as uj, resolve as lj } from "node:path";
import { commonGlobOptions as cj } from "storybook/internal/common";
var AC = /* @__PURE__ */ s((e) => {
  try {
    return sj(e).isDirectory();
  } catch {
    return !1;
  }
}, "isDirectory");
function pj(e) {
  let t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ s((n) => {
    t.has(n) || (oj(n, { withFileTypes: !0 }).forEach((o) => {
      o.isDirectory() ? i(wf(n, o.name)) : o.isFile() && r.add(wf(n, o.name));
    }), t.add(n));
  }, "traverse");
  return e.filter(AC).forEach(i), { files: Array.from(r), directories: Array.from(t) };
}
s(pj, "getNestedFilesAndDirectories");
function SC(e, t, r) {
  let { files: i, directories: n } = pj(
    e.map((l) => lj(t.workingDir, l.directory))
  ), o = new wC.default({
    // poll: true, // Slow!!! Enable only in special cases
    followSymlinks: !1,
    ignored: ["**/.git", "**/node_modules"]
  });
  o.watch({ files: i, directories: n });
  let a = /* @__PURE__ */ s((l) => {
    let c = uj(t.workingDir, l);
    return Ze(c.startsWith(".") ? c : `./${c}`);
  }, "toImportPath");
  async function u(l, c) {
    let p = a(l), h = e.find((f) => f.importPathMatcher.exec(p));
    if (h) {
      r(h, p, c);
      return;
    }
    !c && AC(l) && await Promise.all(
      e.filter((f) => p.startsWith(f.directory)).map(async (f) => {
        let d = wf(
          l,
          "**",
          // files can be e.g. '**/foo/*/*.js' so we just want the last bit,
          // because the directory could already be within the files part (e.g. './x/foo/bar')
          aj(f.files)
        ), { globby: m } = await Promise.resolve().then(() => (Ip(), Bp));
        (await m(Ze(d), cj(d))).forEach((b) => {
          let D = a(b);
          f.importPathMatcher.exec(D) && r(f, D, c);
        });
      })
    );
  }
  return s(u, "onChangeOrRemove"), o.on("change", async (l, c, p) => {
    await u(l, !c);
  }), o.on("remove", async (l, c) => {
    await u(l, !0);
  }), () => o.close();
}
s(SC, "watchStorySpecifiers");

// src/core-server/utils/watchConfig.ts
var FC = he(Cf(), 1);
function _C(e, t) {
  let r = new FC.default({
    followSymlinks: !1,
    ignored: ["**/.git", "**/node_modules"]
  });
  return r.watch({
    directories: [e]
  }), r.on("change", async (i, n, o) => {
    await t(i, !n);
  }), r.on("remove", async (i, n) => {
    await t(i, !0);
  }), () => r.close();
}
s(_C, "watchConfig");

// src/core-server/utils/stories-json.ts
var mj = 100;
async function kC(e, t, r) {
  let n = await (await t).getIndex();
  await hj(e, JSON.stringify(r ? r(n) : n));
}
s(kC, "extractStoriesJson");
function TC({
  app: e,
  initializedStoryIndexGenerator: t,
  workingDir: r = process.cwd(),
  configDir: i,
  serverChannel: n,
  normalizedStories: o
}) {
  let a = nf(() => n.emit(dj), mj, {
    leading: !0
  });
  SC(o, { workingDir: r }, async (u, l, c) => {
    (await t).invalidate(u, l, c), a();
  }), i && _C(i, async (u) => {
    fj(u).startsWith("preview") && ((await t).invalidateAll(), a());
  }), e.use("/index.json", async (u, l) => {
    try {
      let p = await (await t).getIndex();
      l.setHeader("Content-Type", "application/json"), l.end(JSON.stringify(p));
    } catch (c) {
      l.statusCode = 500, l.end(c instanceof Error ? c.toString() : String(c));
    }
  });
}
s(TC, "useStoriesJson");

// src/core-server/utils/summarizeIndex.ts
import { isExampleStoryId as gj } from "storybook/internal/telemetry";
var Dj = /(page|screen)/i;
var yj = /* @__PURE__ */ s((e) => Dj.test(e), "isPageStory"), xj = /* @__PURE__ */ s((e) => [
  "example-introduction--docs",
  "configure-your-project--docs",
  "example-button--docs",
  "example-button--primary",
  "example-button--secondary",
  "example-button--large",
  "example-button--small",
  "example-header--docs",
  "example-header--logged-in",
  "example-header--logged-out",
  "example-page--logged-in",
  "example-page--logged-out"
].includes(e.id), "isCLIExampleEntry");
function uu(e) {
  let t = 0, r = /* @__PURE__ */ new Set(), i = 0, n = 0, o = 0, a = 0, u = 0, l = 0, c = 0, p = 0, h = 0, f = 0;
  Object.values(e.entries).forEach((m) => {
    xj(m) ? (m.type === "story" && (i += 1), m.type === "docs" && (a += 1)) : gj(m.id) ? (m.type === "story" && (n += 1), m.type === "docs" &&
    (o += 1)) : m.type === "story" ? (t += 1, r.add(m.title), yj(m.title) && (u += 1), m.tags?.includes(U1) && (l += 1), m.tags?.includes("s\
velte-csf-v4") ? h += 1 : m.tags?.includes("svelte-csf-v5") && (f += 1)) : m.type === "docs" && (Vi(m) ? p += 1 : m.tags?.includes(Rn) && (c +=
    1));
  });
  let d = r.size;
  return {
    storyCount: t,
    componentCount: d,
    pageStoryCount: u,
    playStoryCount: l,
    autodocsCount: c,
    mdxCount: p,
    exampleStoryCount: i,
    exampleDocsCount: a,
    onboardingStoryCount: n,
    onboardingDocsCount: o,
    svelteCsfV4Count: h,
    svelteCsfV5Count: f,
    version: e.v
  };
}
s(uu, "summarizeIndex");

// src/core-server/build-static.ts
async function RC(e) {
  if (e.configType = "PRODUCTION", e.outputDir === "")
    throw new Error("Won't remove current directory. Check your outputDir!");
  if (e.outputDir = BC(e.outputDir), e.configDir = BC(e.configDir), vi.info(
    `=> Cleaning outputDir: ${OC.default.cyan(wj(process.cwd(), e.outputDir))}`
  ), e.outputDir === "/")
    throw new Error("Won't remove directory '/'. Check your outputDir!");
  await vj(e.outputDir, { recursive: !0, force: !0 }).catch(() => {
  }), await bj(e.outputDir, { recursive: !0 });
  let t = await Aj(e), { framework: r } = t, i = [], n = typeof r == "string" ? r : r?.name;
  n ? i.push(lu(n, "preset")) : e.ignorePreview || vi.warn(`you have not specified a framework in your ${e.configDir}/main.js`), vi.info("=>\
 Loading presets");
  let o = await IC({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...i
    ],
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    isCritical: !0,
    ...e
  }), { renderer: a } = await o.apply("core", {}), u = await o.apply("build", {}), [l, c] = await fv({ ...e, presets: o, build: u }), p = a ?
  _j(e.configDir, a, e) : void 0;
  o = await IC({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...c.corePresets || [],
      ...l.corePresets || [],
      ...p ? [p] : [],
      ...i
    ],
    overridePresets: [
      ...l.overridePresets || [],
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    build: u
  });
  let [h, f, d, m, g, b] = await Promise.all([
    o.apply("features"),
    o.apply("core"),
    o.apply("staticDirs"),
    o.apply("experimental_indexers", []),
    o.apply("stories"),
    o.apply("docs")
  ]), D = process.env.STORYBOOK_INVOKED_BY;
  !f?.disableTelemetry && D && PC("test-run", { runner: D, watch: !1 }, { configDir: e.configDir });
  let v = {
    ...e,
    presets: o,
    features: h,
    build: u
  }, S = [];
  Tj.FEATURES = h, e.previewOnly || await za(
    async () => c.build({ startTime: process.hrtime(), options: v })
  ), d && S.push(
    hv(d, e.outputDir, e.configDir)
  );
  let k = lu(
    Cj(H.resolve("storybook/internal/package.json")),
    "assets/browser"
  );
  S.push(Ej(k, e.outputDir, { recursive: !0 }));
  let L = Promise.resolve(void 0);
  if (!e.ignorePreview) {
    let w = process.cwd(), T = {
      configDir: e.configDir,
      workingDir: w
    }, _ = Fj(g, T), q = new Yr(_, {
      ...T,
      indexers: m,
      docs: b,
      build: u
    });
    L = q.initialize().then(() => q), S.push(
      kC(
        lu(e.outputDir, "index.json"),
        L
      )
    );
  }
  f?.disableProjectJson || S.push(
    mv(lu(e.outputDir, "project.json"), e.configDir)
  ), e.debugWebpack && Sj("Preview webpack config", await l.getConfig(v)), e.ignorePreview ? vi.info("=> Not building preview") : vi.info("=\
> Building preview..");
  let C = process.hrtime();
  await Promise.all([
    ...e.ignorePreview ? [] : [
      l.build({
        startTime: C,
        options: v
      }).then(async (w) => {
        vi.trace({ message: "=> Preview built", time: process.hrtime(C) });
        let T = e.webpackStatsJson || e.statsJson;
        if (T) {
          let _ = T === !0 ? e.outputDir : T;
          await Ga(_, w);
        }
      }).catch((w) => {
        throw vi.error("=> Failed to build the preview"), process.exitCode = 1, w;
      })
    ],
    ...S
  ]), !f?.disableTelemetry && !e.test && S.push(
    L.then(async (w) => {
      let T = await w?.getIndex(), _ = {
        precedingUpgrade: await kj()
      };
      T && Object.assign(_, {
        storyIndex: uu(T)
      }), await PC("build", _, { configDir: e.configDir });
    })
  ), vi.info(`=> Output directory: ${e.outputDir}`);
}
s(RC, "buildStaticStandalone");

// src/core-server/build-dev.ts
var xk = he(Nd(), 1);
import { readFile as oX } from "node:fs/promises";
import { join as aX, relative as uX, resolve as Zm } from "node:path";
import {
  JsPackageManagerFactory as lX,
  getConfigInfo as cX,
  getProjectRoot as pX,
  loadAllPresets as Dk,
  loadMainConfig as hX,
  resolveAddonName as fX,
  resolvePathInStorybookCache as dX,
  serverResolve as mX,
  validateFrameworkName as gX,
  versions as DX
} from "storybook/internal/common";
import { deprecate as yk, logger as eg } from "storybook/internal/node-logger";
import { MissingBuilderError as yX, NoStatsForViteDevError as xX } from "storybook/internal/server-errors";
import { oneWayHash as EX, telemetry as bX } from "storybook/internal/telemetry";
import { global as vX } from "@storybook/global";
var Ek = he(Ft(), 1);

// src/core-server/dev-server.ts
import { logConfig as EJ } from "storybook/internal/common";
import { logger as f3 } from "storybook/internal/node-logger";
import { MissingBuilderError as bJ } from "storybook/internal/server-errors";

// ../node_modules/@polka/compression/build.mjs
import so from "node:zlib";
var RV = /* @__PURE__ */ s(() => {
}, "NOOP"), NV = /text|javascript|\/json|xml/i;
function pS(e, t) {
  return e ? Buffer.byteLength(e, t) : 0;
}
s(pS, "getChunkSize");
function Ld({ threshold: e = 1024, level: t = -1, brotli: r = !1, gzip: i = !0, mimes: n = NV } = {}) {
  let o = typeof r == "object" && r || {}, a = typeof i == "object" && i || {};
  return so.createBrotliCompress || (r = !1), (u, l, c = RV) => {
    let p = u.headers["accept-encoding"] + "", h = (r && /\bbr\b/.exec(p) || i && /\bgzip\b/.exec(p) || [])[0];
    if (u.method === "HEAD" || !h) return c();
    let f, d = [], m = 0, g = !1, b = 0;
    function D() {
      g = !0, b = l.getHeader("Content-Length") | 0 || b;
      let C = n.test(
        String(l.getHeader("Content-Type") || "text/plain")
      ), w = !l.getHeader("Content-Encoding"), T = d || [];
      C && w && b >= e ? (l.setHeader("Content-Encoding", h), l.removeHeader("Content-Length"), h === "br" ? f = so.createBrotliCompress({
        params: Object.assign({
          [so.constants.BROTLI_PARAM_QUALITY]: t,
          [so.constants.BROTLI_PARAM_SIZE_HINT]: b
        }, o)
      }) : f = so.createGzip(
        Object.assign({ level: t }, a)
      ), f.on("data", (_) => S.call(l, _) || f.pause()), k.call(l, "drain", () => f.resume()), f.on("end", () => v.call(l)), T.forEach((_) => f.
      on.apply(f, _))) : (d = null, T.forEach((_) => k.apply(l, _))), L.call(l, m || l.statusCode);
    }
    s(D, "start");
    let { end: v, write: S, on: k, writeHead: L } = l;
    l.writeHead = function(C, w, T) {
      if (typeof w != "string" && ([T, w] = [w, T]), T) for (let _ in T) l.setHeader(_, T[_]);
      return m = C, this;
    }, l.write = function(C, w) {
      return b += pS(C, w), g || D(), f ? f.write.apply(f, arguments) : S.apply(this, arguments);
    }, l.end = function(C, w) {
      return arguments.length > 0 && typeof C != "function" && (b += pS(C, w)), g || D(), f ? f.end.apply(f, arguments) : v.apply(this, arguments);
    }, l.on = function(C, w) {
      return d ? f ? f.on(C, w) : d.push([C, w]) : k.call(this, C, w), this;
    }, c();
  };
}
s(Ld, "default");

// ../node_modules/polka/build.mjs
import hS from "node:http";
import { setImmediate as LV } from "node:timers";

// ../node_modules/regexparam/dist/index.mjs
function Md(e, t) {
  if (e instanceof RegExp) return { keys: !1, pattern: e };
  var r, i, n, o, a = [], u = "", l = e.split("/");
  for (l[0] || l.shift(); n = l.shift(); )
    r = n[0], r === "*" ? (a.push(r), u += n[1] === "?" ? "(?:/(.*))?" : "/(.*)") : r === ":" ? (i = n.indexOf("?", 1), o = n.indexOf(".", 1),
    a.push(n.substring(1, ~i ? i : ~o ? o : n.length)), u += ~i && !~o ? "(?:/([^/]+?))?" : "/([^/]+?)", ~o && (u += (~i ? "?" : "") + "\\" +
    n.substring(o))) : u += "/" + n;
  return {
    keys: a,
    pattern: new RegExp("^" + u + (t ? "(?=$|/)" : "/?$"), "i")
  };
}
s(Md, "parse");

// ../node_modules/trouter/index.mjs
var jd = {
  "": 0,
  GET: 1,
  HEAD: 2,
  PATCH: 3,
  OPTIONS: 4,
  CONNECT: 5,
  DELETE: 6,
  TRACE: 7,
  POST: 8,
  PUT: 9
}, Su = class {
  static {
    s(this, "Trouter");
  }
  constructor() {
    this.routes = [], this.all = this.add.bind(this, ""), this.get = this.add.bind(this, "GET"), this.head = this.add.bind(this, "HEAD"), this.
    patch = this.add.bind(this, "PATCH"), this.options = this.add.bind(this, "OPTIONS"), this.connect = this.add.bind(this, "CONNECT"), this.
    delete = this.add.bind(this, "DELETE"), this.trace = this.add.bind(this, "TRACE"), this.post = this.add.bind(this, "POST"), this.put = this.
    add.bind(this, "PUT");
  }
  use(t, ...r) {
    let i = [].concat.apply([], r), { keys: n, pattern: o } = Md(t, !0);
    return this.routes.push({ keys: n, pattern: o, method: "", handlers: i, midx: jd[""] }), this;
  }
  add(t, r, ...i) {
    let { keys: n, pattern: o } = Md(r), a = [].concat.apply([], i);
    return this.routes.push({ keys: n, pattern: o, method: t, handlers: a, midx: jd[t] }), this;
  }
  find(t, r) {
    let i = jd[t], n = i === 2, o = 0, a = 0, u, l, c = this.routes, p = [], h = {}, f = [];
    for (; o < c.length; o++)
      if (l = c[o], l.midx === i || l.midx === 0 || n && l.midx === 1)
        if (l.keys === !1) {
          if (p = l.pattern.exec(r), p === null) continue;
          if (p.groups !== void 0) for (u in p.groups) h[u] = p.groups[u];
          l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]);
        } else if (l.keys.length > 0) {
          if (p = l.pattern.exec(r), p === null) continue;
          for (a = 0; a < l.keys.length; ) h[l.keys[a]] = p[++a];
          l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]);
        } else l.pattern.test(r) && (l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]));
    return { params: h, handlers: f };
  }
};

// ../node_modules/polka/build.mjs
Hh();
function MV(e, t, r) {
  let i = typeof e.status == "number" && e.status;
  i = r.statusCode = i && i >= 100 ? i : 500, typeof e == "string" || Buffer.isBuffer(e) ? r.end(e) : r.end(e.message || hS.STATUS_CODES[i]);
}
s(MV, "onError");
var qd = /* @__PURE__ */ s((e) => e instanceof Fu ? e.attach : e, "mount"), Fu = class e extends Su {
  static {
    s(this, "Polka");
  }
  constructor(t = {}) {
    super(), this.parse = zh, this.server = t.server, this.handler = this.handler.bind(this), this.onError = t.onError || MV, this.onNoMatch =
    t.onNoMatch || this.onError.bind(null, { status: 404 }), this.attach = (r, i) => LV(this.handler, r, i);
  }
  use(t, ...r) {
    return t === "/" ? super.use(t, r.map(qd)) : typeof t == "function" || t instanceof e ? super.use("/", [t, ...r].map(qd)) : super.use(
      t,
      (i, n, o) => {
        if (typeof t == "string") {
          let a = t.length;
          t.startsWith("/") || a++, i.url = i.url.substring(a) || "/", i.path = i.path.substring(a) || "/";
        } else
          i.url = i.url.replace(t, "") || "/", i.path = i.path.replace(t, "") || "/";
        i.url.charAt(0) !== "/" && (i.url = "/" + i.url), o();
      },
      r.map(qd),
      (i, n, o) => {
        i.path = i._parsedUrl.pathname, i.url = i.path + i._parsedUrl.search, o();
      }
    ), this;
  }
  listen() {
    return (this.server = this.server || hS.createServer()).on("request", this.attach), this.server.listen.apply(this.server, arguments), this;
  }
  handler(t, r, i) {
    let n = this.parse(t), o = n.pathname, a = this.find(t.method, t.path = o);
    if (t.url = o + n.search, t.originalUrl = t.originalUrl || t.url, t.query = n.query || {}, t.search = n.search, t.params = a.params, o.length >
    1 && o.indexOf("%", 1) !== -1)
      for (let h in t.params)
        try {
          t.params[h] = decodeURIComponent(t.params[h]);
        } catch {
        }
    let u = 0, l = a.handlers.concat(this.onNoMatch), c = l.length, p = /* @__PURE__ */ s(async () => r.finished || u < c && l[u++](t, r, i),
    "loop");
    (i = i || ((h) => h ? this.onError(h, t, r, i) : p().catch(i)))();
  }
};
function $d(e) {
  return new Fu(e);
}
s($d, "default");

// src/core-server/utils/doTelemetry.ts
import { getPrecedingUpgrade as HV, telemetry as JV } from "storybook/internal/telemetry";

// src/core-server/withTelemetry.ts
var fS = he(Nd(), 1);
import { HandledError as jV, cache as Vd, loadAllPresets as qV } from "storybook/internal/common";
import { logger as $V } from "storybook/internal/node-logger";
import { getPrecedingUpgrade as VV, oneWayHash as UV, telemetry as Ud } from "storybook/internal/telemetry";
var WV = /* @__PURE__ */ s(async () => {
  if (process.env.CI || !process.stdout.isTTY)
    return;
  let { enableCrashReports: e } = await (0, fS.default)({
    type: "confirm",
    name: "enableCrashReports",
    message: "Would you like to help improve Storybook by sending anonymous crash reports?",
    initial: !0
  });
  return await Vd.set("enableCrashReports", e), e;
}, "promptCrashReports");
async function zV({
  cliOptions: e,
  presetOptions: t,
  skipPrompt: r
}) {
  if (e.disableTelemetry)
    return "none";
  if (!t)
    return "full";
  let n = await (await qV(t)).apply("core");
  if (n?.enableCrashReports !== void 0)
    return n.enableCrashReports ? "full" : "error";
  if (n?.disableTelemetry)
    return "none";
  let o = await Vd.get("enableCrashReports") ?? await Vd.get("enableCrashreports");
  if (o !== void 0)
    return o ? "full" : "error";
  if (r)
    return "error";
  let a = await WV();
  return a !== void 0 ? a ? "full" : "error" : "full";
}
s(zV, "getErrorLevel");
async function Wd(e, t, r) {
  try {
    let i = "error";
    try {
      i = await zV(r);
    } catch {
    }
    if (i !== "none") {
      let n = await VV(), o = e, a;
      "message" in o ? a = o.message ? UV(o.message) : "EMPTY_MESSAGE" : a = "NO_MESSAGE";
      let { code: u, name: l, category: c } = o;
      await Ud(
        "error",
        {
          code: u,
          name: l,
          category: c,
          eventType: t,
          precedingUpgrade: n,
          error: i === "full" ? o : void 0,
          errorHash: a,
          // if we ever end up sending a non-error instance, we'd like to know
          isErrorInstance: o instanceof Error
        },
        {
          immediate: !0,
          configDir: r.cliOptions.configDir || r.presetOptions?.configDir,
          enableCrashReports: i === "full"
        }
      );
    }
  } catch {
  }
}
s(Wd, "sendTelemetryError");
async function yoe(e, t, r) {
  let i = !(t.cliOptions.disableTelemetry || t.cliOptions.test === !0), n = !1;
  async function o() {
    n = !0, i && await Ud("canceled", { eventType: e }, { stripMetadata: !0, immediate: !0 }), process.exit(0);
  }
  s(o, "cancelTelemetry"), e === "init" && process.on("SIGINT", o), i && Ud("boot", { eventType: e }, { stripMetadata: !0 });
  try {
    return await r();
  } catch (a) {
    if (n)
      return;
    if (!(a instanceof jV)) {
      let { printError: u = $V.error } = t;
      u(a);
    }
    throw i && await Wd(a, e, t), a;
  } finally {
    process.off("SIGINT", o);
  }
}
s(yoe, "withTelemetry");

// src/core-server/utils/versionStatus.ts
var dS = /* @__PURE__ */ s((e) => e.error ? "error" : e.cached ? "cached" : "success", "versionStatus");

// src/core-server/utils/doTelemetry.ts
async function mS(e, t, r, i) {
  t?.disableTelemetry || r.then(async (n) => {
    let o;
    try {
      o = await n?.getIndexAndStats();
    } catch (c) {
      if (!(c instanceof Error))
        throw new Error("encountered a non-recoverable error");
      Wd(c, "dev", {
        cliOptions: i,
        presetOptions: { ...i, corePresets: [], overridePresets: [] }
      });
      return;
    }
    let { versionCheck: a, versionUpdates: u } = i;
    yt(
      !u || u && a,
      "versionCheck should be defined when versionUpdates is true"
    );
    let l = {
      precedingUpgrade: await HV()
    };
    o && Object.assign(l, {
      versionStatus: u && a ? dS(a) : "disabled",
      storyIndex: uu(o.storyIndex),
      storyStats: o.stats
    }), JV("dev", l, { configDir: i.configDir });
  }), t?.disableProjectJson || gv(e, i.configDir);
}
s(mS, "doTelemetry");

// src/core-server/utils/get-caching-middleware.ts
function gS() {
  return (e, t, r) => {
    t.setHeader("Cache-Control", "no-store"), r();
  };
}
s(gS, "getCachingMiddleware");

// src/core-server/utils/get-server-channel.ts
var Gn = he(HS(), 1);
import { Channel as Zz, HEARTBEAT_INTERVAL as eH } from "storybook/internal/channels";
import JS, { WebSocketServer as tH } from "ws";

// src/shared/universal-store/index.ts
var Ji = he(Ft(), 1);

// src/shared/universal-store/instances.ts
var rm = /* @__PURE__ */ new Map();

// src/shared/universal-store/index.ts
var Qz = "UNIVERSAL_STORE:", nr = {
  PENDING: "PENDING",
  RESOLVED: "RESOLVED",
  REJECTED: "REJECTED"
}, Ct = class e {
  constructor(t, r) {
    /** Enable debug logs for this store */
    this.debugging = !1;
    // TODO: narrow type of listeners based on event type
    this.listeners = /* @__PURE__ */ new Map([["*", /* @__PURE__ */ new Set()]]);
    /** Gets the current state */
    this.getState = /* @__PURE__ */ s(() => (this.debug("getState", { state: this.state }), this.state), "getState");
    /**
     * Subscribes to store events
     *
     * @returns A function to unsubscribe
     */
    this.subscribe = /* @__PURE__ */ s((t, r) => {
      let i = typeof t == "function", n = i ? "*" : t, o = i ? t : r;
      if (this.debug("subscribe", { eventType: n, listener: o }), !o)
        throw new TypeError(
          `Missing first subscribe argument, or second if first is the event type, when subscribing to a UniversalStore with id '${this.id}'`
        );
      return this.listeners.has(n) || this.listeners.set(n, /* @__PURE__ */ new Set()), this.listeners.get(n).add(o), () => {
        this.debug("unsubscribe", { eventType: n, listener: o }), this.listeners.has(n) && (this.listeners.get(n).delete(o), this.listeners.
        get(n)?.size === 0 && this.listeners.delete(n));
      };
    }, "subscribe");
    /** Sends a custom event to the other stores */
    this.send = /* @__PURE__ */ s((t) => {
      if (this.debug("send", { event: t }), this.status !== e.Status.READY)
        throw new TypeError(
          Ji.dedent`Cannot send event before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
            {
              event: t,
              id: this.id,
              actor: this.actor,
              environment: this.environment
            },
            null,
            2
          )}`
        );
      this.emitToListeners(t, { actor: this.actor }), this.emitToChannel(t, { actor: this.actor });
    }, "send");
    if (this.debugging = t.debug ?? !1, !e.isInternalConstructing)
      throw new TypeError(
        "UniversalStore is not constructable - use UniversalStore.create() instead"
      );
    if (e.isInternalConstructing = !1, this.id = t.id, this.actorId = Date.now().toString(36) + Math.random().toString(36).substring(2), this.
    actorType = t.leader ? e.ActorType.LEADER : e.ActorType.FOLLOWER, this.state = t.initialState, this.channelEventName = `${Qz}${this.id}`,
    this.debug("constructor", {
      options: t,
      environmentOverrides: r,
      channelEventName: this.channelEventName
    }), this.actor.type === e.ActorType.LEADER)
      this.syncing = {
        state: nr.RESOLVED,
        promise: Promise.resolve()
      };
    else {
      let i, n, o = new Promise((a, u) => {
        i = /* @__PURE__ */ s(() => {
          this.syncing.state === nr.PENDING && (this.syncing.state = nr.RESOLVED, a());
        }, "syncingResolve"), n = /* @__PURE__ */ s((l) => {
          this.syncing.state === nr.PENDING && (this.syncing.state = nr.REJECTED, u(l));
        }, "syncingReject");
      });
      this.syncing = {
        state: nr.PENDING,
        promise: o,
        resolve: i,
        reject: n
      };
    }
    this.getState = this.getState.bind(this), this.setState = this.setState.bind(this), this.subscribe = this.subscribe.bind(this), this.onStateChange =
    this.onStateChange.bind(this), this.send = this.send.bind(this), this.emitToChannel = this.emitToChannel.bind(this), this.prepareThis = this.
    prepareThis.bind(this), this.emitToListeners = this.emitToListeners.bind(this), this.handleChannelEvents = this.handleChannelEvents.bind(
    this), this.debug = this.debug.bind(this), this.channel = r?.channel ?? e.preparation.channel, this.environment = r?.environment ?? e.preparation.
    environment, this.channel && this.environment ? (e.preparation.resolve({ channel: this.channel, environment: this.environment }), this.prepareThis(
    { channel: this.channel, environment: this.environment })) : e.preparation.promise.then(this.prepareThis);
  }
  static {
    s(this, "UniversalStore");
  }
  static {
    /**
     * Defines the possible actor types in the store system
     *
     * @readonly
     */
    this.ActorType = {
      LEADER: "LEADER",
      FOLLOWER: "FOLLOWER"
    };
  }
  static {
    /**
     * Defines the possible environments the store can run in
     *
     * @readonly
     */
    this.Environment = {
      SERVER: "SERVER",
      MANAGER: "MANAGER",
      PREVIEW: "PREVIEW",
      UNKNOWN: "UNKNOWN",
      MOCK: "MOCK"
    };
  }
  static {
    /**
     * Internal event types used for store synchronization
     *
     * @readonly
     */
    this.InternalEventType = {
      EXISTING_STATE_REQUEST: "__EXISTING_STATE_REQUEST",
      EXISTING_STATE_RESPONSE: "__EXISTING_STATE_RESPONSE",
      SET_STATE: "__SET_STATE",
      LEADER_CREATED: "__LEADER_CREATED",
      FOLLOWER_CREATED: "__FOLLOWER_CREATED"
    };
  }
  static {
    this.Status = {
      UNPREPARED: "UNPREPARED",
      SYNCING: "SYNCING",
      READY: "READY",
      ERROR: "ERROR"
    };
  }
  static {
    // This is used to check if constructor was called from the static factory create()
    this.isInternalConstructing = !1;
  }
  static {
    e.setupPreparationPromise();
  }
  static setupPreparationPromise() {
    let t, r, i = new Promise(
      (n, o) => {
        t = /* @__PURE__ */ s((a) => {
          n(a);
        }, "resolveRef"), r = /* @__PURE__ */ s((...a) => {
          o(a);
        }, "rejectRef");
      }
    );
    e.preparation = {
      resolve: t,
      reject: r,
      promise: i
    };
  }
  /** The actor object representing the store instance with a unique ID and a type */
  get actor() {
    return Object.freeze({
      id: this.actorId,
      type: this.actorType,
      environment: this.environment ?? e.Environment.UNKNOWN
    });
  }
  /**
   * The current state of the store, that signals both if the store is prepared by Storybook and
   * also - in the case of a follower - if the state has been synced with the leader's state.
   */
  get status() {
    if (!this.channel || !this.environment)
      return e.Status.UNPREPARED;
    switch (this.syncing?.state) {
      case nr.PENDING:
      case void 0:
        return e.Status.SYNCING;
      case nr.REJECTED:
        return e.Status.ERROR;
      case nr.RESOLVED:
      default:
        return e.Status.READY;
    }
  }
  /**
   * A promise that resolves when the store is fully ready. A leader will be ready when the store
   * has been prepared by Storybook, which is almost instantly.
   *
   * A follower will be ready when the state has been synced with the leader's state, within a few
   * hundred milliseconds.
   */
  untilReady() {
    return Promise.all([e.preparation.promise, this.syncing?.promise]);
  }
  /** Creates a new instance of UniversalStore */
  static create(t) {
    if (!t || typeof t?.id != "string")
      throw new TypeError("id is required and must be a string, when creating a UniversalStore");
    t.debug && console.debug(
      Ji.dedent`[UniversalStore]
        create`,
      { options: t }
    );
    let r = rm.get(t.id);
    if (r)
      return console.warn(Ji.dedent`UniversalStore with id "${t.id}" already exists in this environment, re-using existing.
        You should reuse the existing instance instead of trying to create a new one.`), r;
    e.isInternalConstructing = !0;
    let i = new e(t);
    return rm.set(t.id, i), i;
  }
  /**
   * Used by Storybook to set the channel for all instances of UniversalStore in the given
   * environment.
   *
   * @internal
   */
  static __prepare(t, r) {
    e.preparation.channel = t, e.preparation.environment = r, e.preparation.resolve({ channel: t, environment: r });
  }
  /**
   * Updates the store's state
   *
   * Either a new state or a state updater function can be passed to the method.
   */
  setState(t) {
    let r = this.state, i = typeof t == "function" ? t(r) : t;
    if (this.debug("setState", { newState: i, previousState: r, updater: t }), this.status !== e.Status.READY)
      throw new TypeError(
        Ji.dedent`Cannot set state before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
          {
            newState: i,
            id: this.id,
            actor: this.actor,
            environment: this.environment
          },
          null,
          2
        )}`
      );
    this.state = i;
    let n = {
      type: e.InternalEventType.SET_STATE,
      payload: {
        state: i,
        previousState: r
      }
    };
    this.emitToChannel(n, { actor: this.actor }), this.emitToListeners(n, { actor: this.actor });
  }
  /**
   * Subscribes to state changes
   *
   * @returns Unsubscribe function
   */
  onStateChange(t) {
    return this.debug("onStateChange", { listener: t }), this.subscribe(
      e.InternalEventType.SET_STATE,
      ({ payload: r }, i) => {
        t(r.state, r.previousState, i);
      }
    );
  }
  emitToChannel(t, r) {
    this.debug("emitToChannel", { event: t, eventInfo: r, channel: !!this.channel }), this.channel?.emit(this.channelEventName, {
      event: t,
      eventInfo: r
    });
  }
  prepareThis({
    channel: t,
    environment: r
  }) {
    this.channel = t, this.environment = r, this.debug("prepared", { channel: !!t, environment: r }), this.channel.on(this.channelEventName,
    this.handleChannelEvents), this.actor.type === e.ActorType.LEADER ? this.emitToChannel(
      { type: e.InternalEventType.LEADER_CREATED },
      { actor: this.actor }
    ) : (this.emitToChannel(
      { type: e.InternalEventType.FOLLOWER_CREATED },
      { actor: this.actor }
    ), this.emitToChannel(
      { type: e.InternalEventType.EXISTING_STATE_REQUEST },
      { actor: this.actor }
    ), setTimeout(() => {
      this.syncing.reject(
        new TypeError(
          `No existing state found for follower with id: '${this.id}'. Make sure a leader with the same id exists before creating a follower\
.`
        )
      );
    }, 1e3));
  }
  emitToListeners(t, r) {
    let i = this.listeners.get(t.type), n = this.listeners.get("*");
    this.debug("emitToListeners", {
      event: t,
      eventInfo: r,
      eventTypeListeners: i,
      everythingListeners: n
    }), [...i ?? [], ...n ?? []].forEach(
      (o) => o(t, r)
    );
  }
  handleChannelEvents(t) {
    let { event: r, eventInfo: i } = t;
    if ([i.actor.id, i.forwardingActor?.id].includes(this.actor.id)) {
      this.debug("handleChannelEvents: Ignoring event from self", { channelEvent: t });
      return;
    } else if (this.syncing?.state === nr.PENDING && r.type !== e.InternalEventType.EXISTING_STATE_RESPONSE) {
      this.debug("handleChannelEvents: Ignoring event while syncing", { channelEvent: t });
      return;
    }
    if (this.debug("handleChannelEvents", { channelEvent: t }), this.actor.type === e.ActorType.LEADER) {
      let n = !0;
      switch (r.type) {
        case e.InternalEventType.EXISTING_STATE_REQUEST:
          n = !1;
          let o = {
            type: e.InternalEventType.EXISTING_STATE_RESPONSE,
            payload: this.state
          };
          this.debug("handleChannelEvents: responding to existing state request", {
            responseEvent: o
          }), this.emitToChannel(o, { actor: this.actor }), this.emitToListeners(o, { actor: this.actor });
          break;
        case e.InternalEventType.LEADER_CREATED:
          n = !1, this.syncing.state = nr.REJECTED, this.debug("handleChannelEvents: erroring due to second leader being created", {
            event: r
          }), console.error(
            Ji.dedent`Detected multiple UniversalStore leaders created with the same id "${this.id}".
            Only one leader can exists at a time, your stores are now in an invalid state.
            Leaders detected:
            this: ${JSON.stringify(this.actor, null, 2)}
            other: ${JSON.stringify(i.actor, null, 2)}`
          );
          break;
      }
      n && (this.debug("handleChannelEvents: forwarding event", { channelEvent: t }), this.emitToChannel(r, { actor: i.actor, forwardingActor: this.
      actor }));
    }
    if (this.actor.type === e.ActorType.FOLLOWER)
      switch (r.type) {
        case e.InternalEventType.EXISTING_STATE_RESPONSE:
          if (this.debug("handleChannelEvents: Setting state from leader's existing state response", {
            event: r
          }), this.syncing?.state !== nr.PENDING)
            break;
          this.syncing.resolve?.();
          let n = {
            type: e.InternalEventType.SET_STATE,
            payload: {
              state: r.payload,
              previousState: this.state
            }
          };
          this.state = r.payload, this.emitToListeners(n, i);
          break;
      }
    switch (r.type) {
      case e.InternalEventType.SET_STATE:
        this.debug("handleChannelEvents: Setting state", { event: r }), this.state = r.payload.state;
        break;
    }
    this.emitToListeners(r, { actor: i.actor });
  }
  debug(t, r) {
    this.debugging && console.debug(
      Ji.dedent`[UniversalStore::${this.id}::${this.environment ?? e.Environment.UNKNOWN}]
        ${t}`,
      JSON.stringify(
        {
          data: r,
          actor: this.actor,
          state: this.state,
          status: this.status
        },
        null,
        2
      )
    );
  }
  /**
   * Used to reset the static fields of the UniversalStore class when cleaning up tests
   *
   * @internal
   */
  static __reset() {
    e.preparation.reject(new Error("reset")), e.setupPreparationPromise(), e.isInternalConstructing = !1;
  }
};

// src/core-server/utils/get-server-channel.ts
var im = class {
  static {
    s(this, "ServerChannelTransport");
  }
  constructor(t) {
    this.socket = new tH({ noServer: !0 }), t.on("upgrade", (i, n, o) => {
      i.url === "/storybook-server-channel" && this.socket.handleUpgrade(i, n, o, (a) => {
        this.socket.emit("connection", a, i);
      });
    }), this.socket.on("connection", (i) => {
      i.on("message", (n) => {
        let o = n.toString(), a = typeof o == "string" && (0, Gn.isJSON)(o) ? (0, Gn.parse)(o, {}) : o;
        this.handler?.(a);
      });
    });
    let r = setInterval(() => {
      this.send({ type: "ping" });
    }, eH);
    this.socket.on("close", /* @__PURE__ */ s(function() {
      clearInterval(r);
    }, "close")), process.on("SIGTERM", () => {
      this.socket.clients.forEach((i) => {
        i.readyState === JS.OPEN && i.close(1001, "Server is shutting down");
      }), this.socket.close(() => process.exit(0));
    });
  }
  setHandler(t) {
    this.handler = t;
  }
  send(t) {
    let r = (0, Gn.stringify)(t, { maxDepth: 15 });
    Array.from(this.socket.clients).filter((i) => i.readyState === JS.OPEN).forEach((i) => i.send(r));
  }
};
function GS(e) {
  let t = [new im(e)], r = new Zz({ transports: t, async: !0 });
  return Ct.__prepare(r, Ct.Environment.SERVER), r;
}
s(GS, "getServerChannel");

// src/core-server/utils/getAccessControlMiddleware.ts
function XS(e) {
  return (t, r, i) => {
    r.setHeader("Access-Control-Allow-Origin", "*"), r.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Ac\
cept"), e && (r.setHeader("Cross-Origin-Opener-Policy", "same-origin"), r.setHeader("Cross-Origin-Embedder-Policy", "require-corp")), i();
  };
}
s(XS, "getAccessControlMiddleware");

// src/core-server/utils/getStoryIndexGenerator.ts
import { normalizeStories as rH } from "storybook/internal/common";
async function KS(e, t, r) {
  let i = process.cwd(), n = t.configDir, o = {
    configDir: n,
    workingDir: i
  }, a = t.presets.apply("stories"), u = t.presets.apply("experimental_indexers", []), l = t.presets.apply("docs"), c = rH(await a, o), p = new Yr(
  c, {
    ...o,
    indexers: await u,
    docs: await l,
    workingDir: i
  }), h = p.initialize().then(() => p);
  return TC({
    app: e,
    initializedStoryIndexGenerator: h,
    normalizedStories: c,
    serverChannel: r,
    workingDir: i,
    configDir: n
  }), h;
}
s(KS, "getStoryIndexGenerator");

// src/core-server/utils/middleware.ts
import { existsSync as iH } from "node:fs";
import { resolve as nH } from "node:path";
var sH = /* @__PURE__ */ s((e) => [".js", ".cjs"].reduce((t, r) => {
  let i = `${e}${r}`;
  return !t && iH(i) ? i : t;
}, ""), "fileExists");
function YS(e) {
  let t = sH(nH(e, "middleware"));
  if (t) {
    let r = H(t);
    return r.__esModule && (r = r.default), r;
  }
  return () => {
  };
}
s(YS, "getMiddleware");

// src/core-server/utils/open-in-browser.ts
var RF = he(EF(), 1), NF = he(OF(), 1), LF = he(Ft(), 1);
import { logger as IH } from "storybook/internal/node-logger";
import PH from "better-opn";
function MF(e) {
  let t = process.env.BROWSER, r = t === "chrome" || t === "chromium" || t === "brave" || t === "com.brave.browser", i = t ? { app: { name: t } } :
  {};
  (0, RF.default)(async (n, o) => {
    try {
      o && (o.isChrome || o.isChromium || o.identity === "com.brave.browser" || r) ? await PH(e) : await (0, NF.default)(e, i);
    } catch {
      IH.error(LF.dedent`
        Could not open ${e} inside a browser. If you're running this command inside a
        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a
        browser by default.
      `);
    }
  });
}
s(MF, "openInBrowser");

// src/core-server/utils/server-address.ts
var a3 = he(o3(), 1);
import mJ from "node:os";
import { logger as gJ } from "storybook/internal/node-logger";
function u3(e, t, r, i) {
  let n = new URL(`${r}://localhost:${e}/`), o = new URL(`${r}://${t || DJ()}:${e}/`);
  if (i) {
    let a = `?path=${decodeURIComponent(
      i.startsWith("/") ? i : `/${i}`
    )}`;
    n.search = a, o.search = a;
  }
  return {
    address: n.href,
    networkAddress: o.href
  };
}
s(u3, "getServerAddresses");
var l3 = /* @__PURE__ */ s((e, { exactPort: t } = {}) => (0, a3.default)(e).then((r) => (r !== e && t && process.exit(-1), r)).catch((r) => {
  gJ.error(r), process.exit(-1);
}), "getServerPort"), c3 = /* @__PURE__ */ s((e, { https: t }) => `${t ? "wss" : "ws"}://localhost:${e}/storybook-server-channel`, "getServe\
rChannelUrl"), DJ = /* @__PURE__ */ s(() => {
  let t = Object.values(mJ.networkInterfaces()).flat().filter((r) => r && r.family === "IPv4" && !r.internal);
  return t.length ? t[0]?.address : "0.0.0.0";
}, "getLocalIp");

// src/core-server/utils/server-init.ts
import { readFile as bm } from "node:fs/promises";
import { logger as p3 } from "storybook/internal/node-logger";
import yJ from "http";
import xJ from "https";
async function h3(e) {
  if (!e.https)
    return yJ.createServer();
  e.sslCert || (p3.error("Error: --ssl-cert is required with --https"), process.exit(-1)), e.sslKey || (p3.error("Error: --ssl-key is requir\
ed with --https"), process.exit(-1));
  let t = {
    ca: await Promise.all((e.sslCa || []).map((r) => bm(r, { encoding: "utf8" }))),
    cert: await bm(e.sslCert, { encoding: "utf8" }),
    key: await bm(e.sslKey, { encoding: "utf8" })
  };
  return xJ.createServer(t);
}
s(h3, "getServer");

// src/core-server/dev-server.ts
async function d3(e) {
  let [t, r] = await Promise.all([h3(e), e.presets.apply("core")]), i = $d({ server: t }), n = await e.presets.apply(
    "experimental_serverChannel",
    GS(t)
  ), o, a = KS(i, e, n).catch((S) => {
    o = S;
  });
  i.use(Ld({ level: 1 })), typeof e.extendServer == "function" && e.extendServer(t), i.use(XS(r?.crossOriginIsolated ?? !1)), i.use(gS()), YS(
  e.configDir)(i);
  let { port: u, host: l, initialPath: c } = e;
  yt(u, "expected options to have a port");
  let p = e.https ? "https" : "http", { address: h, networkAddress: f } = u3(u, l, p, c);
  if (!r?.builder)
    throw new bJ();
  let d = typeof r?.builder == "string" ? r.builder : r?.builder?.name, [m, g] = await Promise.all([
    $s(d, e.configDir),
    qs(),
    uv(i, e)
  ]);
  e.debugWebpack && EJ("Preview webpack config", await m.getConfig(e));
  let b = e.previewOnly ? void 0 : await g.start({
    startTime: process.hrtime(),
    options: e,
    router: i,
    server: t,
    channel: n
  }), D = await Promise.resolve();
  e.ignorePreview || (e.quiet || f3.info("=> Starting preview.."), D = await m.start({
    startTime: process.hrtime(),
    options: e,
    router: i,
    server: t,
    channel: n
  }).catch(async (S) => {
    throw f3.error("=> Failed to build the preview"), process.exitCode = 1, await g?.bail().catch(), await m?.bail().catch(), S;
  }));
  let v = new Promise((S, k) => {
    t.once("error", k), i.listen({ port: u, host: l }, S);
  });
  if (await Promise.all([a, v]).then(async ([S]) => {
    if (S && !e.ci && !e.smokeTest && e.open) {
      let k = l ? f : h;
      MF(e.previewOnly ? `${k}iframe.html?navigator=true` : k);
    }
  }), o)
    throw await g?.bail().catch(), await m?.bail().catch(), o;
  return mS(i, r, a, e), { previewResult: D, managerResult: b, address: h, networkAddress: f };
}
s(d3, "storybookDevServer");

// src/core-server/utils/output-startup-information.ts
import { colors as ZG } from "storybook/internal/node-logger";

// ../node_modules/boxen/index.js
import Hu from "node:process";

// ../node_modules/ansi-regex/index.js
function vm({ onlyFirst: e = !1 } = {}) {
  let r = [
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?(?:\\u0007|\\u001B\\u005C|\\u00\
9C))",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
  ].join("|");
  return new RegExp(r, e ? void 0 : "g");
}
s(vm, "ansiRegex");

// ../node_modules/strip-ansi/index.js
var vJ = vm();
function Xi(e) {
  if (typeof e != "string")
    throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);
  return e.replace(vJ, "");
}
s(Xi, "stripAnsi");

// ../node_modules/boxen/node_modules/string-width/index.js
var D3 = he(wm(), 1), y3 = he(Am(), 1);
function or(e, t = {}) {
  if (typeof e != "string" || e.length === 0 || (t = {
    ambiguousIsNarrow: !0,
    ...t
  }, e = Xi(e), e.length === 0))
    return 0;
  e = e.replace((0, y3.default)(), "  ");
  let r = t.ambiguousIsNarrow ? 1 : 2, i = 0;
  for (let n of e) {
    let o = n.codePointAt(0);
    if (o <= 31 || o >= 127 && o <= 159 || o >= 768 && o <= 879)
      continue;
    switch (D3.default.eastAsianWidth(n)) {
      case "F":
      case "W":
        i += 2;
        break;
      case "A":
        i += r;
        break;
      default:
        i += 1;
    }
  }
  return i;
}
s(or, "stringWidth");

// ../node_modules/boxen/node_modules/chalk/source/vendor/ansi-styles/index.js
var x3 = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${t + e}m`, "wrapAnsi16"), E3 = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${38 + e};5;${t}\
m`, "wrapAnsi256"), b3 = /* @__PURE__ */ s((e = 0) => (t, r, i) => `\x1B[${38 + e};2;${t};${r};${i}m`, "wrapAnsi16m"), We = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
}, Iue = Object.keys(We.modifier), CJ = Object.keys(We.color), wJ = Object.keys(We.bgColor), Pue = [...CJ, ...wJ];
function AJ() {
  let e = /* @__PURE__ */ new Map();
  for (let [t, r] of Object.entries(We)) {
    for (let [i, n] of Object.entries(r))
      We[i] = {
        open: `\x1B[${n[0]}m`,
        close: `\x1B[${n[1]}m`
      }, r[i] = We[i], e.set(n[0], n[1]);
    Object.defineProperty(We, t, {
      value: r,
      enumerable: !1
    });
  }
  return Object.defineProperty(We, "codes", {
    value: e,
    enumerable: !1
  }), We.color.close = "\x1B[39m", We.bgColor.close = "\x1B[49m", We.color.ansi = x3(), We.color.ansi256 = E3(), We.color.ansi16m = b3(), We.
  bgColor.ansi = x3(10), We.bgColor.ansi256 = E3(10), We.bgColor.ansi16m = b3(10), Object.defineProperties(We, {
    rgbToAnsi256: {
      value(t, r, i) {
        return t === r && r === i ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t / 255 * 5) + 6 *
        Math.round(r / 255 * 5) + Math.round(i / 255 * 5);
      },
      enumerable: !1
    },
    hexToRgb: {
      value(t) {
        let r = /[a-f\d]{6}|[a-f\d]{3}/i.exec(t.toString(16));
        if (!r)
          return [0, 0, 0];
        let [i] = r;
        i.length === 3 && (i = [...i].map((o) => o + o).join(""));
        let n = Number.parseInt(i, 16);
        return [
          /* eslint-disable no-bitwise */
          n >> 16 & 255,
          n >> 8 & 255,
          n & 255
          /* eslint-enable no-bitwise */
        ];
      },
      enumerable: !1
    },
    hexToAnsi256: {
      value: /* @__PURE__ */ s((t) => We.rgbToAnsi256(...We.hexToRgb(t)), "value"),
      enumerable: !1
    },
    ansi256ToAnsi: {
      value(t) {
        if (t < 8)
          return 30 + t;
        if (t < 16)
          return 90 + (t - 8);
        let r, i, n;
        if (t >= 232)
          r = ((t - 232) * 10 + 8) / 255, i = r, n = r;
        else {
          t -= 16;
          let u = t % 36;
          r = Math.floor(t / 36) / 5, i = Math.floor(u / 6) / 5, n = u % 6 / 5;
        }
        let o = Math.max(r, i, n) * 2;
        if (o === 0)
          return 30;
        let a = 30 + (Math.round(n) << 2 | Math.round(i) << 1 | Math.round(r));
        return o === 2 && (a += 60), a;
      },
      enumerable: !1
    },
    rgbToAnsi: {
      value: /* @__PURE__ */ s((t, r, i) => We.ansi256ToAnsi(We.rgbToAnsi256(t, r, i)), "value"),
      enumerable: !1
    },
    hexToAnsi: {
      value: /* @__PURE__ */ s((t) => We.ansi256ToAnsi(We.hexToAnsi256(t)), "value"),
      enumerable: !1
    }
  }), We;
}
s(AJ, "assembleStyles");
var SJ = AJ(), xr = SJ;

// ../node_modules/boxen/node_modules/chalk/source/vendor/supports-color/index.js
import Sm from "node:process";
import FJ from "node:os";
import v3 from "node:tty";
function ar(e, t = globalThis.Deno ? globalThis.Deno.args : Sm.argv) {
  let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", i = t.indexOf(r + e), n = t.indexOf("--");
  return i !== -1 && (n === -1 || i < n);
}
s(ar, "hasFlag");
var { env: Qe } = Sm, $u;
ar("no-color") || ar("no-colors") || ar("color=false") || ar("color=never") ? $u = 0 : (ar("color") || ar("colors") || ar("color=true") || ar(
"color=always")) && ($u = 1);
function _J() {
  if ("FORCE_COLOR" in Qe)
    return Qe.FORCE_COLOR === "true" ? 1 : Qe.FORCE_COLOR === "false" ? 0 : Qe.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(Qe.FORCE_COLOR,
    10), 3);
}
s(_J, "envForceColor");
function kJ(e) {
  return e === 0 ? !1 : {
    level: e,
    hasBasic: !0,
    has256: e >= 2,
    has16m: e >= 3
  };
}
s(kJ, "translateLevel");
function TJ(e, { streamIsTTY: t, sniffFlags: r = !0 } = {}) {
  let i = _J();
  i !== void 0 && ($u = i);
  let n = r ? $u : i;
  if (n === 0)
    return 0;
  if (r) {
    if (ar("color=16m") || ar("color=full") || ar("color=truecolor"))
      return 3;
    if (ar("color=256"))
      return 2;
  }
  if ("TF_BUILD" in Qe && "AGENT_NAME" in Qe)
    return 1;
  if (e && !t && n === void 0)
    return 0;
  let o = n || 0;
  if (Qe.TERM === "dumb")
    return o;
  if (Sm.platform === "win32") {
    let a = FJ.release().split(".");
    return Number(a[0]) >= 10 && Number(a[2]) >= 10586 ? Number(a[2]) >= 14931 ? 3 : 2 : 1;
  }
  if ("CI" in Qe)
    return ["GITHUB_ACTIONS", "GITEA_ACTIONS", "CIRCLECI"].some((a) => a in Qe) ? 3 : ["TRAVIS", "APPVEYOR", "GITLAB_CI", "BUILDKITE", "DRON\
E"].some((a) => a in Qe) || Qe.CI_NAME === "codeship" ? 1 : o;
  if ("TEAMCITY_VERSION" in Qe)
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Qe.TEAMCITY_VERSION) ? 1 : 0;
  if (Qe.COLORTERM === "truecolor" || Qe.TERM === "xterm-kitty")
    return 3;
  if ("TERM_PROGRAM" in Qe) {
    let a = Number.parseInt((Qe.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
    switch (Qe.TERM_PROGRAM) {
      case "iTerm.app":
        return a >= 3 ? 3 : 2;
      case "Apple_Terminal":
        return 2;
    }
  }
  return /-256(color)?$/i.test(Qe.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Qe.TERM) || "COLORTERM" in Qe ?
  1 : o;
}
s(TJ, "_supportsColor");
function C3(e, t = {}) {
  let r = TJ(e, {
    streamIsTTY: e && e.isTTY,
    ...t
  });
  return kJ(r);
}
s(C3, "createSupportsColor");
var BJ = {
  stdout: C3({ isTTY: v3.isatty(1) }),
  stderr: C3({ isTTY: v3.isatty(2) })
}, w3 = BJ;

// ../node_modules/boxen/node_modules/chalk/source/utilities.js
function A3(e, t, r) {
  let i = e.indexOf(t);
  if (i === -1)
    return e;
  let n = t.length, o = 0, a = "";
  do
    a += e.slice(o, i) + t + r, o = i + n, i = e.indexOf(t, o);
  while (i !== -1);
  return a += e.slice(o), a;
}
s(A3, "stringReplaceAll");
function S3(e, t, r, i) {
  let n = 0, o = "";
  do {
    let a = e[i - 1] === "\r";
    o += e.slice(n, a ? i - 1 : i) + t + (a ? `\r
` : `
`) + r, n = i + 1, i = e.indexOf(`
`, n);
  } while (i !== -1);
  return o += e.slice(n), o;
}
s(S3, "stringEncaseCRLFWithFirstIndex");

// ../node_modules/boxen/node_modules/chalk/source/index.js
var { stdout: F3, stderr: _3 } = w3, Fm = Symbol("GENERATOR"), es = Symbol("STYLER"), ho = Symbol("IS_EMPTY"), k3 = [
  "ansi",
  "ansi",
  "ansi256",
  "ansi16m"
], ts = /* @__PURE__ */ Object.create(null), IJ = /* @__PURE__ */ s((e, t = {}) => {
  if (t.level && !(Number.isInteger(t.level) && t.level >= 0 && t.level <= 3))
    throw new Error("The `level` option should be an integer from 0 to 3");
  let r = F3 ? F3.level : 0;
  e.level = t.level === void 0 ? r : t.level;
}, "applyOptions");
var PJ = /* @__PURE__ */ s((e) => {
  let t = /* @__PURE__ */ s((...r) => r.join(" "), "chalk");
  return IJ(t, e), Object.setPrototypeOf(t, fo.prototype), t;
}, "chalkFactory");
function fo(e) {
  return PJ(e);
}
s(fo, "createChalk");
Object.setPrototypeOf(fo.prototype, Function.prototype);
for (let [e, t] of Object.entries(xr))
  ts[e] = {
    get() {
      let r = Vu(this, km(t.open, t.close, this[es]), this[ho]);
      return Object.defineProperty(this, e, { value: r }), r;
    }
  };
ts.visible = {
  get() {
    let e = Vu(this, this[es], !0);
    return Object.defineProperty(this, "visible", { value: e }), e;
  }
};
var _m = /* @__PURE__ */ s((e, t, r, ...i) => e === "rgb" ? t === "ansi16m" ? xr[r].ansi16m(...i) : t === "ansi256" ? xr[r].ansi256(xr.rgbToAnsi256(
...i)) : xr[r].ansi(xr.rgbToAnsi(...i)) : e === "hex" ? _m("rgb", t, r, ...xr.hexToRgb(...i)) : xr[r][e](...i), "getModelAnsi"), OJ = ["rgb",
"hex", "ansi256"];
for (let e of OJ) {
  ts[e] = {
    get() {
      let { level: r } = this;
      return function(...i) {
        let n = km(_m(e, k3[r], "color", ...i), xr.color.close, this[es]);
        return Vu(this, n, this[ho]);
      };
    }
  };
  let t = "bg" + e[0].toUpperCase() + e.slice(1);
  ts[t] = {
    get() {
      let { level: r } = this;
      return function(...i) {
        let n = km(_m(e, k3[r], "bgColor", ...i), xr.bgColor.close, this[es]);
        return Vu(this, n, this[ho]);
      };
    }
  };
}
var RJ = Object.defineProperties(() => {
}, {
  ...ts,
  level: {
    enumerable: !0,
    get() {
      return this[Fm].level;
    },
    set(e) {
      this[Fm].level = e;
    }
  }
}), km = /* @__PURE__ */ s((e, t, r) => {
  let i, n;
  return r === void 0 ? (i = e, n = t) : (i = r.openAll + e, n = t + r.closeAll), {
    open: e,
    close: t,
    openAll: i,
    closeAll: n,
    parent: r
  };
}, "createStyler"), Vu = /* @__PURE__ */ s((e, t, r) => {
  let i = /* @__PURE__ */ s((...n) => NJ(i, n.length === 1 ? "" + n[0] : n.join(" ")), "builder");
  return Object.setPrototypeOf(i, RJ), i[Fm] = e, i[es] = t, i[ho] = r, i;
}, "createBuilder"), NJ = /* @__PURE__ */ s((e, t) => {
  if (e.level <= 0 || !t)
    return e[ho] ? "" : t;
  let r = e[es];
  if (r === void 0)
    return t;
  let { openAll: i, closeAll: n } = r;
  if (t.includes("\x1B"))
    for (; r !== void 0; )
      t = A3(t, r.close, r.open), r = r.parent;
  let o = t.indexOf(`
`);
  return o !== -1 && (t = S3(t, n, i, o)), i + t + n;
}, "applyStyle");
Object.defineProperties(fo.prototype, ts);
var LJ = fo(), Hue = fo({ level: _3 ? _3.level : 0 });
var Ki = LJ;

// ../node_modules/boxen/node_modules/widest-line/index.js
function Uu(e) {
  let t = 0;
  for (let r of e.split(`
`))
    t = Math.max(t, or(r));
  return t;
}
s(Uu, "widestLine");

// ../node_modules/boxen/index.js
var o_ = he(Bm(), 1);

// ../node_modules/boxen/node_modules/camelcase/index.js
var jJ = /[\p{Lu}]/u, qJ = /[\p{Ll}]/u, I3 = /^[\p{Lu}](?![\p{Lu}])/gu, R3 = /([\p{Alpha}\p{N}_]|$)/u, Im = /[_.\- ]+/, $J = new RegExp("^" +
Im.source), P3 = new RegExp(Im.source + R3.source, "gu"), O3 = new RegExp("\\d+" + R3.source, "gu"), VJ = /* @__PURE__ */ s((e, t, r, i) => {
  let n = !1, o = !1, a = !1, u = !1;
  for (let l = 0; l < e.length; l++) {
    let c = e[l];
    u = l > 2 ? e[l - 3] === "-" : !0, n && jJ.test(c) ? (e = e.slice(0, l) + "-" + e.slice(l), n = !1, a = o, o = !0, l++) : o && a && qJ.test(
    c) && (!u || i) ? (e = e.slice(0, l - 1) + "-" + e.slice(l - 1), a = o, o = !1, n = !0) : (n = t(c) === c && r(c) !== c, a = o, o = r(c) ===
    c && t(c) !== c);
  }
  return e;
}, "preserveCamelCase"), UJ = /* @__PURE__ */ s((e, t) => (I3.lastIndex = 0, e.replace(I3, (r) => t(r))), "preserveConsecutiveUppercase"), WJ = /* @__PURE__ */ s(
(e, t) => (P3.lastIndex = 0, O3.lastIndex = 0, e.replace(P3, (r, i) => t(i)).replace(O3, (r) => t(r))), "postProcess");
function Pm(e, t) {
  if (!(typeof e == "string" || Array.isArray(e)))
    throw new TypeError("Expected the input to be `string | string[]`");
  if (t = {
    pascalCase: !1,
    preserveConsecutiveUppercase: !1,
    ...t
  }, Array.isArray(e) ? e = e.map((o) => o.trim()).filter((o) => o.length).join("-") : e = e.trim(), e.length === 0)
    return "";
  let r = t.locale === !1 ? (o) => o.toLowerCase() : (o) => o.toLocaleLowerCase(t.locale), i = t.locale === !1 ? (o) => o.toUpperCase() : (o) => o.
  toLocaleUpperCase(t.locale);
  return e.length === 1 ? Im.test(e) ? "" : t.pascalCase ? i(e) : r(e) : (e !== r(e) && (e = VJ(e, r, i, t.preserveConsecutiveUppercase)), e =
  e.replace($J, ""), e = t.preserveConsecutiveUppercase ? UJ(e, r) : r(e), t.pascalCase && (e = i(e.charAt(0)) + e.slice(1)), WJ(e, i));
}
s(Pm, "camelCase");

// ../node_modules/boxen/index.js
var qm = he(H3(), 1);

// ../node_modules/wrap-ansi/node_modules/string-width/index.js
var J3 = he(wm(), 1), G3 = he(Am(), 1);
function Qi(e, t = {}) {
  if (typeof e != "string" || e.length === 0 || (t = {
    ambiguousIsNarrow: !0,
    ...t
  }, e = Xi(e), e.length === 0))
    return 0;
  e = e.replace((0, G3.default)(), "  ");
  let r = t.ambiguousIsNarrow ? 1 : 2, i = 0;
  for (let n of e) {
    let o = n.codePointAt(0);
    if (o <= 31 || o >= 127 && o <= 159 || o >= 768 && o <= 879)
      continue;
    switch (J3.default.eastAsianWidth(n)) {
      case "F":
      case "W":
        i += 2;
        break;
      case "A":
        i += r;
        break;
      default:
        i += 1;
    }
  }
  return i;
}
s(Qi, "stringWidth");

// ../node_modules/wrap-ansi/node_modules/ansi-styles/index.js
var X3 = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${t + e}m`, "wrapAnsi16"), K3 = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${38 + e};5;${t}\
m`, "wrapAnsi256"), Y3 = /* @__PURE__ */ s((e = 0) => (t, r, i) => `\x1B[${38 + e};2;${t};${r};${i}m`, "wrapAnsi16m"), ze = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
}, dle = Object.keys(ze.modifier), QJ = Object.keys(ze.color), ZJ = Object.keys(ze.bgColor), mle = [...QJ, ...ZJ];
function eG() {
  let e = /* @__PURE__ */ new Map();
  for (let [t, r] of Object.entries(ze)) {
    for (let [i, n] of Object.entries(r))
      ze[i] = {
        open: `\x1B[${n[0]}m`,
        close: `\x1B[${n[1]}m`
      }, r[i] = ze[i], e.set(n[0], n[1]);
    Object.defineProperty(ze, t, {
      value: r,
      enumerable: !1
    });
  }
  return Object.defineProperty(ze, "codes", {
    value: e,
    enumerable: !1
  }), ze.color.close = "\x1B[39m", ze.bgColor.close = "\x1B[49m", ze.color.ansi = X3(), ze.color.ansi256 = K3(), ze.color.ansi16m = Y3(), ze.
  bgColor.ansi = X3(10), ze.bgColor.ansi256 = K3(10), ze.bgColor.ansi16m = Y3(10), Object.defineProperties(ze, {
    rgbToAnsi256: {
      value: /* @__PURE__ */ s((t, r, i) => t === r && r === i ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 *
      Math.round(t / 255 * 5) + 6 * Math.round(r / 255 * 5) + Math.round(i / 255 * 5), "value"),
      enumerable: !1
    },
    hexToRgb: {
      value: /* @__PURE__ */ s((t) => {
        let r = /[a-f\d]{6}|[a-f\d]{3}/i.exec(t.toString(16));
        if (!r)
          return [0, 0, 0];
        let [i] = r;
        i.length === 3 && (i = [...i].map((o) => o + o).join(""));
        let n = Number.parseInt(i, 16);
        return [
          /* eslint-disable no-bitwise */
          n >> 16 & 255,
          n >> 8 & 255,
          n & 255
          /* eslint-enable no-bitwise */
        ];
      }, "value"),
      enumerable: !1
    },
    hexToAnsi256: {
      value: /* @__PURE__ */ s((t) => ze.rgbToAnsi256(...ze.hexToRgb(t)), "value"),
      enumerable: !1
    },
    ansi256ToAnsi: {
      value: /* @__PURE__ */ s((t) => {
        if (t < 8)
          return 30 + t;
        if (t < 16)
          return 90 + (t - 8);
        let r, i, n;
        if (t >= 232)
          r = ((t - 232) * 10 + 8) / 255, i = r, n = r;
        else {
          t -= 16;
          let u = t % 36;
          r = Math.floor(t / 36) / 5, i = Math.floor(u / 6) / 5, n = u % 6 / 5;
        }
        let o = Math.max(r, i, n) * 2;
        if (o === 0)
          return 30;
        let a = 30 + (Math.round(n) << 2 | Math.round(i) << 1 | Math.round(r));
        return o === 2 && (a += 60), a;
      }, "value"),
      enumerable: !1
    },
    rgbToAnsi: {
      value: /* @__PURE__ */ s((t, r, i) => ze.ansi256ToAnsi(ze.rgbToAnsi256(t, r, i)), "value"),
      enumerable: !1
    },
    hexToAnsi: {
      value: /* @__PURE__ */ s((t) => ze.ansi256ToAnsi(ze.hexToAnsi256(t)), "value"),
      enumerable: !1
    }
  }), ze;
}
s(eG, "assembleStyles");
var tG = eG(), Q3 = tG;

// ../node_modules/wrap-ansi/index.js
var Wu = /* @__PURE__ */ new Set([
  "\x1B",
  "\x9B"
]), rG = 39, Mm = "\x07", t_ = "[", iG = "]", r_ = "m", jm = `${iG}8;;`, Z3 = /* @__PURE__ */ s((e) => `${Wu.values().next().value}${t_}${e}${r_}`,
"wrapAnsiCode"), e_ = /* @__PURE__ */ s((e) => `${Wu.values().next().value}${jm}${e}${Mm}`, "wrapAnsiHyperlink"), nG = /* @__PURE__ */ s((e) => e.
split(" ").map((t) => Qi(t)), "wordLengths"), Lm = /* @__PURE__ */ s((e, t, r) => {
  let i = [...t], n = !1, o = !1, a = Qi(Xi(e[e.length - 1]));
  for (let [u, l] of i.entries()) {
    let c = Qi(l);
    if (a + c <= r ? e[e.length - 1] += l : (e.push(l), a = 0), Wu.has(l) && (n = !0, o = i.slice(u + 1).join("").startsWith(jm)), n) {
      o ? l === Mm && (n = !1, o = !1) : l === r_ && (n = !1);
      continue;
    }
    a += c, a === r && u < i.length - 1 && (e.push(""), a = 0);
  }
  !a && e[e.length - 1].length > 0 && e.length > 1 && (e[e.length - 2] += e.pop());
}, "wrapWord"), sG = /* @__PURE__ */ s((e) => {
  let t = e.split(" "), r = t.length;
  for (; r > 0 && !(Qi(t[r - 1]) > 0); )
    r--;
  return r === t.length ? e : t.slice(0, r).join(" ") + t.slice(r).join("");
}, "stringVisibleTrimSpacesRight"), oG = /* @__PURE__ */ s((e, t, r = {}) => {
  if (r.trim !== !1 && e.trim() === "")
    return "";
  let i = "", n, o, a = nG(e), u = [""];
  for (let [c, p] of e.split(" ").entries()) {
    r.trim !== !1 && (u[u.length - 1] = u[u.length - 1].trimStart());
    let h = Qi(u[u.length - 1]);
    if (c !== 0 && (h >= t && (r.wordWrap === !1 || r.trim === !1) && (u.push(""), h = 0), (h > 0 || r.trim === !1) && (u[u.length - 1] += "\
 ", h++)), r.hard && a[c] > t) {
      let f = t - h, d = 1 + Math.floor((a[c] - f - 1) / t);
      Math.floor((a[c] - 1) / t) < d && u.push(""), Lm(u, p, t);
      continue;
    }
    if (h + a[c] > t && h > 0 && a[c] > 0) {
      if (r.wordWrap === !1 && h < t) {
        Lm(u, p, t);
        continue;
      }
      u.push("");
    }
    if (h + a[c] > t && r.wordWrap === !1) {
      Lm(u, p, t);
      continue;
    }
    u[u.length - 1] += p;
  }
  r.trim !== !1 && (u = u.map((c) => sG(c)));
  let l = [...u.join(`
`)];
  for (let [c, p] of l.entries()) {
    if (i += p, Wu.has(p)) {
      let { groups: f } = new RegExp(`(?:\\${t_}(?<code>\\d+)m|\\${jm}(?<uri>.*)${Mm})`).exec(l.slice(c).join("")) || { groups: {} };
      if (f.code !== void 0) {
        let d = Number.parseFloat(f.code);
        n = d === rG ? void 0 : d;
      } else f.uri !== void 0 && (o = f.uri.length === 0 ? void 0 : f.uri);
    }
    let h = Q3.codes.get(Number(n));
    l[c + 1] === `
` ? (o && (i += e_("")), n && h && (i += Z3(h))) : p === `
` && (n && h && (i += Z3(n)), o && (i += e_(o)));
  }
  return i;
}, "exec");
function zu(e, t, r) {
  return String(e).normalize().replace(/\r\n/g, `
`).split(`
`).map((i) => oG(i, t, r)).join(`
`);
}
s(zu, "wrapAnsi");

// ../node_modules/boxen/index.js
var mG = he(Bm(), 1);
var Ti = `
`, wt = " ", mo = "none", a_ = /* @__PURE__ */ s(() => {
  let { env: e, stdout: t, stderr: r } = Hu;
  return t?.columns ? t.columns : r?.columns ? r.columns : e.COLUMNS ? Number.parseInt(e.COLUMNS, 10) : 80;
}, "terminalColumns"), i_ = /* @__PURE__ */ s((e) => typeof e == "number" ? {
  top: e,
  right: e * 3,
  bottom: e,
  left: e * 3
} : {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  ...e
}, "getObject"), go = /* @__PURE__ */ s((e) => e === mo ? 0 : 2, "getBorderWidth"), aG = /* @__PURE__ */ s((e) => {
  let t = [
    "topLeft",
    "topRight",
    "bottomRight",
    "bottomLeft",
    "left",
    "right",
    "top",
    "bottom"
  ], r;
  if (e === mo) {
    e = {};
    for (let i of t)
      e[i] = "";
  }
  if (typeof e == "string") {
    if (r = o_.default[e], !r)
      throw new TypeError(`Invalid border style: ${e}`);
  } else {
    typeof e?.vertical == "string" && (e.left = e.vertical, e.right = e.vertical), typeof e?.horizontal == "string" && (e.top = e.horizontal,
    e.bottom = e.horizontal);
    for (let i of t)
      if (e[i] === null || typeof e[i] != "string")
        throw new TypeError(`Invalid border style: ${i}`);
    r = e;
  }
  return r;
}, "getBorderChars"), uG = /* @__PURE__ */ s((e, t, r) => {
  let i = "", n = or(e);
  switch (r) {
    case "left": {
      i = e + t.slice(n);
      break;
    }
    case "right": {
      i = t.slice(n) + e;
      break;
    }
    default: {
      t = t.slice(n), t.length % 2 === 1 ? (t = t.slice(Math.floor(t.length / 2)), i = t.slice(1) + e + t) : (t = t.slice(t.length / 2), i =
      t + e + t);
      break;
    }
  }
  return i;
}, "makeTitle"), lG = /* @__PURE__ */ s((e, { padding: t, width: r, textAlignment: i, height: n }) => {
  e = (0, qm.default)(e, { align: i });
  let o = e.split(Ti), a = Uu(e), u = r - t.left - t.right;
  if (a > u) {
    let p = [];
    for (let h of o) {
      let f = zu(h, u, { hard: !0 }), m = (0, qm.default)(f, { align: i }).split(`
`), g = Math.max(...m.map((b) => or(b)));
      for (let b of m) {
        let D;
        switch (i) {
          case "center": {
            D = wt.repeat((u - g) / 2) + b;
            break;
          }
          case "right": {
            D = wt.repeat(u - g) + b;
            break;
          }
          default: {
            D = b;
            break;
          }
        }
        p.push(D);
      }
    }
    o = p;
  }
  i === "center" && a < u ? o = o.map((p) => wt.repeat((u - a) / 2) + p) : i === "right" && a < u && (o = o.map((p) => wt.repeat(u - a) + p));
  let l = wt.repeat(t.left), c = wt.repeat(t.right);
  return o = o.map((p) => l + p + c), o = o.map((p) => {
    if (r - or(p) > 0)
      switch (i) {
        case "center":
          return p + wt.repeat(r - or(p));
        case "right":
          return p + wt.repeat(r - or(p));
        default:
          return p + wt.repeat(r - or(p));
      }
    return p;
  }), t.top > 0 && (o = [...Array.from({ length: t.top }).fill(wt.repeat(r)), ...o]), t.bottom > 0 && (o = [...o, ...Array.from({ length: t.
  bottom }).fill(wt.repeat(r))]), n && o.length > n ? o = o.slice(0, n) : n && o.length < n && (o = [...o, ...Array.from({ length: n - o.length }).
  fill(wt.repeat(r))]), o.join(Ti);
}, "makeContentText"), cG = /* @__PURE__ */ s((e, t, r) => {
  let i = /* @__PURE__ */ s((p) => {
    let h = r.borderColor ? fG(r.borderColor)(p) : p;
    return r.dimBorder ? Ki.dim(h) : h;
  }, "colorizeBorder"), n = /* @__PURE__ */ s((p) => r.backgroundColor ? dG(r.backgroundColor)(p) : p, "colorizeContent"), o = aG(r.borderStyle),
  a = a_(), u = wt.repeat(r.margin.left);
  if (r.float === "center") {
    let p = Math.max((a - t - go(r.borderStyle)) / 2, 0);
    u = wt.repeat(p);
  } else if (r.float === "right") {
    let p = Math.max(a - t - r.margin.right - go(r.borderStyle), 0);
    u = wt.repeat(p);
  }
  let l = "";
  r.margin.top && (l += Ti.repeat(r.margin.top)), (r.borderStyle !== mo || r.title) && (l += i(u + o.topLeft + (r.title ? uG(r.title, o.top.
  repeat(t), r.titleAlignment) : o.top.repeat(t)) + o.topRight) + Ti);
  let c = e.split(Ti);
  return l += c.map((p) => u + i(o.left) + n(p) + i(o.right)).join(Ti), r.borderStyle !== mo && (l += Ti + i(u + o.bottomLeft + o.bottom.repeat(
  t) + o.bottomRight)), r.margin.bottom && (l += Ti.repeat(r.margin.bottom)), l;
}, "boxContent"), pG = /* @__PURE__ */ s((e) => {
  if (e.fullscreen && Hu?.stdout) {
    let t = [Hu.stdout.columns, Hu.stdout.rows];
    typeof e.fullscreen == "function" && (t = e.fullscreen(...t)), e.width || (e.width = t[0]), e.height || (e.height = t[1]);
  }
  return e.width && (e.width = Math.max(1, e.width - go(e.borderStyle))), e.height && (e.height = Math.max(1, e.height - go(e.borderStyle))),
  e;
}, "sanitizeOptions"), n_ = /* @__PURE__ */ s((e, t) => t === mo ? e : ` ${e} `, "formatTitle"), hG = /* @__PURE__ */ s((e, t) => {
  t = pG(t);
  let r = t.width !== void 0, i = a_(), n = go(t.borderStyle), o = i - t.margin.left - t.margin.right - n, a = Uu(zu(e, i - n, { hard: !0, trim: !1 })) +
  t.padding.left + t.padding.right;
  if (t.title && r ? (t.title = t.title.slice(0, Math.max(0, t.width - 2)), t.title && (t.title = n_(t.title, t.borderStyle))) : t.title && (t.
  title = t.title.slice(0, Math.max(0, o - 2)), t.title && (t.title = n_(t.title, t.borderStyle), or(t.title) > a && (t.width = or(t.title)))),
  t.width = t.width ? t.width : a, !r) {
    if (t.margin.left && t.margin.right && t.width > o) {
      let l = (i - t.width - n) / (t.margin.left + t.margin.right);
      t.margin.left = Math.max(0, Math.floor(t.margin.left * l)), t.margin.right = Math.max(0, Math.floor(t.margin.right * l));
    }
    t.width = Math.min(t.width, i - n - t.margin.left - t.margin.right);
  }
  return t.width - (t.padding.left + t.padding.right) <= 0 && (t.padding.left = 0, t.padding.right = 0), t.height && t.height - (t.padding.top +
  t.padding.bottom) <= 0 && (t.padding.top = 0, t.padding.bottom = 0), t;
}, "determineDimensions"), $m = /* @__PURE__ */ s((e) => e.match(/^#(?:[0-f]{3}){1,2}$/i), "isHex"), s_ = /* @__PURE__ */ s((e) => typeof e ==
"string" && (Ki[e] ?? $m(e)), "isColorValid"), fG = /* @__PURE__ */ s((e) => $m(e) ? Ki.hex(e) : Ki[e], "getColorFn"), dG = /* @__PURE__ */ s(
(e) => $m(e) ? Ki.bgHex(e) : Ki[Pm(["bg", e])], "getBGColorFn");
function Vm(e, t) {
  if (t = {
    padding: 0,
    borderStyle: "single",
    dimBorder: !1,
    textAlignment: "left",
    float: "left",
    titleAlignment: "left",
    ...t
  }, t.align && (t.textAlignment = t.align), t.borderColor && !s_(t.borderColor))
    throw new Error(`${t.borderColor} is not a valid borderColor`);
  if (t.backgroundColor && !s_(t.backgroundColor))
    throw new Error(`${t.backgroundColor} is not a valid backgroundColor`);
  return t.padding = i_(t.padding), t.margin = i_(t.margin), t = hG(e, t), e = lG(e, t), cG(e, t.width, t);
}
s(Vm, "boxen");

// src/core-server/utils/output-startup-information.ts
var uk = he(Q_(), 1), Bi = he(br(), 1), Ym = he(tk(), 1), lk = he(Ft(), 1);

// src/core-server/utils/update-check.ts
var ns = he(br(), 1), sk = he(Ft(), 1);
import { cache as rk } from "storybook/internal/common";
import { colors as ik } from "storybook/internal/node-logger";
import nk from "semver";
var { STORYBOOK_VERSION_BASE: YG = "https://storybook.js.org", CI: QG } = process.env, ok = /* @__PURE__ */ s(async (e) => {
  let t, r = Date.now();
  try {
    let i = await rk.get("lastUpdateCheck", { success: !1, time: 0 });
    r - 864e5 > i.time && !QG ? (t = { success: !0, cached: !1, data: await (await Promise.race([
      fetch(`${YG}/versions.json?current=${e}`),
      // if fetch is too slow, we won't wait for it
      new Promise((a, u) => global.setTimeout(u, 1500))
    ])).json(), time: r }, await rk.set("lastUpdateCheck", t)) : t = { ...i, cached: !0 };
  } catch (i) {
    t = { success: !1, cached: !1, error: i, time: r };
  }
  return t;
}, "updateCheck");
function ak(e, t) {
  let r;
  try {
    let n = `npx storybook@${nk.prerelease(e.data.latest.version) ? "next" : "latest"} upgrade`;
    r = e.success && nk.lt(t, e.data.latest.version) ? sk.dedent`
          ${ik.orange(
      `A new version (${ns.default.bold(e.data.latest.version)}) is available!`
    )}

          ${ns.default.gray("Upgrade now:")} ${ik.green(n)}

          ${ns.default.gray("Read full changelog:")} ${ns.default.gray(
      ns.default.underline("https://github.com/storybookjs/storybook/blob/main/CHANGELOG.md")
    )}
        ` : "";
  } catch {
    r = "";
  }
  return r;
}
s(ak, "createUpdateMessage");

// src/core-server/utils/output-startup-information.ts
function ck(e) {
  let { updateInfo: t, version: r, name: i, address: n, networkAddress: o, managerTotalTime: a, previewTotalTime: u } = e, l = ak(t, r), c = new uk.default(
  {
    chars: {
      top: "",
      "top-mid": "",
      "top-left": "",
      "top-right": "",
      bottom: "",
      "bottom-mid": "",
      "bottom-left": "",
      "bottom-right": "",
      left: "",
      "left-mid": "",
      mid: "",
      "mid-mid": "",
      right: "",
      "right-mid": "",
      middle: ""
    },
    // @ts-expect-error (Converted from ts-ignore)
    paddingLeft: 0,
    paddingRight: 0,
    paddingTop: 0,
    paddingBottom: 0
  });
  c.push(
    ["Local:", Bi.default.cyan(n)],
    ["On your network:", Bi.default.cyan(o)]
  );
  let p = [
    a && `${Bi.default.underline((0, Ym.default)(a))} for manager`,
    u && `${Bi.default.underline((0, Ym.default)(u))} for preview`
  ].filter(Boolean).join(" and ");
  console.log(
    Vm(
      lk.dedent`
          ${ZG.green(
        `Storybook ${Bi.default.bold(r)} for ${Bi.default.bold(i)} started`
      )}
          ${Bi.default.gray(p)}

          ${c.toString()}${l ? `

${l}` : ""}
        `,
      { borderStyle: "round", padding: 1, borderColor: "#F1618C" }
    )
  );
}
s(ck, "outputStartupInformation");

// src/core-server/utils/warnOnIncompatibleAddons.ts
import { logger as rX } from "storybook/internal/node-logger";

// ../lib/cli-storybook/src/doctor/getIncompatibleStorybookPackages.ts
var bo = he(br(), 1);
import { versions as Qm } from "storybook/internal/common";
import { logger as eX } from "storybook/internal/node-logger";
import Yu from "semver";

// ../lib/cli-storybook/src/automigrate/helpers/consolidated-packages.ts
var pk = {
  "@storybook/channels": "storybook/internal/channels",
  "@storybook/client-logger": "storybook/internal/client-logger",
  "@storybook/core-common": "storybook/internal/common",
  "@storybook/core-events": "storybook/internal/core-events",
  "@storybook/csf": "storybook/internal/csf",
  "@storybook/csf-tools": "storybook/internal/csf-tools",
  "@storybook/docs-tools": "storybook/internal/docs-tools",
  "@storybook/node-logger": "storybook/internal/node-logger",
  "@storybook/preview-api": "storybook/preview-api",
  "@storybook/router": "storybook/internal/router",
  "@storybook/telemetry": "storybook/internal/telemetry",
  "@storybook/theming": "storybook/theming",
  "@storybook/types": "storybook/internal/types",
  "@storybook/manager-api": "storybook/manager-api",
  "@storybook/manager": "storybook/internal/manager",
  "@storybook/preview": "storybook/internal/preview",
  "@storybook/core-server": "storybook/internal/core-server",
  "@storybook/builder-manager": "storybook/internal/builder-manager",
  "@storybook/components": "storybook/internal/components",
  "@storybook/test": "storybook/test",
  "@storybook/experimental-nextjs-vite": "@storybook/nextjs-vite",
  "@storybook/instrumenter": "storybook/internal/instrumenter",
  "@storybook/blocks": "@storybook/addon-docs/blocks"
};

// ../lib/cli-storybook/src/doctor/getIncompatibleStorybookPackages.ts
var tX = /* @__PURE__ */ s(async (e, t) => {
  let { currentStorybookVersion: r, skipErrors: i, packageManager: n } = t;
  try {
    let o = n.getModulePackageJSON(e);
    if (o === null)
      return { packageName: e };
    let {
      version: a,
      name: u = e,
      dependencies: l,
      peerDependencies: c,
      homepage: p
    } = o, h = Object.entries({
      ...l,
      ...c
    }).filter(
      ([g]) => Qm[g] || pk[g]
    ).map(([g, b]) => b).find((g) => g && // We can't check compatibility for 0.x packages, so we skip them
    !/^[~^]?0\./.test(g) && Yu.validRange(g) && !Yu.satisfies(r, g)), f = Qm[u], d, m;
    return f && a && Yu.gt(r, a) && (d = r), f && a && Yu.gt(a, r) && (m = a), {
      packageName: u,
      packageVersion: a,
      homepage: p,
      hasIncompatibleDependencies: h != null,
      packageStorybookVersion: h,
      availableUpdate: d,
      availableCoreUpdate: m
    };
  } catch (o) {
    return i || eX.log(
      `Error checking compatibility for ${e}, please report an issue:
` + String(o)
    ), { packageName: e };
  }
}, "checkPackageCompatibility"), hk = /* @__PURE__ */ s(async (e) => {
  if (e.currentStorybookVersion.includes("0.0.0"))
    return [];
  let t = e.packageManager.getAllDependencies(), r = Object.keys(t).filter((i) => i.includes("storybook"));
  if (r.length === 0 && !e.skipErrors)
    throw new Error("No Storybook dependencies found in the package.json");
  return Promise.all(
    r.filter((i) => !Qm[i]).map((i) => tX(i, e))
  );
}, "getIncompatibleStorybookPackages"), fk = /* @__PURE__ */ s((e, t) => {
  let r = [], i = e.filter(
    (n) => n.hasIncompatibleDependencies
  );
  return i.length > 0 && (r.push(
    `You are currently using Storybook ${bo.default.bold(
      t
    )} but you have packages which are incompatible with it:
`
  ), i.forEach(
    ({
      packageName: n,
      packageVersion: o,
      homepage: a,
      availableUpdate: u,
      packageStorybookVersion: l
    }) => {
      let c = `${n}@${o}`, p = u ? ` (${u} available!)` : "", h = l != null ? ` which depends on ${l}` : "", f = a ? `
 Repo: ${a}` : "";
      r.push(
        `- ${c}${p}${h}${f}`
      );
    }
  ), r.push(
    `
Please consider updating your packages or contacting the maintainers for compatibility details.`,
    `
For more on Storybook 9 compatibility, see the linked GitHub issue:`,
    "https://github.com/storybookjs/storybook/issues/30944"
  ), i.some((n) => n.availableCoreUpdate) && r.push(
    `
`,
    `The version of ${bo.default.blue(`storybook@${t}`)} is behind the following core packages:`,
    `${i.filter((n) => n.availableCoreUpdate).map(
      ({ packageName: n, packageVersion: o }) => `- ${bo.default.blue(`${n}@${o}`)}`
    ).join(`
`)}`,
    `
`,
    "Upgrade Storybook with:",
    bo.default.blue("npx storybook@latest upgrade")
  )), r.join(`
`);
}, "getIncompatiblePackagesSummary");

// src/core-server/utils/warnOnIncompatibleAddons.ts
var dk = /* @__PURE__ */ s(async (e, t) => {
  let r = await hk({
    skipUpgradeCheck: !0,
    skipErrors: !0,
    currentStorybookVersion: e,
    packageManager: t
  }), i = fk(
    r,
    e
  );
  i && rX.warn(i);
}, "warnOnIncompatibleAddons");

// src/core-server/utils/warnWhenUsingArgTypesRegex.ts
var ss = he(br(), 1), mk = he(Ft(), 1);
import { readFile as iX } from "node:fs/promises";
import { core as nX } from "storybook/internal/babel";
import { babelParse as sX } from "storybook/internal/csf-tools";
async function gk(e, t) {
  let r = e ? await iX(e, { encoding: "utf8" }) : "";
  (t?.addons?.some(
    (n) => typeof n == "string" ? n === "@chromatic-com/storybook" : n.name === "@chromatic-com/storybook"
  ) ?? !1) && e && r.includes("argTypesRegex") && new nX.File(
    { filename: e },
    { code: r, ast: sX(r) }
  ).path.traverse({
    Identifier: /* @__PURE__ */ s((o) => {
      if (o.node.name === "argTypesRegex") {
        let a = mk.dedent`
            ${ss.default.bold("Attention")}: We've detected that you're using ${ss.default.cyan(
          "actions.argTypesRegex"
        )} together with the visual test addon:
            
            ${o.buildCodeFrameError(e).message}
            
            We recommend removing the ${ss.default.cyan(
          "argTypesRegex"
        )} and assigning explicit action with the ${ss.default.cyan(
          "fn"
        )} function from ${ss.default.cyan("storybook/test")} instead:
            https://storybook.js.org/docs/essentials/actions#via-storybooktest-fn-spy-function
            
            The build used by the addon for snapshot testing doesn't take the regex into account, which can cause hard to debug problems when a snapshot depends on the presence of action props.
          `;
        console.warn(a);
      }
    }, "Identifier")
  });
}
s(gk, "warnWhenUsingArgTypesRegex");

// src/core-server/build-dev.ts
async function bk(e) {
  let { packageJson: t, versionUpdates: r } = e, { storybookVersion: i, previewConfigPath: n } = e, o = Zm(e.configDir);
  t ? (yt(
    t.version !== void 0,
    `Expected package.json#version to be defined in the "${t.name}" package}`
  ), i = t.version, n = cX(o).previewConfigPath ?? void 0) : i || (i = DX.storybook);
  let [a, u] = await Promise.all([
    l3(e.port, { exactPort: e.exactPort }),
    r ? ok(i) : Promise.resolve({ success: !1, cached: !1, data: {}, time: Date.now() })
  ]);
  if (!e.ci && !e.smokeTest && e.port != null && a !== e.port) {
    let { shouldChangePort: ee } = await (0, xk.default)({
      type: "confirm",
      initial: !0,
      name: "shouldChangePort",
      message: `Port ${e.port} is not available. Would you like to run Storybook on port ${a} instead?`
    });
    ee || process.exit(1);
  }
  let l = EX(uX(pX(), o)), c = dX("public", l), p = Zm(e.outputDir || c);
  e.smokeTest && (p = c), e.port = a, e.versionCheck = u, e.configType = "DEVELOPMENT", e.configDir = o, e.cacheKey = l, e.outputDir = p, e.
  serverChannelUrl = c3(a, e);
  let h = await hX(e), { framework: f } = h, d = [], m = typeof f == "string" ? f : f?.name;
  e.ignorePreview || gX(m), m && d.push(aX(m, "preset")), m = m || "custom";
  let g = lX.getPackageManager({
    configDir: e.configDir
  });
  try {
    await dk(i, g);
  } catch (ee) {
    eg.warn("Storybook failed to check addon compatibility"), eg.debug(`${ee instanceof Error ? ee.stack : String(ee)}`);
  }
  try {
    await gk(n, h);
  } catch {
  }
  let b = await Dk({
    corePresets: d,
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    isCritical: !0
  }), { renderer: D, builder: v, disableTelemetry: S } = await b.apply("core", {});
  if (!v)
    throw new yX();
  !e.disableTelemetry && !S && u.success && !u.cached && bX("version-update");
  let k = typeof v == "string" ? v : v.name, [L, C] = await Promise.all([
    $s(k, e.configDir),
    qs()
  ]);
  if (k.includes("builder-vite")) {
    let ee = (0, Ek.dedent)(`Using CommonJS in your main configuration file is deprecated with Vite.
              - Refer to the migration guide at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#commonjs-with-vite-is-deprec\
ated`), I = mX(Zm(e.configDir || ".storybook", "main"));
    /\.c[jt]s$/.test(I) && yk(ee);
    let se = await oX(I, { encoding: "utf8" });
    /\bmodule\.exports\b|\bexports[.[]|\brequire\s*\(|\bObject\.(?:defineProperty|defineProperties|assign)\s*\(\s*exports\b/.test(se) && yk(
    ee);
  }
  let w = D && fX(e.configDir, D, e);
  b = await Dk({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...C.corePresets || [],
      ...L.corePresets || [],
      ...w ? [w] : [],
      ...d
    ],
    overridePresets: [
      ...L.overridePresets || [],
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e
  });
  let T = await b.apply("features");
  vX.FEATURES = T;
  let _ = {
    ...e,
    presets: b,
    features: T
  }, { address: q, networkAddress: O, managerResult: $, previewResult: V } = await za(
    async () => d3(_)
  ), K = V?.totalTime, M = $?.totalTime, R = V?.stats, U = $?.stats, Y = e.webpackStatsJson || e.statsJson;
  if (Y) {
    let ee = Y === !0 ? e.outputDir : Y;
    await Ga(ee, R);
  }
  if (e.smokeTest) {
    let ee = [];
    ee.push(...U?.toJson()?.warnings || []);
    try {
      ee.push(...R?.toJson()?.warnings || []);
    } catch (se) {
      if (!(se instanceof xX))
        throw se;
    }
    let I = ee.filter((se) => !se.message.includes("export 'useInsertionEffect'")).filter((se) => !se.message.includes("compilation but it's\
 unused")).filter(
      (se) => !se.message.includes("Conflicting values for 'process.env.NODE_ENV'")
    );
    eg.log(I.map((se) => se.stack).join(`
`)), process.exit(I.length > 0 ? 1 : 0);
  } else {
    let ee = m.split("@storybook/").length > 1 ? m.split("@storybook/")[1] : m;
    e.quiet || ck({
      updateInfo: u,
      version: i,
      name: ee,
      address: q,
      networkAddress: O,
      managerTotalTime: M,
      previewTotalTime: K
    });
  }
  return { port: a, address: q, networkAddress: O };
}
s(bk, "buildDevStandalone");

// src/core-server/build-index.ts
import { writeFile as IX } from "node:fs/promises";
import { normalizeStories as PX } from "storybook/internal/common";
import { logger as OX } from "storybook/internal/node-logger";

// src/core-server/load.ts
import { join as CX, relative as wX, resolve as AX } from "node:path";
import {
  getProjectRoot as SX,
  loadAllPresets as vk,
  loadMainConfig as FX,
  resolveAddonName as _X,
  validateFrameworkName as kX
} from "storybook/internal/common";
import { oneWayHash as TX } from "storybook/internal/telemetry";
import { global as BX } from "@storybook/global";
async function tg(e) {
  let t = AX(e.configDir), r = TX(wX(SX(), t));
  e.configType = "DEVELOPMENT", e.configDir = t, e.cacheKey = r;
  let i = await FX(e), { framework: n } = i, o = [], a = typeof n == "string" ? n : n?.name;
  e.ignorePreview || kX(a), a && o.push(CX(a, "preset")), a = a || "custom";
  let u = await vk({
    corePresets: o,
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    isCritical: !0
  }), { renderer: l } = await u.apply("core", {}), c = l && _X(e.configDir, l, e);
  u = await vk({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...c ? [c] : [],
      ...o
    ],
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e
  });
  let p = await u.apply("features");
  return BX.FEATURES = p, {
    ...e,
    presets: u,
    features: p
  };
}
s(tg, "loadStorybook");

// src/core-server/build-index.ts
var RX = /* @__PURE__ */ s(async (e) => {
  let { presets: t } = await tg(e), [r, i, n] = await Promise.all([
    t.apply("experimental_indexers", []),
    t.apply("stories", []),
    t.apply("docs")
  ]), { configDir: o } = e, a = process.cwd(), u = {
    configDir: o,
    workingDir: a
  }, l = PX(i, u), c = new Yr(l, {
    ...u,
    indexers: r,
    docs: n,
    build: {}
  });
  return await c.initialize(), c.getIndex();
}, "buildIndex"), Ck = /* @__PURE__ */ s(async (e) => {
  let t = await RX(e);
  OX.info(`Writing index to ${e.outputFile}`), await IX(e.outputFile, JSON.stringify(t));
}, "buildIndexStandalone");

// src/core-server/standalone.ts
import { dirname as NX } from "node:path";
async function LX(e = {}, t = {}) {
  let { mode: r = "dev" } = e, i = NX(H.resolve("storybook/internal/package.json")), n = JSON.parse(H("fs").readFileSync(`${i}/package.json`)),
  o = {
    ...e,
    ...t,
    frameworkPresets: [
      ...e.frameworkPresets || [],
      ...t.frameworkPresets || []
    ],
    packageJson: n
  };
  if (r === "dev")
    return bk(o);
  if (r === "static")
    return RC(o);
  if (r === "index")
    return Ck(o);
  throw new Error("'mode' parameter should be either 'dev', 'static', or 'index'");
}
s(LX, "build");
var MX = LX;

// src/shared/universal-store/mock.ts
var wk = he(Ft(), 1);
import { Channel as jX } from "storybook/internal/channels";
var rg = class e extends Ct {
  static {
    s(this, "MockUniversalStore");
  }
  constructor(t, r) {
    Ct.isInternalConstructing = !0, super(
      { ...t, leader: !0 },
      { channel: new jX({}), environment: Ct.Environment.MOCK }
    ), Ct.isInternalConstructing = !1, typeof r?.fn == "function" && (this.testUtils = r, this.getState = r.fn(this.getState), this.setState =
    r.fn(this.setState), this.subscribe = r.fn(this.subscribe), this.onStateChange = r.fn(this.onStateChange), this.send = r.fn(this.send));
  }
  /** Create a mock universal store. This is just an alias for the constructor */
  static create(t, r) {
    return new e(t, r);
  }
  unsubscribeAll() {
    if (!this.testUtils)
      throw new Error(
        wk.default`Cannot call unsubscribeAll on a store that does not have testUtils.
        Please provide testUtils as the second argument when creating the store.`
      );
    let t = /* @__PURE__ */ s((r) => {
      try {
        r.value();
      } catch {
      }
    }, "callReturnedUnsubscribeFn");
    this.subscribe.mock?.results.forEach(t), this.onStateChange.mock?.results.forEach(t);
  }
};

// src/storybook-error.ts
function Ak({
  code: e,
  category: t
}) {
  let r = String(e).padStart(4, "0");
  return `SB_${t}_${r}`;
}
s(Ak, "parseErrorCode");
var Ii = class e extends Error {
  constructor(r) {
    super(e.getFullMessage(r));
    /**
     * Data associated with the error. Used to provide additional information in the error message or
     * to be passed to telemetry.
     */
    this.data = {};
    /** Flag used to easily determine if the error originates from Storybook. */
    this.fromStorybook = !0;
    this.category = r.category, this.documentation = r.documentation ?? !1, this.code = r.code;
  }
  static {
    s(this, "StorybookError");
  }
  get fullErrorCode() {
    return Ak({ code: this.code, category: this.category });
  }
  /** Overrides the default `Error.name` property in the format: SB_<CATEGORY>_<CODE>. */
  get name() {
    let r = this.constructor.name;
    return `${this.fullErrorCode} (${r})`;
  }
  /** Generates the error message along with additional documentation link (if applicable). */
  static getFullMessage({
    documentation: r,
    code: i,
    category: n,
    message: o
  }) {
    let a;
    return r === !0 ? a = `https://storybook.js.org/error/${Ak({ code: i, category: n })}` : typeof r == "string" ? a = r : Array.isArray(r) &&
    (a = `
${r.map((u) => `	- ${u}`).join(`
`)}`), `${o}${a != null ? `

More info: ${a}
` : ""}`;
  }
};

// src/manager-errors.ts
var Qu = class extends Ii {
  constructor(r) {
    super({
      category: "MANAGER_API",
      code: 1,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/preview-errors.ts
var qX = he(Ft(), 1);
var Zu = class extends Ii {
  constructor(r) {
    super({
      category: "PREVIEW_API",
      code: 16,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/server-errors.ts
var $X = he(Ft(), 1);
var el = class extends Ii {
  constructor(r) {
    super({
      category: "CORE-SERVER",
      code: 16,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/shared/status-store/index.ts
var Sk = {
  id: "storybook/status",
  leader: !0,
  initialState: {}
}, ig = {
  SELECT: "select"
};
function Fk({
  universalStatusStore: e,
  useUniversalStore: t,
  environment: r
}) {
  let i = {
    getAll() {
      return e.getState();
    },
    set(o) {
      e.setState((a) => {
        let u = { ...a };
        for (let l of o) {
          let { storyId: c, typeId: p } = l;
          u[c] = { ...u[c] ?? {}, [p]: l };
        }
        return u;
      });
    },
    onAllStatusChange(o) {
      return e.onStateChange((a, u) => {
        o(a, u);
      });
    },
    onSelect(o) {
      return e.subscribe(ig.SELECT, (a) => {
        o(a.payload);
      });
    },
    selectStatuses: /* @__PURE__ */ s((o) => {
      e.send({ type: ig.SELECT, payload: o });
    }, "selectStatuses"),
    unset(o) {
      if (!o) {
        e.setState({});
        return;
      }
      e.setState((a) => {
        let u = { ...a };
        for (let l of o)
          delete u[l];
        return u;
      });
    },
    typeId: void 0
  }, n = /* @__PURE__ */ s((o) => ({
    getAll: i.getAll,
    set(a) {
      e.setState((u) => {
        let l = { ...u };
        for (let c of a) {
          let { storyId: p } = c;
          if (c.typeId !== o)
            switch (r) {
              case "server":
                throw new el({
                  status: c,
                  typeId: o
                });
              case "manager":
                throw new Qu({
                  status: c,
                  typeId: o
                });
              case "preview":
              default:
                throw new Zu({
                  status: c,
                  typeId: o
                });
            }
          l[p] = { ...l[p] ?? {}, [o]: c };
        }
        return l;
      });
    },
    onAllStatusChange: i.onAllStatusChange,
    onSelect(a) {
      return e.subscribe(ig.SELECT, (u) => {
        u.payload.some((l) => l.typeId === o) && a(u.payload);
      });
    },
    unset(a) {
      e.setState((u) => {
        let l = { ...u };
        for (let c in l)
          if (l[c]?.[o] && (!a || a?.includes(c))) {
            let { [o]: p, ...h } = l[c];
            l[c] = h;
          }
        return l;
      });
    },
    typeId: o
  }), "getStatusStoreByTypeId");
  return t ? {
    getStatusStoreByTypeId: n,
    fullStatusStore: i,
    universalStatusStore: e,
    useStatusStore: /* @__PURE__ */ s((o) => t(e, o)[0], "useStatusStore")
  } : { getStatusStoreByTypeId: n, fullStatusStore: i, universalStatusStore: e };
}
s(Fk, "createStatusStore");

// src/core-server/stores/status.ts
var VX = Fk({
  universalStatusStore: Ct.create({
    ...Sk,
    /*
      This is a temporary workaround, to ensure that the store is not created in the
      vitest sub-process in addon-vitest, even though it imports from core-server
      If it was created in the sub-process, it would try to connect to the leader in the dev server
      before it was ready.
      This will be fixed when we do the planned UniversalStore v0.2.
    */
    leader: process.env.VITEST_CHILD_PROCESS !== "true"
  }),
  environment: "server"
}), { fullStatusStore: UX, getStatusStoreByTypeId: WX, universalStatusStore: zX } = VX;

// src/shared/test-provider-store/index.ts
var _k = {
  id: "storybook/test-provider",
  leader: !0,
  initialState: {}
};
function kk({
  universalTestProviderStore: e,
  useUniversalStore: t
}) {
  let r = {
    settingsChanged: /* @__PURE__ */ s(() => {
      e.untilReady().then(() => {
        e.send({ type: "settings-changed" });
      });
    }, "settingsChanged"),
    onRunAll: /* @__PURE__ */ s((o) => e.subscribe("run-all", o), "onRunAll"),
    onClearAll: /* @__PURE__ */ s((o) => e.subscribe("clear-all", o), "onClearAll")
  }, i = {
    ...r,
    getFullState: e.getState,
    setFullState: e.setState,
    onSettingsChanged: /* @__PURE__ */ s((o) => e.subscribe("settings-changed", o), "onSettingsChanged"),
    runAll: /* @__PURE__ */ s(async () => {
      await e.untilReady(), e.send({ type: "run-all" });
    }, "runAll"),
    clearAll: /* @__PURE__ */ s(async () => {
      await e.untilReady(), e.send({ type: "clear-all" });
    }, "clearAll")
  }, n = /* @__PURE__ */ s((o) => {
    let a = /* @__PURE__ */ s(() => e.getState()[o] ?? "test-provider-state:pending", "getStateForTestProvider"), u = /* @__PURE__ */ s((l) => {
      e.untilReady().then(() => {
        e.setState((c) => ({
          ...c,
          [o]: l
        }));
      });
    }, "setStateForTestProvider");
    return {
      ...r,
      testProviderId: o,
      getState: a,
      setState: u,
      runWithState: /* @__PURE__ */ s(async (l) => {
        u("test-provider-state:running");
        try {
          await l(), u("test-provider-state:succeeded");
        } catch {
          u("test-provider-state:crashed");
        }
      }, "runWithState")
    };
  }, "getTestProviderStoreById");
  return t ? {
    getTestProviderStoreById: n,
    fullTestProviderStore: i,
    universalTestProviderStore: e,
    useTestProviderStore: /* @__PURE__ */ s((o) => t(e, o)[0], "useTestProviderStore")
  } : {
    getTestProviderStoreById: n,
    fullTestProviderStore: i,
    universalTestProviderStore: e
  };
}
s(kk, "createTestProviderStore");

// src/core-server/stores/test-provider.ts
var HX = kk({
  universalTestProviderStore: Ct.create({
    ..._k,
    /*
            This is a temporary workaround, to ensure that the store is not created in the
            vitest sub-process in addon-vitest, even though it imports from core-server
            If it was created in the sub-process, it would try to connect to the leader in the dev server
            before it was ready.
            This will be fixed when we do the planned UniversalStore v0.2.
          */
    leader: process.env.VITEST_CHILD_PROCESS !== "true"
  })
}), { fullTestProviderStore: JX, getTestProviderStoreById: GX, universalTestProviderStore: XX } = HX;
export {
  Yr as StoryIndexGenerator,
  MX as build,
  bk as buildDevStandalone,
  RX as buildIndex,
  Ck as buildIndexStandalone,
  RC as buildStaticStandalone,
  rg as experimental_MockUniversalStore,
  Ct as experimental_UniversalStore,
  WX as experimental_getStatusStore,
  GX as experimental_getTestProviderStore,
  tg as experimental_loadStorybook,
  zV as getErrorLevel,
  Gpe as getPreviewBodyTemplate,
  Jpe as getPreviewHeadTemplate,
  UX as internal_fullStatusStore,
  JX as internal_fullTestProviderStore,
  zX as internal_universalStatusStore,
  XX as internal_universalTestProviderStore,
  lv as mapStaticDir,
  Wd as sendTelemetryError,
  yoe as withTelemetry
};
