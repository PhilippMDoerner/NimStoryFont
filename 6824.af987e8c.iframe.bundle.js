"use strict";(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[6824],{"./node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-form-field.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>FieldType,m:()=>FormlyBootstrapFormFieldModule});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");function FormlyWrapperFormField_ng_template_0_label_0_span_2_Template(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0,"span",9),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1,"*"),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]())}function FormlyWrapperFormField_ng_template_0_label_0_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0,"label",7),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2,FormlyWrapperFormField_ng_template_0_label_0_span_2_Template,2,0,"span",8),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()),2&rf){const ctx_r0=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("for",ctx_r0.id),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ",ctx_r0.props.label," "),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf",ctx_r0.props.required&&!0!==ctx_r0.props.hideRequiredMarker)}}function FormlyWrapperFormField_ng_template_0_Template(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0,FormlyWrapperFormField_ng_template_0_label_0_Template,3,3,"label",6),2&rf){const ctx_r0=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf",ctx_r0.props.label&&!0!==ctx_r0.props.hideLabel)}}function FormlyWrapperFormField_ng_container_3_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](1,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]()),2&rf){_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();const labelTemplate_r2=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet",labelTemplate_r2)}}function FormlyWrapperFormField_ng_template_4_Template(rf,ctx){}function FormlyWrapperFormField_ng_container_6_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](1,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]()),2&rf){_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();const labelTemplate_r2=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet",labelTemplate_r2)}}function FormlyWrapperFormField_div_7_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0,"div",11),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1,"formly-validation-message",12),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()),2&rf){const ctx_r0=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("display","block"),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("id","",ctx_r0.id,"-formly-validation-error"),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("field",ctx_r0.field)}}function FormlyWrapperFormField_small_8_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0,"small",13),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()),2&rf){const ctx_r0=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r0.props.description)}}const _c0=["fieldTypeTemplate"];class FormlyWrapperFormField extends _ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.cm{}FormlyWrapperFormField.ɵfac=(()=>{let ɵFormlyWrapperFormField_BaseFactory;return function FormlyWrapperFormField_Factory(__ngFactoryType__){return(ɵFormlyWrapperFormField_BaseFactory||(ɵFormlyWrapperFormField_BaseFactory=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](FormlyWrapperFormField)))(__ngFactoryType__||FormlyWrapperFormField)}})(),FormlyWrapperFormField.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyWrapperFormField,selectors:[["formly-wrapper-form-field"]],standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],decls:9,vars:8,consts:[["labelTemplate",""],["fieldComponent",""],[1,"mb-3"],[4,"ngIf"],["class","invalid-feedback",3,"display",4,"ngIf"],["class","form-text text-muted",4,"ngIf"],["class","form-label",4,"ngIf"],[1,"form-label"],["aria-hidden","true",4,"ngIf"],["aria-hidden","true"],[3,"ngTemplateOutlet"],[1,"invalid-feedback"],["role","alert",3,"id","field"],[1,"form-text","text-muted"]],template:function FormlyWrapperFormField_Template(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0,FormlyWrapperFormField_ng_template_0_Template,1,1,"ng-template",null,0,_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2,"div",2),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3,FormlyWrapperFormField_ng_container_3_Template,2,1,"ng-container",3)(4,FormlyWrapperFormField_ng_template_4_Template,0,0,"ng-template",null,1,_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"])(6,FormlyWrapperFormField_ng_container_6_Template,2,1,"ng-container",3)(7,FormlyWrapperFormField_div_7_Template,2,5,"div",4)(8,FormlyWrapperFormField_small_8_Template,2,1,"small",5),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("form-floating","floating"===ctx.props.labelPosition)("has-error",ctx.showError),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf","floating"!==ctx.props.labelPosition),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf","floating"===ctx.props.labelPosition),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf",ctx.showError),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf",ctx.props.description))},dependencies:[_ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.Nc,_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf,_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgTemplateOutlet],encapsulation:2}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyWrapperFormField,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-wrapper-form-field",template:'\n    <ng-template #labelTemplate>\n      <label *ngIf="props.label && props.hideLabel !== true" [attr.for]="id" class="form-label">\n        {{ props.label }}\n        <span *ngIf="props.required && props.hideRequiredMarker !== true" aria-hidden="true">*</span>\n      </label>\n    </ng-template>\n\n    <div class="mb-3" [class.form-floating]="props.labelPosition === \'floating\'" [class.has-error]="showError">\n      <ng-container *ngIf="props.labelPosition !== \'floating\'">\n        <ng-container [ngTemplateOutlet]="labelTemplate"></ng-container>\n      </ng-container>\n\n      <ng-template #fieldComponent></ng-template>\n\n      <ng-container *ngIf="props.labelPosition === \'floating\'">\n        <ng-container [ngTemplateOutlet]="labelTemplate"></ng-container>\n      </ng-container>\n\n      <div *ngIf="showError" class="invalid-feedback" [style.display]="\'block\'">\n        <formly-validation-message\n          id="{{ id }}-formly-validation-error"\n          [field]="field"\n          role="alert"\n        ></formly-validation-message>\n      </div>\n\n      <small *ngIf="props.description" class="form-text text-muted">{{ props.description }}</small>\n    </div>\n  '}]}],null,null);class FormlyBootstrapFormFieldModule{}FormlyBootstrapFormFieldModule.ɵfac=function FormlyBootstrapFormFieldModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyBootstrapFormFieldModule)},FormlyBootstrapFormFieldModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({type:FormlyBootstrapFormFieldModule,declarations:[FormlyWrapperFormField],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.X1,_ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.qy]}),FormlyBootstrapFormFieldModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.X1,_ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.qy.forChild({wrappers:[{name:"form-field",component:FormlyWrapperFormField}]})]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyBootstrapFormFieldModule,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,args:[{declarations:[FormlyWrapperFormField],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.X1,_ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.qy.forChild({wrappers:[{name:"form-field",component:FormlyWrapperFormField}]})]}]}],null,null);class FieldType extends _ngx_formly_core__WEBPACK_IMPORTED_MODULE_1__.PU{constructor(hostContainerRef){super(),this.hostContainerRef=hostContainerRef}set content(templateRef){templateRef&&this.hostContainerRef&&this.hostContainerRef.createEmbeddedView(templateRef)}}FieldType.ɵfac=function FieldType_Factory(__ngFactoryType__){return new(__ngFactoryType__||FieldType)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,8))},FieldType.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FieldType,viewQuery:function FieldType_Query(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0,7),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx.content=_t.first)}},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FieldType,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive}],(function(){return[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]}]}),{content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["fieldTypeTemplate",{static:!0}]}]})},"./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nc:()=>FormlyValidationMessage,PU:()=>FieldType,ch:()=>FormlyAttributes,cm:()=>FieldWrapper,qy:()=>FormlyModule});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isObservable.js"),rxjs__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),rxjs__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),rxjs__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),rxjs__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),_angular_common__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");const _c0=["container"];function FormlyField_ng_template_0_Template(rf,ctx){}function FormlyGroup_formly_field_0_Template(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0,"formly-field",1),2&rf){const f_r1=ctx.$implicit;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("field",f_r1)}}const _c2=["fieldComponent"];function getFieldId(formId,field,index){if(field.id)return field.id;let type=field.type;return!type&&field.template&&(type="template"),type instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.Type&&(type=type.prototype.constructor.name),[formId,type,field.key,index].join("_")}function hasKey(field){return!isNil(field.key)&&""!==field.key&&(!Array.isArray(field.key)||field.key.length>0)}function getKeyPath(field){if(!hasKey(field))return[];if(field._keyPath?.key!==field.key){let path=[];if("string"==typeof field.key){const key=-1===field.key.indexOf("[")?field.key:field.key.replace(/\[(\w+)\]/g,".$1");path=-1!==key.indexOf(".")?key.split("."):[key]}else path=Array.isArray(field.key)?field.key.slice(0):[`${field.key}`];defineHiddenProp(field,"_keyPath",{key:field.key,path})}return field._keyPath.path.slice(0)}const FORMLY_VALIDATORS=["required","pattern","minLength","maxLength","min","max"];function assignFieldValue(field,value){let paths=getKeyPath(field);if(0===paths.length)return;let root=field;for(;root.parent;)root=root.parent,paths=[...getKeyPath(root),...paths];if(void 0===value&&field.resetOnHide){const k=paths.pop();delete paths.reduce(((model,path)=>model[path]||{}),root.model)[k]}else!function assignModelValue(model,paths,value){for(let i=0;i<paths.length-1;i++){const path=paths[i];model[path]&&isObject(model[path])||(model[path]=/^\d+$/.test(paths[i+1])?[]:{}),model=model[path]}model[paths[paths.length-1]]=clone(value)}(root.model,paths,value)}function getFieldValue(field){let model=field.parent?field.parent.model:field.model;for(const path of getKeyPath(field)){if(!model)return model;model=model[path]}return model}function reverseDeepMerge(dest,...args){return args.forEach((src=>{for(const srcArg in src)isNil(dest[srcArg])||""===dest[srcArg]?dest[srcArg]=clone(src[srcArg]):(obj1=dest[srcArg],obj2=src[srcArg],isObject(obj1)&&isObject(obj2)&&Object.getPrototypeOf(obj1)===Object.getPrototypeOf(obj2)&&!Array.isArray(obj1)&&!Array.isArray(obj2)&&reverseDeepMerge(dest[srcArg],src[srcArg]));var obj1,obj2})),dest}function isNil(value){return null==value}function isUndefined(value){return void 0===value}function isFunction(value){return"function"==typeof value}function isObject(x){return null!=x&&"object"==typeof x}function clone(value){if(!isObject(value)||(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(value)||value instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef||value.changingThisBreaksApplicationSecurity||-1!==["RegExp","FileList","File","Blob"].indexOf(value.constructor?.name))return value;if(value instanceof Set)return new Set(value);if(value instanceof Map)return new Map(value);if(value instanceof Uint8Array)return new Uint8Array(value);if(value instanceof Uint16Array)return new Uint16Array(value);if(value instanceof Uint32Array)return new Uint32Array(value);if(value._isAMomentObject&&isFunction(value.clone))return value.clone();if(value instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.EL)return null;if(value instanceof Date)return new Date(value.getTime());if(Array.isArray(value))return value.slice(0).map((v=>clone(v)));const proto=Object.getPrototypeOf(value);let c=Object.create(proto);return c=Object.setPrototypeOf(c,proto),Object.keys(value).reduce(((newVal,prop)=>{const propDesc=Object.getOwnPropertyDescriptor(value,prop);return propDesc.get?Object.defineProperty(newVal,prop,propDesc):newVal[prop]=clone(value[prop]),newVal}),c)}function defineHiddenProp(field,prop,defaultValue){Object.defineProperty(field,prop,{enumerable:!1,writable:!0,configurable:!0}),field[prop]=defaultValue}function observeDeep(source,paths,setFn){let observers=[];const unsubscribe=()=>{observers.forEach((observer=>observer())),observers=[]},observer=observe(source,paths,(({firstChange,currentValue})=>{!firstChange&&setFn(),unsubscribe(),isObject(currentValue)&&"Object"===currentValue.constructor.name&&Object.keys(currentValue).forEach((prop=>{observers.push(observeDeep(source,[...paths,prop],setFn))}))}));return()=>{observer.unsubscribe(),unsubscribe()}}function observe(o,paths,setFn){o._observers||defineHiddenProp(o,"_observers",{});let target=o;for(let i=0;i<paths.length-1;i++)target[paths[i]]&&isObject(target[paths[i]])||(target[paths[i]]=/^\d+$/.test(paths[i+1])?[]:{}),target=target[paths[i]];const key=paths[paths.length-1],prop=paths.join(".");o._observers[prop]||(o._observers[prop]={value:target[key],onChange:[]});const state=o._observers[prop];if(target[key]!==state.value&&(state.value=target[key]),setFn&&-1===state.onChange.indexOf(setFn)&&(state.onChange.push(setFn),setFn({currentValue:state.value,firstChange:!0}),state.onChange.length>=1&&isObject(target))){const{enumerable}=Object.getOwnPropertyDescriptor(target,key)||{enumerable:!0};Object.defineProperty(target,key,{enumerable,configurable:!0,get:()=>state.value,set:currentValue=>{if(currentValue!==state.value){const previousValue=state.value;state.value=currentValue,state.onChange.forEach((changeFn=>changeFn({previousValue,currentValue,firstChange:!1})))}}})}return{setValue(currentValue,emitEvent=!0){if(currentValue===state.value)return;const previousValue=state.value;state.value=currentValue,state.onChange.forEach((changeFn=>{changeFn!==setFn&&emitEvent&&changeFn({previousValue,currentValue,firstChange:!1})}))},unsubscribe(){state.onChange=state.onChange.filter((changeFn=>changeFn!==setFn)),0===state.onChange.length&&delete o._observers[prop]}}}function getField(f,key){if(key=Array.isArray(key)?key.join("."):key,f.fieldGroup)for(let i=0,len=f.fieldGroup.length;i<len;i++){const c=f.fieldGroup[i],k=Array.isArray(c.key)?c.key.join("."):c.key;if(k===key)return c;if(c.fieldGroup&&(isNil(k)||0===key.indexOf(`${k}.`))){const field=getField(c,isNil(k)?key:key.slice(k.length+1));if(field)return field}}}function markFieldForCheck(field){field._componentRefs?.forEach((ref=>{if(ref instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentRef){ref.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef).markForCheck()}else ref.markForCheck()}))}function isHiddenField(field){const isHidden=f=>f.hide||f.expressions?.hide||f.hideExpression;let setDefaultValue=!field.resetOnHide||!isHidden(field);if(!isHidden(field)&&field.resetOnHide){let parent=field.parent;for(;parent&&!isHidden(parent);)parent=parent.parent;setDefaultValue=!parent||!isHidden(parent)}return!setDefaultValue}function isSignalRequired(){return+_angular_core__WEBPACK_IMPORTED_MODULE_0__.VERSION.major>=18&&+_angular_core__WEBPACK_IMPORTED_MODULE_0__.VERSION.minor>=1}const FORMLY_CONFIG=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("FORMLY_CONFIG");class FormlyConfig{constructor(){this.types={},this.validators={},this.wrappers={},this.messages={},this.extras={checkExpressionOn:"modelChange",lazyRender:!0,resetFieldOnHide:!0,renderFormlyFieldElement:!0,showError:field=>field.formControl?.invalid&&(field.formControl?.touched||field.options.parentForm?.submitted||!!field.field.validation?.show)},this.extensions={},this.presets={},this.extensionsByPriority={}}addConfig(config){config.types&&config.types.forEach((type=>this.setType(type))),config.validators&&config.validators.forEach((validator=>this.setValidator(validator))),config.wrappers&&config.wrappers.forEach((wrapper=>this.setWrapper(wrapper))),config.validationMessages&&config.validationMessages.forEach((validation=>this.addValidatorMessage(validation.name,validation.message))),config.extensions&&this.setSortedExtensions(config.extensions),config.extras&&(this.extras={...this.extras,...config.extras}),config.presets&&(this.presets={...this.presets,...config.presets.reduce(((acc,curr)=>({...acc,[curr.name]:curr.config})),{})})}setType(options){Array.isArray(options)?options.forEach((option=>this.setType(option))):(this.types[options.name]||(this.types[options.name]={name:options.name}),["component","extends","defaultOptions","wrappers"].forEach((prop=>{options.hasOwnProperty(prop)&&(this.types[options.name][prop]=options[prop])})))}getType(name,throwIfNotFound=!1){if(name instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.Type)return{component:name,name:name.prototype.constructor.name};if(!this.types[name]){if(throwIfNotFound)throw new Error(`[Formly Error] The type "${name}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);return null}return this.mergeExtendedType(name),this.types[name]}getMergedField(field={}){const type=this.getType(field.type);if(!type)return;type.defaultOptions&&reverseDeepMerge(field,type.defaultOptions);const extendDefaults=type.extends&&this.getType(type.extends).defaultOptions;extendDefaults&&reverseDeepMerge(field,extendDefaults),field?.optionsTypes&&field.optionsTypes.forEach((option=>{const defaultOptions=this.getType(option).defaultOptions;defaultOptions&&reverseDeepMerge(field,defaultOptions)}));const componentRef=this.resolveFieldTypeRef(field);componentRef?.instance?.defaultOptions&&reverseDeepMerge(field,componentRef.instance.defaultOptions),!field.wrappers&&type.wrappers&&(field.wrappers=[...type.wrappers])}resolveFieldTypeRef(field={}){const type=this.getType(field.type);if(!type)return null;if(!type.component||type._componentRef)return type._componentRef;const{_viewContainerRef,_injector}=field.options;if(!_viewContainerRef||!_injector)return null;const componentRef=_viewContainerRef.createComponent(type.component,{injector:_injector});defineHiddenProp(type,"_componentRef",componentRef);try{componentRef.destroy()}catch(e){console.error(`An error occurred while destroying the Formly component type "${field.type}"`,e)}return type._componentRef}setWrapper(options){this.wrappers[options.name]=options,options.types&&options.types.forEach((type=>{this.setTypeWrapper(type,options.name)}))}getWrapper(name){if(name instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.Type)return{component:name,name:name.prototype.constructor.name};if(!this.wrappers[name])throw new Error(`[Formly Error] The wrapper "${name}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);return this.wrappers[name]}setTypeWrapper(type,name){this.types[type]||(this.types[type]={}),this.types[type].wrappers||(this.types[type].wrappers=[]),-1===this.types[type].wrappers.indexOf(name)&&this.types[type].wrappers.push(name)}setValidator(options){this.validators[options.name]=options}getValidator(name){if(!this.validators[name])throw new Error(`[Formly Error] The validator "${name}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);return this.validators[name]}addValidatorMessage(name,message){if(this.messages[name]=message,"undefined"==typeof ngDevMode||ngDevMode){const deprecated={minlength:"minLength",maxlength:"maxLength"};deprecated[name]&&(console.warn(`Formly deprecation: passing validation messages key '${name}' is deprecated since v6.0, use '${deprecated[name]}' instead.`),this.messages[deprecated[name]]=message)}}getValidatorMessage(name){return this.messages[name]}setSortedExtensions(extensionOptions){extensionOptions.forEach((extensionOption=>{const priority=extensionOption.priority??1;this.extensionsByPriority[priority]={...this.extensionsByPriority[priority],[extensionOption.name]:extensionOption.extension}})),this.extensions=Object.keys(this.extensionsByPriority).map(Number).sort(((a,b)=>a-b)).reduce(((acc,prio)=>({...acc,...this.extensionsByPriority[prio]})),{})}mergeExtendedType(name){if(!this.types[name].extends)return;const extendedType=this.getType(this.types[name].extends);this.types[name].component||(this.types[name].component=extendedType.component),this.types[name].wrappers||(this.types[name].wrappers=extendedType.wrappers)}}FormlyConfig.ɵfac=function FormlyConfig_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyConfig)},FormlyConfig.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({token:FormlyConfig,factory:FormlyConfig.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyConfig,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,args:[{providedIn:"root"}]}],null,null);class FormlyFormBuilder{constructor(config,injector,viewContainerRef,parentForm){this.config=config,this.injector=injector,this.viewContainerRef=viewContainerRef,this.parentForm=parentForm}buildForm(form,fieldGroup=[],model,options){this.build({fieldGroup,model,form,options})}build(field){if(!this.config.extensions.core)throw new Error("NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.");field.parent||this._setOptions(field),function disableTreeValidityCall(form,callback){const _updateTreeValidity=form._updateTreeValidity.bind(form);form._updateTreeValidity=()=>{},callback(),form._updateTreeValidity=_updateTreeValidity}(field.form,(()=>{if(this._build(field),!field.parent||field.fieldArray){const options=field.options;field.parent&&isHiddenField(field)&&options._hiddenFieldsForCheck?.push({field,default:!1}),options.checkExpressions?.(field,!0),options._detectChanges?.(field)}}))}_build(field){if(!field)return;const extensions=Object.values(this.config.extensions);extensions.forEach((extension=>extension.prePopulate?.(field))),extensions.forEach((extension=>extension.onPopulate?.(field))),field.fieldGroup?.forEach((f=>this._build(f))),extensions.forEach((extension=>extension.postPopulate?.(field)))}_setOptions(field){field.form=field.form||new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE({}),field.model=field.model||{},field.options=field.options||{};const options=field.options;options._viewContainerRef||defineHiddenProp(options,"_viewContainerRef",this.viewContainerRef),options._injector||defineHiddenProp(options,"_injector",this.injector),options.build||(options._buildForm=()=>{console.warn("Formly: 'options._buildForm' is deprecated since v6.0, use 'options.build' instead."),this.build(field)},options.build=(f=field)=>(this.build(f),f)),!options.parentForm&&this.parentForm&&(defineHiddenProp(options,"parentForm",this.parentForm),isSignalRequired()||observe(options,["parentForm","submitted"],(({firstChange})=>{firstChange||options.detectChanges(field)})))}}function unregisterControl(field,emitEvent=!1){const control=field.formControl,fieldIndex=control._fields?control._fields.indexOf(field):-1;-1!==fieldIndex&&control._fields.splice(fieldIndex,1);const form=control.parent;if(!form)return;const opts={emitEvent};if(form instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Yp){const key=form.controls.findIndex((c=>c===control));-1!==key&&form.removeAt(key,opts)}else if(form instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE){const paths=getKeyPath(field),key=paths[paths.length-1];form.get([key])===control&&form.removeControl(key,opts)}control.setParent(null)}function findControl(field){return field.formControl?field.formControl:!1===field.shareFormControl?null:field.form?.get(getKeyPath(field))}function registerControl(field,control,emitEvent=!1){if((control=control||field.formControl)._fields||defineHiddenProp(control,"_fields",[]),-1===control._fields.indexOf(field)&&control._fields.push(field),!field.formControl&&control){defineHiddenProp(field,"formControl",control),control.setValidators(null),control.setAsyncValidators(null),field.props.disabled=!!field.props.disabled;const disabledObserver=observe(field,["props","disabled"],(({firstChange,currentValue})=>{firstChange||(currentValue?field.formControl.disable():field.formControl.enable())}));control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ&&control.registerOnDisabledChange(disabledObserver.setValue)}if(!field.form||!hasKey(field))return;let form=field.form;const paths=getKeyPath(field),value=getFieldValue(field);isNil(control.value)&&isNil(value)||control.value===value||!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ)||control.patchValue(value);for(let i=0;i<paths.length-1;i++){const path=paths[i];form.get([path])||form.setControl(path,new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE({}),{emitEvent}),form=form.get([path])}const key=paths[paths.length-1];field._hide||form.get([key])===control||form.setControl(key,control,{emitEvent})}function updateValidity(c,onlySelf=!1){const status=c.status,value=c.value;c.updateValueAndValidity({emitEvent:!1,onlySelf}),status!==c.status&&c.statusChanges.emit(c.status),value!==c.value&&c.valueChanges.emit(c.value)}function clearControl(form){delete form?._fields,form.setValidators(null),form.setAsyncValidators(null),(form instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE||form instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Yp)&&Object.values(form.controls).forEach((c=>clearControl(c)))}FormlyFormBuilder.ɵfac=function FormlyFormBuilder_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyFormBuilder)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](FormlyConfig),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,8),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__.j4,8))},FormlyFormBuilder.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({token:FormlyFormBuilder,factory:FormlyFormBuilder.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyFormBuilder,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:FormlyConfig},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]},{type:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.j4,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]}]}),null);class FormlyTemplate{constructor(ref){this.ref=ref}ngOnChanges(){this.name=this.name||"formly-group"}}FormlyTemplate.ɵfac=function FormlyTemplate_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyTemplate)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef))},FormlyTemplate.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FormlyTemplate,selectors:[["","formlyTemplate",""]],inputs:{name:[0,"formlyTemplate","name"]},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyTemplate,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,args:[{selector:"[formlyTemplate]"}]}],(function(){return[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef}]}),{name:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:["formlyTemplate"]}]});class FormlyFieldTemplates{}FormlyFieldTemplates.ɵfac=function FormlyFieldTemplates_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyFieldTemplates)},FormlyFieldTemplates.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({token:FormlyFieldTemplates,factory:FormlyFieldTemplates.ɵfac}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyFieldTemplates,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable}],null,null);class FormlyField{constructor(config,renderer,_elementRef,hostContainerRef,form){this.config=config,this.renderer=renderer,this._elementRef=_elementRef,this.hostContainerRef=hostContainerRef,this.form=form,this.hostObservers=[],this.componentRefs=[],this.hooksObservers=[],this.detectFieldBuild=!1,this.valueChangesUnsubscribe=()=>{}}get containerRef(){return this.config.extras.renderFormlyFieldElement?this.viewContainerRef:this.hostContainerRef}get elementRef(){return this.config.extras.renderFormlyFieldElement?this._elementRef:this.componentRefs?.[0]instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentRef?this.componentRefs[0].location:null}ngAfterContentInit(){this.triggerHook("afterContentInit")}ngAfterViewInit(){this.triggerHook("afterViewInit")}ngDoCheck(){this.detectFieldBuild&&this.field&&this.field.options&&this.render()}ngOnInit(){this.triggerHook("onInit")}ngOnChanges(changes){this.triggerHook("onChanges",changes)}ngOnDestroy(){this.resetRefs(this.field),this.hostObservers.forEach((hostObserver=>hostObserver.unsubscribe())),this.hooksObservers.forEach((unsubscribe=>unsubscribe())),this.valueChangesUnsubscribe(),this.triggerHook("onDestroy")}renderField(containerRef,f,wrappers=[]){if(this.containerRef===containerRef&&(this.resetRefs(this.field),this.containerRef.clear(),wrappers=this.field?.wrappers),wrappers?.length>0){const[wrapper,...wps]=wrappers,{component}=this.config.getWrapper(wrapper),ref=containerRef.createComponent(component);this.attachComponentRef(ref,f),observe(ref.instance,["fieldComponent"],(({currentValue,previousValue,firstChange})=>{if(currentValue){if(previousValue&&previousValue._lContainer===currentValue._lContainer)return;const viewRef=previousValue?previousValue.detach():null;viewRef&&!viewRef.destroyed?currentValue.insert(viewRef):this.renderField(currentValue,f,wps),!firstChange&&ref.changeDetectorRef.detectChanges()}}))}else if(f?.type){const inlineType=this.form?.templates?.find((ref=>ref.name===f.type));let ref;if(inlineType)ref=containerRef.createEmbeddedView(inlineType.ref,{$implicit:f});else{const{component}=this.config.getType(f.type,!0);ref=containerRef.createComponent(component)}this.attachComponentRef(ref,f)}}triggerHook(name,changes){if(("onInit"===name||"onChanges"===name&&changes.field&&!changes.field.firstChange)&&(this.valueChangesUnsubscribe(),this.valueChangesUnsubscribe=this.fieldChanges(this.field)),this.field?.hooks?.[name]&&(!changes||changes.field)){const r=this.field.hooks[name](this.field);if((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(r)&&-1!==["onInit","afterContentInit","afterViewInit"].indexOf(name)){const sub=r.subscribe();this.hooksObservers.push((()=>sub.unsubscribe()))}}"onChanges"===name&&changes.field&&(this.resetRefs(changes.field.previousValue),this.render())}attachComponentRef(ref,field){this.componentRefs.push(ref),field._componentRefs.push(ref),ref instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentRef&&Object.assign(ref.instance,{field})}render(){if(this.field)if(this.field.options)if(this.detectFieldBuild=!1,this.hostObservers.forEach((hostObserver=>hostObserver.unsubscribe())),this.hostObservers=[observe(this.field,["hide"],(({firstChange,currentValue})=>{const containerRef=this.containerRef;!1===this.config.extras.lazyRender?(firstChange&&this.renderField(containerRef,this.field),(!firstChange||firstChange&&currentValue)&&this.elementRef&&this.renderer.setStyle(this.elementRef.nativeElement,"display",currentValue?"none":"")):currentValue?(containerRef.clear(),this.field.className&&this.renderer.removeAttribute(this.elementRef.nativeElement,"class")):(this.renderField(containerRef,this.field),this.field.className&&this.renderer.setAttribute(this.elementRef.nativeElement,"class",this.field.className)),!firstChange&&this.field.options.detectChanges(this.field)})),observe(this.field,["className"],(({firstChange,currentValue})=>{!(!firstChange||firstChange&&currentValue)||this.config.extras.lazyRender&&!0===this.field.hide||this.elementRef&&this.renderer.setAttribute(this.elementRef.nativeElement,"class",currentValue)}))],isSignalRequired()){if(this.field.formControl){const events=this.field.formControl.events.subscribe((()=>markFieldForCheck(this.field)));this.hostObservers.push(events)}}else["touched","pristine","status"].forEach((prop=>this.hostObservers.push(observe(this.field,["formControl",prop],(({firstChange})=>!firstChange&&markFieldForCheck(this.field))))));else this.detectFieldBuild=!0}resetRefs(field){field&&(field._localFields?field._localFields=[]:defineHiddenProp(this.field,"_localFields",[]),field._componentRefs?field._componentRefs=field._componentRefs.filter((ref=>-1===this.componentRefs.indexOf(ref))):defineHiddenProp(this.field,"_componentRefs",[])),this.componentRefs=[]}fieldChanges(field){if(!field)return()=>{};const propsObserver=observeDeep(field,["props"],(()=>field.options.detectChanges(field)));let subscribes=[()=>{propsObserver()}];for(const key of Object.keys(field._expressions||{})){const expressionObserver=observe(field,["_expressions",key],(({currentValue,previousValue})=>{previousValue?.subscription&&(previousValue.subscription.unsubscribe(),previousValue.subscription=null),(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(currentValue.value$)&&(currentValue.subscription=currentValue.value$.subscribe())}));subscribes.push((()=>{field._expressions[key]?.subscription&&field._expressions[key].subscription.unsubscribe(),expressionObserver.unsubscribe()}))}for(const path of[["focus"],["template"],["fieldGroupClassName"],["validation","show"]]){const fieldObserver=observe(field,path,(({firstChange})=>!firstChange&&field.options.detectChanges(field)));subscribes.push((()=>fieldObserver.unsubscribe()))}if(field.formControl&&!field.fieldGroup){const control=field.formControl;let valueChanges=control.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.T)((value=>(field.parsers?.map((parserFn=>value=parserFn(value,field))),Object.is(value,field.formControl.value)||field.formControl.setValue(value),value))),(0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.F)(((x,y)=>x===y&&!Array.isArray(x)&&!isObject(x))));control.value!==getFieldValue(field)&&(valueChanges=valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.Z)(control.value)));const{updateOn,debounce}=field.modelOptions;(!updateOn||"change"===updateOn)&&debounce?.default>0&&(valueChanges=control.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.B)(debounce.default)));const sub=valueChanges.subscribe((value=>{control._fields?.length>1&&control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ&&control.patchValue(value,{emitEvent:!1,onlySelf:!0}),hasKey(field)&&assignFieldValue(field,value),field.options.fieldChanges.next({value,field,type:"valueChanges"})}));subscribes.push((()=>sub.unsubscribe()))}let templateFieldsSubs=[];return observe(field,["_localFields"],(({currentValue})=>{templateFieldsSubs.forEach((unsubscribe=>unsubscribe())),templateFieldsSubs=(currentValue||[]).map((f=>this.fieldChanges(f)))})),()=>{subscribes.forEach((unsubscribe=>unsubscribe())),templateFieldsSubs.forEach((unsubscribe=>unsubscribe()))}}}FormlyField.ɵfac=function FormlyField_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyField)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyConfig),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyFieldTemplates,8))},FormlyField.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyField,selectors:[["formly-field"]],viewQuery:function FormlyField_Query(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0,7,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx.viewContainerRef=_t.first)}},inputs:{field:"field"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],decls:2,vars:0,consts:[["container",""]],template:function FormlyField_Template(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0,FormlyField_ng_template_0_Template,0,0,"ng-template",null,0,_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"])},styles:["[_nghost-%COMP%]:empty{display:none}"]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyField,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-field",template:"<ng-template #container></ng-template>",styles:[":host:empty{display:none}\n"]}]}],(function(){return[{type:FormlyConfig},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef},{type:FormlyFieldTemplates,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]}]}),{field:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],viewContainerRef:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["container",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,static:!0}]}]});class FormlyForm{constructor(builder,config,ngZone,fieldTemplates){this.builder=builder,this.config=config,this.ngZone=ngZone,this.fieldTemplates=fieldTemplates,this.modelChange=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.field={type:"formly-group"},this._modelChangeValue={},this.valueChangesUnsubscribe=()=>{}}set form(form){this.field.form=form}get form(){return this.field.form}set model(model){this.config.extras.immutable&&this._modelChangeValue===model||this.setField({model})}get model(){return this.field.model}set fields(fieldGroup){this.setField({fieldGroup})}get fields(){return this.field.fieldGroup}set options(options){this.setField({options})}get options(){return this.field.options}set templates(templates){this.fieldTemplates.templates=templates}ngDoCheck(){"changeDetectionCheck"===this.config.extras.checkExpressionOn&&this.checkExpressionChange()}ngOnChanges(changes){changes.fields&&this.form&&clearControl(this.form),(changes.fields||changes.form||changes.model&&this._modelChangeValue!==changes.model.currentValue)&&(this.valueChangesUnsubscribe(),this.builder.build(this.field),this.valueChangesUnsubscribe=this.valueChanges())}ngOnDestroy(){this.valueChangesUnsubscribe()}checkExpressionChange(){this.field.options.checkExpressions?.(this.field)}valueChanges(){this.valueChangesUnsubscribe();let formEvents=null;if(isSignalRequired()){let submitted=this.options?.parentForm?.submitted;formEvents=this.form.events.subscribe((()=>{submitted!==this.options?.parentForm?.submitted&&(this.options.detectChanges(this.field),submitted=this.options?.parentForm?.submitted)}))}let fieldChangesDetection=[];const valueChanges=this.field.options.fieldChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.p)((({field,type})=>hasKey(field)&&"valueChanges"===type)),(0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.n)((()=>function isNoopNgZone(ngZone){return ngZone instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵNoopNgZone"]}(this.ngZone)?(0,rxjs__WEBPACK_IMPORTED_MODULE_9__.of)(null):this.ngZone.onStable.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.s)(1))))).subscribe((()=>this.ngZone.runGuarded((()=>{this.checkExpressionChange(),this.field.options&&fieldChangesDetection.push(observeDeep(this.field.options,["formState"],(()=>this.field.options.detectChanges(this.field)))),this.modelChange.emit(this._modelChangeValue=clone(this.model))}))));return()=>{fieldChangesDetection.forEach((fnc=>fnc())),formEvents?.unsubscribe(),valueChanges.unsubscribe()}}setField(field){this.config.extras.immutable?this.field={...this.field,...clone(field)}:Object.keys(field).forEach((p=>this.field[p]=field[p]))}}FormlyForm.ɵfac=function FormlyForm_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyForm)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyFormBuilder),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyConfig),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyFieldTemplates))},FormlyForm.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyForm,selectors:[["formly-form"]],contentQueries:function FormlyForm_ContentQueries(rf,ctx,dirIndex){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex,FormlyTemplate,4),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx.templates=_t)}},inputs:{form:"form",model:"model",fields:"fields",options:"options"},outputs:{modelChange:"modelChange"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([FormlyFormBuilder,FormlyFieldTemplates]),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],decls:1,vars:1,consts:[[3,"field"]],template:function FormlyForm_Template(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0,"formly-field",0),2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("field",ctx.field)},dependencies:[FormlyField],encapsulation:2,changeDetection:0}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyForm,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-form",template:'<formly-field [field]="field"></formly-field>',providers:[FormlyFormBuilder,FormlyFieldTemplates],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush}]}],(function(){return[{type:FormlyFormBuilder},{type:FormlyConfig},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone},{type:FormlyFieldTemplates}]}),{form:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],model:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],fields:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],options:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],modelChange:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}],templates:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren,args:[FormlyTemplate]}]});class FormlyAttributes{constructor(renderer,elementRef,_document){this.renderer=renderer,this.elementRef=elementRef,this.uiAttributesCache={},this.uiEvents={listeners:[],events:["click","keyup","keydown","keypress","focus","blur","change"],callback:(eventName,$event)=>{switch(eventName){case"focus":return this.onFocus($event);case"blur":return this.onBlur($event);case"change":return this.onChange($event);default:return this.props[eventName](this.field,$event)}}},this.document=_document}get props(){return this.field.props||{}}get fieldAttrElements(){return this.field?._elementRefs||[]}ngOnChanges(changes){changes.field&&(this.field.name&&this.setAttribute("name",this.field.name),this.uiEvents.listeners.forEach((listener=>listener())),this.uiEvents.events.forEach((eventName=>{(this.props?.[eventName]||-1!==["focus","blur","change"].indexOf(eventName))&&this.uiEvents.listeners.push(this.renderer.listen(this.elementRef.nativeElement,eventName,(e=>this.uiEvents.callback(eventName,e))))})),this.props?.attributes&&observe(this.field,["props","attributes"],(({currentValue,previousValue})=>{previousValue&&Object.keys(previousValue).forEach((attr=>this.removeAttribute(attr))),currentValue&&Object.keys(currentValue).forEach((attr=>{null!=currentValue[attr]&&this.setAttribute(attr,currentValue[attr])}))})),this.detachElementRef(changes.field.previousValue),this.attachElementRef(changes.field.currentValue),1===this.fieldAttrElements.length&&(!this.id&&this.field.id&&this.setAttribute("id",this.field.id),this.focusObserver=observe(this.field,["focus"],(({currentValue})=>{this.toggleFocus(currentValue)})))),changes.id&&this.setAttribute("id",this.id)}ngDoCheck(){if(!this.uiAttributes){const element=this.elementRef.nativeElement;this.uiAttributes=[...FORMLY_VALIDATORS,"tabindex","placeholder","readonly","disabled","step"].filter((attr=>!element.hasAttribute||!element.hasAttribute(attr)))}for(let i=0;i<this.uiAttributes.length;i++){const attr=this.uiAttributes[i],value=this.props[attr];this.uiAttributesCache[attr]===value||this.props.attributes&&this.props.attributes.hasOwnProperty(attr.toLowerCase())||(this.uiAttributesCache[attr]=value,value||0===value?this.setAttribute(attr,!0===value?attr:`${value}`):this.removeAttribute(attr))}}ngOnDestroy(){this.uiEvents.listeners.forEach((listener=>listener())),this.detachElementRef(this.field),this.focusObserver?.unsubscribe()}toggleFocus(value){const element=this.fieldAttrElements?this.fieldAttrElements[0]:null;if(!element||!element.nativeElement.focus)return;const isFocused=!!this.document.activeElement&&this.fieldAttrElements.some((({nativeElement})=>this.document.activeElement===nativeElement||nativeElement.contains(this.document.activeElement)));value&&!isFocused?Promise.resolve().then((()=>element.nativeElement.focus())):!value&&isFocused&&Promise.resolve().then((()=>element.nativeElement.blur()))}onFocus($event){this.focusObserver?.setValue(!0),this.props.focus?.(this.field,$event)}onBlur($event){this.focusObserver?.setValue(!1),this.props.blur?.(this.field,$event)}onHostChange($event){$event instanceof Event||this.onChange($event)}onChange($event){this.props.change?.(this.field,$event),this.field.formControl?.markAsDirty()}attachElementRef(f){f&&(-1===f._elementRefs?.indexOf(this.elementRef)?f._elementRefs.push(this.elementRef):defineHiddenProp(f,"_elementRefs",[this.elementRef]))}detachElementRef(f){const index=f?._elementRefs?this.fieldAttrElements.indexOf(this.elementRef):-1;-1!==index&&f._elementRefs.splice(index,1)}setAttribute(attr,value){this.renderer.setAttribute(this.elementRef.nativeElement,attr,value)}removeAttribute(attr){this.renderer.removeAttribute(this.elementRef.nativeElement,attr)}}FormlyAttributes.ɵfac=function FormlyAttributes_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyAttributes)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT))},FormlyAttributes.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FormlyAttributes,selectors:[["","formlyAttributes",""]],hostBindings:function FormlyAttributes_HostBindings(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change",(function FormlyAttributes_change_HostBindingHandler($event){return ctx.onHostChange($event)}))},inputs:{field:[0,"formlyAttributes","field"],id:"id"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyAttributes,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,args:[{selector:"[formlyAttributes]",host:{"(change)":"onHostChange($event)"}}]}],(function(){return[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef},{type:void 0,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,args:[_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT]}]}]}),{field:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:["formlyAttributes"]}],id:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}]});class FieldType{constructor(){this.field={}}set _formlyControls(controls){this.field._localFields=controls.map((c=>c.control._fields||[])).flat().filter((f=>f.formControl!==this.field.formControl))}get model(){return this.field.model}get form(){return this.field.form}get options(){return this.field.options}get key(){return this.field.key}get formControl(){return this.field.formControl}get props(){return this.field.props||{}}get to(){return this.props}get showError(){return this.options.showError(this)}get id(){return this.field.id}get formState(){return this.options?.formState||{}}}FieldType.ɵfac=function FieldType_Factory(__ngFactoryType__){return new(__ngFactoryType__||FieldType)},FieldType.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FieldType,viewQuery:function FieldType_Query(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO,5),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx._formlyControls=_t)}},inputs:{field:"field"},standalone:!1}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FieldType,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive}],null,{_formlyControls:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren,args:[_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO]}],field:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}]});class FormlyGroup extends FieldType{}FormlyGroup.ɵfac=(()=>{let ɵFormlyGroup_BaseFactory;return function FormlyGroup_Factory(__ngFactoryType__){return(ɵFormlyGroup_BaseFactory||(ɵFormlyGroup_BaseFactory=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](FormlyGroup)))(__ngFactoryType__||FormlyGroup)}})(),FormlyGroup.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyGroup,selectors:[["formly-group"]],hostVars:2,hostBindings:function FormlyGroup_HostBindings(rf,ctx){2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"](ctx.field.fieldGroupClassName||"")},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],ngContentSelectors:["*"],decls:2,vars:1,consts:[[3,"field",4,"ngFor","ngForOf"],[3,"field"]],template:function FormlyGroup_Template(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0,FormlyGroup_formly_field_0_Template,1,1,"formly-field",0),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1)),2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf",ctx.field.fieldGroup)},dependencies:[FormlyField,_angular_common__WEBPACK_IMPORTED_MODULE_11__.NgForOf],encapsulation:2,changeDetection:0}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyGroup,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-group",template:'\n    <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>\n    <ng-content></ng-content>\n  ',host:{"[class]":'field.fieldGroupClassName || ""'},changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush}]}],null,null);class FormlyValidationMessage{constructor(config){this.config=config}ngOnChanges(){const EXPR_VALIDATORS=FORMLY_VALIDATORS.map((v=>`templateOptions.${v}`));this.errorMessage$=(0,rxjs__WEBPACK_IMPORTED_MODULE_12__.h)(this.field.formControl.statusChanges,this.field.options?this.field.options.fieldChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.p)((({field,type,property})=>field===this.field&&"expressionChanges"===type&&(-1!==property.indexOf("validation")||-1!==EXPR_VALIDATORS.indexOf(property))))):(0,rxjs__WEBPACK_IMPORTED_MODULE_9__.of)(null)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.Z)(null),(0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.n)((()=>(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(this.errorMessage)?this.errorMessage:(0,rxjs__WEBPACK_IMPORTED_MODULE_9__.of)(this.errorMessage))))}get errorMessage(){const fieldForm=this.field.formControl;for(const error in fieldForm.errors)if(fieldForm.errors.hasOwnProperty(error)){let message=this.config.getValidatorMessage(error);if(isObject(fieldForm.errors[error])){if(fieldForm.errors[error].errorPath)return;fieldForm.errors[error].message&&(message=fieldForm.errors[error].message)}return this.field.validation?.messages?.[error]&&(message=this.field.validation.messages[error]),this.field.validators?.[error]?.message&&(message=this.field.validators[error].message),this.field.asyncValidators?.[error]?.message&&(message=this.field.asyncValidators[error].message),"function"==typeof message?message(fieldForm.errors[error],this.field):message}}}FormlyValidationMessage.ɵfac=function FormlyValidationMessage_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyValidationMessage)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FormlyConfig))},FormlyValidationMessage.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyValidationMessage,selectors:[["formly-validation-message"]],inputs:{field:"field"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],decls:2,vars:3,template:function FormlyValidationMessage_Template(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1,"async")),2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1,1,ctx.errorMessage$))},dependencies:[_angular_common__WEBPACK_IMPORTED_MODULE_11__.AsyncPipe],encapsulation:2,changeDetection:0}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyValidationMessage,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-validation-message",template:"{{ errorMessage$ | async }}",changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush}]}],(function(){return[{type:FormlyConfig}]}),{field:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}]});class FieldArrayType extends FieldType{onPopulate(field){if(hasKey(field)){const control=findControl(field);registerControl(field,control||new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Yp([],{updateOn:field.modelOptions.updateOn}))}field.fieldGroup=field.fieldGroup||[];const length=Array.isArray(field.model)?field.model.length:0;if(field.fieldGroup.length>length)for(let i=field.fieldGroup.length-1;i>=length;--i)unregisterControl(field.fieldGroup[i],!0),field.fieldGroup.splice(i,1);for(let i=field.fieldGroup.length;i<length;i++){const f={...clone("function"==typeof field.fieldArray?field.fieldArray(field):field.fieldArray)};null!==f.key&&(f.key=`${i}`),field.fieldGroup.push(f)}}add(i,initialModel,{markAsDirty}={markAsDirty:!0}){markAsDirty&&this.formControl.markAsDirty(),i=null==i?this.field.fieldGroup.length:i,this.model||assignFieldValue(this.field,[]),this.model.splice(i,0,initialModel?clone(initialModel):void 0),this.markFieldForCheck(this.field.fieldGroup[i]),this._build()}remove(i,{markAsDirty}={markAsDirty:!0}){markAsDirty&&this.formControl.markAsDirty(),this.model.splice(i,1);const field=this.field.fieldGroup[i];this.field.fieldGroup.splice(i,1),this.field.fieldGroup.forEach(((f,key)=>this.updateArrayElementKey(f,`${key}`))),unregisterControl(field,!0),this._build()}_build(){(this.field.formControl._fields??[this.field]).forEach((f=>this.options.build(f))),this.options.fieldChanges.next({field:this.field,value:getFieldValue(this.field),type:"valueChanges"})}updateArrayElementKey(f,newKey){if(hasKey(f))f.key=newKey;else if(f.fieldGroup?.length)for(let i=0;i<f.fieldGroup.length;i++)this.updateArrayElementKey(f.fieldGroup[i],newKey)}markFieldForCheck(f){f&&(f.fieldGroup?.forEach((c=>this.markFieldForCheck(c))),!1===f.hide&&this.options._hiddenFieldsForCheck.push({field:f}))}}FieldArrayType.ɵfac=(()=>{let ɵFieldArrayType_BaseFactory;return function FieldArrayType_Factory(__ngFactoryType__){return(ɵFieldArrayType_BaseFactory||(ɵFieldArrayType_BaseFactory=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](FieldArrayType)))(__ngFactoryType__||FieldArrayType)}})(),FieldArrayType.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FieldArrayType,standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FieldArrayType,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive}],null,null);class FieldWrapper extends FieldType{set _formlyControls(_){}set _staticContent(content){this.fieldComponent=content}}FieldWrapper.ɵfac=(()=>{let ɵFieldWrapper_BaseFactory;return function FieldWrapper_Factory(__ngFactoryType__){return(ɵFieldWrapper_BaseFactory||(ɵFieldWrapper_BaseFactory=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](FieldWrapper)))(__ngFactoryType__||FieldWrapper)}})(),FieldWrapper.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({type:FieldWrapper,viewQuery:function FieldWrapper_Query(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2,5,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2,7,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef)),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx.fieldComponent=_t.first),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]())&&(ctx._staticContent=_t.first)}},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FieldWrapper,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive}],null,{fieldComponent:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["fieldComponent",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef}]}],_staticContent:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["fieldComponent",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef,static:!0}]}]});class FormlyTemplateType extends FieldType{constructor(sanitizer){super(),this.sanitizer=sanitizer,this.innerHtml={}}get template(){return this.field&&this.field.template!==this.innerHtml.template&&(this.innerHtml={template:this.field.template,content:this.props.safeHtml?this.sanitizer.bypassSecurityTrustHtml(this.field.template):this.field.template}),this.innerHtml.content}}FormlyTemplateType.ɵfac=function FormlyTemplateType_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyTemplateType)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.DomSanitizer))},FormlyTemplateType.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:FormlyTemplateType,selectors:[["formly-template"]],standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],decls:1,vars:1,consts:[[3,"innerHtml"]],template:function FormlyTemplateType_Template(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0,"div",0),2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml",ctx.template,_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"])},encapsulation:2,changeDetection:0}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyTemplateType,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{selector:"formly-template",template:'<div [innerHtml]="template"></div>',changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush}]}],(function(){return[{type:_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.DomSanitizer}]}),null);class FieldExpressionExtension{onPopulate(field){if(field._expressions)return;defineHiddenProp(field,"_expressions",{}),observe(field,["hide"],(({currentValue,firstChange})=>{defineHiddenProp(field,"_hide",!!currentValue),(!firstChange||firstChange&&!0===currentValue)&&(field.props.hidden=currentValue,field.options._hiddenFieldsForCheck.push({field}))})),field.hideExpression&&observe(field,["hideExpression"],(({currentValue:expr})=>{field._expressions.hide=this.parseExpressions(field,"hide","boolean"==typeof expr?()=>expr:expr)}));const evalExpr=(key,expr)=>{"string"==typeof expr||isFunction(expr)?field._expressions[key]=this.parseExpressions(field,key,expr):expr instanceof rxjs__WEBPACK_IMPORTED_MODULE_14__.c&&(field._expressions[key]={value$:expr.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.M)((v=>{this.evalExpr(field,key,v),field.options._detectChanges(field)})))})};field.expressions=field.expressions||{};for(const key of Object.keys(field.expressions))observe(field,["expressions",key],(({currentValue:expr})=>{evalExpr(key,isFunction(expr)?(...args)=>expr(field,args[3]):expr)}));field.expressionProperties=field.expressionProperties||{};for(const key of Object.keys(field.expressionProperties))observe(field,["expressionProperties",key],(({currentValue})=>evalExpr(key,currentValue)))}postPopulate(field){if(!field.parent&&!field.options.checkExpressions){let checkLocked=!1;field.options.checkExpressions=(f,ignoreCache)=>{if(checkLocked)return;checkLocked=!0;const fieldChanged=this.checkExpressions(f,ignoreCache),options=field.options;options._hiddenFieldsForCheck.sort((f=>f.field.hide?-1:1)).forEach((f=>this.changeHideState(f.field,f.field.hide??f.default,!ignoreCache))),options._hiddenFieldsForCheck=[],fieldChanged&&this.checkExpressions(field),checkLocked=!1},field.options._checkField=(f,ignoreCache)=>{console.warn("Formly: 'options._checkField' is deprecated since v6.0, use 'options.checkExpressions' instead."),field.options.checkExpressions(f,ignoreCache)}}}parseExpressions(field,path,expr){let parentExpression,currentValue;if(field.parent&&["hide","props.disabled"].includes(path)){const rootValue=f=>"hide"===path?f.hide:f.props.disabled;parentExpression=()=>{let root=field.parent;for(;root.parent&&!rootValue(root);)root=root.parent;return rootValue(root)}}return"string"==typeof(expr=expr||(()=>!1))&&(expr=function evalStringExpression(expression,argNames){try{return Function(...argNames,`return ${expression};`)}catch(error){console.error(error)}}(expr,["model","formState","field"])),{callback:ignoreCache=>{try{const exprValue=function evalExpression(expression,thisArg,argVal){return"function"==typeof expression?expression.apply(thisArg,argVal):!!expression}(parentExpression?(...args)=>parentExpression(field)||expr(...args):expr,{field},[field.model,field.options.formState,field,ignoreCache]);return!(!ignoreCache&&(currentValue===exprValue||isObject(exprValue)&&!(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(exprValue)&&JSON.stringify(exprValue)===JSON.stringify(currentValue)))&&(currentValue=exprValue,this.evalExpr(field,path,exprValue),!0)}catch(error){throw error.message=`[Formly Error] [Expression "${path}"] ${error.message}`,error}}}}checkExpressions(field,ignoreCache=!1){if(!field)return!1;let fieldChanged=!1;if(field._expressions)for(const key of Object.keys(field._expressions))field._expressions[key].callback?.(ignoreCache)&&(fieldChanged=!0);return field.fieldGroup?.forEach((f=>this.checkExpressions(f,ignoreCache)&&(fieldChanged=!0))),fieldChanged}changeDisabledState(field,value){field.fieldGroup&&field.fieldGroup.filter((f=>!f._expressions.hasOwnProperty("props.disabled"))).forEach((f=>this.changeDisabledState(f,value))),hasKey(field)&&field.props.disabled!==value&&(field.props.disabled=value)}changeHideState(field,hide,resetOnHide){if(field.fieldGroup&&field.fieldGroup.filter((f=>f&&!f._expressions.hide)).forEach((f=>this.changeHideState(f,hide,resetOnHide))),field.formControl&&hasKey(field)){defineHiddenProp(field,"_hide",!(!hide&&!field.hide));const c=field.formControl;c._fields?.length>1&&updateValidity(c),!0!==hide||c._fields&&!c._fields.every((f=>!!f._hide))?!1===hide&&(field.resetOnHide&&!isUndefined(field.defaultValue)&&isUndefined(getFieldValue(field))&&assignFieldValue(field,field.defaultValue),registerControl(field,void 0,!0),field.resetOnHide&&field.fieldArray&&field.fieldGroup?.length!==field.model?.length&&field.options.build(field)):(unregisterControl(field,!0),resetOnHide&&field.resetOnHide&&(assignFieldValue(field,void 0),field.formControl.reset({value:void 0,disabled:field.formControl.disabled}),field.options.fieldChanges.next({value:void 0,field,type:"valueChanges"}),field.fieldGroup&&field.formControl instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Yp&&(field.fieldGroup.length=0)))}field.options.fieldChanges&&field.options.fieldChanges.next({field,type:"hidden",value:hide})}evalExpr(field,prop,value){if(0===prop.indexOf("model.")){const key=prop.replace(/^model\./,""),parent=field.fieldGroup?field:field.parent;let control=field?.key===key?field.formControl:field.form.get(key);!control&&field.get(key)&&(control=field.get(key).formControl),assignFieldValue({key,parent,model:field.model},value),!control||isNil(control.value)&&isNil(value)||control.value===value||control.patchValue(value)}else{try{let target=field;const paths=this._evalExpressionPath(field,prop),lastIndex=paths.length-1;for(let i=0;i<lastIndex;i++)target=target[paths[i]];target[paths[lastIndex]]=value}catch(error){throw error.message=`[Formly Error] [Expression "${prop}"] ${error.message}`,error}["templateOptions.disabled","props.disabled"].includes(prop)&&hasKey(field)&&this.changeDisabledState(field,value)}this.emitExpressionChanges(field,prop,value)}emitExpressionChanges(field,property,value){field.options.fieldChanges&&field.options.fieldChanges.next({field,type:"expressionChanges",property,value})}_evalExpressionPath(field,prop){if(field._expressions[prop]&&field._expressions[prop].paths)return field._expressions[prop].paths;let paths=[];return-1===prop.indexOf("[")?paths=prop.split("."):prop.split(/[[\]]{1,2}/).filter((p=>p)).forEach((path=>{const arrayPath=path.match(/['|"](.*?)['|"]/);arrayPath?paths.push(arrayPath[1]):paths.push(...path.split(".").filter((p=>p)))})),field._expressions[prop]&&(field._expressions[prop].paths=paths),paths}}class FieldValidationExtension{constructor(config){this.config=config}onPopulate(field){this.initFieldValidation(field,"validators"),this.initFieldValidation(field,"asyncValidators")}initFieldValidation(field,type){const validators=[];if("validators"!==type||field.hasOwnProperty("fieldGroup")&&!hasKey(field)||validators.push(this.getPredefinedFieldValidation(field)),field[type])for(const validatorName of Object.keys(field[type]))"validation"===validatorName?validators.push(...field[type].validation.map((v=>this.wrapNgValidatorFn(field,v)))):validators.push(this.wrapNgValidatorFn(field,field[type][validatorName],validatorName));defineHiddenProp(field,"_"+type,validators)}getPredefinedFieldValidation(field){let VALIDATORS=[];return FORMLY_VALIDATORS.forEach((opt=>observe(field,["props",opt],(({currentValue,firstChange})=>{VALIDATORS=VALIDATORS.filter((o=>o!==opt)),"required"===opt&&null!=currentValue&&"boolean"!=typeof currentValue&&console.warn(`Formly: Invalid prop 'required' of type '${typeof currentValue}', expected 'boolean' (Field:${field.key}).`),null!=currentValue&&!1!==currentValue&&VALIDATORS.push(opt),!firstChange&&field.formControl&&updateValidity(field.formControl)})))),control=>0===VALIDATORS.length?null:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.compose(VALIDATORS.map((opt=>()=>{const value=field.props[opt];switch(opt){case"required":return _angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.required(control);case"pattern":return _angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.pattern(value)(control);case"minLength":const minLengthResult=_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.minLength(value)(control),minLengthKey=this.config.getValidatorMessage("minlength")||field.validation?.messages?.minlength?"minlength":"minLength";return minLengthResult?{[minLengthKey]:minLengthResult.minlength}:null;case"maxLength":const maxLengthResult=_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.maxLength(value)(control),maxLengthKey=this.config.getValidatorMessage("maxlength")||field.validation?.messages?.maxlength?"maxlength":"maxLength";return maxLengthResult?{[maxLengthKey]:maxLengthResult.maxlength}:null;case"min":return _angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.min(value)(control);case"max":return _angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.max(value)(control);default:return null}})))(control)}wrapNgValidatorFn(field,validator,validatorName){let validatorOption;if("string"==typeof validator&&(validatorOption=clone(this.config.getValidator(validator))),"object"==typeof validator&&validator.name&&(validatorOption=clone(this.config.getValidator(validator.name)),validator.options&&(validatorOption.options=validator.options)),"object"==typeof validator&&validator.expression){const{expression,...options}=validator;validatorOption={name:validatorName,validation:expression,options:Object.keys(options).length>0?options:null}}return"function"==typeof validator&&(validatorOption={name:validatorName,validation:validator}),control=>{const errors=validatorOption.validation(control,field,validatorOption.options);return function isPromise(obj){return!!obj&&"function"==typeof obj.then}(errors)?errors.then((v=>this.handleResult(field,validatorName?!!v:v,validatorOption))):(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.A)(errors)?errors.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.T)((v=>this.handleResult(field,validatorName?!!v:v,validatorOption)))):this.handleResult(field,validatorName?!!errors:errors,validatorOption)}}handleResult(field,errors,{name,options}){"boolean"==typeof errors&&(errors=errors?null:{[name]:options||!0});const ctrl=field.formControl;return ctrl?._childrenErrors?.[name]?.(),isObject(errors)&&Object.keys(errors).forEach((name=>{const errorPath=errors[name].errorPath?errors[name].errorPath:options?.errorPath,childCtrl=errorPath?field.formControl.get(errorPath):null;if(childCtrl){const{errorPath:_errorPath,...opts}=errors[name];childCtrl.setErrors({...childCtrl.errors||{},[name]:opts}),!ctrl._childrenErrors&&defineHiddenProp(ctrl,"_childrenErrors",{}),ctrl._childrenErrors[name]=()=>{const{[name]:_toDelete,...childErrors}=childCtrl.errors||{};childCtrl.setErrors(0===Object.keys(childErrors).length?null:childErrors)}}})),errors}}class FieldFormExtension{prePopulate(field){this.root||(this.root=field),field.parent&&Object.defineProperty(field,"form",{get:()=>field.parent.formControl,configurable:!0})}onPopulate(field){field.hasOwnProperty("fieldGroup")&&!hasKey(field)?defineHiddenProp(field,"formControl",field.form):this.addFormControl(field)}postPopulate(field){if(this.root!==field)return;this.root=null;if(this.setValidators(field)&&field.parent){let parent=field.parent;for(;parent;)!hasKey(parent)&&parent.parent||updateValidity(parent.formControl,!0),parent=parent.parent}}addFormControl(field){let control=findControl(field);if(!field.fieldArray){if(control){if(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ){const value=hasKey(field)?getFieldValue(field):field.defaultValue;control.defaultValue=value}}else{const controlOptions={updateOn:field.modelOptions.updateOn};if(field.fieldGroup)control=new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE({},controlOptions);else{const value=hasKey(field)?getFieldValue(field):field.defaultValue;control=new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ({value,disabled:!!field.props.disabled},{...controlOptions,initialValueIsDefault:!0})}}registerControl(field,control)}}setValidators(field,disabled=!1){!1===disabled&&hasKey(field)&&field.props?.disabled&&(disabled=!0);let markForCheck=!1;if(field.fieldGroup?.forEach((f=>f&&this.setValidators(f,disabled)&&(markForCheck=!0))),hasKey(field)||!field.parent||!hasKey(field)&&!field.fieldGroup){const{formControl:c}=field;if(c&&(hasKey(field)&&c instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_2__.MJ&&(disabled&&c.enabled&&(c.disable({emitEvent:!1,onlySelf:!0}),markForCheck=!0),!disabled&&c.disabled&&(c.enable({emitEvent:!1,onlySelf:!0}),markForCheck=!0)),null===c.validator&&this.hasValidators(field,"_validators")&&(c.setValidators((()=>{const v=_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.compose(this.mergeValidators(field,"_validators"));return v?v(c):null})),markForCheck=!0),null===c.asyncValidator&&this.hasValidators(field,"_asyncValidators")&&(c.setAsyncValidators((()=>{const v=_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.composeAsync(this.mergeValidators(field,"_asyncValidators"));return v?v(c):(0,rxjs__WEBPACK_IMPORTED_MODULE_9__.of)(null)})),markForCheck=!0),markForCheck)){updateValidity(c,!0);let parent=c.parent;for(let i=1;i<getKeyPath(field).length;i++)parent&&(updateValidity(parent,!0),parent=parent.parent)}}return markForCheck}hasValidators(field,type){const c=field.formControl;return!!(c?._fields?.length>1&&c._fields.some((f=>f[type].length>0)))||(field[type].length>0||field.fieldGroup?.some((f=>f?.fieldGroup&&!hasKey(f)&&this.hasValidators(f,type))))}mergeValidators(field,type){const validators=[],c=field.formControl;return c?._fields?.length>1?c._fields.filter((f=>!f._hide)).forEach((f=>validators.push(...f[type]))):field[type]&&validators.push(...field[type]),field.fieldGroup&&field.fieldGroup.filter((f=>f?.fieldGroup&&!hasKey(f))).forEach((f=>validators.push(...this.mergeValidators(f,type)))),validators}}class CoreExtension{constructor(config){this.config=config,this.formId=0}prePopulate(field){const root=field.parent;this.initRootOptions(field),this.initFieldProps(field),root&&(Object.defineProperty(field,"options",{get:()=>root.options,configurable:!0}),Object.defineProperty(field,"model",{get:()=>hasKey(field)&&field.fieldGroup?getFieldValue(field):root.model,configurable:!0})),Object.defineProperty(field,"get",{value:key=>getField(field,key),configurable:!0}),this.getFieldComponentInstance(field).prePopulate?.(field)}onPopulate(field){this.initFieldOptions(field),this.getFieldComponentInstance(field).onPopulate?.(field),field.fieldGroup&&field.fieldGroup.forEach(((f,index)=>{f&&(Object.defineProperty(f,"parent",{get:()=>field,configurable:!0}),Object.defineProperty(f,"index",{get:()=>index,configurable:!0})),this.formId++}))}postPopulate(field){this.getFieldComponentInstance(field).postPopulate?.(field)}initFieldProps(field){field.props??(field.props=field.templateOptions),Object.defineProperty(field,"templateOptions",{get:()=>field.props,set:props=>field.props=props,configurable:!0})}initRootOptions(field){if(field.parent)return;const options=field.options;field.options.formState=field.options.formState||{},options.showError||(options.showError=this.config.extras.showError),options.fieldChanges||defineHiddenProp(options,"fieldChanges",new rxjs__WEBPACK_IMPORTED_MODULE_16__.B),options._hiddenFieldsForCheck||(options._hiddenFieldsForCheck=[]),options._markForCheck=f=>{console.warn("Formly: 'options._markForCheck' is deprecated since v6.0, use 'options.detectChanges' instead."),options.detectChanges(f)},options._detectChanges=f=>{f._componentRefs&&markFieldForCheck(f),f.fieldGroup?.forEach((f=>f&&options._detectChanges(f)))},options.detectChanges=f=>{f.options.checkExpressions?.(f),options._detectChanges(f)},options.resetModel=model=>{model=clone(model??options._initialModel),field.model&&(Object.keys(field.model).forEach((k=>delete field.model[k])),Object.assign(field.model,model||{})),isSignalRequired()||observe(options,["parentForm","submitted"]).setValue(!1,!1),options.build(field),field.form.reset(field.model)},options.updateInitialValue=model=>options._initialModel=clone(model??field.model),field.options.updateInitialValue()}initFieldOptions(field){reverseDeepMerge(field,{id:getFieldId(`formly_${this.formId}`,field,field.index),hooks:{},modelOptions:{},validation:{messages:{}},props:field.type&&hasKey(field)?{label:"",placeholder:"",disabled:!1}:{}}),this.config.extras.resetFieldOnHide&&!1!==field.resetOnHide&&(field.resetOnHide=!0),"formly-template"!==field.type&&(field.template||field.expressions?.template||field.expressionProperties?.template)&&(field.type="formly-template"),!field.type&&field.fieldGroup&&(field.type="formly-group"),field.type&&this.config.getMergedField(field),hasKey(field)&&!isUndefined(field.defaultValue)&&isUndefined(getFieldValue(field))&&!isHiddenField(field)&&assignFieldValue(field,field.defaultValue),field.wrappers=field.wrappers||[]}getFieldComponentInstance(field){const componentRefInstance=()=>{let componentRef=this.config.resolveFieldTypeRef(field);const fieldComponentRef=field._componentRefs?.slice(-1)[0];return fieldComponentRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentRef&&fieldComponentRef?.componentType===componentRef?.componentType&&(componentRef=fieldComponentRef),componentRef?.instance};return field._proxyInstance||defineHiddenProp(field,"_proxyInstance",new Proxy({},{get:(_,prop)=>componentRefInstance()?.[prop],set:(_,prop,value)=>componentRefInstance()[prop]=value})),field._proxyInstance}}function defaultFormlyConfig(config){return{types:[{name:"formly-group",component:FormlyGroup},{name:"formly-template",component:FormlyTemplateType}],extensions:[{name:"core",extension:new CoreExtension(config),priority:-250},{name:"field-validation",extension:new FieldValidationExtension(config),priority:-200},{name:"field-form",extension:new FieldFormExtension,priority:-150},{name:"field-expression",extension:new FieldExpressionExtension,priority:-100}]}}class FormlyModule{constructor(configService,configs=[]){configs&&configs.forEach((config=>configService.addConfig(config)))}static forRoot(config={}){return{ngModule:FormlyModule,providers:[{provide:FORMLY_CONFIG,multi:!0,useFactory:defaultFormlyConfig,deps:[FormlyConfig]},{provide:FORMLY_CONFIG,useValue:config,multi:!0},FormlyConfig,FormlyFormBuilder]}}static forChild(config={}){return{ngModule:FormlyModule,providers:[{provide:FORMLY_CONFIG,multi:!0,useFactory:defaultFormlyConfig,deps:[FormlyConfig]},{provide:FORMLY_CONFIG,useValue:config,multi:!0},FormlyFormBuilder]}}}FormlyModule.ɵfac=function FormlyModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||FormlyModule)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](FormlyConfig),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](FORMLY_CONFIG,8))},FormlyModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({type:FormlyModule,declarations:[FormlyTemplate,FormlyForm,FormlyField,FormlyAttributes,FormlyGroup,FormlyValidationMessage,FormlyTemplateType],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule],exports:[FormlyTemplate,FormlyForm,FormlyField,FormlyAttributes,FormlyGroup,FormlyValidationMessage]}),FormlyModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule]]}),("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormlyModule,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,args:[{declarations:[FormlyTemplate,FormlyForm,FormlyField,FormlyAttributes,FormlyGroup,FormlyValidationMessage,FormlyTemplateType],exports:[FormlyTemplate,FormlyForm,FormlyField,FormlyAttributes,FormlyGroup,FormlyValidationMessage],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule]}]}],(function(){return[{type:FormlyConfig},{type:void 0,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,args:[FORMLY_CONFIG]}]}]}),null)},"./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>debounceTime});var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=_scheduler_async__WEBPACK_IMPORTED_MODULE_0__.E),(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}}}]);