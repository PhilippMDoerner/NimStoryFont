---
- hosts: 127.0.0.1
  gather_facts: false
  vars_prompt:
    - name: domain
      prompt: Enter your server's domain name
      private: false

    - name: db_path
      prompt: Enter your desired path to your database file on your server
      private: false
      default: "./database/db.sqlite3"

    - name: nginx_path
      prompt: Enter your desired path to your nginx config file on your server
      private: false
      default: "./nginx.conf"

    - name: media_path
      prompt: Enter your desired path to your media files (images, icons etc.) on your server
      private: false
      default: "./media"

    - name: audio_path
      prompt: Enter your desired path to your audio files (server recordings etc.) on your server
      private: false
      default: "./audio"

    - name: server_email_name
      prompt: Enter your server's email address (Required for password reset emails)
      private: false

    - name: server_email_password
      prompt: Enter your server's email password (Required for password reset emails)
      private: true

    - name: smtp_domain
      prompt: Enter the SMTP domain of your email provider (Required for password reset emails) (i.e. "smtp.gmail.com")
      private: false

    - name: smtp_port
      prompt: Enter the SMTP port of your email provider (Required for password reset emails) (i.e. "587")
      private: false
      default: 587

    - name: server_ip
      prompt: Enter your server's IP address
      private: false

    - name: country
      prompt: Enter your server's country (for your local SSH certificate)
      private: false
      default: "DE"

    - name: state
      prompt: Enter your server's state (for your local SSH certificate)
      private: false
      default: "Berlin"

    - name: locality
      prompt: Enter your server's locality (for your local SSH certificate)
      private: false
      default: "Berlin"

    - name: organization
      prompt: Enter your server's organization (for your local SSH certificate)
      private: false
      default: "Nimstoryfont"

  vars:
    secret_key: "{{ lookup('community.general.random_string', length=50, special=false) }}"

  tasks:
    - name: Get current working directory
      tags: env, nginx_config
      set_fact:
        project_root: "{{ lookup('ansible.builtin.env', 'PWD') }}"
        ssh_key_path: "{{ lookup('ansible.builtin.env', 'PWD') }}/nimstoryfont_ansible"
        nginx_buildfiles_path: "{{ lookup('ansible.builtin.env', 'PWD') }}/frontend/buildFiles/nginx"

    - name: Create ansible ssh key in ~/.ssh
      tags: ssh
      community.crypto.openssh_keypair:
        path: "{{ ssh_key_path }}"
        type: ed25519
        comment: "nimstoryfont ansible user"
        mode: 0600

    - name: Set permissions for public key
      tags: ssh
      file:
        path: "{{ ssh_key_path }}.pub"
        mode: 0644

    - name: Create .env file
      tags: env
      ansible.builtin.copy:
        content: |
          PROJECT_ROOT={{ project_root }}
          NS_DOMAIN={{ domain }}
          DB_PATH={{ db_path }}
          NGINX_PATH={{ nginx_path }}
          MEDIA_PATH={{ media_path }}
          AUDIO_PATH={{ audio_path }}
          SERVER_IP={{ server_ip }}
          SECRET_KEY={{ secret_key }}
          SERVER_EMAIL_NAME={{ server_email_name }}
          SERVER_EMAIL_PASSWORD={{ server_email_password }}
          SMTP_DOMAIN={{ smtp_domain }}
          SMTP_PORT={{ smtp_port }}
          LOCAL_CERT_COUNTRY={{ country }}
          LOCAL_CERT_STATE={{ state }}
          LOCAL_CERT_LOCALITY={{ locality }}
          LOCAL_CERT_ORGANIZATION={{ organization }}
        dest: "{{ project_root }}/.env"

    - name: Generate files from environment
      ansible.builtin.include_role:
        name: generate-files

    - name: Generate dummy cert
      become: true
      tags: nginx, local
      ansible.builtin.shell: |
        openssl req -newkey rsa:4096 -x509 -sha512 -days 3650 -nodes -config {{ nginx_buildfiles_path }}/local_only/certificates/openssl.cnf -out {{ nginx_buildfiles_path }}/local_only/certificates/live/{{domain}}/fullchain.pem -keyout  {{ nginx_buildfiles_path}}/local_only/certificates/live/{{domain}}/privkey.pem

# TODO: Install dependencies like flyway
