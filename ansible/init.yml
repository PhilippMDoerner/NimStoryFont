---
- hosts: 127.0.0.1
  gather_facts: false
  vars_prompt:
    - name: domain
      prompt: Enter your server's domain name
      private: false

    - name: server_ip
      prompt: Enter your server's IP address
      private: false

    - name: server_email_auth_name
      prompt: Enter your smtp account-name for your server's email account (Required for password reset emails)
      private: false

    - name: server_email_auth_password
      prompt: Enter your smtp password for your server's email account (Required for password reset emails)
      private: true

    - name: smtp_domain
      prompt: Enter the SMTP domain of your email provider (Required for password reset emails) (i.e. "prod-mta-06.swg-srv.net")
      private: false

    - name: smtp_port
      prompt: Enter the SMTP port of your email provider (Required for password reset emails) (i.e. "2525")
      private: false
      default: 587

    - name: server_project_dir
      prompt: Enter the path the project directory shall have on your server (contains config files, job-binaries, database, media directories etc.)
      private: false
      default: ./nimstoryfont

  vars:
    secret_key: "{{ lookup('community.general.random_string', length=50, special=false) }}"

  tasks:
    - name: Get local project root
      set_fact:
        project_root: "{{ lookup('ansible.builtin.env', 'PWD') }}"

    - name: Get current working directory
      tags: env, nginx_config
      set_fact:
        ssh_key_path: "{{ project_root }}/nimstoryfont_ansible"
        nginx_buildfiles_path: "{{ project_root }}/frontend/buildFiles/nginx"
        db_path: "db.sqlite3"
        media_path: "media"
        audio_path: "audio"
        dumps_path: "dumps"
        nginx_path: "nginx.conf"
        backend_settings_path: "settings.json"
        compose_path: "docker-compose.yml"
        feature_config_path: "featureConfig.json"

    - name: Set default local certificate values
      set_fact:
        country: "DE"
        state: "Berlin"
        locality: "Berlin"
        organization: "Nimstoryfont"

    - name: Get email domain
      tags: env, email
      set_fact:
        email_domain: "no-reply.{{ domain }}"

    - name: Create ansible ssh key in ~/.ssh
      tags: ssh
      community.crypto.openssh_keypair:
        path: "{{ ssh_key_path }}"
        type: ed25519
        comment: "ansible"
        mode: 0600

    - name: Set permissions for public key
      tags: ssh
      file:
        path: "{{ ssh_key_path }}.pub"
        mode: 0600

    - name: Copy feature config json into root
      tags: config
      copy:
        src: files/feature_config.json
        dest: "{{ project_root }}/feature_config.json"

    - name: Create .env file
      tags: env
      ansible.builtin.copy:
        content: |
          PROJECT_ROOT={{ project_root }}
          NS_DOMAIN={{ domain }}
          SERVER_PROJECT_DIR={{ server_project_dir }}
          SERVER_DB_PATH={{ db_path }}
          SERVER_NGINX_PATH={{ nginx_path }}
          SERVER_MEDIA_PATH={{ media_path }}
          SERVER_AUDIO_PATH={{ audio_path }}
          SERVER_COMPOSE_PATH={{ compose_path }}
          SERVER_BACKEND_SETTINGS_PATH={{ backend_settings_path }}
          SERVER_DUMPS_PATH={{ dumps_path }}
          SERVER_FEATURE_CONFIG_PATH={{ feature_config_path }}
          SERVER_IP={{ server_ip }}
          SECRET_KEY={{ secret_key }}
          SERVER_EMAIL_AUTH_NAME={{ server_email_auth_name }}
          SERVER_EMAIL_AUTH_PASSWORD={{ server_email_auth_password }}
          EMAIL_DOMAIN={{ email_domain }}
          SMTP_DOMAIN={{ smtp_domain }}
          SMTP_PORT={{ smtp_port }}
          LOCAL_CERT_COUNTRY={{ country }}
          LOCAL_CERT_STATE={{ state }}
          LOCAL_CERT_LOCALITY={{ locality }}
          LOCAL_CERT_ORGANIZATION={{ organization }}
        dest: "{{ project_root }}/.env"

    - name: Generate files from environment
      ansible.builtin.include_role:
        name: generate-files

    - name: Generate dummy cert
      become: true
      tags: nginx, local
      ansible.builtin.shell: |
        openssl req -newkey rsa:4096 -x509 -sha512 -days 3650 -nodes -config {{ nginx_buildfiles_path }}/local_only/certificates/openssl.conf -out {{ nginx_buildfiles_path }}/local_only/certificates/live/{{domain}}/fullchain.pem -keyout  {{ nginx_buildfiles_path}}/local_only/certificates/live/{{domain}}/privkey.pem

# TODO: Install dependencies like flyway
