---
- hosts: 127.0.0.1
  gather_facts: false
  vars_prompt:
    - name: domain
      prompt: Enter your host's domain name
      private: false

    - name: host_ip
      prompt: Enter your host's IP address
      private: false

    - name: email_auth_name
      prompt: Enter your smtp account-name for your server's email account (Required for password reset emails)
      private: false

    - name: email_auth_password
      prompt: Enter your smtp password for your server's email account (Required for password reset emails)
      private: true

    - name: smtp_domain
      prompt: Enter the SMTP domain of your email provider (Required for password reset emails) (i.e. "prod-mta-06.swg-srv.net")
      private: false

    - name: smtp_port
      prompt: Enter the SMTP port of your email provider (Required for password reset emails) (i.e. "2525")
      private: false
      default: 2525

    - name: host_project_dir
      prompt: Enter the path the project directory shall have on your host (contains config files, job-binaries, database, media directories etc.)
      private: false
      default: ./nimstoryfont

  vars:
    secret_key: "{{ lookup('community.general.random_string', length=50, special=false) }}"

  tasks:
    - name: Get local directories
      set_fact:
        local_project_root: "{{ lookup('ansible.builtin.env', 'PWD') }}"
        local_config_dir: "{{ lookup('ansible.builtin.env', 'PWD') }}/local_only"

    - name: Create local config dir directory
      file:
        path: "{{ local_config_dir }}"
        state: directory
        mode: 0755

    - name: Set general default sub-paths for use with other values
      tags: env, nginx_config
      set_fact:
        db_path: "db.sqlite3"
        media_path: "media"
        audio_path: "audio"
        dumps_path: "dumps"
        nginx_path: "nginx.conf"
        backend_settings_path: "settings.json"
        feature_config_path: "feature_config.json"

    - name: Infer all env variables
      tags: env, local
      set_fact:
        email_domain: "no-reply.{{ domain }}"
        ssh_key_path: "{{ local_project_root }}/nimstoryfont_ansible"

        local_cert_path: "{{local_config_dir}}/certificates"
        local_openssl_conf_path: "{{local_config_dir}}/certificates/openssl.conf"
        local_db_path: "{{ local_config_dir }}/{{ db_path }}"
        local_nginx_path: "{{local_config_dir}}/{{ nginx_path }}"
        local_media_path: "{{local_config_dir}}/{{ media_path }}"
        local_audio_path: "{{local_config_dir}}/{{ audio_path }}"
        local_compose_path: "{{local_project_root}}/docker-compose_local.yml"
        local_server_compose_path: "{{local_project_root}}/docker-compose_server.yml"
        local_backend_settings_path: "{{local_config_dir}}/{{ backend_settings_path }}"
        local_dumps_path: "{{local_config_dir}}/{{ dumps_path }}"
        local_feature_config_path: "{{local_config_dir}}/{{ feature_config_path }}"
        local_cert_country: "DE"
        local_cert_state: "Berlin"
        local_cert_locality: "Berlin"
        local_cert_organization: "Nimstoryfont"

        host_db_path: "{{ host_project_dir }}/{{ db_path }}"
        host_nginx_path: "{{host_project_dir}}/{{ nginx_path }}"
        host_media_path: "{{host_project_dir}}/{{ media_path }}"
        host_audio_path: "{{host_project_dir}}/{{ audio_path }}"
        host_compose_path: "{{host_project_dir}}/docker-compose.yml"
        host_backend_settings_path: "{{host_project_dir}}/{{ backend_settings_path }}"
        host_dumps_path: "{{host_project_dir}}/{{ dumps_path }}"
        host_feature_config_path: "{{host_project_dir}}/{{ feature_config_path }}"

    - name: Create local certificate directory
      tags: local
      file:
        path: "{{ local_cert_path }}/live/{{domain}}"
        state: directory
        mode: 0755

    - name: Create ansible ssh key in ~/.ssh
      tags: ssh
      community.crypto.openssh_keypair:
        path: "{{ ssh_key_path }}"
        type: ed25519
        comment: "ansible"
        mode: 0600

    - name: Set permissions for public key
      tags: ssh, local
      file:
        path: "{{ ssh_key_path }}.pub"
        mode: 0600

    - name: Copy feature config json into root
      tags: config
      copy:
        src: files/feature_config.json
        dest: "{{ local_feature_config_path }}"

    - name: Create .env file
      tags: env
      ansible.builtin.copy:
        content: |
          # Project global configs
          NS_DOMAIN={{ domain }}
          SECRET_KEY={{ secret_key }}
          HOST_IP={{ host_ip }}
          EMAIL_DOMAIN={{ email_domain }}
          SMTP_DOMAIN={{ smtp_domain }}
          SMTP_PORT={{ smtp_port }}
          EMAIL_AUTH_NAME={{ email_auth_name }}
          EMAIL_AUTH_PASSWORD={{ email_auth_password }}

          # Local Project configs
          LOCAL_PROJECT_ROOT={{ local_project_root }}
          LOCAL_DB_PATH={{ local_db_path }}
          LOCAL_NGINX_PATH={{ local_nginx_path }}
          LOCAL_MEDIA_PATH={{ local_media_path }}
          LOCAL_AUDIO_PATH={{ local_audio_path }}
          LOCAL_COMPOSE_PATH={{ local_compose_path }}
          LOCAL_SERVER_COMPOSE_PATH={{ local_server_compose_path }}
          LOCAL_BACKEND_SETTINGS_PATH={{ local_config_dir }}/{{ backend_settings_path }}
          LOCAL_DUMPS_PATH={{ local_config_dir}}/{{ dumps_path }}
          LOCAL_FEATURE_CONFIG_PATH={{ local_config_dir}}/{{ feature_config_path }}
          LOCAL_CERT_PATH={{ local_cert_path }}
          LOCAL_CERT_COUNTRY={{ local_cert_country }}
          LOCAL_CERT_STATE={{ local_cert_state }}
          LOCAL_CERT_LOCALITY={{ local_cert_locality }}
          LOCAL_CERT_ORGANIZATION={{ local_cert_organization }}
          LOCAL_OPENSSL_CONF_PATH={{ local_openssl_conf_path }}

          # Host Configs
          HOST_DB_PATH={{ host_db_path }}
          HOST_NGINX_PATH={{ host_nginx_path }}
          HOST_MEDIA_PATH={{ host_media_path }}
          HOST_AUDIO_PATH={{ host_audio_path }}
          HOST_COMPOSE_PATH={{ host_compose_path }}
          HOST_BACKEND_SETTINGS_PATH={{ host_backend_settings_path }}
          HOST_DUMPS_PATH={{ host_dumps_path }}
          HOST_FEATURE_CONFIG_PATH={{ host_feature_config_path }}
        dest: "{{ local_project_root }}/.env"

    - name: Generate files from environment
      tags: generate_files
      ansible.builtin.include_role:
        name: generate-files

    - name: Generate dummy cert
      become: true
      tags: nginx, local
      ansible.builtin.shell: |
        openssl req -newkey rsa:4096 -x509 -sha512 -days 3650 -nodes -config {{ local_openssl_conf_path }} -out {{ local_cert_path }}/live/{{domain}}/fullchain.pem -keyout  {{ local_cert_path}}/live/{{domain}}/privkey.pem

# TODO: Install dependencies like flyway
