- name: Create local_only directories
  command: "mkdir -p  {{ local_config_path }} {{ local_media_path }} {{ local_audio_path }} {{ local_image_path }} {{ local_db_dir_path }} {{ local_cert_path }} {{ local_dumps_path }}"

- name: Create inventory file
  tags: inventory, ansible
  ansible.builtin.copy:
    content: |
      [web_server]
      {{ host_ip }}
    dest: "{{ local_project_root }}/inventory"

- name: Create ansible.cfg file
  tags: ansible
  ansible.builtin.copy:
    content: |
      [defaults]
      inventory = inventory
      private_key_file = {{ ssh_key_path }}
      remote_user = ansible
    dest: "{{ local_project_root }}/ansible.cfg"

- name: Generate container nginx config
  tags: nginx
  ansible.builtin.template:
    src: templates/nginx_container_conf.j2
    dest: "{{ local_nginx_path }}"
    mode: 0644

- name: Generate openssl config
  tags: nginx, certbot, openssl
  ansible.builtin.template:
    src: templates/openssl_conf.j2
    dest: "{{ local_openssl_conf_path }}"
    mode: 0644

- name: Generate backend settings json
  tags: backend
  ansible.builtin.template:
    src: templates/backend_settings.json.j2
    dest: "{{ local_backend_settings_path }}"
    mode: 0644

- name: Generate optional script for setting up ansible user on server
  tags: ansible, bash
  ansible.builtin.template:
    src: templates/provision_user.j2
    dest: "{{ local_project_root }}/provision_user.sh"
    mode: 0755

- name: Copy feature config json into root
  tags: config
  copy:
    src: files/feature_config.json
    dest: "{{ local_feature_config_path }}"

- name: Generate host.env
  tags: host, env, config
  ansible.builtin.copy:
    content: |
      VOLUME_DIR=./data
      NS_DOMAIN={{ domain }}
      NS_DOMAIN_SSL_EMAIL={{ domain_ssl_email }}
    dest: "{{ local_host_env }}"

- name: Generate local.env
  tags: local, env, config
  ansible.builtin.copy:
    content: |
      VOLUME_DIR={{ local_volume_path }}
      NS_DOMAIN={{ domain }}
    dest: "{{ local_env }}"

- name: Generate dummy cert
  tags: nginx, local
  become: true
  ansible.builtin.shell: |
    openssl req \
    -newkey rsa:4096 \ 
    -x509 \
    -sha512 \ 
    -days 3650 \ 
    -nodes \
    -config {{ local_openssl_conf_path }} \
    -out {{ local_cert_path }}/fullchain.pem \ 
    -keyout  {{ local_cert_path }}/privkey.pem
