---
# Adds the necessary steps for setting up this project on the host server
- hosts: web_server
  vars_prompt:
    - name: cert_email
      prompt: "Enter email under which to register your SSL certificates"
      private: false

  tasks:
    - name: Read in environment variables
      import_role:
        name: read-env

    - name: Upgrade host server to latest
      become: true
      apt:
        update_cache: true
        upgrade: dist

    - name: Install general dependencies
      become: true
      apt:
        name:
          - sqlite3
          - curl
          - ca-certificates
          - certbot
        state: present

    - name: Install docker
      tags: docker
      include_role:
        name: install-docker

    - name: Fetch SSL certificates
      tags: ssl, nginx, certbot
      become: true
      command: "certbot certonly --standalone -d {{ domain }} -n -m {{ cert_email }} --agree-tos"

    - name: Create local_only directories
      command: |
        mkdir -p  \ 
        {{ host_config_path }} \
        {{ host_media_path }} \
        {{ host_audio_path }} \
        {{ host_image_path }} \
        {{ host_db_dir_path }} \
        {{ host_dumps_path }}

    - name: Copy nginx configuration
      tags: nginx, frontend, config
      copy:
        src: "{{ local_nginx_path }}"
        dest: "{{ host_nginx_path }}"

    - name: Copy database
      tags: backend, database
      copy:
        src: "{{ local_db_path }}"
        dest: "{{ host_db_path }}"

    - name: Copy backend configuration
      tags: backend, config
      copy:
        src: "{{ local_backend_settings_path }}"
        dest: "{{ host_backend_settings_path }}"

    - name: Copy Docker compose file for server to host
      tags: docker
      copy:
        src: "{{ local_compose_path }}"
        dest: "{{ host_compose_path }}"

    - name: Copy feature config json
      tags: backend, frontend, config
      copy:
        src: "{{ local_feature_config_path }}"
        dest: "{{ host_feature_config_path }}"

    - name: Copy certbot.timer file for certbot renewals
      tags: nginx, certbot, config
      become: true
      copy:
        src: files/certbot.timer
        dest: /etc/systemd/system/certbot.timer

    - name: Copy certbot.service file for certbot renewals
      tags: nginx, certbot, config
      become: true
      copy:
        src: files/certbot.service
        dest: /etc/systemd/system/certbot.service

    # - name: Add systemd timer for certbot renewals
    #   tags: certbot
    #   ansible.builtin.systemd_service:
    #     state: started
    #     name: certbot.timer
    #     enabled: true
    #     daemon_reload: true
