---
# Adds the necessary steps for setting up this project on the host server
- hosts: web_server
  gather_facts: false
  vars:
    project_root: "{{ lookup('ansible.builtin.env', 'PWD') }}"
    frontend_buildfiles_path: "{{ lookup('ansible.builtin.env', 'PWD') }}/frontend/buildFiles/nginx"
    backend_buildfiles_path: "{{ lookup('ansible.builtin.env', 'PWD') }}/backend/buildFiles"
    nginx_path: "{{ lookup('ansible.builtin.env', 'NGINX_PATH') }}"
    media_path: "{{ lookup('ansible.builtin.env', 'MEDIA_PATH') }}"
    audio_path: "{{ lookup('ansible.builtin.env', 'AUDIO_PATH') }}"
    db_path: "{{ lookup('ansible.builtin.env', 'DB_PATH') }}"
    backend_settings_path: "{{ lookup('ansible.builtin.env', 'BACKEND_SETTINGS_PATH') }}"
    compose_path: "{{ lookup('ansible.builtin.env', 'COMPOSE_PATH') }}"
    feature_config_path: "{{ lookup('ansible.builtin.env', 'FEATURE_CONFIG_PATH') }}"
    dumps_path: "{{ lookup('ansible.builtin.env', 'DUMPS_PATH') }}"

  tasks:
    - name: Upgrade host server to latest
      apt:
        update_cache: true
        upgrade: dist

    - name: Install general dependencies
      apt:
        name:
          - ufw
          - sqlite3
          - docker.io
          - docker-compose
          - curl
          - ca-certificates
        state: present

    - name: Create media dir
      tags: media
      ansible.builtin.file:
        path: "{{ media_path }}"
        state: directory
        mode: 0755

    - name: Create audio dir
      tags: media
      ansible.builtin.file:
        path: "{{ audio_path }}"
        state: directory
        mode: 0755

    - name: Create dump dir
      tags: media
      ansible.builtin.file:
        path: "{{ dumps_path }}"
        state: directory
        mode: 0755

    - name: Copy nginx configuration
      tags: nginx, frontend, config
      copy:
        src: "{{ frontend_buildfiles_path }}/nginx.conf"
        dest: "{{ nginx_path }}"

    - name: Copy database
      tags: backend, database
      copy:
        src: "{{ project_root }}/backend/db.sqlite3"
        dest: "{{ db_path }}"

    - name: Copy backend configuration
      tags: backend, config
      copy:
        src: "{{ backend_buildfiles_path }}/nimstoryfont/settings.json"
        dest: "{{ backend_settings_path }}"

    - name: Copy Docker compose sample
      tags: docker
      copy:
        src: "{{ project_root }}/docker-compose_server.yml"
        dest: "{{ compose_path }}"

    - name: Copy feaure config json
      tags: backend, frontend, config
      copy:
        src: "{{ project_root }}/feature_config.json"
        dest: "{{ feature_config_path }}"

    - name: Copy certbot.timer file for certbot renewals
      tags: nginx, certbot, config
      become: true
      copy:
        src: files/certbot.timer
        dest: /etc/systemd/system/certbot.timer

    - name: Copy certbot.service file for certbot renewals
      tags: nginx, certbot, config
      become: true
      copy:
        src: files/certbot.service
        dest: /etc/systemd/system/certbot.service

    # - name: Add systemd timer for certbot renewals
    #   tags: certbot
    #   ansible.builtin.systemd_service:
    #     state: started
    #     name: certbot.timer
    #     enabled: true
    #     daemon_reload: true
