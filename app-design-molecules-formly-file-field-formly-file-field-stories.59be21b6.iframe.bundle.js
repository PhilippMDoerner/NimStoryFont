(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[5935],{"./src/app/design/molecules/formly-file-field/formly-file-field.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{J:()=>FormlyFileFieldComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_file_field_componentngResource=__webpack_require__("./src/app/design/molecules/formly-file-field/formly-file-field.component.scss?ngResource"),formly_file_field_componentngResource_default=__webpack_require__.n(formly_file_field_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),ngx_formly_bootstrap=__webpack_require__("./node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap.mjs"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js");let FormlyFileFieldComponent=class FormlyFileFieldComponent extends ngx_formly_core.PU{constructor(){super(),this.window=(0,core.inject)(common.DOCUMENT).defaultView,this.updateModelOnFilePaste()}ngOnInit(){this.buttonType=this.props.buttonType,this.fieldKind=this.props.fileFieldKind}onFileSelect(event){const files=(event?.target).files;files&&files.length>0&&this.setModelValue(files)}setModelValue(files){const file=files[0];this.model[this.key]=file,this.selectedFileName=`${file.name}`,this.formControl.setValue(file),this.formControl.markAsDirty(),this.setInputFieldValue(files)}setInputFieldValue(files){const dataTransfer=new DataTransfer;for(let i=0;i<files.length;i++){const file=files.item(i);file&&dataTransfer.items.add(file)}this.fileInputElement.nativeElement.files=dataTransfer.files}onButtonClick(event){event.stopPropagation(),event.preventDefault();const element=this.fileInputElement.nativeElement,newClick=new MouseEvent("click",{bubbles:!1});element.dispatchEvent(newClick)}updateModelOnFilePaste(){this.window&&(0,fromEvent.R)(this.window,"paste").pipe((0,map.T)((event=>event.clipboardData?.files)),(0,filter.p)((pastedFiles=>!!pastedFiles?.[0])),(0,rxjs_interop.pQ)()).subscribe((pastedFiles=>{pastedFiles&&0!==pastedFiles.length&&this.setModelValue(pastedFiles)}))}static{this.ctorParameters=()=>[]}static{this.propDecorators={fileInputElement:[{type:core.ViewChild,args:["fileInputElement"]}]}}};FormlyFileFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-file-field",template:'<div class="field-container {{ field.className }}" [class.d-none]="to.hidden">\n  <div class="field">\n    @let descriptionLabelId = field.id + "-description";\n    <div [id]="descriptionLabelId" class="cdk-visually-hidden">\n      Opens a filepicker to select a file. You can also paste a file into the\n      window.\n    </div>\n    <input\n      #fileInputElement\n      type="file"\n      class="field__filepicker"\n      aria-label="Filepicker"\n      [id]="field.id ?? \'\'"\n      [class.disabled]="props.disabled"\n      [disabled]="!!props.disabled"\n      [attr.aria-describedby]="descriptionLabelId"\n      (focus)="formControl.markAsTouched()"\n      (change)="onFileSelect($event)"\n      [formlyAttributes]="field"\n      [name]="props[\'name\']"\n      data-formly-field-type="file"\n    />\n    <div class="field__description">\n      Or paste a file into the window <br />\n      Or drag and drop a file into this field\n    </div>\n  </div>\n</div>\n',imports:[ngx_formly_core.qy,ngx_formly_bootstrap.u,fesm2022_forms.X1,ng_bootstrap.n8],styles:[formly_file_field_componentngResource_default()]})],FormlyFileFieldComponent)},"./src/app/design/molecules/formly-file-field/formly-file-field.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_ngx_formly_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_formly_file_field_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/design/molecules/formly-file-field/formly-file-field.component.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"DesignSystem/Molecules/FormlyFileFieldComponent",component:_formly_file_field_component__WEBPACK_IMPORTED_MODULE_1__.J,args:{form:new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.gE({}),model:{},options:{},fields:[{key:"file",type:"file",props:{buttonType:"SECONDARY"}}]},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_2__.X1,_ngx_formly_core__WEBPACK_IMPORTED_MODULE_3__.qy.forRoot({types:[{name:"file",component:_formly_file_field_component__WEBPACK_IMPORTED_MODULE_1__.J,wrappers:["form-field"]}]})]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((()=>'\n      <form [formGroup]="form">\n        <formly-form \n          [model]="model" \n          [fields]="fields" \n          [options]="options" \n          [form]="form"\n        ></formly-form>\n      </form>\n    '))]},Default=(args=>({props:{...args}})).bind({});Default.args={};const Primary=(args=>({props:{...args,fields:[{key:"file",type:"file",props:{buttonType:"PRIMARY"}}]}})).bind({});Primary.args={};const __namedExportsOrder=["Default","Primary"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  props: {\n    ...args\n  }\n})",...Default.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => ({\n  props: {\n    ...args,\n    fields: [{\n      key: 'file',\n      type: 'file',\n      props: {\n        buttonType: 'PRIMARY'\n      }\n    }]\n  }\n})",...Primary.parameters?.docs?.source}}}},"./src/app/design/molecules/formly-file-field/formly-file-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".disabled {\n  text-decoration: line-through;\n  cursor: not-allowed;\n}\n\n.field-container {\n  margin-bottom: var(--spacer-3);\n}\n.field {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n.field__filepicker {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: var(--spacer-5) var(--spacer-5);\n  border: dashed 2px var(--bs-white);\n  border-radius: var(--bs-border-radius);\n  cursor: pointer;\n}\n.field__description {\n  position: relative;\n  font-size: 14px;\n  text-align: center;\n  width: 100%;\n  top: -48px;\n  pointer-events: none;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);