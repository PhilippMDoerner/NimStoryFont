(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[4899],{"./src/app/design/organisms/filter-list/filter-list.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>FilterListComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var filter_list_componentngResource=__webpack_require__("./src/app/design/organisms/filter-list/filter-list.component.scss?ngResource"),filter_list_componentngResource_default=__webpack_require__.n(filter_list_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs"),hotkey_directive=__webpack_require__("./src/app/_directives/hotkey.directive.ts"),object=__webpack_require__("./src/utils/object.ts");let GroupByFirstLetterPipe=class GroupByFirstLetterPipe{transform(itemArray,field){const groupedObj=itemArray.reduce(((accumulator,item)=>{const firstLetter=item[field][0];return accumulator.hasOwnProperty(firstLetter)?accumulator[firstLetter].push(item):accumulator[firstLetter]=[item],accumulator}),{});return Object.keys(groupedObj).map((key=>({key,value:groupedObj[key]}))).sort(((a,b)=>a.key>b.key?1:-1))}};GroupByFirstLetterPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"groupByFirstLetter",standalone:!0})],GroupByFirstLetterPipe);let GroupByPipe=class GroupByPipe{transform(itemArray,groupProp,subSortProp,reverse=!1){const groupedObj=itemArray.reduce(((accumulator,item)=>{const groupedFieldValue=(0,object.p)(item,groupProp);return accumulator.hasOwnProperty(groupedFieldValue)?accumulator[groupedFieldValue].push(item):accumulator[groupedFieldValue]=[item],accumulator}),{}),sortedGroupArray=Object.keys(groupedObj).map((key=>({key,value:groupedObj[key]}))).sort(((group1,group2)=>group1.key.toLowerCase()<group2.key.toLowerCase()?-1:1));return sortedGroupArray.forEach((group=>{const groupEntries=group.value;group.value=this.sortGroup(groupEntries,subSortProp)})),reverse?sortedGroupArray.reverse():sortedGroupArray}sortGroup(group,propertyPath){return group.sort(((val1,val2)=>{let sortValue1=(0,object.p)(val1,propertyPath);const isStringProperty="string"==typeof sortValue1;isStringProperty&&(sortValue1=sortValue1.toLowerCase());let sortValue2=(0,object.p)(val2,propertyPath);return isStringProperty&&(sortValue2=sortValue2.toLowerCase()),sortValue1<sortValue2?1:-1}))}};GroupByPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"groupBy",standalone:!0})],GroupByPipe);var DOM=__webpack_require__("./src/utils/DOM.ts"),button_component=__webpack_require__("./src/app/design/atoms/button/button.component.ts"),input_component=__webpack_require__("./src/app/design/atoms/input/input.component.ts");var overview_entry_componentngResource=__webpack_require__("./src/app/design/molecules/overview-entry/overview-entry.component.scss?ngResource"),overview_entry_componentngResource_default=__webpack_require__.n(overview_entry_componentngResource);let OverviewEntryComponent=class OverviewEntryComponent{constructor(){this.img=core.input.required(),this.header=core.input.required(),this.body=(0,core.input)(),this.headerId=`header-${(0,DOM.n)()}`,this.bodyId=(0,core.computed)((()=>!!this.body()?`body-${(0,DOM.n)()}`:void 0))}static{this.propDecorators={img:[{type:core.Input,args:[{isSignal:!0,alias:"img",required:!0,transform:void 0}]}],header:[{type:core.Input,args:[{isSignal:!0,alias:"header",required:!0,transform:void 0}]}],body:[{type:core.Input,args:[{isSignal:!0,alias:"body",required:!1,transform:void 0}]}]}}};OverviewEntryComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-overview-entry",imports:[common.NgOptimizedImage],template:'<div class="img">\n  \x3c!-- Must be consistent with --image-dimension css property --\x3e\n  <img\n    width="80"\n    height="80"\n    [ngSrc]="img().src"\n    [alt]="img().alt"\n    [placeholder]="img().placeholder ?? false"\n  />\n</div>\n<div class="text-content border-start">\n  <div class="text-content__header fs-5 fw-bold border-bottom" [id]="headerId">\n    {{ header() }}\n  </div>\n  <div class="text-content__body">{{ body() }}</div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,host:{role:"article","aria-labelledby":"headerId","[attr.aria-describedby]":"bodyId()",class:"border border-primary-subtle rounded"},styles:[overview_entry_componentngResource_default()]})],OverviewEntryComponent);var tree_componentngResource=__webpack_require__("./src/app/design/organisms/tree/tree.component.scss?ngResource"),tree_componentngResource_default=__webpack_require__.n(tree_componentngResource),tree=__webpack_require__("./node_modules/@angular/cdk/fesm2022/tree.mjs");let TreeNodeCountPipe=class TreeNodeCountPipe{transform(node){const nodeCount=this.countDescendants(node)-1;switch(nodeCount){case 0:return"";case 1:return"1 item";default:return`${nodeCount} items`}}countDescendants(node){return(node.children?.reduce(((acc,child)=>acc+this.countDescendants(child)),0)??0)+1}};TreeNodeCountPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"treeNodeCount"})],TreeNodeCountPipe);let TreeComponent=class TreeComponent{constructor(){this.data=core.input.required(),this.expandOnInit=(0,core.input)(!1),this.tree=core.viewChild.required("tree"),this.router=(0,core.inject)(router.Ix),this.childrenAccessor=dataNode=>dataNode.children??[],this.hasChild=(_,node)=>!!node.children&&node.children.length>0,this.trackByFn=(_,node)=>node.id}ngAfterViewInit(){this.expandOnInit()&&this.tree().expandAll()}static{this.propDecorators={data:[{type:core.Input,args:[{isSignal:!0,alias:"data",required:!0,transform:void 0}]}],expandOnInit:[{type:core.Input,args:[{isSignal:!0,alias:"expandOnInit",required:!1,transform:void 0}]}],tree:[{type:core.ViewChild,args:["tree",{isSignal:!0}]}]}}};TreeComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-tree",imports:[tree.Dc,router.Wk,common.NgClass,common.NgTemplateOutlet,button_component.Q,TreeNodeCountPipe],template:'\x3c!-- eslint-disable @angular-eslint/template/click-events-have-key-events --\x3e\n\x3c!-- eslint-disable @angular-eslint/template/interactive-supports-focus --\x3e\n<cdk-tree\n  #tree\n  class="tree row"\n  [dataSource]="data()"\n  [childrenAccessor]="childrenAccessor"\n  [trackBy]="trackByFn"\n>\n  \x3c!-- Leaf template --\x3e\n  <cdk-nested-tree-node\n    class="tree__node node"\n    [ngClass]="{\n      \'tree__node--root\': node.isRootNode,\n      \'tree__node--leaf\': !node.isRootNode,\n    }"\n    [isExpandable]="false"\n    #treeNode="cdkNestedTreeNode"\n    *cdkTreeNodeDef="let node"\n    (activation)="router.navigateByUrl(node.link)"\n  >\n    <div\n      class="node__content-container content-container content-container--leaf"\n    >\n      <div class="content-container__left">\n        <button\n          cdkTreeNodeToggle\n          btn\n          class="content-container__toggle content-container__toggle--disabled"\n          tabindex="-1"\n          aria-hidden="true"\n          [kind]="\'NONE\'"\n          [size]="\'SMALL\'"\n          [icon]="tree.isExpanded(node) ? \'chevron-down\' : \'chevron-right\'"\n          [attr.aria-label]="\'Toggle \' + node.label"\n          [disabled]="true"\n        ></button>\n        <ng-container\n          *ngTemplateOutlet="nodeContent; context: { $implicit: node }"\n        />\n      </div>\n      <span class="content-container__right">\n        {{ node | treeNodeCount }}\n      </span>\n    </div>\n  </cdk-nested-tree-node>\n\n  \x3c!-- Stem Template --\x3e\n  <cdk-nested-tree-node\n    class="tree__node node node--stem"\n    [ngClass]="{ \'tree__node--root\': node.isRootNode }"\n    #treeNode="cdkNestedTreeNode"\n    *cdkTreeNodeDef="let node; when: hasChild"\n    isExpandable\n    [cdkTreeNodeTypeaheadLabel]="node.label"\n    (activation)="router.navigateByUrl(node.link)"\n  >\n    <div\n      class="node__content-container content-container content-container--expandable"\n      (click)="tree.isExpanded(node) ? treeNode.collapse() : treeNode.expand()"\n    >\n      <div class="content-container__left">\n        <button\n          cdkTreeNodeToggle\n          btn\n          class="content-container__toggle"\n          [kind]="\'NONE\'"\n          [size]="\'SMALL\'"\n          [icon]="tree.isExpanded(node) ? \'chevron-down\' : \'chevron-right\'"\n          [attr.aria-label]="\'Toggle \' + node.label"\n        ></button>\n        <ng-container\n          *ngTemplateOutlet="nodeContent; context: { $implicit: node }"\n        />\n      </div>\n      <span class="content-container__right">\n        {{ node | treeNodeCount }}\n      </span>\n    </div>\n    <div class="node__children" [class.d-none]="!tree.isExpanded(node)">\n      <ng-container cdkTreeNodeOutlet />\n    </div>\n  </cdk-nested-tree-node>\n</cdk-tree>\n\n<ng-template #nodeContent let-node>\n  <a\n    class="content-container__content"\n    [class.content-container__content--root]="node.isRootNode"\n    [routerLink]="node.link"\n    tabindex="-1"\n    (click)="$event.stopPropagation()"\n  >\n    {{ node.label }}\n  </a>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,host:{class:"container"},styles:[tree_componentngResource_default()]})],TreeComponent);let FilterListComponent=class FilterListComponent{constructor(routing){this.routing=routing,this.entries=core.input.required(),this.labelProp=core.input.required(),this.bodyProp=(0,core.input)(),this.heading=core.input.required(),this.groupConfig=(0,core.input)({mode:"LETTER"}),this.forceSingleLine=(0,core.input)(!1),this.filterValue=(0,core.signal)(void 0),this.listId=(0,DOM.n)(),this.searchId=`${this.listId}-search`,this.displayEntries=(0,core.computed)((()=>{const filterValue=this.filterValue()?.toLowerCase();return null==filterValue||""===filterValue?this.entries():this.entries().filter((entry=>entry[this.labelProp()].toLowerCase().includes(filterValue)))})),this.mode=(0,core.computed)((()=>(this.filterValue()?.length??0)>0?"SEARCH":this.groupConfig().mode)),this.treeData=(0,core.computed)((()=>{const config=this.groupConfig();if("TREE"===config.mode)return config.toTreeData(this.entries())})),this.firstArticle=(0,core.computed)((()=>this.displayEntries()[0])),this.canOpenArticle=(0,core.computed)((()=>!!this.firstArticle())),this.searchButtonLabel=(0,core.computed)((()=>{const targetArticle=this.firstArticle();return targetArticle?`Open first article found: ${targetArticle[this.labelProp()]}`:"Nothing matches your filter query"}))}openFirstArticle(event){event.preventDefault();if(!(this.displayEntries().length>0))return;const entry=this.displayEntries()[0];this.routing.navigateByUrl(entry.link)}static{this.ctorParameters=()=>[{type:router.Ix}]}static{this.propDecorators={entries:[{type:core.Input,args:[{isSignal:!0,alias:"entries",required:!0,transform:void 0}]}],labelProp:[{type:core.Input,args:[{isSignal:!0,alias:"labelProp",required:!0,transform:void 0}]}],bodyProp:[{type:core.Input,args:[{isSignal:!0,alias:"bodyProp",required:!1,transform:void 0}]}],heading:[{type:core.Input,args:[{isSignal:!0,alias:"heading",required:!0,transform:void 0}]}],groupConfig:[{type:core.Input,args:[{isSignal:!0,alias:"groupConfig",required:!1,transform:void 0}]}],forceSingleLine:[{type:core.Input,args:[{isSignal:!0,alias:"forceSingleLine",required:!1,transform:void 0}]}]}}};FilterListComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-filter-list",template:'<div class="container">\n  <form\n    class="row filter"\n    autocomplete="off"\n    (submit)="openFirstArticle($event)"\n    [hotkey]="\'f\'"\n    (hotkeyPressed)="input.focus()"\n  >\n    <div\n      class="filter__input-container"\n      [class.filter__input-container--active]="input._value()"\n    >\n      <app-input\n        #input\n        [id]="searchId"\n        class="filter__input"\n        [label]="\'Filter text\'"\n        [ariaControls]="listId"\n        (changed)="filterValue.set($event)"\n      />\n\n      <button\n        btn\n        class="filter__button"\n        [kind]="\'PRIMARY\'"\n        [icon]="\'search\'"\n        [type]="\'submit\'"\n        [disabled]="!canOpenArticle()"\n        [attr.aria-label]="searchButtonLabel()"\n      ></button>\n    </div>\n  </form>\n\n  <div>\n    @switch (mode()) {\n      @case ("LETTER") {\n        <ng-container *ngTemplateOutlet="letterList" />\n      }\n      @case ("PROPERTY") {\n        <ng-container *ngTemplateOutlet="propertyList" />\n      }\n      @case ("SEARCH") {\n        <ng-container *ngTemplateOutlet="searchList" />\n      }\n      @case ("TREE") {\n        <ng-container *ngTemplateOutlet="treeList" />\n      }\n    }\n  </div>\n</div>\n\n<ng-template #letterList>\n  <ul\n    [id]="listId"\n    class="row"\n    [attr.aria-label]="\n      \'All recorded \' + heading() + \', split into lists by first letter\'\n    "\n  >\n    @for (\n      itemLetterEntries of displayEntries() | groupByFirstLetter: labelProp();\n      track $index\n    ) {\n      <li\n        class="letter-list"\n        [ngClass]="{\n          \'col-xl-6\': !input._value() && !forceSingleLine(),\n          \'col-12\': input._value() || forceSingleLine(),\n        }"\n      >\n        \x3c!-- Letter Heading --\x3e\n        @if (input._value().length === 0) {\n          <div class="fs-5 letter-list__heading" aria-hidden="true">\n            {{ itemLetterEntries.key }}\n          </div>\n        }\n\n        \x3c!-- Article List --\x3e\n        <ul\n          class="letter-list__list"\n          [attr.aria-label]="\n            heading() + \' names starting with \\\'\' + itemLetterEntries.key + \'\\\'\'\n          "\n        >\n          @for (item of itemLetterEntries.value; track $index) {\n            <li class="letter-list__item">\n              <a class="letter-list__link" [routerLink]="item.link">\n                @let body = bodyProp() ? item[bodyProp()] : undefined;\n                <app-overview-entry\n                  [img]="item.img"\n                  [header]="item[labelProp()]"\n                  [body]="body"\n                />\n              </a>\n            </li>\n          }\n        </ul>\n      </li>\n    }\n  </ul>\n</ng-template>\n\n<ng-template #propertyList>\n  @let groupPropVal = $any(groupConfig()).groupProp;\n\n  <ul\n    class="row"\n    [id]="listId"\n    [attr.aria-label]="\n      \'All recorded \' +\n      heading() +\n      \', split into lists based on \' +\n      groupPropVal\n    "\n  >\n    @if (groupPropVal) {\n      @for (\n        itemLetterEntries of displayEntries()\n          | groupBy: groupPropVal : "session_details.session_number";\n        track $index\n      ) {\n        <li\n          class="letter-list"\n          [ngClass]="{\n            \'col-sm-6\': !input._value() && !forceSingleLine,\n            \'col-12\': input._value() || forceSingleLine,\n          }"\n        >\n          \x3c!-- Letter Heading --\x3e\n          @if (input._value().length === 0) {\n            <h5 class="letter-list__heading">\n              {{ itemLetterEntries.key }}\n            </h5>\n          }\n\n          \x3c!-- Article List --\x3e\n          <ul class="letter-list__list">\n            @for (item of itemLetterEntries.value; track $index) {\n              <li class="letter-list__item">\n                <a class="letter-list__link" [routerLink]="item.link">\n                  @let body = bodyProp() ? item[bodyProp()] : undefined;\n                  <app-overview-entry\n                    [img]="item.img"\n                    [header]="item[labelProp()]"\n                    [body]="body"\n                  />\n                </a>\n              </li>\n            }\n          </ul>\n        </li>\n      }\n    }\n  </ul>\n</ng-template>\n\n<ng-template #treeList>\n  <ul class="tree-list">\n    @for (rootNode of treeData(); track rootNode) {\n      <app-tree\n        class="tree-list__item"\n        role="listitem"\n        [expandOnInit]="true"\n        [data]="rootNode"\n      />\n    }\n  </ul>\n</ng-template>\n\n<ng-template #searchList>\n  <ul\n    class="row search-list"\n    [id]="listId"\n    [attr.aria-label]="\n      \'All entries matching search query \\\'\' + input._value() + \'\\\'\'\n    "\n  >\n    @for (entry of displayEntries(); track entry[labelProp()]) {\n      <li class="letter-list__item col-12">\n        <a [routerLink]="entry.link" class="letter-list__link">\n          @let body = bodyProp() ? $any(entry)[bodyProp()] : undefined;\n          <app-overview-entry\n            [img]="entry.img"\n            [header]="$any(entry)[labelProp()]"\n            [body]="body"\n          />\n        </a>\n      </li>\n    }\n  </ul>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,imports:[GroupByFirstLetterPipe,common.NgClass,GroupByPipe,router.Wk,common.NgTemplateOutlet,hotkey_directive.G,button_component.Q,input_component.S,TreeComponent,OverviewEntryComponent],styles:[filter_list_componentngResource_default()]})],FilterListComponent)},"./src/app/design/molecules/overview-entry/overview-entry.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  --image-dimension: 80px;\n  display: flex;\n  flex-direction: row;\n  min-height: var(--image-dimension);\n  width: 100%;\n  align-items: center;\n  overflow: hidden;\n}\n\n.img {\n  height: var(--image-dimension);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n}\n\n.text-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  min-height: var(--image-dimension);\n  overflow: hidden;\n  padding-right: var(--spacer-2);\n  padding-left: var(--spacer-2);\n}\n.text-content__header {\n  width: fit-content;\n  border-bottom: var(--bs-border-width);\n}\n.text-content__body {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/filter-list/filter-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"li {\n  list-style: none;\n}\n\nul {\n  padding-left: 0;\n}\n\n.filter__input-container {\n  display: flex;\n  flex-direction: row;\n  border: 2px var(--bs-white) solid;\n  border-radius: var(--bs-border-radius);\n  width: 100%;\n  background-color: var(--bs-dark);\n  padding: 0;\n  gap: var(--spacer-2);\n  margin-bottom: var(--spacer-4);\n}\n.filter__input-container:focus-within, .filter__input-container--active {\n  border-color: var(--bs-link-hover-color);\n}\n.filter__input {\n  border-radius: var(--bs-border-radius);\n  border: none;\n  color: var(--bs-white);\n  width: 100%;\n}\n.filter__button {\n  height: 100%;\n  padding: var(--spacer-3);\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.letter-list {\n  padding-top: var(--spacer-4);\n  padding-bottom: var(--spacer-4);\n  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);\n}\n.letter-list__heading {\n  margin-bottom: var(--spacer-2);\n}\n.letter-list__list {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: var(--spacer-0);\n  gap: var(--spacer-1);\n}\n.letter-list__item {\n  list-style-type: none;\n}\n.letter-list__link {\n  font-weight: normal;\n  display: block;\n  text-decoration: none;\n}\n.letter-list__link:hover, .letter-list__link:focus-visible {\n  background-color: var(--bs-black);\n}\n\n.tree-list__item {\n  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);\n  padding: var(--spacer-3) var(--spacer-0);\n}\n@media (min-width: 768px) {\n  .tree-list__item {\n    padding: var(--spacer-3) var(--spacer-4);\n  }\n}\n\n.search-list {\n  padding-left: var(--spacer-4);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/tree/tree.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n\n.tree:focus-visible {\n  border-radius: var(--bs-border-radius);\n  outline: var(--focus-outline);\n}\n.tree__node {\n  display: flex;\n  flex-direction: column;\n  padding: var(--spacer-0) var(--spacer-0) var(--spacer-0) var(--spacer-0);\n  width: 100%;\n}\n.tree__node:focus-visible {\n  border-radius: var(--bs-border-radius);\n  outline: var(--focus-outline);\n}\n.tree__node--root {\n  padding-left: var(--spacer-0);\n}\n.tree__node--root:focus-visible {\n  outline-offset: 8px;\n}\n\n.node__content-container {\n  display: flex;\n  align-items: center;\n  gap: var(--spacer-2);\n  border-radius: var(--bs-border-radius);\n  cursor: pointer;\n}\n.node__content-container:hover {\n  background-color: var(--bs-secondary);\n}\n.node__content-container:hover .node__toggle {\n  color: var(--bs-link-hover-color);\n}\n.node__children {\n  border-left: 1px solid var(--bs-white);\n  margin-left: calc(1.5 * var(--spacer-2));\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n}\n.content-container__left {\n  display: flex;\n  align-items: center;\n}\n.content-container__toggle {\n  border-radius: var(--bs-border-radius);\n}\n.content-container__toggle:hover, .content-container__toggle:focus-visible {\n  color: var(--bs-link-hover-color);\n}\n.content-container__toggle--disabled {\n  opacity: 0;\n}\n.content-container__content {\n  width: fit-content;\n  font-size: medium;\n  font-weight: normal;\n  text-decoration: underline;\n}\n.content-container__content--root {\n  text-decoration: underline;\n  font-weight: bold;\n  font-size: x-large !important;\n}\n.content-container__right {\n  width: calc(var(--spacer-4) * 2.5);\n  font-style: italic;\n  font-size: smaller;\n  text-align: start;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);