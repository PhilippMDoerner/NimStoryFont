"use strict";(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[6874],{"./node_modules/@bluehalo/ngx-leaflet/fesm2022/bluehalo-ngx-leaflet.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gI:()=>LeafletModule});var _angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),leaflet__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/leaflet/dist/leaflet-src.js");class LeafletUtil{static mapToArray(map){const toReturn=[];for(const k in map)map.hasOwnProperty(k)&&toReturn.push(map[k]);return toReturn}static handleEvent(zone,eventEmitter,event){0<eventEmitter.observers.length&&zone.run((()=>{eventEmitter.emit(event)}))}}class LeafletDirective{constructor(element,zone){this.element=element,this.zone=zone,this.DEFAULT_ZOOM=1,this.DEFAULT_CENTER=(0,leaflet__WEBPACK_IMPORTED_MODULE_0__.latLng)(38.907192,-77.036871),this.DEFAULT_FPZ_OPTIONS={},this.fitBoundsOptions=this.DEFAULT_FPZ_OPTIONS,this.panOptions=this.DEFAULT_FPZ_OPTIONS,this.zoomOptions=this.DEFAULT_FPZ_OPTIONS,this.zoomPanOptions=this.DEFAULT_FPZ_OPTIONS,this.options={},this.mapReady=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.zoomChange=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.centerChange=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onClick=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onDoubleClick=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMouseDown=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMouseUp=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMouseMove=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMouseOver=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMouseOut=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapMove=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapMoveStart=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapMoveEnd=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapZoom=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapZoomStart=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onMapZoomEnd=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter}ngOnInit(){this.zone.runOutsideAngular((()=>{this.map=(0,leaflet__WEBPACK_IMPORTED_MODULE_0__.map)(this.element.nativeElement,this.options),this.addMapEventListeners()})),null!=this.center&&null!=this.zoom&&this.setView(this.center,this.zoom),null!=this.fitBounds&&this.setFitBounds(this.fitBounds),null!=this.maxBounds&&this.setMaxBounds(this.maxBounds),null!=this.minZoom&&this.setMinZoom(this.minZoom),null!=this.maxZoom&&this.setMaxZoom(this.maxZoom),this.doResize(),this.mapReady.emit(this.map)}ngOnChanges(changes){changes.zoom&&changes.center&&null!=this.zoom&&null!=this.center?this.setView(changes.center.currentValue,changes.zoom.currentValue):changes.zoom?this.setZoom(changes.zoom.currentValue):changes.center&&this.setCenter(changes.center.currentValue),changes.fitBounds&&this.setFitBounds(changes.fitBounds.currentValue),changes.maxBounds&&this.setMaxBounds(changes.maxBounds.currentValue),changes.minZoom&&this.setMinZoom(changes.minZoom.currentValue),changes.maxZoom&&this.setMaxZoom(changes.maxZoom.currentValue)}ngOnDestroy(){null!=this.map&&this.map.remove()}getMap(){return this.map}onResize(){this.delayResize()}addMapEventListeners(){const registerEventHandler=(eventName,handler)=>{this.map.on(eventName,handler)};registerEventHandler("click",(e=>LeafletUtil.handleEvent(this.zone,this.onClick,e))),registerEventHandler("dblclick",(e=>LeafletUtil.handleEvent(this.zone,this.onDoubleClick,e))),registerEventHandler("mousedown",(e=>LeafletUtil.handleEvent(this.zone,this.onMouseDown,e))),registerEventHandler("mouseup",(e=>LeafletUtil.handleEvent(this.zone,this.onMouseUp,e))),registerEventHandler("mouseover",(e=>LeafletUtil.handleEvent(this.zone,this.onMouseOver,e))),registerEventHandler("mouseout",(e=>LeafletUtil.handleEvent(this.zone,this.onMouseOut,e))),registerEventHandler("mousemove",(e=>LeafletUtil.handleEvent(this.zone,this.onMouseMove,e))),registerEventHandler("zoomstart",(e=>LeafletUtil.handleEvent(this.zone,this.onMapZoomStart,e))),registerEventHandler("zoom",(e=>LeafletUtil.handleEvent(this.zone,this.onMapZoom,e))),registerEventHandler("zoomend",(e=>LeafletUtil.handleEvent(this.zone,this.onMapZoomEnd,e))),registerEventHandler("movestart",(e=>LeafletUtil.handleEvent(this.zone,this.onMapMoveStart,e))),registerEventHandler("move",(e=>LeafletUtil.handleEvent(this.zone,this.onMapMove,e))),registerEventHandler("moveend",(e=>LeafletUtil.handleEvent(this.zone,this.onMapMoveEnd,e)));const outputUpdateHandler=()=>{const zoom=this.map.getZoom();zoom!==this.zoom&&(this.zoom=zoom,LeafletUtil.handleEvent(this.zone,this.zoomChange,zoom));const center=this.map.getCenter();null==center&&null==this.center||(null!=center&&null!=this.center||center===this.center)&&center.lat===this.center.lat&&center.lng===this.center.lng||(this.center=center,LeafletUtil.handleEvent(this.zone,this.centerChange,center))};registerEventHandler("moveend",outputUpdateHandler),registerEventHandler("zoomend",outputUpdateHandler)}doResize(){this.zone.runOutsideAngular((()=>{null!=this.map&&this.map.invalidateSize({})}))}delayResize(){null!=this.resizeTimer&&clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout(this.doResize.bind(this),200)}setView(center,zoom){null!=this.map&&null!=center&&null!=zoom&&this.map.setView(center,zoom,this.zoomPanOptions)}setZoom(zoom){null!=this.map&&null!=zoom&&this.map.setZoom(zoom,this.zoomOptions)}setCenter(center){null!=this.map&&null!=center&&this.map.panTo(center,this.panOptions)}setFitBounds(latLngBounds){null!=this.map&&null!=latLngBounds&&this.map.fitBounds(latLngBounds,this.fitBoundsOptions)}setMaxBounds(latLngBounds){null!=this.map&&null!=latLngBounds&&this.map.setMaxBounds(latLngBounds)}setMinZoom(zoom){null!=this.map&&null!=zoom&&this.map.setMinZoom(zoom)}setMaxZoom(zoom){null!=this.map&&null!=zoom&&this.map.setMaxZoom(zoom)}static{this.ɵfac=function LeafletDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))}}static{this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({type:LeafletDirective,selectors:[["","leaflet",""]],hostBindings:function LeafletDirective_HostBindings(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("resize",(function LeafletDirective_resize_HostBindingHandler(){return ctx.onResize()}),!1,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵresolveWindow"])},inputs:{fitBoundsOptions:[0,"leafletFitBoundsOptions","fitBoundsOptions"],panOptions:[0,"leafletPanOptions","panOptions"],zoomOptions:[0,"leafletZoomOptions","zoomOptions"],zoomPanOptions:[0,"leafletZoomPanOptions","zoomPanOptions"],options:[0,"leafletOptions","options"],zoom:[0,"leafletZoom","zoom"],center:[0,"leafletCenter","center"],fitBounds:[0,"leafletFitBounds","fitBounds"],maxBounds:[0,"leafletMaxBounds","maxBounds"],minZoom:[0,"leafletMinZoom","minZoom"],maxZoom:[0,"leafletMaxZoom","maxZoom"]},outputs:{mapReady:"leafletMapReady",zoomChange:"leafletZoomChange",centerChange:"leafletCenterChange",onClick:"leafletClick",onDoubleClick:"leafletDoubleClick",onMouseDown:"leafletMouseDown",onMouseUp:"leafletMouseUp",onMouseMove:"leafletMouseMove",onMouseOver:"leafletMouseOver",onMouseOut:"leafletMouseOut",onMapMove:"leafletMapMove",onMapMoveStart:"leafletMapMoveStart",onMapMoveEnd:"leafletMapMoveEnd",onMapZoom:"leafletMapZoom",onMapZoomStart:"leafletMapZoomStart",onMapZoomEnd:"leafletMapZoomEnd"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]]})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletDirective,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,args:[{selector:"[leaflet]",standalone:!1}]}],(()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}]),{fitBoundsOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletFitBoundsOptions"]}],panOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletPanOptions"]}],zoomOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletZoomOptions"]}],zoomPanOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletZoomPanOptions"]}],options:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletOptions"]}],mapReady:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapReady"]}],zoom:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletZoom"]}],zoomChange:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletZoomChange"]}],center:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletCenter"]}],centerChange:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletCenterChange"]}],fitBounds:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletFitBounds"]}],maxBounds:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletMaxBounds"]}],minZoom:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletMinZoom"]}],maxZoom:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletMaxZoom"]}],onClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletClick"]}],onDoubleClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletDoubleClick"]}],onMouseDown:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMouseDown"]}],onMouseUp:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMouseUp"]}],onMouseMove:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMouseMove"]}],onMouseOver:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMouseOver"]}],onMouseOut:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMouseOut"]}],onMapMove:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapMove"]}],onMapMoveStart:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapMoveStart"]}],onMapMoveEnd:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapMoveEnd"]}],onMapZoom:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapZoom"]}],onMapZoomStart:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapZoomStart"]}],onMapZoomEnd:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletMapZoomEnd"]}],onResize:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener,args:["window:resize",[]]}]});class LeafletDirectiveWrapper{constructor(leafletDirective){this.leafletDirective=leafletDirective}init(){}getMap(){return this.leafletDirective.getMap()}}class LeafletLayerDirective{constructor(leafletDirective,zone){this.zone=zone,this.onAdd=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onRemove=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.leafletDirective=new LeafletDirectiveWrapper(leafletDirective)}ngOnInit(){this.leafletDirective.init()}ngOnDestroy(){null!=this.layer&&(this.removeLayerEventListeners(this.layer),this.layer.remove())}ngOnChanges(changes){if(changes.layer){const p=changes.layer.previousValue,n=changes.layer.currentValue;this.zone.runOutsideAngular((()=>{null!=p&&(this.removeLayerEventListeners(p),p.remove()),null!=n&&(this.addLayerEventListeners(n),this.leafletDirective.getMap().addLayer(n))}))}}addLayerEventListeners(l){this.onAddLayerHandler=e=>LeafletUtil.handleEvent(this.zone,this.onAdd,e),l.on("add",this.onAddLayerHandler),this.onRemoveLayerHandler=e=>LeafletUtil.handleEvent(this.zone,this.onRemove,e),l.on("remove",this.onRemoveLayerHandler)}removeLayerEventListeners(l){l.off("add",this.onAddLayerHandler),l.off("remove",this.onRemoveLayerHandler)}static{this.ɵfac=function LeafletLayerDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletLayerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](LeafletDirective),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))}}static{this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({type:LeafletLayerDirective,selectors:[["","leafletLayer",""]],inputs:{layer:[0,"leafletLayer","layer"]},outputs:{onAdd:"leafletLayerAdd",onRemove:"leafletLayerRemove"},standalone:!1,features:[_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]]})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletLayerDirective,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,args:[{selector:"[leafletLayer]",standalone:!1}]}],(()=>[{type:LeafletDirective},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}]),{layer:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletLayer"]}],onAdd:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletLayerAdd"]}],onRemove:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletLayerRemove"]}]});class LeafletLayersDirective{set layers(v){this.layersValue=v,this.updateLayers()}get layers(){return this.layersValue}constructor(leafletDirective,differs,zone){this.differs=differs,this.zone=zone,this.leafletDirective=new LeafletDirectiveWrapper(leafletDirective),this.layersDiffer=this.differs.find([]).create()}ngDoCheck(){this.updateLayers()}ngOnInit(){this.leafletDirective.init(),this.updateLayers()}ngOnDestroy(){this.layers=[]}updateLayers(){const map=this.leafletDirective.getMap();if(null!=map&&null!=this.layersDiffer){const changes=this.layersDiffer.diff(this.layersValue);null!=changes&&this.zone.runOutsideAngular((()=>{changes.forEachRemovedItem((c=>{map.removeLayer(c.item)})),changes.forEachAddedItem((c=>{map.addLayer(c.item)}))}))}}static{this.ɵfac=function LeafletLayersDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletLayersDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](LeafletDirective),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDiffers),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))}}static{this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({type:LeafletLayersDirective,selectors:[["","leafletLayers",""]],inputs:{layers:[0,"leafletLayers","layers"]},standalone:!1})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletLayersDirective,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,args:[{selector:"[leafletLayers]",standalone:!1}]}],(()=>[{type:LeafletDirective},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDiffers},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}]),{layers:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletLayers"]}]});class LeafletControlLayersChanges{constructor(){this.layersRemoved=0,this.layersChanged=0,this.layersAdded=0}changed(){return!(0===this.layersRemoved&&0===this.layersChanged&&0===this.layersAdded)}}class LeafletControlLayersWrapper{constructor(zone,layersControlReady){this.zone=zone,this.layersControlReady=layersControlReady}getLayersControl(){return this.layersControl}init(controlConfig,controlOptions){const baseLayers=controlConfig.baseLayers||{},overlays=controlConfig.overlays||{};return this.zone.runOutsideAngular((()=>{this.layersControl=leaflet__WEBPACK_IMPORTED_MODULE_0__.control.layers(baseLayers,overlays,controlOptions)})),this.layersControlReady.emit(this.layersControl),this.layersControl}applyBaseLayerChanges(changes){let results=new LeafletControlLayersChanges;return null!=this.layersControl&&(results=this.applyChanges(changes,this.layersControl.addBaseLayer)),results}applyOverlayChanges(changes){let results=new LeafletControlLayersChanges;return null!=this.layersControl&&(results=this.applyChanges(changes,this.layersControl.addOverlay)),results}applyChanges(changes,addFn){const results=new LeafletControlLayersChanges;return null!=changes&&this.zone.runOutsideAngular((()=>{changes.forEachChangedItem((c=>{this.layersControl.removeLayer(c.previousValue),addFn.call(this.layersControl,c.currentValue,c.key),results.layersChanged++})),changes.forEachRemovedItem((c=>{this.layersControl.removeLayer(c.previousValue),results.layersRemoved++})),changes.forEachAddedItem((c=>{addFn.call(this.layersControl,c.currentValue,c.key),results.layersAdded++}))})),results}}class LeafletControlLayersConfig{constructor(){this.baseLayers={},this.overlays={}}}class LeafletLayersControlDirective{set layersControlConfig(v){null==v&&(v=new LeafletControlLayersConfig),null==v.baseLayers&&(v.baseLayers={}),null==v.overlays&&(v.overlays={}),this.layersControlConfigValue=v,this.updateLayers()}get layersControlConfig(){return this.layersControlConfigValue}constructor(leafletDirective,differs,zone){this.differs=differs,this.zone=zone,this.layersControlReady=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.leafletDirective=new LeafletDirectiveWrapper(leafletDirective),this.controlLayers=new LeafletControlLayersWrapper(this.zone,this.layersControlReady),this.baseLayersDiffer=this.differs.find({}).create(),this.overlaysDiffer=this.differs.find({}).create()}ngOnInit(){this.leafletDirective.init(),this.zone.runOutsideAngular((()=>{this.controlLayers.init({},this.layersControlOptions).addTo(this.leafletDirective.getMap())})),this.updateLayers()}ngOnDestroy(){this.layersControlConfig={baseLayers:{},overlays:{}},this.controlLayers.getLayersControl().remove()}ngDoCheck(){this.updateLayers()}updateLayers(){const map=this.leafletDirective.getMap(),layersControl=this.controlLayers.getLayersControl();if(null!=map&&null!=layersControl){if(null!=this.baseLayersDiffer&&null!=this.layersControlConfigValue.baseLayers){const changes=this.baseLayersDiffer.diff(this.layersControlConfigValue.baseLayers);this.controlLayers.applyBaseLayerChanges(changes)}if(null!=this.overlaysDiffer&&null!=this.layersControlConfigValue.overlays){const changes=this.overlaysDiffer.diff(this.layersControlConfigValue.overlays);this.controlLayers.applyOverlayChanges(changes)}}}static{this.ɵfac=function LeafletLayersControlDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletLayersControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](LeafletDirective),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))}}static{this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({type:LeafletLayersControlDirective,selectors:[["","leafletLayersControl",""]],inputs:{layersControlConfig:[0,"leafletLayersControl","layersControlConfig"],layersControlOptions:[0,"leafletLayersControlOptions","layersControlOptions"]},outputs:{layersControlReady:"leafletLayersControlReady"},standalone:!1})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletLayersControlDirective,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,args:[{selector:"[leafletLayersControl]",standalone:!1}]}],(()=>[{type:LeafletDirective},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}]),{layersControlConfig:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletLayersControl"]}],layersControlOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletLayersControlOptions"]}],layersControlReady:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletLayersControlReady"]}]});class LeafletBaseLayersDirective{set baseLayers(v){this.baseLayersValue=v,this.updateBaseLayers()}get baseLayers(){return this.baseLayersValue}constructor(leafletDirective,differs,zone){this.differs=differs,this.zone=zone,this.layersControlReady=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.leafletDirective=new LeafletDirectiveWrapper(leafletDirective),this.controlLayers=new LeafletControlLayersWrapper(this.zone,this.layersControlReady),this.baseLayersDiffer=this.differs.find({}).create()}ngOnDestroy(){this.baseLayers={},null!=this.controlLayers.getLayersControl()&&this.controlLayers.getLayersControl().remove()}ngOnInit(){this.leafletDirective.init(),this.zone.runOutsideAngular((()=>{this.controlLayers.init({},this.layersControlOptions).addTo(this.leafletDirective.getMap())})),this.updateBaseLayers()}ngDoCheck(){this.updateBaseLayers()}updateBaseLayers(){const map=this.leafletDirective.getMap(),layersControl=this.controlLayers.getLayersControl();if(null!=map&&null!=layersControl&&null!=this.baseLayersDiffer){const changes=this.baseLayersDiffer.diff(this.baseLayersValue);this.controlLayers.applyBaseLayerChanges(changes).changed()&&this.syncBaseLayer()}}syncBaseLayer(){const map=this.leafletDirective.getMap(),layers=LeafletUtil.mapToArray(this.baseLayers);let foundLayer;map.eachLayer((l=>{foundLayer=layers.find((bl=>l===bl))})),null!=foundLayer?this.baseLayer=foundLayer:layers.length>0&&(this.baseLayer=layers[0],this.zone.runOutsideAngular((()=>{this.baseLayer.addTo(map)})))}static{this.ɵfac=function LeafletBaseLayersDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletBaseLayersDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](LeafletDirective),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers),_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))}}static{this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({type:LeafletBaseLayersDirective,selectors:[["","leafletBaseLayers",""]],inputs:{baseLayers:[0,"leafletBaseLayers","baseLayers"],layersControlOptions:[0,"leafletLayersControlOptions","layersControlOptions"]},outputs:{layersControlReady:"leafletLayersControlReady"},standalone:!1})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletBaseLayersDirective,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,args:[{selector:"[leafletBaseLayers]",standalone:!1}]}],(()=>[{type:LeafletDirective},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}]),{baseLayers:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletBaseLayers"]}],layersControlOptions:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,args:["leafletLayersControlOptions"]}],layersControlReady:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,args:["leafletLayersControlReady"]}]});class LeafletModule{static{this.ɵfac=function LeafletModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||LeafletModule)}}static{this.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({type:LeafletModule,declarations:[LeafletDirective,LeafletLayerDirective,LeafletLayersDirective,LeafletLayersControlDirective,LeafletBaseLayersDirective],exports:[LeafletDirective,LeafletLayerDirective,LeafletLayersDirective,LeafletLayersControlDirective,LeafletBaseLayersDirective]})}static{this.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({})}}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LeafletModule,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,args:[{exports:[LeafletDirective,LeafletLayerDirective,LeafletLayersDirective,LeafletLayersControlDirective,LeafletBaseLayersDirective],declarations:[LeafletDirective,LeafletLayerDirective,LeafletLayersDirective,LeafletLayersControlDirective,LeafletBaseLayersDirective]}]}],null,null)}}]);