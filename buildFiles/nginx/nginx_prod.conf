#user http;
worker_processes  1;

load_module /usr/lib/nginx/modules/ngx_http_uploadprogress_module.so;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    upload_progress uploads 1m;
    types_hash_max_size 4096;
    client_max_body_size 21474836481048576;
    client_body_buffer_size 1M;
    disable_symlinks off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  600;
    proxy_send_timeout 600;

    #gzip  on;

    server {
        listen 80;
        listen [::]:80;

        server_name www.aldrune.com;

        return 301 https://$server_name$request_uri;
    }

    server {
        server_name aldrune.com;
        autoindex off;

        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;  

        #access_log  logs/host.access.log  main;
        rewrite "^\/$" "/wiki2" last;

        root /frontend;

        # Config stuff
        location /nginx_status {
            # Enable Nginx stats
            stub_status on;
            # Only allow access from your IP e.g 1.1.1.1 or localhost #
            allow 127.0.0.1; #localhost;
            # Other request should be denied
            deny all;
        }

        # Image files
        location /media/ {
            #CORS
            add_header Access-Control-Allow-Origin '*';

            alias /imagemedia/;
        }

        location /campaign_icons/ {
            #CORS
            add_header Access-Control-Allow-Origin '*';

            alias /imagemedia/campaign_icons/;
        }

        # Audio Files

        # Target for uploading files triggers the applicationserver on the /file url once upload is done
        location /uploads/ {
            #https://stackoverflow.com/questions/44371643/nginx-php-failing-with-large-file-uploads-over-6-gb/44751210#44751210
            client_body_temp_path      /tmpfiles/;
            client_body_in_file_only   on;

            proxy_pass_request_headers on;
            proxy_set_header           X-File-Name $request_body_file; 
            proxy_set_body             off;
            proxy_redirect             off;
            proxy_pass http://nswebserver:8080/file/; #Hands request over to localhost:8080 where the web-application server is

            track_uploads uploads 30s;
        }

        # Serves audiofiles for streaming
        location /session_audio/ {
            #CORS
            add_header Access-Control-Allow-Origin '*';
            alias /session_audio/;
        }

        # Serves audiofiles for download
        location /downloads/ {
            add_header Content-Disposition attachment;

            alias /audiodownloads/;
        }

        location ^~ /progress {
            # report uploads tracked in the 'uploads' zone
            upload_progress_json_output;
            report_uploads uploads;
        }

        # Passes requests on to the application server "nimstoryfont"
        location /wiki1/api {
            rewrite ^/wiki1/api/(.*) /$1  break; #Removes "/wiki1/api" from the url for the web-application-server
            
            proxy_pass http://nswebserver:8080; #Hands request over to localhost:8080 where the web-application server is
            proxy_set_header Host $host;
            proxy_send_timeout          300;
            proxy_connect_timeout       300;
            proxy_read_timeout          300;
            send_timeout                300;
            proxy_set_header X-Real_IP $remote_addr;
        }
        
        # Serves the frontend which is an angular application
        location /wiki2 {
            #CORS
            add_header Access-Control-Allow-Origin '*';

            try_files /index.html =404;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        #SSL Settings
        ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
        ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.     
        ssl_session_tickets off;
        ssl_buffer_size 4k;

        ssl_certificate /cert/live/www.aldrune.com/fullchain.pem;
        ssl_certificate_key /cert/live/www.aldrune.com/privkey.pem;
    }
}